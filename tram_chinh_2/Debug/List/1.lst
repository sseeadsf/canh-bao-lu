
AVRASM ver. 2.1.30  D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm Sun Sep 10 17:37:51 2017

D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1090): warning: Register r5 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1091): warning: Register r4 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1092): warning: Register r7 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1093): warning: Register r6 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1094): warning: Register r9 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1095): warning: Register r10 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1096): warning: Register r11 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1097): warning: Register r8 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1098): warning: Register r12 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1099): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _P_Add=R5
                 	.DEF _Code_tay_cam1=R4
                 	.DEF _Code_tay_cam2=R7
                 	.DEF _Code_tay_cam3=R6
                 	.DEF _Code_tay_cam4=R9
                 	.DEF _count=R10
                 	.DEF _count_msb=R11
                 	.DEF _flag=R8
                 	.DEF _dem=R12
                 	.DEF _dem_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0280 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0323 	JMP  _timer2_ovf_isr
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0347 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 02c1 	JMP  _usart0_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 02ff 	JMP  _usart0_tx_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G105:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G105:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000146 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000147 00a1
000148 a2a3      	.DB  0xA1,0x0,0xA3,0xA2
000149 a400
00014a 0000      	.DB  0x0,0xA4,0x0,0x0
00014b 0000      	.DB  0x0,0x0
                 
                 _0x4:
00014c 0500
00014d 0501
00014e 0512
00014f 0523      	.DB  LOW(_0x3),HIGH(_0x3),LOW(_0x3+1),HIGH(_0x3+1),LOW(_0x3+18),HIGH(_0x3+18),LOW(_0x3+35),HIGH(_0x3+35)
000150 0534      	.DB  LOW(_0x3+52),HIGH(_0x3+52)
                 _0x0:
000151 3400
000152 375a
000153 4741
000154 4636      	.DB  0x0,0x34,0x5A,0x37,0x41,0x47,0x36,0x46
000155 4553
000156 3442
000157 5848
000158 5534      	.DB  0x53,0x45,0x42,0x34,0x48,0x58,0x34,0x55
000159 0058
00015a 5a4d
00015b 3053
00015c 4f56      	.DB  0x58,0x0,0x4D,0x5A,0x53,0x30,0x56,0x4F
00015d 4e4a
00015e 5750
00015f 4b4d
000160 4549      	.DB  0x4A,0x4E,0x50,0x57,0x4D,0x4B,0x49,0x45
000161 3736
000162 5000
000163 3053
000164 3332      	.DB  0x36,0x37,0x0,0x50,0x53,0x30,0x32,0x33
000165 3752
000166 3754
000167 564d
000168 4255      	.DB  0x52,0x37,0x54,0x37,0x4D,0x56,0x55,0x42
000169 4553
00016a 0057
00016b 3643
00016c 5631      	.DB  0x53,0x45,0x57,0x0,0x43,0x36,0x31,0x56
00016d 304c
00016e 365a
00016f 4449
000170 364b      	.DB  0x4C,0x30,0x5A,0x36,0x49,0x44,0x4B,0x36
000171 3957
000172 4752
000173 4500
000174 5252      	.DB  0x57,0x39,0x52,0x47,0x0,0x45,0x52,0x52
000175 524f
000176 4700
000177 5445
000178 2f20      	.DB  0x4F,0x52,0x0,0x47,0x45,0x54,0x20,0x2F
000179 7075
00017a 6164
00017b 6574
00017c 6b3f      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x3F,0x6B
00017d 7965
00017e 003d
00017f 5441
000180 432b      	.DB  0x65,0x79,0x3D,0x0,0x41,0x54,0x2B,0x43
000181 5049
000182 4f4d
000183 4544
000184 303d      	.DB  0x49,0x50,0x4D,0x4F,0x44,0x45,0x3D,0x30
000185 0d00
000186 000a
000187 4b4f
000188 4100      	.DB  0x0,0xD,0xA,0x0,0x4F,0x4B,0x0,0x41
000189 2b54
00018a 4943
00018b 4d50
00018c 5855      	.DB  0x54,0x2B,0x43,0x49,0x50,0x4D,0x55,0x58
00018d 313d
00018e 4100
00018f 2b54
000190 4943      	.DB  0x3D,0x31,0x0,0x41,0x54,0x2B,0x43,0x49
000191 5350
000192 4154
000193 5452
000194 303d      	.DB  0x50,0x53,0x54,0x41,0x52,0x54,0x3D,0x30
000195 222c
000196 4354
000197 2250
000198 222c      	.DB  0x2C,0x22,0x54,0x43,0x50,0x22,0x2C,0x22
000199 7061
00019a 2e69
00019b 6874
00019c 6e69      	.DB  0x61,0x70,0x69,0x2E,0x74,0x68,0x69,0x6E
00019d 7367
00019e 6570
00019f 6b61
0001a0 632e      	.DB  0x67,0x73,0x70,0x65,0x61,0x6B,0x2E,0x63
0001a1 6d6f
0001a2 2c22
0001a3 3038
0001a4 5300      	.DB  0x6F,0x6D,0x22,0x2C,0x38,0x30,0x0,0x53
0001a5 7265
0001a6 6576
0001a7 2072
0001a8 6f63      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x63,0x6F
0001a9 6e6e
0001aa 6365
0001ab 6574
0001ac 0064      	.DB  0x6E,0x6E,0x65,0x63,0x74,0x65,0x64,0x0
0001ad 6626
0001ae 6569
0001af 646c
0001b0 3d31      	.DB  0x26,0x66,0x69,0x65,0x6C,0x64,0x31,0x3D
0001b1 2600
0001b2 6966
0001b3 6c65
0001b4 3264      	.DB  0x0,0x26,0x66,0x69,0x65,0x6C,0x64,0x32
0001b5 003d
0001b6 6626
0001b7 6569
0001b8 646c      	.DB  0x3D,0x0,0x26,0x66,0x69,0x65,0x6C,0x64
0001b9 3d33
0001ba 4100
0001bb 2b54
0001bc 4943      	.DB  0x33,0x3D,0x0,0x41,0x54,0x2B,0x43,0x49
0001bd 5350
0001be 4e45
0001bf 3d44
0001c0 2c30      	.DB  0x50,0x53,0x45,0x4E,0x44,0x3D,0x30,0x2C
0001c1 3e00
0001c2 0020
0001c3 6552
0001c4 6563      	.DB  0x0,0x3E,0x20,0x0,0x52,0x65,0x63,0x65
0001c5 7669
0001c6 0065
0001c7 6f4e
0001c8 6564      	.DB  0x69,0x76,0x65,0x0,0x4E,0x6F,0x64,0x65
0001c9 203a
0001ca 5400
0001cb 6d65
0001cc 3a70      	.DB  0x3A,0x20,0x0,0x54,0x65,0x6D,0x70,0x3A
0001cd 0020
0001ce 7548
0001cf 696d
0001d0 3a64      	.DB  0x20,0x0,0x48,0x75,0x6D,0x69,0x64,0x3A
0001d1 0020
0001d2 6157
0001d3 6574
0001d4 3a72      	.DB  0x20,0x0,0x57,0x61,0x74,0x65,0x72,0x3A
0001d5 0020
0001d6 6d6d
0001d7 4100
0001d8 0d54      	.DB  0x20,0x0,0x6D,0x6D,0x0,0x41,0x54,0xD
0001d9 000a
0001da 5441
0001db 432b
0001dc 4d57      	.DB  0xA,0x0,0x41,0x54,0x2B,0x43,0x57,0x4D
0001dd 444f
0001de 3d45
0001df 0d31
0001e0 000a      	.DB  0x4F,0x44,0x45,0x3D,0x31,0xD,0xA,0x0
0001e1 5441
0001e2 432b
0001e3 4a57
0001e4 5041      	.DB  0x41,0x54,0x2B,0x43,0x57,0x4A,0x41,0x50
0001e5 223d
0001e6 6854
0001e7 7961
0001e8 545f      	.DB  0x3D,0x22,0x54,0x68,0x61,0x79,0x5F,0x54
0001e9 6168
0001ea 5f6f
0001eb 6564
0001ec 5f6f      	.DB  0x68,0x61,0x6F,0x5F,0x64,0x65,0x6F,0x5F
0001ed 6967
0001ee 6961
0001ef 2c22
0001f0 6322      	.DB  0x67,0x69,0x61,0x69,0x22,0x2C,0x22,0x63
0001f1 6968
0001f2 686e
0001f3 6178
0001f4 2263      	.DB  0x68,0x69,0x6E,0x68,0x78,0x61,0x63,0x22
0001f5 0a0d
0001f6 7300
0001f7 6174
0001f8 7472      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x72,0x74
0001f9 2500
0001fa 2064
0001fb 2500
0001fc 2064      	.DB  0x0,0x25,0x64,0x20,0x0,0x25,0x64,0x20
0001fd 0020      	.DB  0x20,0x0
                 _0x2020060:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1274): warning: .cseg .db misalignment - padding zero byte
0001fe 0001      	.DB  0x1
                 _0x2020000:
0001ff 4e2d
000200 4e41
000201 4900
000202 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1277): warning: .cseg .db misalignment - padding zero byte
000203 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000204 0001      	.DW  0x01
000205 0002      	.DW  0x02
000206 028c      	.DW  __REG_BIT_VARS*2
                 
000207 000a      	.DW  0x0A
000208 0004      	.DW  0x04
000209 028e      	.DW  __REG_VARS*2
                 
00020a 0001      	.DW  0x01
00020b 0500      	.DW  _0x3
00020c 02a2      	.DW  _0x0*2
                 
00020d 0011      	.DW  0x11
00020e 0501      	.DW  _0x3+1
00020f 02a3      	.DW  _0x0*2+1
                 
000210 0011      	.DW  0x11
000211 0512      	.DW  _0x3+18
000212 02b4      	.DW  _0x0*2+18
                 
000213 0011      	.DW  0x11
000214 0523      	.DW  _0x3+35
000215 02c5      	.DW  _0x0*2+35
                 
000216 0011      	.DW  0x11
000217 0534      	.DW  _0x3+52
000218 02d6      	.DW  _0x0*2+52
                 
000219 000a      	.DW  0x0A
00021a 0689      	.DW  _key
00021b 0298      	.DW  _0x4*2
                 
00021c 0006      	.DW  0x06
00021d 0545      	.DW  _0xCD
00021e 02e7      	.DW  _0x0*2+69
                 
00021f 0011      	.DW  0x11
000220 054b      	.DW  _0xCE
000221 02ed      	.DW  _0x0*2+75
                 
000222 000d      	.DW  0x0D
000223 055c      	.DW  _0xCE+17
000224 02fe      	.DW  _0x0*2+92
                 
000225 0003      	.DW  0x03
000226 0569      	.DW  _0xCE+30
000227 030b      	.DW  _0x0*2+105
                 
000228 0003      	.DW  0x03
000229 056c      	.DW  _0xCE+33
00022a 030e      	.DW  _0x0*2+108
                 
00022b 000c      	.DW  0x0C
00022c 056f      	.DW  _0xCE+36
00022d 0311      	.DW  _0x0*2+111
                 
00022e 0003      	.DW  0x03
00022f 057b      	.DW  _0xCE+48
000230 030b      	.DW  _0x0*2+105
                 
000231 0003      	.DW  0x03
000232 057e      	.DW  _0xCE+51
000233 030e      	.DW  _0x0*2+108
                 
000234 002c      	.DW  0x2C
000235 0581      	.DW  _0xCE+54
000236 031d      	.DW  _0x0*2+123
                 
000237 0003      	.DW  0x03
000238 05ad      	.DW  _0xCE+98
000239 030b      	.DW  _0x0*2+105
                 
00023a 0003      	.DW  0x03
00023b 05b0      	.DW  _0xCE+101
00023c 030e      	.DW  _0x0*2+108
                 
00023d 0011      	.DW  0x11
00023e 05b3      	.DW  _0xCE+104
00023f 0349      	.DW  _0x0*2+167
                 
000240 0009      	.DW  0x09
000241 05c4      	.DW  _0xCE+121
000242 035a      	.DW  _0x0*2+184
                 
000243 0009      	.DW  0x09
000244 05cd      	.DW  _0xCE+130
000245 0363      	.DW  _0x0*2+193
                 
000246 0009      	.DW  0x09
000247 05d6      	.DW  _0xCE+139
000248 036c      	.DW  _0x0*2+202
                 
000249 000e      	.DW  0x0E
00024a 05df      	.DW  _0xCE+148
00024b 0375      	.DW  _0x0*2+211
                 
00024c 0003      	.DW  0x03
00024d 05ed      	.DW  _0xCE+162
00024e 030b      	.DW  _0x0*2+105
                 
00024f 0003      	.DW  0x03
000250 05f0      	.DW  _0xCE+165
000251 0383      	.DW  _0x0*2+225
                 
000252 0003      	.DW  0x03
000253 05f3      	.DW  _0xCE+168
000254 030b      	.DW  _0x0*2+105
                 
000255 0008      	.DW  0x08
000256 05f6      	.DW  _0xCE+171
000257 0386      	.DW  _0x0*2+228
                 
000258 0007      	.DW  0x07
000259 05fe      	.DW  _0xD5
00025a 038e      	.DW  _0x0*2+236
                 
00025b 0007      	.DW  0x07
00025c 0605      	.DW  _0xD5+7
00025d 0395      	.DW  _0x0*2+243
                 
00025e 0008      	.DW  0x08
00025f 060c      	.DW  _0xD5+14
000260 039c      	.DW  _0x0*2+250
                 
000261 0008      	.DW  0x08
000262 0614      	.DW  _0xD5+22
000263 03a4      	.DW  _0x0*2+258
                 
000264 0003      	.DW  0x03
000265 061c      	.DW  _0xD5+30
000266 03ac      	.DW  _0x0*2+266
                 
000267 0005      	.DW  0x05
000268 061f      	.DW  _0xD6
000269 03af      	.DW  _0x0*2+269
                 
00026a 0003      	.DW  0x03
00026b 0624      	.DW  _0xD6+5
00026c 030e      	.DW  _0x0*2+108
                 
00026d 000e      	.DW  0x0E
00026e 0627      	.DW  _0xD6+8
00026f 03b4      	.DW  _0x0*2+274
                 
000270 0003      	.DW  0x03
000271 0635      	.DW  _0xD6+22
000272 030e      	.DW  _0x0*2+108
                 
000273 002b      	.DW  0x2B
000274 0638      	.DW  _0xD6+25
000275 03c2      	.DW  _0x0*2+288
                 
000276 0003      	.DW  0x03
000277 0663      	.DW  _0xD6+68
000278 030e      	.DW  _0x0*2+108
                 
000279 0006      	.DW  0x06
00027a 0666      	.DW  _0xD6+71
00027b 03ed      	.DW  _0x0*2+331
                 
00027c 0001      	.DW  0x01
00027d 0946      	.DW  __seed_G101
00027e 03fc      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00027f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000280 94f8      	CLI
000281 27ee      	CLR  R30
000282 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000283 e0f1      	LDI  R31,1
000284 bff5      	OUT  MCUCR,R31
000285 bfe5      	OUT  MCUCR,R30
000286 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000288 e08d      	LDI  R24,(14-2)+1
000289 e0a2      	LDI  R26,2
00028a 27bb      	CLR  R27
                 __CLEAR_REG:
00028b 93ed      	ST   X+,R30
00028c 958a      	DEC  R24
00028d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00028e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00028f e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000290 e0a0      	LDI  R26,LOW(__SRAM_START)
000291 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000292 93ed      	ST   X+,R30
000293 9701      	SBIW R24,1
000294 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000295 e0e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000296 e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000297 9185      	LPM  R24,Z+
000298 9195      	LPM  R25,Z+
000299 9700      	SBIW R24,0
00029a f061      	BREQ __GLOBAL_INI_END
00029b 91a5      	LPM  R26,Z+
00029c 91b5      	LPM  R27,Z+
00029d 9005      	LPM  R0,Z+
00029e 9015      	LPM  R1,Z+
00029f 01bf      	MOVW R22,R30
0002a0 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002a1 9005      	LPM  R0,Z+
0002a2 920d      	ST   X+,R0
0002a3 9701      	SBIW R24,1
0002a4 f7e1      	BRNE __GLOBAL_INI_LOOP
0002a5 01fb      	MOVW R30,R22
0002a6 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0002a7 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002a8 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002a9 bfed      	OUT  SPL,R30
0002aa e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002ab bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002ac e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002ad e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002ae 940c 067b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;unsigned char P_Add;
                 ;unsigned char P_Add, Code_tay_cam1 = 0xA1, Code_tay_cam2 = 0xA2, Code_tay_cam3 = 0xA3, Code_tay_cam4 = 0xA4;
                 ;//unsigned char p=0,lan_bam=0;
                 ;int count;
                 ;bool flag;
                 ;unsigned char* key[] = {"", "4Z7AG6FSEB4HX4UX", "MZS0VOJNPWMKIE67", "PS023R7T7MVUBSEW", "C61VL0Z6IDK6W9RG"};
                 
                 	.DSEG
                 _0x3:
000500           	.BYTE 0x45
                 ;char cmd[250];
                 ;
                 ;unsigned int dem=0;
                 ;#define CE PORTA.3
                 ;#define CSN PORTA.2
                 ;#define SCK PORTA.4
                 ;#define MOSI PORTA.1
                 ;#define MISO PINA.5
                 ;#define IRQ PINA.0
                 ;
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE0)
                 ;#define RX_COMPLETE (1<<RXC0)
                 ;#define FRAMING_ERROR (1<<FE0)
                 ;#define PARITY_ERROR (1<<UPE0)
                 ;#define DATA_OVERRUN (1<<DOR0)
                 ;
                 ;// USART0 Receiver buffer
                 ;#define RX_BUFFER_SIZE0 64
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;#if RX_BUFFER_SIZE0 <= 256
                 ;unsigned char rx_wr_index0=0,rx_rd_index0=0;
                 ;#else
                 ;unsigned int rx_wr_index0=0,rx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE0 < 256
                 ;unsigned char rx_counter0=0;
                 ;#else
                 ;unsigned int rx_counter0=0;
                 ;#endif
                 ;
                 ;char buff[260];
                 ;int i = 0, time_s = 0;
                 ;long time_flow = 0;
                 ;
                 ;void del_string(unsigned char *s) {
                 ; 0000 0036 void del_string(unsigned char *s) {
                 
                 	.CSEG
                 _del_string:
                 ; .FSTART _del_string
                 ; 0000 0037     while (*s) {
0002b0 93ba      	ST   -Y,R27
0002b1 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0x5:
0002b2 81a8      	LD   R26,Y
0002b3 81b9      	LDD  R27,Y+1
0002b4 91ec      	LD   R30,X
0002b5 30e0      	CPI  R30,0
0002b6 f041      	BREQ _0x7
                 ; 0000 0038         *s = '\0';
0002b7 e0e0      	LDI  R30,LOW(0)
0002b8 93ec      	ST   X,R30
                 ; 0000 0039         s++;
0002b9 81e8      	LD   R30,Y
0002ba 81f9      	LDD  R31,Y+1
0002bb 9631      	ADIW R30,1
0002bc 83e8      	ST   Y,R30
0002bd 83f9      	STD  Y+1,R31
                 ; 0000 003A     }
0002be cff3      	RJMP _0x5
                 _0x7:
                 ; 0000 003B }
0002bf 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void) {
                 ; 0000 0041 interrupt [19] void usart0_rx_isr(void) {
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
0002c1 93aa      	ST   -Y,R26
0002c2 93ba      	ST   -Y,R27
0002c3 93ea      	ST   -Y,R30
0002c4 93fa      	ST   -Y,R31
0002c5 b7ef      	IN   R30,SREG
0002c6 93ea      	ST   -Y,R30
                 ; 0000 0042     char status,data;
                 ; 0000 0043     status=UCSR0A;
0002c7 931a      	ST   -Y,R17
0002c8 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0002c9 b11b      	IN   R17,11
                 ; 0000 0044     data=UDR0;
0002ca b10c      	IN   R16,12
                 ; 0000 0045     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0) {
0002cb 2fe1      	MOV  R30,R17
0002cc 71ec      	ANDI R30,LOW(0x1C)
0002cd f4e9      	BRNE _0x8
                 ; 0000 0046         rx_buffer0[rx_wr_index0++]=data;
0002ce 91e0 07cd 	LDS  R30,_rx_wr_index0
0002d0 5fef      	SUBI R30,-LOW(1)
0002d1 93e0 07cd 	STS  _rx_wr_index0,R30
0002d3 50e1      	SUBI R30,LOW(1)
0002d4 e0f0      	LDI  R31,0
0002d5 57e3      	SUBI R30,LOW(-_rx_buffer0)
0002d6 4ff8      	SBCI R31,HIGH(-_rx_buffer0)
0002d7 8300      	ST   Z,R16
                 ; 0000 0047 #if RX_BUFFER_SIZE0 == 256
                 ; 0000 0048         // special case for receiver buffer size=256
                 ; 0000 0049         if (++rx_counter0 == 0) rx_buffer_overflow0=1;
                 ; 0000 004A #else
                 ; 0000 004B         if (rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0=0;
0002d8 91a0 07cd 	LDS  R26,_rx_wr_index0
0002da 34a0      	CPI  R26,LOW(0x40)
0002db f419      	BRNE _0x9
0002dc e0e0      	LDI  R30,LOW(0)
0002dd 93e0 07cd 	STS  _rx_wr_index0,R30
                 ; 0000 004C         if (++rx_counter0 == RX_BUFFER_SIZE0) {
                 _0x9:
0002df 91a0 07cf 	LDS  R26,_rx_counter0
0002e1 5faf      	SUBI R26,-LOW(1)
0002e2 93a0 07cf 	STS  _rx_counter0,R26
0002e4 34a0      	CPI  R26,LOW(0x40)
0002e5 f429      	BRNE _0xA
                 ; 0000 004D             rx_counter0=0;
0002e6 e0e0      	LDI  R30,LOW(0)
0002e7 93e0 07cf 	STS  _rx_counter0,R30
                 ; 0000 004E             rx_buffer_overflow0=1;
0002e9 9468      	SET
0002ea f820      	BLD  R2,0
                 ; 0000 004F         }
                 ; 0000 0050 #endif
                 ; 0000 0051     }
                 _0xA:
                 ; 0000 0052     buff[i] = data;
                 _0x8:
0002eb 91e0 08d4 	LDS  R30,_i
0002ed 91f0 08d5 	LDS  R31,_i+1
0002ef 53e0      	SUBI R30,LOW(-_buff)
0002f0 4ff8      	SBCI R31,HIGH(-_buff)
0002f1 8300      	ST   Z,R16
                 ; 0000 0053     i++;
0002f2 eda4      	LDI  R26,LOW(_i)
0002f3 e0b8      	LDI  R27,HIGH(_i)
0002f4 940e 0fcb 	CALL SUBOPT_0x0
                 ; 0000 0054 }
0002f6 9109      	LD   R16,Y+
0002f7 9119      	LD   R17,Y+
0002f8 91e9      	LD   R30,Y+
0002f9 bfef      	OUT  SREG,R30
0002fa 91f9      	LD   R31,Y+
0002fb 91e9      	LD   R30,Y+
0002fc 91b9      	LD   R27,Y+
0002fd 91a9      	LD   R26,Y+
0002fe 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void) {
                 ; 0000 005A char getchar(void) {
                 ; 0000 005B     char data;
                 ; 0000 005C     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0000 005D     data=rx_buffer0[rx_rd_index0++];
                 ; 0000 005E #if RX_BUFFER_SIZE0 != 256
                 ; 0000 005F     if (rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0=0;
                 ; 0000 0060 #endif
                 ; 0000 0061 #asm("cli")
                 ; 0000 0062     --rx_counter0;
                 ; 0000 0063 #asm("sei")
                 ; 0000 0064     return data;
                 ; 0000 0065 }
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// USART0 Transmitter buffer
                 ;#define TX_BUFFER_SIZE0 64
                 ;char tx_buffer0[TX_BUFFER_SIZE0];
                 ;
                 ;#if TX_BUFFER_SIZE0 <= 256
                 ;unsigned char tx_wr_index0=0,tx_rd_index0=0;
                 ;#else
                 ;unsigned int tx_wr_index0=0,tx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if TX_BUFFER_SIZE0 < 256
                 ;unsigned char tx_counter0=0;
                 ;#else
                 ;unsigned int tx_counter0=0;
                 ;#endif
                 ;
                 ;// USART0 Transmitter interrupt service routine
                 ;interrupt [USART0_TXC] void usart0_tx_isr(void) {
                 ; 0000 007A interrupt [21] void usart0_tx_isr(void) {
                 _usart0_tx_isr:
                 ; .FSTART _usart0_tx_isr
0002ff 93aa      	ST   -Y,R26
000300 93ea      	ST   -Y,R30
000301 93fa      	ST   -Y,R31
000302 b7ef      	IN   R30,SREG
000303 93ea      	ST   -Y,R30
                 ; 0000 007B     if (tx_counter0) {
000304 91e0 091e 	LDS  R30,_tx_counter0
000306 30e0      	CPI  R30,0
000307 f0a9      	BREQ _0xF
                 ; 0000 007C         --tx_counter0;
000308 50e1      	SUBI R30,LOW(1)
000309 93e0 091e 	STS  _tx_counter0,R30
                 ; 0000 007D         UDR0=tx_buffer0[tx_rd_index0++];
00030b 91e0 091d 	LDS  R30,_tx_rd_index0
00030d 5fef      	SUBI R30,-LOW(1)
00030e 93e0 091d 	STS  _tx_rd_index0,R30
000310 50e1      	SUBI R30,LOW(1)
000311 e0f0      	LDI  R31,0
000312 52e4      	SUBI R30,LOW(-_tx_buffer0)
000313 4ff7      	SBCI R31,HIGH(-_tx_buffer0)
000314 81e0      	LD   R30,Z
000315 b9ec      	OUT  0xC,R30
                 ; 0000 007E #if TX_BUFFER_SIZE0 != 256
                 ; 0000 007F         if (tx_rd_index0 == TX_BUFFER_SIZE0) tx_rd_index0=0;
000316 91a0 091d 	LDS  R26,_tx_rd_index0
000318 34a0      	CPI  R26,LOW(0x40)
000319 f419      	BRNE _0x10
00031a e0e0      	LDI  R30,LOW(0)
00031b 93e0 091d 	STS  _tx_rd_index0,R30
                 ; 0000 0080 #endif
                 ; 0000 0081     }
                 _0x10:
                 ; 0000 0082 }
                 _0xF:
00031d 91e9      	LD   R30,Y+
00031e bfef      	OUT  SREG,R30
00031f 91f9      	LD   R31,Y+
000320 91e9      	LD   R30,Y+
000321 91a9      	LD   R26,Y+
000322 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0084 {
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
000323 93ea      	ST   -Y,R30
000324 93fa      	ST   -Y,R31
000325 b7ef      	IN   R30,SREG
000326 93ea      	ST   -Y,R30
                 ; 0000 0085 TCNT2=0xB2;    //10ms
000327 ebe2      	LDI  R30,LOW(178)
000328 bde4      	OUT  0x24,R30
                 ; 0000 0086 if(flag == true)
000329 e0e1      	LDI  R30,LOW(1)
00032a 15e8      	CP   R30,R8
00032b f419      	BRNE _0x11
                 ; 0000 0087     dem++;
00032c 01f6      	MOVW R30,R12
00032d 9631      	ADIW R30,1
00032e 016f      	MOVW R12,R30
                 ; 0000 0088 if(dem == 500){
                 _0x11:
00032f efe4      	LDI  R30,LOW(500)
000330 e0f1      	LDI  R31,HIGH(500)
000331 15ec      	CP   R30,R12
000332 05fd      	CPC  R31,R13
000333 f471      	BRNE _0x12
                 ; 0000 0089     flag = false;
000334 2488      	CLR  R8
                 ; 0000 008A     count++;
000335 01f5      	MOVW R30,R10
000336 9631      	ADIW R30,1
000337 015f      	MOVW R10,R30
                 ; 0000 008B     dem = 0;
000338 24cc      	CLR  R12
000339 24dd      	CLR  R13
                 ; 0000 008C     if(count == 5)
00033a e0e5      	LDI  R30,LOW(5)
00033b e0f0      	LDI  R31,HIGH(5)
00033c 15ea      	CP   R30,R10
00033d 05fb      	CPC  R31,R11
00033e f419      	BRNE _0x13
                 ; 0000 008D         count = 1;
00033f e0e1      	LDI  R30,LOW(1)
000340 e0f0      	LDI  R31,HIGH(1)
000341 015f      	MOVW R10,R30
                 ; 0000 008E }
                 _0x13:
                 ; 0000 008F }
                 _0x12:
000342 91e9      	LD   R30,Y+
000343 bfef      	OUT  SREG,R30
000344 91f9      	LD   R31,Y+
000345 91e9      	LD   R30,Y+
000346 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void) {
                 ; 0000 0090 interrupt [17] void timer0_ovf_isr(void) {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000347 936a      	ST   -Y,R22
000348 937a      	ST   -Y,R23
000349 938a      	ST   -Y,R24
00034a 939a      	ST   -Y,R25
00034b 93aa      	ST   -Y,R26
00034c 93ba      	ST   -Y,R27
00034d 93ea      	ST   -Y,R30
00034e 93fa      	ST   -Y,R31
00034f b7ef      	IN   R30,SREG
000350 93ea      	ST   -Y,R30
                 ; 0000 0091     //0.02 ms => 50k = 1s.
                 ; 0000 0092     TCNT0=0x60;
000351 e6e0      	LDI  R30,LOW(96)
000352 bfe2      	OUT  0x32,R30
                 ; 0000 0093     // Place your code here
                 ; 0000 0094     time_flow++;
000353 eda8      	LDI  R26,LOW(_time_flow)
000354 e0b8      	LDI  R27,HIGH(_time_flow)
000355 940e 1152 	CALL __GETD1P_INC
                +
000357 5fef     +SUBI R30 , LOW ( - 1 )
000358 4fff     +SBCI R31 , HIGH ( - 1 )
000359 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00035a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00035b 940e 1157 	CALL __PUTDP1_DEC
                 ; 0000 0095 
                 ; 0000 0096     if (time_flow == 50000) {
00035d 91a0 08d8 	LDS  R26,_time_flow
00035f 91b0 08d9 	LDS  R27,_time_flow+1
000361 9180 08da 	LDS  R24,_time_flow+2
000363 9190 08db 	LDS  R25,_time_flow+3
                +
000365 35a0     +CPI R26 , LOW ( 0xC350 )
000366 ece3     +LDI R30 , HIGH ( 0xC350 )
000367 07be     +CPC R27 , R30
000368 e0e0     +LDI R30 , BYTE3 ( 0xC350 )
000369 078e     +CPC R24 , R30
00036a e0e0     +LDI R30 , BYTE4 ( 0xC350 )
00036b 079e     +CPC R25 , R30
                 	__CPD2N 0xC350
00036c f469      	BRNE _0x14
                 ; 0000 0097         time_s++;
00036d eda6      	LDI  R26,LOW(_time_s)
00036e e0b8      	LDI  R27,HIGH(_time_s)
00036f 940e 0fcb 	CALL SUBOPT_0x0
                 ; 0000 0098         time_flow = 0;
000371 e0e0      	LDI  R30,LOW(0)
000372 93e0 08d8 	STS  _time_flow,R30
000374 93e0 08d9 	STS  _time_flow+1,R30
000376 93e0 08da 	STS  _time_flow+2,R30
000378 93e0 08db 	STS  _time_flow+3,R30
                 ; 0000 0099     }
                 ; 0000 009A }
                 _0x14:
00037a 91e9      	LD   R30,Y+
00037b bfef      	OUT  SREG,R30
00037c 91f9      	LD   R31,Y+
00037d 91e9      	LD   R30,Y+
00037e 91b9      	LD   R27,Y+
00037f 91a9      	LD   R26,Y+
000380 9199      	LD   R25,Y+
000381 9189      	LD   R24,Y+
000382 9179      	LD   R23,Y+
000383 9169      	LD   R22,Y+
000384 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Write a character to the USART0 Transmitter buffer
                 ;#define _ALTERNATE_PUTCHAR_
                 ;#pragma used+
                 ;void putchar(char c) {
                 ; 0000 00A0 void putchar(char c) {
                 _putchar:
                 ; .FSTART _putchar
                 ; 0000 00A1     while (tx_counter0 == TX_BUFFER_SIZE0);
000385 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x15:
000386 91a0 091e 	LDS  R26,_tx_counter0
000388 34a0      	CPI  R26,LOW(0x40)
000389 f3e1      	BREQ _0x15
                 ; 0000 00A2 #asm("cli")
00038a 94f8      	cli
                 ; 0000 00A3     if (tx_counter0 || ((UCSR0A & DATA_REGISTER_EMPTY)==0)) {
00038b 91e0 091e 	LDS  R30,_tx_counter0
00038d 30e0      	CPI  R30,0
00038e f411      	BRNE _0x19
00038f 995d      	SBIC 0xB,5
000390 c018      	RJMP _0x18
                 _0x19:
                 ; 0000 00A4         tx_buffer0[tx_wr_index0++]=c;
000391 91e0 091c 	LDS  R30,_tx_wr_index0
000393 5fef      	SUBI R30,-LOW(1)
000394 93e0 091c 	STS  _tx_wr_index0,R30
000396 50e1      	SUBI R30,LOW(1)
000397 e0f0      	LDI  R31,0
000398 52e4      	SUBI R30,LOW(-_tx_buffer0)
000399 4ff7      	SBCI R31,HIGH(-_tx_buffer0)
00039a 81a8      	LD   R26,Y
00039b 83a0      	STD  Z+0,R26
                 ; 0000 00A5 #if TX_BUFFER_SIZE0 != 256
                 ; 0000 00A6         if (tx_wr_index0 == TX_BUFFER_SIZE0) tx_wr_index0=0;
00039c 91a0 091c 	LDS  R26,_tx_wr_index0
00039e 34a0      	CPI  R26,LOW(0x40)
00039f f419      	BRNE _0x1B
0003a0 e0e0      	LDI  R30,LOW(0)
0003a1 93e0 091c 	STS  _tx_wr_index0,R30
                 ; 0000 00A7 #endif
                 ; 0000 00A8         ++tx_counter0;
                 _0x1B:
0003a3 91e0 091e 	LDS  R30,_tx_counter0
0003a5 5fef      	SUBI R30,-LOW(1)
0003a6 93e0 091e 	STS  _tx_counter0,R30
                 ; 0000 00A9     } else
0003a8 c002      	RJMP _0x1C
                 _0x18:
                 ; 0000 00AA         UDR0=c;
0003a9 81e8      	LD   R30,Y
0003aa b9ec      	OUT  0xC,R30
                 ; 0000 00AB #asm("sei")
                 _0x1C:
0003ab 9478      	sei
                 ; 0000 00AC }
0003ac 940c 0916 	JMP  _0x212000C
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;#include <nrf_code.h>
                 _config:
                 ; .FSTART _config
                +
0003ae e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0003af 958a     +DEC R24
0003b0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0003b1 e0e0      	LDI  R30,LOW(0)
0003b2 93ea      	ST   -Y,R30
0003b3 e1af      	LDI  R26,LOW(31)
0003b4 d028      	RCALL _RF_Write_TX
0003b5 e0a2      	LDI  R26,LOW(2)
0003b6 e0b0      	LDI  R27,0
0003b7 940e 111f 	CALL _delay_ms
0003b9 e0e7      	LDI  R30,LOW(7)
0003ba 93ea      	ST   -Y,R30
0003bb e7ae      	LDI  R26,LOW(126)
0003bc d020      	RCALL _RF_Write_TX
0003bd e1ed      	LDI  R30,LOW(29)
0003be 93ea      	ST   -Y,R30
0003bf e0a4      	LDI  R26,LOW(4)
0003c0 d01c      	RCALL _RF_Write_TX
0003c1 e0e5      	LDI  R30,LOW(5)
0003c2 93ea      	ST   -Y,R30
0003c3 e0a2      	LDI  R26,LOW(2)
0003c4 d018      	RCALL _RF_Write_TX
0003c5 e0e6      	LDI  R30,LOW(6)
0003c6 93ea      	ST   -Y,R30
0003c7 e2a0      	LDI  R26,LOW(32)
0003c8 d014      	RCALL _RF_Write_TX
0003c9 9508      	RET
                 ; .FEND
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
0003ca 93aa      	ST   -Y,R26
0003cb 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003cc e010      	LDI  R17,LOW(0)
                 _0x1E:
0003cd 3018      	CPI  R17,8
0003ce f450      	BRSH _0x1F
0003cf 81e9      	LDD  R30,Y+1
0003d0 78e0      	ANDI R30,LOW(0x80)
0003d1 f411      	BRNE _0x20
0003d2 98d9      	CBI  0x1B,1
0003d3 c001      	RJMP _0x21
                 _0x20:
0003d4 9ad9      	SBI  0x1B,1
                 _0x21:
0003d5 940e 0fd1 	CALL SUBOPT_0x1
0003d7 5f1f      	SUBI R17,-1
0003d8 cff4      	RJMP _0x1E
                 _0x1F:
0003d9 81e9      	LDD  R30,Y+1
0003da 8118      	LDD  R17,Y+0
0003db 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
0003dd 940e 0fe3 	CALL SUBOPT_0x2
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
0003df dfea      	RCALL _SPI_RW_TX
0003e0 93e0 0945 	STS  _result,R30
0003e2 81a8      	LD   R26,Y
0003e3 dfe6      	RCALL _SPI_RW_TX
0003e4 940e 0fe9 	CALL SUBOPT_0x3
0003e6 91e0 0945 	LDS  R30,_result
0003e8 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 ;	Address -> Y+0
                 ;	Address -> Y+1
                 ;	Address2 -> Y+0
                 ;	command -> Y+0
                 ;	send -> Y+0
                 ;	send -> Y+0
                 _SPI_RW_RX:
                 ; .FSTART _SPI_RW_RX
0003ea 93aa      	ST   -Y,R26
0003eb 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003ec e010      	LDI  R17,LOW(0)
                 _0x6B:
0003ed 3018      	CPI  R17,8
0003ee f450      	BRSH _0x6C
0003ef 81e9      	LDD  R30,Y+1
0003f0 78e0      	ANDI R30,LOW(0x80)
0003f1 f411      	BRNE _0x6D
0003f2 98d9      	CBI  0x1B,1
0003f3 c001      	RJMP _0x6E
                 _0x6D:
0003f4 9ad9      	SBI  0x1B,1
                 _0x6E:
0003f5 940e 0fd1 	CALL SUBOPT_0x1
0003f7 5f1f      	SUBI R17,-1
0003f8 cff4      	RJMP _0x6B
                 _0x6C:
0003f9 81e9      	LDD  R30,Y+1
0003fa 8118      	LDD  R17,Y+0
0003fb 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 _SPI_Read_RX:
                 ; .FSTART _SPI_Read_RX
0003fd 931a      	ST   -Y,R17
0003fe 930a      	ST   -Y,R16
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
0003ff e010      	LDI  R17,0
000400 e000      	LDI  R16,LOW(0)
                 _0x74:
000401 3008      	CPI  R16,8
000402 f478      	BRSH _0x75
                +
000403 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000404 958a     +DEC R24
000405 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000406 0f11      	LSL  R17
000407 9adc      	SBI  0x1B,4
                +
000408 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000409 958a     +DEC R24
00040a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00040b e0e0      	LDI  R30,0
00040c 99cd      	SBIC 0x19,5
00040d e0e1      	LDI  R30,1
00040e 2b1e      	OR   R17,R30
00040f 98dc      	CBI  0x1B,4
000410 5f0f      	SUBI R16,-1
000411 cfef      	RJMP _0x74
                 _0x75:
000412 2fe1      	MOV  R30,R17
000413 9109      	LD   R16,Y+
000414 9119      	LD   R17,Y+
000415 9508      	RET
                 ; .FEND
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
000416 9adb      	SBI  0x1B,3
                +
000417 e788     +LDI R24 , LOW ( 1400 )
000418 e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
000419 9701     +SBIW R24 , 1
00041a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
00041b 98db      	CBI  0x1B,3
00041c 9ada      	SBI  0x1B,2
00041d 9508      	RET
                 ; .FEND
                 _RF_Write_RX:
                 ; .FSTART _RF_Write_RX
00041e 940e 0fe3 	CALL SUBOPT_0x2
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000420 940e 0fee 	CALL SUBOPT_0x4
000422 940e 0fe9 	CALL SUBOPT_0x3
000424 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write2_RX:
                 ; .FSTART _RF_Write2_RX
000426 940e 0fe3 	CALL SUBOPT_0x2
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000428 940e 0fee 	CALL SUBOPT_0x4
00042a 81a8      	LD   R26,Y
00042b 940e 0fee 	CALL SUBOPT_0x4
00042d 81a8      	LD   R26,Y
00042e 940e 0fee 	CALL SUBOPT_0x4
000430 940e 0fe9 	CALL SUBOPT_0x3
000432 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write3_RX:
                 ; .FSTART _RF_Write3_RX
000434 940e 0fe3 	CALL SUBOPT_0x2
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000436 dfb3      	RCALL _SPI_RW_RX
000437 2da7      	MOV  R26,R7
000438 dfb1      	RCALL _SPI_RW_RX
000439 2da7      	MOV  R26,R7
00043a dfaf      	RCALL _SPI_RW_RX
00043b 2da7      	MOV  R26,R7
00043c dfad      	RCALL _SPI_RW_RX
00043d 2da7      	MOV  R26,R7
00043e 940e 0fee 	CALL SUBOPT_0x4
000440 940e 0fe9 	CALL SUBOPT_0x3
000442 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 _RF_Command_RX:
                 ; .FSTART _RF_Command_RX
000444 93aa      	ST   -Y,R26
                 ;	command -> Y+0
000445 98da      	CBI  0x1B,2
000446 81a8      	LD   R26,Y
000447 dfa2      	RCALL _SPI_RW_RX
000448 940e 0fe9 	CALL SUBOPT_0x3
00044a 940c 0916 	JMP  _0x212000C
                 ; .FEND
                 _RF_Write_Address_RX:
                 ; .FSTART _RF_Write_Address_RX
00044c 93aa      	ST   -Y,R26
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
00044d 98da      	CBI  0x1B,2
00044e e0e3      	LDI  R30,LOW(3)
00044f 93ea      	ST   -Y,R30
000450 e0a3      	LDI  R26,LOW(3)
000451 dfcc      	RCALL _RF_Write_RX
000452 940e 0fe9 	CALL SUBOPT_0x3
000454 98da      	CBI  0x1B,2
000455 e0ea      	LDI  R30,LOW(10)
000456 93ea      	ST   -Y,R30
000457 81ac      	LDD  R26,Y+4
000458 dfcd      	RCALL _RF_Write2_RX
000459 e1e0      	LDI  R30,LOW(16)
00045a 93ea      	ST   -Y,R30
00045b 81ac      	LDD  R26,Y+4
00045c dfc9      	RCALL _RF_Write2_RX
00045d e0eb      	LDI  R30,LOW(11)
00045e 93ea      	ST   -Y,R30
00045f 81ab      	LDD  R26,Y+3
000460 940e 0ff3 	CALL SUBOPT_0x5
000462 81ab      	LDD  R26,Y+3
000463 dfd0      	RCALL _RF_Write3_RX
000464 e0ec      	LDI  R30,LOW(12)
000465 93ea      	ST   -Y,R30
000466 81aa      	LDD  R26,Y+2
000467 940e 0ff3 	CALL SUBOPT_0x5
000469 81aa      	LDD  R26,Y+2
00046a dfc9      	RCALL _RF_Write3_RX
00046b e0ed      	LDI  R30,LOW(13)
00046c 93ea      	ST   -Y,R30
00046d 81a9      	LDD  R26,Y+1
00046e 940e 0ff3 	CALL SUBOPT_0x5
000470 81a9      	LDD  R26,Y+1
000471 dfc2      	RCALL _RF_Write3_RX
000472 940c 0934 	JMP  _0x212000B
                 ; .FEND
                 ;	Address1 -> Y+0
                 _RF_Mode_RX:
                 ; .FSTART _RF_Mode_RX
000474 e0e0      	LDI  R30,LOW(0)
000475 93ea      	ST   -Y,R30
000476 e1af      	LDI  R26,LOW(31)
000477 dfa6      	RCALL _RF_Write_RX
000478 9adb      	SBI  0x1B,3
000479 9508      	RET
                 ; .FEND
                 _RF_Config_RX:
                 ; .FSTART _RF_Config_RX
00047a e1ec      	LDI  R30,LOW(28)
00047b 940e 0ff8 	CALL SUBOPT_0x6
00047d 924a      	ST   -Y,R4
00047e 927a      	ST   -Y,R7
00047f 926a      	ST   -Y,R6
000480 2da9      	MOV  R26,R9
000481 dfca      	RCALL _RF_Write_Address_RX
000482 e0e2      	LDI  R30,LOW(2)
000483 940e 0ff8 	CALL SUBOPT_0x6
000485 e0e1      	LDI  R30,LOW(1)
000486 940e 0ff8 	CALL SUBOPT_0x6
000488 9508      	RET
                 ; .FEND
                 _RF_Read_RX_3:
                 ; .FSTART _RF_Read_RX_3
000489 98db      	CBI  0x1B,3
00048a 940e 0fe9 	CALL SUBOPT_0x3
00048c 98da      	CBI  0x1B,2
00048d e6a1      	LDI  R26,LOW(97)
00048e df5b      	RCALL _SPI_RW_RX
                +
00048f e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000490 958a     +DEC R24
000491 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000492 df6a      	RCALL _SPI_Read_RX
000493 e0f0      	LDI  R31,0
000494 93e0 091f 	STS  _station_receive,R30
000496 93f0 0920 	STS  _station_receive+1,R31
000498 df64      	RCALL _SPI_Read_RX
                +
000499 e2a1     +LDI R26 , LOW ( _station_receive + ( 2 ) )
00049a e0b9     +LDI R27 , HIGH ( _station_receive + ( 2 ) )
                 	__POINTW2MN _station_receive,2
00049b 940e 0ffc 	CALL SUBOPT_0x7
                +
00049d e2a3     +LDI R26 , LOW ( _station_receive + ( 4 ) )
00049e e0b9     +LDI R27 , HIGH ( _station_receive + ( 4 ) )
                 	__POINTW2MN _station_receive,4
00049f 940e 0ffc 	CALL SUBOPT_0x7
                +
0004a1 e2a5     +LDI R26 , LOW ( _station_receive + ( 6 ) )
0004a2 e0b9     +LDI R27 , HIGH ( _station_receive + ( 6 ) )
                 	__POINTW2MN _station_receive,6
0004a3 940e 0ffc 	CALL SUBOPT_0x7
                +
0004a5 e2a7     +LDI R26 , LOW ( _station_receive + ( 8 ) )
0004a6 e0b9     +LDI R27 , HIGH ( _station_receive + ( 8 ) )
                 	__POINTW2MN _station_receive,8
0004a7 940e 0ffc 	CALL SUBOPT_0x7
                +
0004a9 e2a9     +LDI R26 , LOW ( _station_receive + ( 10 ) )
0004aa e0b9     +LDI R27 , HIGH ( _station_receive + ( 10 ) )
                 	__POINTW2MN _station_receive,10
0004ab e0f0      	LDI  R31,0
0004ac 93ed      	ST   X+,R30
0004ad 93fc      	ST   X,R31
0004ae 9ada      	SBI  0x1B,2
0004af 9adb      	SBI  0x1B,3
0004b0 e0e7      	LDI  R30,LOW(7)
0004b1 93ea      	ST   -Y,R30
0004b2 e7ae      	LDI  R26,LOW(126)
0004b3 df6a      	RCALL _RF_Write_RX
0004b4 eea2      	LDI  R26,LOW(226)
0004b5 df8e      	RCALL _RF_Command_RX
0004b6 9508      	RET
                 ; .FEND
                 ;station_info data_send;
                 ;
                 ;void put_string (unsigned char *s) {
                 ; 0000 00B5 void put_string (unsigned char *s) {
                 _put_string:
                 ; .FSTART _put_string
                 ; 0000 00B6     while(*s) {
0004b7 93ba      	ST   -Y,R27
0004b8 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0xBC:
0004b9 81a8      	LD   R26,Y
0004ba 81b9      	LDD  R27,Y+1
0004bb 91ec      	LD   R30,X
0004bc 30e0      	CPI  R30,0
0004bd f061      	BREQ _0xBE
                 ; 0000 00B7         putchar(*s);
0004be 91ac      	LD   R26,X
0004bf dec5      	RCALL _putchar
                 ; 0000 00B8         delay_ms(50);
0004c0 e3a2      	LDI  R26,LOW(50)
0004c1 e0b0      	LDI  R27,0
0004c2 940e 111f 	CALL _delay_ms
                 ; 0000 00B9         s++;
0004c4 81e8      	LD   R30,Y
0004c5 81f9      	LDD  R31,Y+1
0004c6 9631      	ADIW R30,1
0004c7 83e8      	ST   Y,R30
0004c8 83f9      	STD  Y+1,R31
                 ; 0000 00BA     }
0004c9 cfef      	RJMP _0xBC
                 _0xBE:
                 ; 0000 00BB }
0004ca 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;void refresh(int time_ms) {
                 ; 0000 00BD void refresh(int time_ms) {
                 _refresh:
                 ; .FSTART _refresh
                 ; 0000 00BE     delay_ms(time_ms);
0004cc 940e 1001 	CALL SUBOPT_0x8
                 ;	time_ms -> Y+0
0004ce 940e 111f 	CALL _delay_ms
                 ; 0000 00BF     glcd_clear();
0004d0 940e 1006 	CALL SUBOPT_0x9
                 ; 0000 00C0     glcd_moveto(0,0);
                 ; 0000 00C1     glcd_outtext(buff);
0004d2 940e 100d 	CALL SUBOPT_0xA
                 ; 0000 00C2     del_string(buff);
0004d4 eda0      	LDI  R26,LOW(_buff)
0004d5 e0b7      	LDI  R27,HIGH(_buff)
0004d6 ddd9      	RCALL _del_string
                 ; 0000 00C3     i = 0;
0004d7 e0e0      	LDI  R30,LOW(0)
0004d8 93e0 08d4 	STS  _i,R30
0004da 93e0 08d5 	STS  _i+1,R30
                 ; 0000 00C4 }
0004dc 940c 0883 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;bool wait_until(unsigned char *keyword, int time_out_s) {
                 ; 0000 00C6 _Bool wait_until(unsigned char *keyword, int time_out_s) {
                 _wait_until:
                 ; .FSTART _wait_until
                 ; 0000 00C7     /*     deu biet cai temp2 de lam gi nhung khong co thi no khong chay trong 1 so truong hop @@
                 ; 0000 00C8         Vi du nhap vao "Hell" thi no se tach thua ra them 2 char. Co the do vi tri o nho. Cha biet @@*/
                 ; 0000 00C9     char temp[20], temp2[20];
                 ; 0000 00CA     int i = 0, time_start, time_temp;
                 ; 0000 00CB 
                 ; 0000 00CC     del_string(temp);
0004de 93ba      	ST   -Y,R27
0004df 93aa      	ST   -Y,R26
0004e0 97a8      	SBIW R28,40
0004e1 940e 1186 	CALL __SAVELOCR6
                 ;	*keyword -> Y+48
                 ;	time_out_s -> Y+46
                 ;	temp -> Y+26
                 ;	temp2 -> Y+6
                 ;	i -> R16,R17
                 ;	time_start -> R18,R19
                 ;	time_temp -> R20,R21
                +
0004e3 e000     +LDI R16 , LOW ( 0 )
0004e4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0004e5 01de      	MOVW R26,R28
0004e6 965a      	ADIW R26,26
0004e7 ddc8      	RCALL _del_string
                 ; 0000 00CD 
                 ; 0000 00CE     while (*keyword) {
                 _0xBF:
0004e8 a9a8      	LDD  R26,Y+48
0004e9 a9b9      	LDD  R27,Y+48+1
0004ea 91ec      	LD   R30,X
0004eb 30e0      	CPI  R30,0
0004ec f101      	BREQ _0xC1
                 ; 0000 00CF         temp[i] = *keyword;
0004ed 01f8      	MOVW R30,R16
0004ee 01de      	MOVW R26,R28
0004ef 965a      	ADIW R26,26
0004f0 0fea      	ADD  R30,R26
0004f1 1ffb      	ADC  R31,R27
0004f2 010f      	MOVW R0,R30
0004f3 a9a8      	LDD  R26,Y+48
0004f4 a9b9      	LDD  R27,Y+48+1
0004f5 91ec      	LD   R30,X
0004f6 01d0      	MOVW R26,R0
0004f7 93ec      	ST   X,R30
                 ; 0000 00D0         temp2[i] = temp[i];
0004f8 01f8      	MOVW R30,R16
0004f9 01de      	MOVW R26,R28
0004fa 9616      	ADIW R26,6
0004fb 0fea      	ADD  R30,R26
0004fc 1ffb      	ADC  R31,R27
0004fd 010f      	MOVW R0,R30
0004fe 01de      	MOVW R26,R28
0004ff 965a      	ADIW R26,26
000500 0fa0      	ADD  R26,R16
000501 1fb1      	ADC  R27,R17
000502 91ec      	LD   R30,X
000503 01d0      	MOVW R26,R0
000504 93ec      	ST   X,R30
                 ; 0000 00D1         keyword++;
000505 a9e8      	LDD  R30,Y+48
000506 a9f9      	LDD  R31,Y+48+1
000507 9631      	ADIW R30,1
000508 abe8      	STD  Y+48,R30
000509 abf9      	STD  Y+48+1,R31
                 ; 0000 00D2         i++;
                +
00050a 5f0f     +SUBI R16 , LOW ( - 1 )
00050b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 00D3     }
00050c cfdb      	RJMP _0xBF
                 _0xC1:
                 ; 0000 00D4 
                 ; 0000 00D5     time_start = time_s;
                +
00050d 9120 08d6+LDS R18 , 0 + ( _time_s )
00050f 9130 08d7+LDS R19 , 0 + ( _time_s ) + 1
                 	__GETWRMN 18,19,0,_time_s
                 ; 0000 00D6 
                 ; 0000 00D7     while (1) {
                 _0xC2:
                 ; 0000 00D8         if (time_s < time_start) {
000511 91a0 08d6 	LDS  R26,_time_s
000513 91b0 08d7 	LDS  R27,_time_s+1
000515 17a2      	CP   R26,R18
000516 07b3      	CPC  R27,R19
000517 f45c      	BRGE _0xC5
                 ; 0000 00D9             time_temp = time_s + 60;
000518 91e0 08d6 	LDS  R30,_time_s
00051a 91f0 08d7 	LDS  R31,_time_s+1
00051c 96fc      	ADIW R30,60
00051d 01af      	MOVW R20,R30
                 ; 0000 00DA             if (time_temp - time_start > time_out_s) {
00051e 01da      	MOVW R26,R20
00051f 940e 1011 	CALL SUBOPT_0xB
000521 f11c      	BRLT _0x212000F
                 ; 0000 00DB                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00DC                 return false;
                 ; 0000 00DD             }
                 ; 0000 00DE         } else {
000522 c007      	RJMP _0xC7
                 _0xC5:
                 ; 0000 00DF             if (time_s - time_start > time_out_s) {
000523 91a0 08d6 	LDS  R26,_time_s
000525 91b0 08d7 	LDS  R27,_time_s+1
000527 940e 1011 	CALL SUBOPT_0xB
000529 f0dc      	BRLT _0x212000F
                 ; 0000 00E0                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00E1                 return false;
                 ; 0000 00E2             }
                 ; 0000 00E3         }
                 _0xC7:
                 ; 0000 00E4 
                 ; 0000 00E5         if ((strstr(buff, temp)) || (strstr(buff, temp2))) {
00052a 940e 1018 	CALL SUBOPT_0xC
00052c 01de      	MOVW R26,R28
00052d 965c      	ADIW R26,28
00052e 940e 07ec 	CALL _strstr
000530 9730      	SBIW R30,0
000531 f441      	BRNE _0xCA
000532 940e 1018 	CALL SUBOPT_0xC
000534 01de      	MOVW R26,R28
000535 9618      	ADIW R26,8
000536 940e 07ec 	CALL _strstr
000538 9730      	SBIW R30,0
000539 f011      	BREQ _0xC9
                 _0xCA:
                 ; 0000 00E6             return true;
00053a e0e1      	LDI  R30,LOW(1)
00053b c00a      	RJMP _0x2120010
                 ; 0000 00E7         }
                 ; 0000 00E8         if (strstr(buff, "ERROR")) {
                 _0xC9:
00053c 940e 1018 	CALL SUBOPT_0xC
                +
00053e e4a5     +LDI R26 , LOW ( _0xCD + ( 0 ) )
00053f e0b5     +LDI R27 , HIGH ( _0xCD + ( 0 ) )
                 	__POINTW2MN _0xCD,0
000540 940e 07ec 	CALL _strstr
000542 9730      	SBIW R30,0
000543 f409      	BRNE _0x212000F
                 ; 0000 00E9             /*glcd_outtext("Error found, attempting to continue..\r\n");
                 ; 0000 00EA             delay_ms(3000);
                 ; 0000 00EB             glcd_clear();
                 ; 0000 00EC             glcd_moveto(0,0);*/
                 ; 0000 00ED             return false;
                 ; 0000 00EE             //nen lam them ve cai nay nua
                 ; 0000 00EF         }
                 ; 0000 00F0     }
000544 cfcc      	RJMP _0xC2
                 ; 0000 00F1 	return false;
                 _0x212000F:
000545 e0e0      	LDI  R30,LOW(0)
                 _0x2120010:
000546 940e 118d 	CALL __LOADLOCR6
000548 96e2      	ADIW R28,50
000549 9508      	RET
                 ; 0000 00F2 }
                 ; .FEND
                 
                 	.DSEG
                 _0xCD:
000545           	.BYTE 0x6
                 ;
                 ;
                 ;bool read_and_send(unsigned char *s){
                 ; 0000 00F5 _Bool read_and_send(unsigned char *s){
                 
                 	.CSEG
                 _read_and_send:
                 ; .FSTART _read_and_send
                 ; 0000 00F6     // Thay nhung ham respones_read bang ham wait_until
                 ; 0000 00F7     char api_key[20], temp[20], temp2[20];
                 ; 0000 00F8     int length = 0, i = 0;
                 ; 0000 00F9     strcpy(cmd,"GET /update?key=");
00054a 93ba      	ST   -Y,R27
00054b 93aa      	ST   -Y,R26
00054c 97ec      	SBIW R28,60
00054d 940e 1188 	CALL __SAVELOCR4
                 ;	*s -> Y+64
                 ;	api_key -> Y+44
                 ;	temp -> Y+24
                 ;	temp2 -> Y+4
                 ;	length -> R16,R17
                 ;	i -> R18,R19
                +
00054f e000     +LDI R16 , LOW ( 0 )
000550 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000551 e020     +LDI R18 , LOW ( 0 )
000552 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000553 940e 101d 	CALL SUBOPT_0xD
                +
000555 e4ab     +LDI R26 , LOW ( _0xCE + ( 0 ) )
000556 e0b5     +LDI R27 , HIGH ( _0xCE + ( 0 ) )
                 	__POINTW2MN _0xCE,0
000557 940e 07c6 	CALL _strcpy
                 ; 0000 00FA 
                 ; 0000 00FB     while (*s) {
                 _0xCF:
000559 940e 1022 	CALL SUBOPT_0xE
00055b 30e0      	CPI  R30,0
00055c f0f9      	BREQ _0xD1
                 ; 0000 00FC         temp2[i] = *s;
00055d 01f9      	MOVW R30,R18
00055e 01de      	MOVW R26,R28
00055f 9614      	ADIW R26,4
000560 0fea      	ADD  R30,R26
000561 1ffb      	ADC  R31,R27
000562 01bf      	MOVW R22,R30
000563 940e 1022 	CALL SUBOPT_0xE
000565 01db      	MOVW R26,R22
000566 93ec      	ST   X,R30
                 ; 0000 00FD         api_key[i] = temp2[i];
000567 01f9      	MOVW R30,R18
000568 01de      	MOVW R26,R28
000569 969c      	ADIW R26,44
00056a 0fea      	ADD  R30,R26
00056b 1ffb      	ADC  R31,R27
00056c 010f      	MOVW R0,R30
00056d 01de      	MOVW R26,R28
00056e 9614      	ADIW R26,4
00056f 0fa2      	ADD  R26,R18
000570 1fb3      	ADC  R27,R19
000571 91ec      	LD   R30,X
000572 01d0      	MOVW R26,R0
000573 93ec      	ST   X,R30
                 ; 0000 00FE         s++;
000574 01de      	MOVW R26,R28
000575 5ca0      	SUBI R26,LOW(-(64))
000576 4fbf      	SBCI R27,HIGH(-(64))
000577 940e 0fcb 	CALL SUBOPT_0x0
                 ; 0000 00FF         i++;
                +
000579 5f2f     +SUBI R18 , LOW ( - 1 )
00057a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0100     }
00057b cfdd      	RJMP _0xCF
                 _0xD1:
                 ; 0000 0101 
                 ; 0000 0102     put_string("AT+CIPMODE=0");
                +
00057c e5ac     +LDI R26 , LOW ( _0xCE + ( 17 ) )
00057d e0b5     +LDI R27 , HIGH ( _0xCE + ( 17 ) )
                 	__POINTW2MN _0xCE,17
00057e 940e 102a 	CALL SUBOPT_0xF
                 ; 0000 0103     delay_ms(300);
                 ; 0000 0104     put_string("\r\n");
                +
000580 e6a9     +LDI R26 , LOW ( _0xCE + ( 30 ) )
000581 e0b5     +LDI R27 , HIGH ( _0xCE + ( 30 ) )
                 	__POINTW2MN _0xCE,30
000582 df34      	RCALL _put_string
                 ; 0000 0105     wait_until("OK", 2);
                +
000583 e6ec     +LDI R30 , LOW ( _0xCE + ( 33 ) )
000584 e0f5     +LDI R31 , HIGH ( _0xCE + ( 33 ) )
                 	__POINTW1MN _0xCE,33
000585 940e 1030 	CALL SUBOPT_0x10
                 ; 0000 0106     refresh(0);
                 ; 0000 0107 
                 ; 0000 0108     put_string("AT+CIPMUX=1");
                +
000587 e6af     +LDI R26 , LOW ( _0xCE + ( 36 ) )
000588 e0b5     +LDI R27 , HIGH ( _0xCE + ( 36 ) )
                 	__POINTW2MN _0xCE,36
000589 940e 102a 	CALL SUBOPT_0xF
                 ; 0000 0109     delay_ms(300);
                 ; 0000 010A     put_string("\r\n");
                +
00058b e7ab     +LDI R26 , LOW ( _0xCE + ( 48 ) )
00058c e0b5     +LDI R27 , HIGH ( _0xCE + ( 48 ) )
                 	__POINTW2MN _0xCE,48
00058d df29      	RCALL _put_string
                 ; 0000 010B     wait_until("OK", 2);
                +
00058e e7ee     +LDI R30 , LOW ( _0xCE + ( 51 ) )
00058f e0f5     +LDI R31 , HIGH ( _0xCE + ( 51 ) )
                 	__POINTW1MN _0xCE,51
000590 940e 1030 	CALL SUBOPT_0x10
                 ; 0000 010C     refresh(0);
                 ; 0000 010D 
                 ; 0000 010E 
                 ; 0000 010F 
                 ; 0000 0110     put_string("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80");
                +
000592 e8a1     +LDI R26 , LOW ( _0xCE + ( 54 ) )
000593 e0b5     +LDI R27 , HIGH ( _0xCE + ( 54 ) )
                 	__POINTW2MN _0xCE,54
000594 940e 102a 	CALL SUBOPT_0xF
                 ; 0000 0111     delay_ms(300);
                 ; 0000 0112     put_string("\r\n");
                +
000596 eaad     +LDI R26 , LOW ( _0xCE + ( 98 ) )
000597 e0b5     +LDI R27 , HIGH ( _0xCE + ( 98 ) )
                 	__POINTW2MN _0xCE,98
000598 df1e      	RCALL _put_string
                 ; 0000 0113     if(!wait_until("OK", 10))
                +
000599 ebe0     +LDI R30 , LOW ( _0xCE + ( 101 ) )
00059a e0f5     +LDI R31 , HIGH ( _0xCE + ( 101 ) )
                 	__POINTW1MN _0xCE,101
00059b 940e 103a 	CALL SUBOPT_0x11
00059d 30e0      	CPI  R30,0
00059e f411      	BRNE _0xD2
                 ; 0000 0114         return false;
00059f e0e0      	LDI  R30,LOW(0)
0005a0 c088      	RJMP _0x212000E
                 ; 0000 0115     refresh(2000);
                 _0xD2:
0005a1 eda0      	LDI  R26,LOW(2000)
0005a2 e0b7      	LDI  R27,HIGH(2000)
0005a3 df28      	RCALL _refresh
                 ; 0000 0116 
                 ; 0000 0117     glcd_clear();
0005a4 940e 1006 	CALL SUBOPT_0x9
                 ; 0000 0118     glcd_moveto(0,0);
                 ; 0000 0119     glcd_outtext("Server connected");
                +
0005a6 eba3     +LDI R26 , LOW ( _0xCE + ( 104 ) )
0005a7 e0b5     +LDI R27 , HIGH ( _0xCE + ( 104 ) )
                 	__POINTW2MN _0xCE,104
0005a8 940e 0c8c 	CALL _glcd_outtext
                 ; 0000 011A 
                 ; 0000 011B     strcat(cmd, api_key);
0005aa 940e 101d 	CALL SUBOPT_0xD
0005ac 01de      	MOVW R26,R28
0005ad 969e      	ADIW R26,46
0005ae 940e 07b5 	CALL _strcat
                 ; 0000 011C     strcat(cmd, "&field1=");
0005b0 940e 101d 	CALL SUBOPT_0xD
                +
0005b2 eca4     +LDI R26 , LOW ( _0xCE + ( 121 ) )
0005b3 e0b5     +LDI R27 , HIGH ( _0xCE + ( 121 ) )
                 	__POINTW2MN _0xCE,121
0005b4 940e 07b5 	CALL _strcat
                 ; 0000 011D     itoa(station_receive.temp, temp);
                +
0005b6 91e0 0925+LDS R30 , _station_receive + ( 6 )
0005b8 91f0 0926+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
0005ba 940e 1040 	CALL SUBOPT_0x12
                 ; 0000 011E     //itoa(200, temp);
                 ; 0000 011F     strcat(cmd, temp);
0005bc 940e 1047 	CALL SUBOPT_0x13
                 ; 0000 0120 
                 ; 0000 0121     length = strlen(temp);
0005be 018f      	MOVW R16,R30
                 ; 0000 0122 
                 ; 0000 0123     strcat(cmd, "&field2=");
0005bf 940e 101d 	CALL SUBOPT_0xD
                +
0005c1 ecad     +LDI R26 , LOW ( _0xCE + ( 130 ) )
0005c2 e0b5     +LDI R27 , HIGH ( _0xCE + ( 130 ) )
                 	__POINTW2MN _0xCE,130
0005c3 940e 07b5 	CALL _strcat
                 ; 0000 0124     itoa(station_receive.humi, temp);
                +
0005c5 91e0 0923+LDS R30 , _station_receive + ( 4 )
0005c7 91f0 0924+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
0005c9 940e 1040 	CALL SUBOPT_0x12
                 ; 0000 0125     //itoa(200, temp);
                 ; 0000 0126     strcat(cmd, temp);
0005cb 940e 1047 	CALL SUBOPT_0x13
                 ; 0000 0127 
                 ; 0000 0128     length += strlen(temp);
                +
0005cd 0f0e     +ADD R16 , R30
0005ce 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0129 
                 ; 0000 012A     strcat(cmd, "&field3=");
0005cf 940e 101d 	CALL SUBOPT_0xD
                +
0005d1 eda6     +LDI R26 , LOW ( _0xCE + ( 139 ) )
0005d2 e0b5     +LDI R27 , HIGH ( _0xCE + ( 139 ) )
                 	__POINTW2MN _0xCE,139
0005d3 940e 07b5 	CALL _strcat
                 ; 0000 012B     itoa(station_receive.water, temp);
                +
0005d5 91e0 0929+LDS R30 , _station_receive + ( 10 )
0005d7 91f0 092a+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
0005d9 940e 1040 	CALL SUBOPT_0x12
                 ; 0000 012C     //itoa(200, temp);
                 ; 0000 012D     strcat(cmd, temp);
0005db 940e 1047 	CALL SUBOPT_0x13
                 ; 0000 012E 
                 ; 0000 012F     length += strlen(temp);
                +
0005dd 0f0e     +ADD R16 , R30
0005de 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0130 
                 ; 0000 0131     glcd_clear();
0005df 940e 1006 	CALL SUBOPT_0x9
                 ; 0000 0132     glcd_moveto(0,0);
                 ; 0000 0133     glcd_outtext(cmd);
0005e1 e9a3      	LDI  R26,LOW(_cmd)
0005e2 e0b6      	LDI  R27,HIGH(_cmd)
0005e3 940e 0c8c 	CALL _glcd_outtext
                 ; 0000 0134 
                 ; 0000 0135     length += 58;//strlen(cmd);
                +
0005e5 5c06     +SUBI R16 , LOW ( - 58 )
0005e6 4f1f     +SBCI R17 , HIGH ( - 58 )
                 	__ADDWRN 16,17,58
                 ; 0000 0136     //length += 2;
                 ; 0000 0137 
                 ; 0000 0138     itoa(length, temp);
0005e7 931a      	ST   -Y,R17
0005e8 930a      	ST   -Y,R16
0005e9 01de      	MOVW R26,R28
0005ea 965a      	ADIW R26,26
0005eb 940e 0803 	CALL _itoa
                 ; 0000 0139     glcd_moveto(0, 40);
0005ed e0e0      	LDI  R30,LOW(0)
0005ee 93ea      	ST   -Y,R30
0005ef e2a8      	LDI  R26,LOW(40)
0005f0 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 013A     glcd_outtext(temp);
0005f2 01de      	MOVW R26,R28
0005f3 9658      	ADIW R26,24
0005f4 940e 0c8c 	CALL _glcd_outtext
                 ; 0000 013B     delay_ms(1000);
0005f6 eea8      	LDI  R26,LOW(1000)
0005f7 e0b3      	LDI  R27,HIGH(1000)
0005f8 940e 111f 	CALL _delay_ms
                 ; 0000 013C 
                 ; 0000 013D 
                 ; 0000 013E 
                 ; 0000 013F     put_string("AT+CIPSEND=0,");
                +
0005fa edaf     +LDI R26 , LOW ( _0xCE + ( 148 ) )
0005fb e0b5     +LDI R27 , HIGH ( _0xCE + ( 148 ) )
                 	__POINTW2MN _0xCE,148
0005fc 940e 102a 	CALL SUBOPT_0xF
                 ; 0000 0140     delay_ms(300);
                 ; 0000 0141     put_string(temp);
0005fe 01de      	MOVW R26,R28
0005ff 9658      	ADIW R26,24
000600 deb6      	RCALL _put_string
                 ; 0000 0142     delay_ms(1000);
000601 eea8      	LDI  R26,LOW(1000)
000602 e0b3      	LDI  R27,HIGH(1000)
000603 940e 111f 	CALL _delay_ms
                 ; 0000 0143     put_string("\r\n");
                +
000605 eead     +LDI R26 , LOW ( _0xCE + ( 162 ) )
000606 e0b5     +LDI R27 , HIGH ( _0xCE + ( 162 ) )
                 	__POINTW2MN _0xCE,162
000607 deaf      	RCALL _put_string
                 ; 0000 0144 
                 ; 0000 0145     if(!wait_until("> ", 5))
                +
000608 efe0     +LDI R30 , LOW ( _0xCE + ( 165 ) )
000609 e0f5     +LDI R31 , HIGH ( _0xCE + ( 165 ) )
                 	__POINTW1MN _0xCE,165
00060a 93fa      	ST   -Y,R31
00060b 93ea      	ST   -Y,R30
00060c e0a5      	LDI  R26,LOW(5)
00060d e0b0      	LDI  R27,0
00060e decf      	RCALL _wait_until
00060f 30e0      	CPI  R30,0
000610 f411      	BRNE _0xD3
                 ; 0000 0146         return false;
000611 e0e0      	LDI  R30,LOW(0)
000612 c016      	RJMP _0x212000E
                 ; 0000 0147 
                 ; 0000 0148     put_string(cmd);
                 _0xD3:
000613 e9a3      	LDI  R26,LOW(_cmd)
000614 e0b6      	LDI  R27,HIGH(_cmd)
000615 dea1      	RCALL _put_string
                 ; 0000 0149     delay_ms(200);
000616 eca8      	LDI  R26,LOW(200)
000617 e0b0      	LDI  R27,0
000618 940e 111f 	CALL _delay_ms
                 ; 0000 014A     put_string("\r\n");
                +
00061a efa3     +LDI R26 , LOW ( _0xCE + ( 168 ) )
00061b e0b5     +LDI R27 , HIGH ( _0xCE + ( 168 ) )
                 	__POINTW2MN _0xCE,168
00061c de9a      	RCALL _put_string
                 ; 0000 014B     if(!wait_until("Receive", 2))
                +
00061d efe6     +LDI R30 , LOW ( _0xCE + ( 171 ) )
00061e e0f5     +LDI R31 , HIGH ( _0xCE + ( 171 ) )
                 	__POINTW1MN _0xCE,171
00061f 93fa      	ST   -Y,R31
000620 93ea      	ST   -Y,R30
000621 e0a2      	LDI  R26,LOW(2)
000622 e0b0      	LDI  R27,0
000623 deba      	RCALL _wait_until
000624 30e0      	CPI  R30,0
000625 f411      	BRNE _0xD4
                 ; 0000 014C         return false;
000626 e0e0      	LDI  R30,LOW(0)
000627 c001      	RJMP _0x212000E
                 ; 0000 014D 
                 ; 0000 014E     return true;
                 _0xD4:
000628 e0e1      	LDI  R30,LOW(1)
                 _0x212000E:
000629 940e 118f 	CALL __LOADLOCR4
00062b 96ef      	ADIW R28,63
00062c 9623      	ADIW R28,3
00062d 9508      	RET
                 ; 0000 014F 
                 ; 0000 0150 }
                 ; .FEND
                 
                 	.DSEG
                 _0xCE:
00054b           	.BYTE 0xB3
                 ;
                 ;void print_border(){
                 ; 0000 0152 void print_border(){
                 
                 	.CSEG
                 _print_border:
                 ; .FSTART _print_border
                 ; 0000 0153     glcd_line(48,0, 48, 15);
00062e e3e0      	LDI  R30,LOW(48)
00062f 93ea      	ST   -Y,R30
000630 e0e0      	LDI  R30,LOW(0)
000631 940e 104f 	CALL SUBOPT_0x14
                 ; 0000 0154     glcd_line(0, 15, 48, 15);
000633 e0ef      	LDI  R30,LOW(15)
000634 940e 104f 	CALL SUBOPT_0x14
                 ; 0000 0155 
                 ; 0000 0156     glcd_line(0,0,84,0);
000636 e0e0      	LDI  R30,LOW(0)
000637 93ea      	ST   -Y,R30
000638 e5e4      	LDI  R30,LOW(84)
000639 93ea      	ST   -Y,R30
00063a e0a0      	LDI  R26,LOW(0)
00063b 940e 0cc2 	CALL _glcd_line
                 ; 0000 0157     glcd_line(84,0, 84, 48);
00063d e5e4      	LDI  R30,LOW(84)
00063e 93ea      	ST   -Y,R30
00063f e0e0      	LDI  R30,LOW(0)
000640 940e 1058 	CALL SUBOPT_0x15
                 ; 0000 0158     glcd_line(0, 48, 84, 48);
000642 e3e0      	LDI  R30,LOW(48)
000643 940e 1058 	CALL SUBOPT_0x15
                 ; 0000 0159     glcd_line(0, 0, 0, 48);
000645 e0e0      	LDI  R30,LOW(0)
000646 93ea      	ST   -Y,R30
000647 93ea      	ST   -Y,R30
000648 e3a0      	LDI  R26,LOW(48)
000649 940e 0cc2 	CALL _glcd_line
                 ; 0000 015A     glcd_moveto(3,3);
00064b e0e3      	LDI  R30,LOW(3)
00064c 93ea      	ST   -Y,R30
00064d e0a3      	LDI  R26,LOW(3)
00064e 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 015B     glcd_outtext("Node: ");
                +
000650 efae     +LDI R26 , LOW ( _0xD5 + ( 0 ) )
000651 e0b5     +LDI R27 , HIGH ( _0xD5 + ( 0 ) )
                 	__POINTW2MN _0xD5,0
000652 940e 1061 	CALL SUBOPT_0x16
                 ; 0000 015C 
                 ; 0000 015D     glcd_moveto(4, 18);
000654 e1a2      	LDI  R26,LOW(18)
000655 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 015E     glcd_outtext("Temp: ");
                +
000657 e0a5     +LDI R26 , LOW ( _0xD5 + ( 7 ) )
000658 e0b6     +LDI R27 , HIGH ( _0xD5 + ( 7 ) )
                 	__POINTW2MN _0xD5,7
000659 940e 1061 	CALL SUBOPT_0x16
                 ; 0000 015F     glcd_moveto(4, 28);
00065b e1ac      	LDI  R26,LOW(28)
00065c 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 0160     glcd_outtext("Humid: ");
                +
00065e e0ac     +LDI R26 , LOW ( _0xD5 + ( 14 ) )
00065f e0b6     +LDI R27 , HIGH ( _0xD5 + ( 14 ) )
                 	__POINTW2MN _0xD5,14
000660 940e 1061 	CALL SUBOPT_0x16
                 ; 0000 0161     glcd_moveto(4, 37);
000662 e2a5      	LDI  R26,LOW(37)
000663 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 0162     glcd_outtext("Water: ");
                +
000665 e1a4     +LDI R26 , LOW ( _0xD5 + ( 22 ) )
000666 e0b6     +LDI R27 , HIGH ( _0xD5 + ( 22 ) )
                 	__POINTW2MN _0xD5,22
000667 940e 0c8c 	CALL _glcd_outtext
                 ; 0000 0163     glcd_moveto(67, 28);
000669 e4e3      	LDI  R30,LOW(67)
00066a 93ea      	ST   -Y,R30
00066b e1ac      	LDI  R26,LOW(28)
00066c 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 0164     glcd_putchar(37);
00066e e2a5      	LDI  R26,LOW(37)
00066f 940e 0c2a 	CALL _glcd_putchar
                 ; 0000 0165     glcd_moveto(67, 37);
000671 e4e3      	LDI  R30,LOW(67)
000672 93ea      	ST   -Y,R30
000673 e2a5      	LDI  R26,LOW(37)
000674 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 0166     glcd_outtext("mm");
                +
000676 e1ac     +LDI R26 , LOW ( _0xD5 + ( 30 ) )
000677 e0b6     +LDI R27 , HIGH ( _0xD5 + ( 30 ) )
                 	__POINTW2MN _0xD5,30
000678 940e 0c8c 	CALL _glcd_outtext
                 ; 0000 0167 }
00067a 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xD5:
0005fe           	.BYTE 0x21
                 ;
                 ;
                 ;void main(void) {
                 ; 0000 016A void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 016B 
                 ; 0000 016C // Declare your local variables here
                 ; 0000 016D // Variable used to store graphic display
                 ; 0000 016E // controller initialization data
                 ; 0000 016F     GLCDINIT_t glcd_init_data;
                 ; 0000 0170 
                 ; 0000 0171 DDRA=(0<<DDA7) | (1<<DDA6) | (0<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (0<<DDA0);
00067b 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
00067c e5ee      	LDI  R30,LOW(94)
00067d bbea      	OUT  0x1A,R30
                 ; 0000 0172 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0173 PORTA=(0<<PORTA7) | (0<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
00067e e3ef      	LDI  R30,LOW(63)
00067f bbeb      	OUT  0x1B,R30
                 ; 0000 0174 // Port B initialization
                 ; 0000 0175 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0176     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000680 e0e8      	LDI  R30,LOW(8)
000681 bbe7      	OUT  0x17,R30
                 ; 0000 0177 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0178     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000682 e0e0      	LDI  R30,LOW(0)
000683 bbe8      	OUT  0x18,R30
                 ; 0000 0179 
                 ; 0000 017A // Port C initialization
                 ; 0000 017B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 017C     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000684 bbe4      	OUT  0x14,R30
                 ; 0000 017D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 017E     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (1<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000685 e0e8      	LDI  R30,LOW(8)
000686 bbe5      	OUT  0x15,R30
                 ; 0000 017F 
                 ; 0000 0180 // Port D initialization
                 ; 0000 0181 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0182     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000687 e0e0      	LDI  R30,LOW(0)
000688 bbe1      	OUT  0x11,R30
                 ; 0000 0183 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0184     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000689 bbe2      	OUT  0x12,R30
                 ; 0000 0185 
                 ; 0000 0186 // Port E initialization
                 ; 0000 0187 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0188     DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
00068a b9e2      	OUT  0x2,R30
                 ; 0000 0189 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 018A     PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
00068b b9e3      	OUT  0x3,R30
                 ; 0000 018B 
                 ; 0000 018C // Port F initialization
                 ; 0000 018D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 018E     DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
00068c 93e0 0061 	STS  97,R30
                 ; 0000 018F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0190     PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
00068e 93e0 0062 	STS  98,R30
                 ; 0000 0191 
                 ; 0000 0192 // Port G initialization
                 ; 0000 0193 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0194     DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
000690 93e0 0064 	STS  100,R30
                 ; 0000 0195 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0196     PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
000692 93e0 0065 	STS  101,R30
                 ; 0000 0197 
                 ; 0000 0198 // Timer/Counter 0 initialization
                 ; 0000 0199 // Clock source: System Clock
                 ; 0000 019A // Clock value: 8000.000 kHz
                 ; 0000 019B // Mode: Normal top=0xFF
                 ; 0000 019C // OC0 output: Disconnected
                 ; 0000 019D // Timer Period: 0.02 ms
                 ; 0000 019E 
                 ; 0000 019F         ASSR=0<<AS0;
000694 bfe0      	OUT  0x30,R30
                 ; 0000 01A0         TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00);
000695 e0e1      	LDI  R30,LOW(1)
000696 bfe3      	OUT  0x33,R30
                 ; 0000 01A1         TCNT0=0x60;
000697 e6e0      	LDI  R30,LOW(96)
000698 bfe2      	OUT  0x32,R30
                 ; 0000 01A2         OCR0=0x00;
000699 e0e0      	LDI  R30,LOW(0)
00069a bfe1      	OUT  0x31,R30
                 ; 0000 01A3 
                 ; 0000 01A4 // Timer/Counter 1 initialization
                 ; 0000 01A5 // Clock source: System Clock
                 ; 0000 01A6 // Clock value: Timer1 Stopped
                 ; 0000 01A7 // Mode: Normal top=0xFFFF
                 ; 0000 01A8 // OC1A output: Disconnected
                 ; 0000 01A9 // OC1B output: Disconnected
                 ; 0000 01AA // OC1C output: Disconnected
                 ; 0000 01AB // Noise Canceler: Off
                 ; 0000 01AC // Input Capture on Falling Edge
                 ; 0000 01AD // Timer1 Overflow Interrupt: Off
                 ; 0000 01AE // Input Capture Interrupt: Off
                 ; 0000 01AF // Compare A Match Interrupt: Off
                 ; 0000 01B0 // Compare B Match Interrupt: Off
                 ; 0000 01B1 // Compare C Match Interrupt: Off
                 ; 0000 01B2     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
00069b bdef      	OUT  0x2F,R30
                 ; 0000 01B3     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00069c bdee      	OUT  0x2E,R30
                 ; 0000 01B4     TCNT1H=0x00;
00069d bded      	OUT  0x2D,R30
                 ; 0000 01B5     TCNT1L=0x00;
00069e bdec      	OUT  0x2C,R30
                 ; 0000 01B6     ICR1H=0x00;
00069f bde7      	OUT  0x27,R30
                 ; 0000 01B7     ICR1L=0x00;
0006a0 bde6      	OUT  0x26,R30
                 ; 0000 01B8     OCR1AH=0x00;
0006a1 bdeb      	OUT  0x2B,R30
                 ; 0000 01B9     OCR1AL=0x00;
0006a2 bdea      	OUT  0x2A,R30
                 ; 0000 01BA     OCR1BH=0x00;
0006a3 bde9      	OUT  0x29,R30
                 ; 0000 01BB     OCR1BL=0x00;
0006a4 bde8      	OUT  0x28,R30
                 ; 0000 01BC     OCR1CH=0x00;
0006a5 93e0 0079 	STS  121,R30
                 ; 0000 01BD     OCR1CL=0x00;
0006a7 93e0 0078 	STS  120,R30
                 ; 0000 01BE 
                 ; 0000 01BF // Timer/Counter 2 initialization
                 ; 0000 01C0 // Clock source: System Clock
                 ; 0000 01C1 // Clock value: 7.813 kHz
                 ; 0000 01C2 // Mode: Normal top=0xFF
                 ; 0000 01C3 // OC2 output: Disconnected
                 ; 0000 01C4 // Timer Period: 9.984 ms
                 ; 0000 01C5 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (1<<CS22) | (0<<CS21) | (1<<CS20);
0006a9 e0e5      	LDI  R30,LOW(5)
0006aa bde5      	OUT  0x25,R30
                 ; 0000 01C6 TCNT2=0xB2;
0006ab ebe2      	LDI  R30,LOW(178)
0006ac bde4      	OUT  0x24,R30
                 ; 0000 01C7 OCR2=0x00;
0006ad e0e0      	LDI  R30,LOW(0)
0006ae bde3      	OUT  0x23,R30
                 ; 0000 01C8 
                 ; 0000 01C9 // Timer/Counter 3 initialization
                 ; 0000 01CA // Clock source: System Clock
                 ; 0000 01CB // Clock value: Timer3 Stopped
                 ; 0000 01CC // Mode: Normal top=0xFFFF
                 ; 0000 01CD // OC3A output: Disconnected
                 ; 0000 01CE // OC3B output: Disconnected
                 ; 0000 01CF // OC3C output: Disconnected
                 ; 0000 01D0 // Noise Canceler: Off
                 ; 0000 01D1 // Input Capture on Falling Edge
                 ; 0000 01D2 // Timer3 Overflow Interrupt: Off
                 ; 0000 01D3 // Input Capture Interrupt: Off
                 ; 0000 01D4 // Compare A Match Interrupt: Off
                 ; 0000 01D5 // Compare B Match Interrupt: Off
                 ; 0000 01D6 // Compare C Match Interrupt: Off
                 ; 0000 01D7     TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
0006af 93e0 008b 	STS  139,R30
                 ; 0000 01D8     TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
0006b1 93e0 008a 	STS  138,R30
                 ; 0000 01D9     TCNT3H=0x00;
0006b3 93e0 0089 	STS  137,R30
                 ; 0000 01DA     TCNT3L=0x00;
0006b5 93e0 0088 	STS  136,R30
                 ; 0000 01DB     ICR3H=0x00;
0006b7 93e0 0081 	STS  129,R30
                 ; 0000 01DC     ICR3L=0x00;
0006b9 93e0 0080 	STS  128,R30
                 ; 0000 01DD     OCR3AH=0x00;
0006bb 93e0 0087 	STS  135,R30
                 ; 0000 01DE     OCR3AL=0x00;
0006bd 93e0 0086 	STS  134,R30
                 ; 0000 01DF     OCR3BH=0x00;
0006bf 93e0 0085 	STS  133,R30
                 ; 0000 01E0     OCR3BL=0x00;
0006c1 93e0 0084 	STS  132,R30
                 ; 0000 01E1     OCR3CH=0x00;
0006c3 93e0 0083 	STS  131,R30
                 ; 0000 01E2     OCR3CL=0x00;
0006c5 93e0 0082 	STS  130,R30
                 ; 0000 01E3 
                 ; 0000 01E4 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 01E5     TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0006c7 e4e1      	LDI  R30,LOW(65)
0006c8 bfe7      	OUT  0x37,R30
                 ; 0000 01E6     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0006c9 e0e0      	LDI  R30,LOW(0)
0006ca 93e0 007d 	STS  125,R30
                 ; 0000 01E7 
                 ; 0000 01E8 
                 ; 0000 01E9 // External Interrupt(s) initialization
                 ; 0000 01EA // INT0: Off
                 ; 0000 01EB // INT1: Off
                 ; 0000 01EC // INT2: Off
                 ; 0000 01ED // INT3: Off
                 ; 0000 01EE // INT4: Off
                 ; 0000 01EF // INT5: Off
                 ; 0000 01F0 // INT6: Off
                 ; 0000 01F1 // INT7: Off
                 ; 0000 01F2     EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0006cc 93e0 006a 	STS  106,R30
                 ; 0000 01F3     EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
0006ce bfea      	OUT  0x3A,R30
                 ; 0000 01F4     EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
0006cf bfe9      	OUT  0x39,R30
                 ; 0000 01F5 
                 ; 0000 01F6 // USART0 initialization
                 ; 0000 01F7 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 01F8 // USART0 Receiver: On
                 ; 0000 01F9 // USART0 Transmitter: On
                 ; 0000 01FA // USART0 Mode: Asynchronous
                 ; 0000 01FB // USART0 Baud Rate: 9600
                 ; 0000 01FC     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0006d0 b9eb      	OUT  0xB,R30
                 ; 0000 01FD     UCSR0B=(1<<RXCIE0) | (1<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0006d1 ede8      	LDI  R30,LOW(216)
0006d2 b9ea      	OUT  0xA,R30
                 ; 0000 01FE     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0006d3 e0e6      	LDI  R30,LOW(6)
0006d4 93e0 0095 	STS  149,R30
                 ; 0000 01FF     UBRR0H=0x00;
0006d6 e0e0      	LDI  R30,LOW(0)
0006d7 93e0 0090 	STS  144,R30
                 ; 0000 0200     UBRR0L=0x33;
0006d9 e3e3      	LDI  R30,LOW(51)
0006da b9e9      	OUT  0x9,R30
                 ; 0000 0201 
                 ; 0000 0202 // USART1 initialization
                 ; 0000 0203 // USART1 disabled
                 ; 0000 0204     UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0006db e0e0      	LDI  R30,LOW(0)
0006dc 93e0 009a 	STS  154,R30
                 ; 0000 0205 
                 ; 0000 0206 // Analog Comparator initialization
                 ; 0000 0207 // Analog Comparator: Off
                 ; 0000 0208 // The Analog Comparator's positive input is
                 ; 0000 0209 // connected to the AIN0 pin
                 ; 0000 020A // The Analog Comparator's negative input is
                 ; 0000 020B // connected to the AIN1 pin
                 ; 0000 020C     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0006de e8e0      	LDI  R30,LOW(128)
0006df b9e8      	OUT  0x8,R30
                 ; 0000 020D     SFIOR=(0<<ACME);
0006e0 e0e0      	LDI  R30,LOW(0)
0006e1 bde0      	OUT  0x20,R30
                 ; 0000 020E 
                 ; 0000 020F // ADC initialization
                 ; 0000 0210 // ADC disabled
                 ; 0000 0211     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0006e2 b9e6      	OUT  0x6,R30
                 ; 0000 0212 
                 ; 0000 0213 // SPI initialization
                 ; 0000 0214 // SPI disabled
                 ; 0000 0215     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0006e3 b9ed      	OUT  0xD,R30
                 ; 0000 0216 
                 ; 0000 0217 // TWI initialization
                 ; 0000 0218 // TWI disabled
                 ; 0000 0219     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0006e4 93e0 0074 	STS  116,R30
                 ; 0000 021A 
                 ; 0000 021B // Graphic Display Controller initialization
                 ; 0000 021C // The PCD8544 connections are specified in the
                 ; 0000 021D // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 021E // SDIN - PORTC Bit 7
                 ; 0000 021F // SCLK - PORTA Bit 7
                 ; 0000 0220 // D /C - PORTC Bit 6
                 ; 0000 0221 // /SCE - PORTC Bit 5
                 ; 0000 0222 // /RES - PORTC Bit 4
                 ; 0000 0223 
                 ; 0000 0224 // Specify the current font for displaying text
                 ; 0000 0225     glcd_init_data.font=font5x7;
0006e6 e8ec      	LDI  R30,LOW(_font5x7*2)
0006e7 e0f0      	LDI  R31,HIGH(_font5x7*2)
0006e8 83e8      	ST   Y,R30
0006e9 83f9      	STD  Y+1,R31
                 ; 0000 0226 // No function is used for reading
                 ; 0000 0227 // image data from external memory
                 ; 0000 0228     glcd_init_data.readxmem=NULL;
0006ea e0e0      	LDI  R30,LOW(0)
0006eb 83ea      	STD  Y+2,R30
0006ec 83eb      	STD  Y+2+1,R30
                 ; 0000 0229 // No function is used for writing
                 ; 0000 022A // image data to external memory
                 ; 0000 022B     glcd_init_data.writexmem=NULL;
0006ed 83ec      	STD  Y+4,R30
0006ee 83ed      	STD  Y+4+1,R30
                 ; 0000 022C // Set the LCD temperature coefficient
                 ; 0000 022D     glcd_init_data.temp_coef=90;
0006ef 81ee      	LDD  R30,Y+6
0006f0 7fec      	ANDI R30,LOW(0xFC)
0006f1 60e2      	ORI  R30,2
0006f2 83ee      	STD  Y+6,R30
                 ; 0000 022E // Set the LCD bias
                 ; 0000 022F     glcd_init_data.bias=3;
0006f3 7ee3      	ANDI R30,LOW(0xE3)
0006f4 60ec      	ORI  R30,LOW(0xC)
0006f5 83ee      	STD  Y+6,R30
                 ; 0000 0230 // Set the LCD contrast control voltage VLCD
                 ; 0000 0231     glcd_init_data.vlcd=57;
0006f6 81ef      	LDD  R30,Y+7
0006f7 78e0      	ANDI R30,LOW(0x80)
0006f8 63e9      	ORI  R30,LOW(0x39)
0006f9 83ef      	STD  Y+7,R30
                 ; 0000 0232 
                 ; 0000 0233     glcd_init(&glcd_init_data);
0006fa 01de      	MOVW R26,R28
0006fb 940e 088f 	CALL _glcd_init
                 ; 0000 0234 
                 ; 0000 0235 // Global enable interrupts
                 ; 0000 0236 #asm("sei")
0006fd 9478      	sei
                 ; 0000 0237 
                 ; 0000 0238     put_string("AT\r\n");
                +
0006fe e1af     +LDI R26 , LOW ( _0xD6 + ( 0 ) )
0006ff e0b6     +LDI R27 , HIGH ( _0xD6 + ( 0 ) )
                 	__POINTW2MN _0xD6,0
000700 ddb6      	RCALL _put_string
                 ; 0000 0239     wait_until("OK", 2);
                +
000701 e2e4     +LDI R30 , LOW ( _0xD6 + ( 5 ) )
000702 e0f6     +LDI R31 , HIGH ( _0xD6 + ( 5 ) )
                 	__POINTW1MN _0xD6,5
000703 940e 1030 	CALL SUBOPT_0x10
                 ; 0000 023A     refresh(0);
                 ; 0000 023B 
                 ; 0000 023C     put_string("AT+CWMODE=1\r\n");
                +
000705 e2a7     +LDI R26 , LOW ( _0xD6 + ( 8 ) )
000706 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 8 ) )
                 	__POINTW2MN _0xD6,8
000707 ddaf      	RCALL _put_string
                 ; 0000 023D     wait_until("OK", 2);
                +
000708 e3e5     +LDI R30 , LOW ( _0xD6 + ( 22 ) )
000709 e0f6     +LDI R31 , HIGH ( _0xD6 + ( 22 ) )
                 	__POINTW1MN _0xD6,22
00070a 940e 1030 	CALL SUBOPT_0x10
                 ; 0000 023E     refresh(0);
                 ; 0000 023F 
                 ; 0000 0240     put_string("AT+CWJAP=\"Thay_Thao_deo_giai\",\"chinhxac\"\r\n");
                +
00070c e3a8     +LDI R26 , LOW ( _0xD6 + ( 25 ) )
00070d e0b6     +LDI R27 , HIGH ( _0xD6 + ( 25 ) )
                 	__POINTW2MN _0xD6,25
00070e dda8      	RCALL _put_string
                 ; 0000 0241     wait_until("OK", 10);
                +
00070f e6e3     +LDI R30 , LOW ( _0xD6 + ( 68 ) )
000710 e0f6     +LDI R31 , HIGH ( _0xD6 + ( 68 ) )
                 	__POINTW1MN _0xD6,68
000711 940e 103a 	CALL SUBOPT_0x11
                 ; 0000 0242     refresh(0);
000713 e0a0      	LDI  R26,LOW(0)
000714 e0b0      	LDI  R27,0
000715 ddb6      	RCALL _refresh
                 ; 0000 0243 
                 ; 0000 0244 
                 ; 0000 0245 //while(!read_and_send("6ZF1YB8AXISBSA2P"));
                 ; 0000 0246 delay_ms(3000);
000716 eba8      	LDI  R26,LOW(3000)
000717 e0bb      	LDI  R27,HIGH(3000)
000718 940e 111f 	CALL _delay_ms
                 ; 0000 0247 RF_Init_RX();
00071a dcfb      	RCALL _RF_Init_RX
                 ; 0000 0248 config();
00071b dc92      	RCALL _config
                 ; 0000 0249 RF_Config_RX();
00071c dd5d      	RCALL _RF_Config_RX
                 ; 0000 024A count = 1;
00071d e0e1      	LDI  R30,LOW(1)
00071e e0f0      	LDI  R31,HIGH(1)
00071f 015f      	MOVW R10,R30
                 ; 0000 024B 
                 ; 0000 024C glcd_moveto(10,10);
000720 e0ea      	LDI  R30,LOW(10)
000721 93ea      	ST   -Y,R30
000722 e0aa      	LDI  R26,LOW(10)
000723 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 024D glcd_clear();
000725 940e 0918 	CALL _glcd_clear
                 ; 0000 024E glcd_outtext("start");
                +
000727 e6a6     +LDI R26 , LOW ( _0xD6 + ( 71 ) )
000728 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 71 ) )
                 	__POINTW2MN _0xD6,71
000729 940e 0c8c 	CALL _glcd_outtext
                 ; 0000 024F 
                 ; 0000 0250 while (1) {
                 _0xD7:
                 ; 0000 0251     RF_Mode_RX();
00072b dd48      	RCALL _RF_Mode_RX
                 ; 0000 0252 
                 ; 0000 0253     if(PINC.3 == 0){
00072c 999b      	SBIC 0x13,3
00072d c007      	RJMP _0xDA
                 ; 0000 0254         delay_ms(500);
00072e efa4      	LDI  R26,LOW(500)
00072f e0b1      	LDI  R27,HIGH(500)
000730 940e 111f 	CALL _delay_ms
                 ; 0000 0255         count++;
000732 01f5      	MOVW R30,R10
000733 9631      	ADIW R30,1
000734 015f      	MOVW R10,R30
                 ; 0000 0256     }
                 ; 0000 0257     if(IRQ == 0){
                 _0xDA:
000735 99c8      	SBIC 0x19,0
000736 c06c      	RJMP _0xDB
                 ; 0000 0258         RF_Read_RX_3();
000737 dd51      	RCALL _RF_Read_RX_3
                 ; 0000 0259 
                 ; 0000 025A         if(station_receive.flag == count){
000738 91a0 091f 	LDS  R26,_station_receive
00073a 91b0 0920 	LDS  R27,_station_receive+1
00073c 16aa      	CP   R10,R26
00073d 06bb      	CPC  R11,R27
00073e f009      	BREQ PC+2
00073f c063      	RJMP _0xDC
                 ; 0000 025B             print_border();
000740 deed      	RCALL _print_border
                 ; 0000 025C             glcd_moveto(40, 3);
000741 e2e8      	LDI  R30,LOW(40)
000742 93ea      	ST   -Y,R30
000743 e0a3      	LDI  R26,LOW(3)
000744 940e 0cb6 	CALL _glcd_moveto
                 ; 0000 025D             itoa(station_receive.flag, buff);
000746 91e0 091f 	LDS  R30,_station_receive
000748 91f0 0920 	LDS  R31,_station_receive+1
00074a 93fa      	ST   -Y,R31
00074b 93ea      	ST   -Y,R30
00074c eda0      	LDI  R26,LOW(_buff)
00074d e0b7      	LDI  R27,HIGH(_buff)
00074e 940e 0803 	CALL _itoa
                 ; 0000 025E             glcd_outtext(buff);
000750 940e 100d 	CALL SUBOPT_0xA
                 ; 0000 025F             glcd_moveto(46, 18);
000752 e2ee      	LDI  R30,LOW(46)
000753 93ea      	ST   -Y,R30
000754 e1a2      	LDI  R26,LOW(18)
000755 940e 1066 	CALL SUBOPT_0x17
                 ; 0000 0260             sprintf(buff, "%d ", station_receive.temp);
                +
000757 efe3     +LDI R30 , LOW ( 2 * _0x0 + ( 337 ) )
000758 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 337 ) )
                 	__POINTW1FN _0x0,337
000759 93fa      	ST   -Y,R31
00075a 93ea      	ST   -Y,R30
                +
00075b 91e0 0925+LDS R30 , _station_receive + ( 6 )
00075d 91f0 0926+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
00075f 940e 1069 	CALL SUBOPT_0x18
                 ; 0000 0261             glcd_outtext(buff);
                 ; 0000 0262             glcd_moveto(46, 28);
000761 e2ee      	LDI  R30,LOW(46)
000762 93ea      	ST   -Y,R30
000763 e1ac      	LDI  R26,LOW(28)
000764 940e 1066 	CALL SUBOPT_0x17
                 ; 0000 0263             sprintf(buff, "%d ", station_receive.humi);
                +
000766 efe3     +LDI R30 , LOW ( 2 * _0x0 + ( 337 ) )
000767 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 337 ) )
                 	__POINTW1FN _0x0,337
000768 93fa      	ST   -Y,R31
000769 93ea      	ST   -Y,R30
                +
00076a 91e0 0923+LDS R30 , _station_receive + ( 4 )
00076c 91f0 0924+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
00076e 940e 1069 	CALL SUBOPT_0x18
                 ; 0000 0264             glcd_outtext(buff);
                 ; 0000 0265             glcd_moveto(46, 37);
000770 e2ee      	LDI  R30,LOW(46)
000771 93ea      	ST   -Y,R30
000772 e2a5      	LDI  R26,LOW(37)
000773 940e 1066 	CALL SUBOPT_0x17
                 ; 0000 0266             sprintf(buff, "%d  ", station_receive.water);
                +
000775 efe7     +LDI R30 , LOW ( 2 * _0x0 + ( 341 ) )
000776 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 341 ) )
                 	__POINTW1FN _0x0,341
000777 93fa      	ST   -Y,R31
000778 93ea      	ST   -Y,R30
                +
000779 91e0 0929+LDS R30 , _station_receive + ( 10 )
00077b 91f0 092a+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
00077d 940e 1069 	CALL SUBOPT_0x18
                 ; 0000 0267             glcd_outtext(buff);
                 ; 0000 0268             delay_ms(100);
00077f e6a4      	LDI  R26,LOW(100)
000780 e0b0      	LDI  R27,0
000781 940e 111f 	CALL _delay_ms
                 ; 0000 0269             while(!read_and_send(key[count]));
                 _0xDD:
000783 01f5      	MOVW R30,R10
000784 e8a9      	LDI  R26,LOW(_key)
000785 e0b6      	LDI  R27,HIGH(_key)
000786 0fee      	LSL  R30
000787 1fff      	ROL  R31
000788 0fae      	ADD  R26,R30
000789 1fbf      	ADC  R27,R31
00078a 940e 114e 	CALL __GETW1P
00078c 01df      	MOVW R26,R30
00078d ddbc      	RCALL _read_and_send
00078e 30e0      	CPI  R30,0
00078f f399      	BREQ _0xDD
                 ; 0000 026A             delay_ms(200);
000790 eca8      	LDI  R26,LOW(200)
000791 e0b0      	LDI  R27,0
000792 940e 111f 	CALL _delay_ms
                 ; 0000 026B             glcd_clear();
000794 940e 0918 	CALL _glcd_clear
                 ; 0000 026C             count++;
000796 01f5      	MOVW R30,R10
000797 9631      	ADIW R30,1
000798 015f      	MOVW R10,R30
                 ; 0000 026D             if(count == 5)
000799 e0e5      	LDI  R30,LOW(5)
00079a e0f0      	LDI  R31,HIGH(5)
00079b 15ea      	CP   R30,R10
00079c 05fb      	CPC  R31,R11
00079d f419      	BRNE _0xE0
                 ; 0000 026E                 count = 1;
00079e e0e1      	LDI  R30,LOW(1)
00079f e0f0      	LDI  R31,HIGH(1)
0007a0 015f      	MOVW R10,R30
                 ; 0000 026F             flag = true;
                 _0xE0:
0007a1 e0e1      	LDI  R30,LOW(1)
0007a2 2e8e      	MOV  R8,R30
                 ; 0000 0270 
                 ; 0000 0271         }
                 ; 0000 0272     }
                 _0xDC:
                 ; 0000 0273     }
                 _0xDB:
0007a3 cf87      	RJMP _0xD7
                 ; 0000 0274 }
                 _0xE1:
0007a4 cfff      	RJMP _0xE1
                 ; .FEND
                 
                 	.DSEG
                 _0xD6:
00061f           	.BYTE 0x4D
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0007a5 93ba      	ST   -Y,R27
0007a6 93aa      	ST   -Y,R26
0007a7 81b9          ldd  r27,y+1
0007a8 81a8          ld   r26,y
0007a9 9610          adiw r26,0
0007aa f031          breq memset1
0007ab 81fc          ldd  r31,y+4
0007ac 81eb          ldd  r30,y+3
0007ad 816a          ldd  r22,y+2
                 memset0:
0007ae 9361          st   z+,r22
0007af 9711          sbiw r26,1
0007b0 f7e9          brne memset0
                 memset1:
0007b1 81eb          ldd  r30,y+3
0007b2 81fc          ldd  r31,y+4
0007b3 940c 0df0 	JMP  _0x2120005
                 ; .FEND
                 _strcat:
                 ; .FSTART _strcat
0007b5 93ba      	ST   -Y,R27
0007b6 93aa      	ST   -Y,R26
0007b7 91e9          ld   r30,y+
0007b8 91f9          ld   r31,y+
0007b9 91a9          ld   r26,y+
0007ba 91b9          ld   r27,y+
0007bb 01cd          movw r24,r26
                 strcat0:
0007bc 916d          ld   r22,x+
0007bd 2366          tst  r22
0007be f7e9          brne strcat0
0007bf 9711          sbiw r26,1
                 strcat1:
0007c0 9161          ld   r22,z+
0007c1 936d          st   x+,r22
0007c2 2366          tst  r22
0007c3 f7e1          brne strcat1
0007c4 01fc          movw r30,r24
0007c5 9508          ret
                 ; .FEND
                 _strcpy:
                 ; .FSTART _strcpy
0007c6 93ba      	ST   -Y,R27
0007c7 93aa      	ST   -Y,R26
0007c8 91e9          ld   r30,y+
0007c9 91f9          ld   r31,y+
0007ca 91a9          ld   r26,y+
0007cb 91b9          ld   r27,y+
0007cc 01cd          movw r24,r26
                 strcpy0:
0007cd 9161          ld   r22,z+
0007ce 936d          st   x+,r22
0007cf 2366          tst  r22
0007d0 f7e1          brne strcpy0
0007d1 01fc          movw r30,r24
0007d2 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0007d3 93ba      	ST   -Y,R27
0007d4 93aa      	ST   -Y,R26
0007d5 91a9          ld   r26,y+
0007d6 91b9          ld   r27,y+
0007d7 27ee          clr  r30
0007d8 27ff          clr  r31
                 strlen0:
0007d9 916d          ld   r22,x+
0007da 2366          tst  r22
0007db f011          breq strlen1
0007dc 9631          adiw r30,1
0007dd cffb          rjmp strlen0
                 strlen1:
0007de 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0007df 93ba      	ST   -Y,R27
0007e0 93aa      	ST   -Y,R26
0007e1 27aa          clr  r26
0007e2 27bb          clr  r27
0007e3 91e9          ld   r30,y+
0007e4 91f9          ld   r31,y+
                 strlenf0:
0007e5 9005      	lpm  r0,z+
0007e6 2000          tst  r0
0007e7 f011          breq strlenf1
0007e8 9611          adiw r26,1
0007e9 cffb          rjmp strlenf0
                 strlenf1:
0007ea 01fd          movw r30,r26
0007eb 9508          ret
                 ; .FEND
                 _strstr:
                 ; .FSTART _strstr
0007ec 93ba      	ST   -Y,R27
0007ed 93aa      	ST   -Y,R26
0007ee 81aa          ldd  r26,y+2
0007ef 81bb          ldd  r27,y+3
0007f0 01cd          movw r24,r26
                 strstr0:
0007f1 81e8          ld   r30,y
0007f2 81f9          ldd  r31,y+1
                 strstr1:
0007f3 9171          ld   r23,z+
0007f4 2377          tst  r23
0007f5 f411          brne strstr2
0007f6 01fc          movw r30,r24
0007f7 c009          rjmp strstr3
                 strstr2:
0007f8 916d          ld   r22,x+
0007f9 1767          cp   r22,r23
0007fa f3c1          breq strstr1
0007fb 9601          adiw r24,1
0007fc 01dc          movw r26,r24
0007fd 2366          tst  r22
0007fe f791          brne strstr0
0007ff 27ee          clr  r30
000800 27ff          clr  r31
                 strstr3:
000801 940c 0934 	JMP  _0x212000B
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
000803 93ba      	ST   -Y,R27
000804 93aa      	ST   -Y,R26
000805 91a9          ld   r26,y+
000806 91b9          ld   r27,y+
000807 91e9          ld   r30,y+
000808 91f9          ld   r31,y+
000809 9630          adiw r30,0
00080a f42a          brpl __itoa0
00080b 95e0          com  r30
00080c 95f0          com  r31
00080d 9631          adiw r30,1
00080e e26d          ldi  r22,'-'
00080f 936d          st   x+,r22
                 __itoa0:
000810 94e8          clt
000811 e180          ldi  r24,low(10000)
000812 e297          ldi  r25,high(10000)
000813 d00d          rcall __itoa1
000814 ee88          ldi  r24,low(1000)
000815 e093          ldi  r25,high(1000)
000816 d00a          rcall __itoa1
000817 e684          ldi  r24,100
000818 2799          clr  r25
000819 d007          rcall __itoa1
00081a e08a          ldi  r24,10
00081b d005          rcall __itoa1
00081c 2f6e          mov  r22,r30
00081d d010          rcall __itoa5
00081e 2766          clr  r22
00081f 936c          st   x,r22
000820 9508          ret
                 
                 __itoa1:
000821 2766          clr	 r22
                 __itoa2:
000822 17e8          cp   r30,r24
000823 07f9          cpc  r31,r25
000824 f020          brlo __itoa3
000825 9563          inc  r22
000826 1be8          sub  r30,r24
000827 0bf9          sbc  r31,r25
000828 f7c9          brne __itoa2
                 __itoa3:
000829 2366          tst  r22
00082a f411          brne __itoa4
00082b f016          brts __itoa5
00082c 9508          ret
                 __itoa4:
00082d 9468          set
                 __itoa5:
00082e 5d60          subi r22,-0x30
00082f 936d          st   x+,r22
000830 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
000831 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
000832 93aa      	ST   -Y,R26
000833 931a      	ST   -Y,R17
000834 98ad      	CBI  0x15,5
000835 e018      	LDI  R17,LOW(8)
                 _0x2040004:
000836 dffa      	RCALL _pcd8544_delay_G102
000837 81e9      	LDD  R30,Y+1
000838 78e0      	ANDI R30,LOW(0x80)
000839 f011      	BREQ _0x2040006
00083a 9aaf      	SBI  0x15,7
00083b c001      	RJMP _0x2040007
                 _0x2040006:
00083c 98af      	CBI  0x15,7
                 _0x2040007:
00083d 81e9      	LDD  R30,Y+1
00083e 0fee      	LSL  R30
00083f 83e9      	STD  Y+1,R30
000840 dff0      	RCALL _pcd8544_delay_G102
000841 9adf      	SBI  0x1B,7
000842 dfee      	RCALL _pcd8544_delay_G102
000843 98df      	CBI  0x1B,7
000844 5011      	SUBI R17,LOW(1)
000845 f781      	BRNE _0x2040004
000846 9aad      	SBI  0x15,5
000847 8118      	LDD  R17,Y+0
000848 c03a      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000849 93aa      	ST   -Y,R26
00084a 98ae      	CBI  0x15,6
00084b 81a8      	LD   R26,Y
00084c dfe5      	RCALL _pcd8544_wrbus_G102
00084d c0c8      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
00084e 93aa      	ST   -Y,R26
00084f 9aae      	SBI  0x15,6
000850 81a8      	LD   R26,Y
000851 dfe0      	RCALL _pcd8544_wrbus_G102
000852 c0c3      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
000853 93aa      	ST   -Y,R26
000854 931a      	ST   -Y,R17
000855 81e9      	LDD  R30,Y+1
000856 95e6      	LSR  R30
000857 95e6      	LSR  R30
000858 95e6      	LSR  R30
000859 2f1e      	MOV  R17,R30
00085a e5e4      	LDI  R30,LOW(84)
00085b 9fe1      	MUL  R30,R17
00085c 01f0      	MOVW R30,R0
00085d 01df      	MOVW R26,R30
00085e 81ea      	LDD  R30,Y+2
00085f e0f0      	LDI  R31,0
000860 0fea      	ADD  R30,R26
000861 1ffb      	ADC  R31,R27
000862 93e0 094a 	STS  _gfx_addr_G102,R30
000864 93f0 094b 	STS  _gfx_addr_G102+1,R31
000866 2fe1      	MOV  R30,R17
000867 8118      	LDD  R17,Y+0
000868 9623      	ADIW R28,3
000869 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00086a 93aa      	ST   -Y,R26
00086b 81e9      	LDD  R30,Y+1
00086c 68e0      	ORI  R30,0x80
00086d 2fae      	MOV  R26,R30
00086e dfda      	RCALL _pcd8544_wrcmd
00086f 81e9      	LDD  R30,Y+1
000870 93ea      	ST   -Y,R30
000871 81a9      	LDD  R26,Y+1
000872 dfe0      	RCALL _pcd8544_setaddr_G102
000873 64e0      	ORI  R30,0x40
000874 2fae      	MOV  R26,R30
000875 dfd3      	RCALL _pcd8544_wrcmd
000876 c00c      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000877 93aa      	ST   -Y,R26
000878 81e9      	LDD  R30,Y+1
000879 93ea      	ST   -Y,R30
00087a 81a9      	LDD  R26,Y+1
00087b dfee      	RCALL _pcd8544_gotoxy
00087c 91e0 094a 	LDS  R30,_gfx_addr_G102
00087e 91f0 094b 	LDS  R31,_gfx_addr_G102+1
000880 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
000881 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000882 81e0      	LD   R30,Z
                 _0x212000D:
000883 9622      	ADIW R28,2
000884 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000885 93aa      	ST   -Y,R26
000886 940e 1072 	CALL SUBOPT_0x19
000888 9731      	SBIW R30,1
000889 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
00088a 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
00088b 81a8      	LD   R26,Y
00088c 83a0      	STD  Z+0,R26
00088d dfc0      	RCALL _pcd8544_wrdata_G102
00088e c087      	RJMP _0x212000C
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
00088f 93ba      	ST   -Y,R27
000890 93aa      	ST   -Y,R26
000891 940e 1188 	CALL __SAVELOCR4
000893 9aa5      	SBI  0x14,5
000894 9aad      	SBI  0x15,5
000895 9ad7      	SBI  0x1A,7
000896 98df      	CBI  0x1B,7
000897 9aa7      	SBI  0x14,7
000898 9aa6      	SBI  0x14,6
000899 9aa4      	SBI  0x14,4
00089a 98ac      	CBI  0x15,4
00089b e0aa      	LDI  R26,LOW(10)
00089c e0b0      	LDI  R27,0
00089d 940e 111f 	CALL _delay_ms
00089f 9aac      	SBI  0x15,4
0008a0 81ec      	LDD  R30,Y+4
0008a1 81fd      	LDD  R31,Y+4+1
0008a2 9730      	SBIW R30,0
0008a3 f121      	BREQ _0x2040008
0008a4 81e6      	LDD  R30,Z+6
0008a5 70e3      	ANDI R30,LOW(0x3)
0008a6 2f1e      	MOV  R17,R30
0008a7 81ec      	LDD  R30,Y+4
0008a8 81fd      	LDD  R31,Y+4+1
0008a9 81e6      	LDD  R30,Z+6
0008aa 95e6      	LSR  R30
0008ab 95e6      	LSR  R30
0008ac 70e7      	ANDI R30,LOW(0x7)
0008ad 2f0e      	MOV  R16,R30
0008ae 81ec      	LDD  R30,Y+4
0008af 81fd      	LDD  R31,Y+4+1
0008b0 81e7      	LDD  R30,Z+7
0008b1 77ef      	ANDI R30,0x7F
0008b2 2f3e      	MOV  R19,R30
0008b3 81ac      	LDD  R26,Y+4
0008b4 81bd      	LDD  R27,Y+4+1
0008b5 940e 114e 	CALL __GETW1P
                +
0008b7 93e0 0670+STS _glcd_state + ( 4 ) , R30
0008b9 93f0 0671+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0008bb 9612      	ADIW R26,2
0008bc 940e 114e 	CALL __GETW1P
                +
0008be 93e0 0685+STS _glcd_state + ( 25 ) , R30
0008c0 93f0 0686+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0008c2 81ac      	LDD  R26,Y+4
0008c3 81bd      	LDD  R27,Y+4+1
0008c4 9614      	ADIW R26,4
0008c5 940e 114e 	CALL __GETW1P
0008c7 c00d      	RJMP _0x20400A0
                 _0x2040008:
0008c8 e010      	LDI  R17,LOW(0)
0008c9 e003      	LDI  R16,LOW(3)
0008ca e332      	LDI  R19,LOW(50)
0008cb e0e0      	LDI  R30,LOW(0)
0008cc e0f0      	LDI  R31,HIGH(0)
                +
0008cd 93e0 0670+STS _glcd_state + ( 4 ) , R30
0008cf 93f0 0671+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0008d1 93e0 0685+STS _glcd_state + ( 25 ) , R30
0008d3 93f0 0686+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400A0:
                +
0008d5 93e0 0687+STS _glcd_state + ( 27 ) , R30
0008d7 93f0 0688+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0008d9 e2a1      	LDI  R26,LOW(33)
0008da df6e      	RCALL _pcd8544_wrcmd
0008db 2fe1      	MOV  R30,R17
0008dc 60e4      	ORI  R30,4
0008dd 2fae      	MOV  R26,R30
0008de df6a      	RCALL _pcd8544_wrcmd
0008df 2fe0      	MOV  R30,R16
0008e0 61e0      	ORI  R30,0x10
0008e1 2fae      	MOV  R26,R30
0008e2 df66      	RCALL _pcd8544_wrcmd
0008e3 2fe3      	MOV  R30,R19
0008e4 68e0      	ORI  R30,0x80
0008e5 2fae      	MOV  R26,R30
0008e6 df62      	RCALL _pcd8544_wrcmd
0008e7 e2a0      	LDI  R26,LOW(32)
0008e8 df60      	RCALL _pcd8544_wrcmd
0008e9 e0a1      	LDI  R26,LOW(1)
0008ea d022      	RCALL _glcd_display
0008eb e0e1      	LDI  R30,LOW(1)
0008ec 93e0 066c 	STS  _glcd_state,R30
0008ee e0e0      	LDI  R30,LOW(0)
                +
0008ef 93e0 066d+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0008f1 e0e1      	LDI  R30,LOW(1)
                +
0008f2 93e0 0672+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0008f4 93e0 0673+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0008f6 93e0 0674+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0008f8 efef      	LDI  R30,LOW(255)
                +
0008f9 93e0 0675+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0008fb e0e1      	LDI  R30,LOW(1)
                +
0008fc 93e0 067c+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0008fe e7ed     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0008ff e0f6     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000900 93fa      	ST   -Y,R31
000901 93ea      	ST   -Y,R30
000902 efef      	LDI  R30,LOW(255)
000903 93ea      	ST   -Y,R30
000904 e0a8      	LDI  R26,LOW(8)
000905 e0b0      	LDI  R27,0
000906 940e 07a5 	CALL _memset
000908 d00f      	RCALL _glcd_clear
000909 e0e1      	LDI  R30,LOW(1)
00090a 940e 118f 	CALL __LOADLOCR4
00090c c082      	RJMP _0x212000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00090d 93aa      	ST   -Y,R26
00090e 81e8      	LD   R30,Y
00090f 30e0      	CPI  R30,0
000910 f011      	BREQ _0x204000A
000911 e0ec      	LDI  R30,LOW(12)
000912 c001      	RJMP _0x204000B
                 _0x204000A:
000913 e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
000914 2fae      	MOV  R26,R30
000915 df33      	RCALL _pcd8544_wrcmd
                 _0x212000C:
000916 9621      	ADIW R28,1
000917 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000918 940e 1188 	CALL __SAVELOCR4
00091a e030      	LDI  R19,0
                +
00091b 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00091d 30e0      	CPI  R30,0
00091e f009      	BREQ _0x204000D
00091f ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
000920 e0e0      	LDI  R30,LOW(0)
000921 93ea      	ST   -Y,R30
000922 e0a0      	LDI  R26,LOW(0)
000923 df46      	RCALL _pcd8544_gotoxy
                +
000924 ef08     +LDI R16 , LOW ( 504 )
000925 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
000926 01f8      	MOVW R30,R16
                +
000927 5001     +SUBI R16 , LOW ( 1 )
000928 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000929 9730      	SBIW R30,0
00092a f019      	BREQ _0x2040010
00092b 2fa3      	MOV  R26,R19
00092c df58      	RCALL _pcd8544_wrbyte
00092d cff8      	RJMP _0x204000E
                 _0x2040010:
00092e e0e0      	LDI  R30,LOW(0)
00092f 93ea      	ST   -Y,R30
000930 e0a0      	LDI  R26,LOW(0)
000931 d384      	RCALL _glcd_moveto
000932 940e 118f 	CALL __LOADLOCR4
                 _0x212000B:
000934 9624      	ADIW R28,4
000935 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000936 93aa      	ST   -Y,R26
000937 931a      	ST   -Y,R17
000938 930a      	ST   -Y,R16
000939 81ac      	LDD  R26,Y+4
00093a 35a4      	CPI  R26,LOW(0x54)
00093b f418      	BRSH _0x2040012
00093c 81ab      	LDD  R26,Y+3
00093d 33a0      	CPI  R26,LOW(0x30)
00093e f010      	BRLO _0x2040011
                 _0x2040012:
00093f 940c 0dee 	JMP  _0x2120004
                 _0x2040011:
000941 81ec      	LDD  R30,Y+4
000942 93ea      	ST   -Y,R30
000943 81ac      	LDD  R26,Y+4
000944 df32      	RCALL _pcd8544_rdbyte
000945 2f1e      	MOV  R17,R30
000946 81eb      	LDD  R30,Y+3
000947 70e7      	ANDI R30,LOW(0x7)
000948 e0a1      	LDI  R26,LOW(1)
000949 940e 1131 	CALL __LSLB12
00094b 2f0e      	MOV  R16,R30
00094c 81ea      	LDD  R30,Y+2
00094d 30e0      	CPI  R30,0
00094e f011      	BREQ _0x2040014
00094f 2b10      	OR   R17,R16
000950 c003      	RJMP _0x2040015
                 _0x2040014:
000951 2fe0      	MOV  R30,R16
000952 95e0      	COM  R30
000953 231e      	AND  R17,R30
                 _0x2040015:
000954 2fa1      	MOV  R26,R17
000955 df2f      	RCALL _pcd8544_wrbyte
000956 940c 0dee 	JMP  _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
000958 93aa      	ST   -Y,R26
000959 931a      	ST   -Y,R17
00095a 81ed      	LDD  R30,Y+5
00095b 93ea      	ST   -Y,R30
00095c 81ad      	LDD  R26,Y+5
00095d df19      	RCALL _pcd8544_rdbyte
00095e 2f1e      	MOV  R17,R30
00095f 81e9      	LDD  R30,Y+1
000960 30e7      	CPI  R30,LOW(0x7)
000961 f011      	BREQ _0x2040020
000962 30e8      	CPI  R30,LOW(0x8)
000963 f439      	BRNE _0x2040021
                 _0x2040020:
000964 81eb      	LDD  R30,Y+3
000965 93ea      	ST   -Y,R30
000966 81aa      	LDD  R26,Y+2
000967 940e 0f65 	CALL _glcd_mappixcolor1bit
000969 83eb      	STD  Y+3,R30
00096a c008      	RJMP _0x2040022
                 _0x2040021:
00096b 30e3      	CPI  R30,LOW(0x3)
00096c f421      	BRNE _0x2040024
00096d 81eb      	LDD  R30,Y+3
00096e 95e0      	COM  R30
00096f 83eb      	STD  Y+3,R30
000970 c002      	RJMP _0x2040025
                 _0x2040024:
000971 30e0      	CPI  R30,0
000972 f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
000973 81ea      	LDD  R30,Y+2
000974 95e0      	COM  R30
000975 231e      	AND  R17,R30
000976 c002      	RJMP _0x2040027
                 _0x2040026:
000977 30e2      	CPI  R30,LOW(0x2)
000978 f429      	BRNE _0x2040028
                 _0x2040027:
000979 81ea      	LDD  R30,Y+2
00097a 81ab      	LDD  R26,Y+3
00097b 23ea      	AND  R30,R26
00097c 2b1e      	OR   R17,R30
00097d c00e      	RJMP _0x204001E
                 _0x2040028:
00097e 30e1      	CPI  R30,LOW(0x1)
00097f f429      	BRNE _0x2040029
000980 81ea      	LDD  R30,Y+2
000981 81ab      	LDD  R26,Y+3
000982 23ea      	AND  R30,R26
000983 271e      	EOR  R17,R30
000984 c007      	RJMP _0x204001E
                 _0x2040029:
000985 30e4      	CPI  R30,LOW(0x4)
000986 f429      	BRNE _0x204001E
000987 81ea      	LDD  R30,Y+2
000988 95e0      	COM  R30
000989 81ab      	LDD  R26,Y+3
00098a 2bea      	OR   R30,R26
00098b 231e      	AND  R17,R30
                 _0x204001E:
00098c 2fa1      	MOV  R26,R17
00098d def7      	RCALL _pcd8544_wrbyte
00098e 8118      	LDD  R17,Y+0
                 _0x212000A:
00098f 9626      	ADIW R28,6
000990 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000991 93aa      	ST   -Y,R26
000992 9723      	SBIW R28,3
000993 940e 1186 	CALL __SAVELOCR6
000995 89a8      	LDD  R26,Y+16
000996 35a4      	CPI  R26,LOW(0x54)
000997 f448      	BRSH _0x204002C
000998 85af      	LDD  R26,Y+15
000999 33a0      	CPI  R26,LOW(0x30)
00099a f430      	BRSH _0x204002C
00099b 85ae      	LDD  R26,Y+14
00099c 30a0      	CPI  R26,LOW(0x0)
00099d f019      	BREQ _0x204002C
00099e 85ad      	LDD  R26,Y+13
00099f 30a0      	CPI  R26,LOW(0x0)
0009a0 f409      	BRNE _0x204002B
                 _0x204002C:
0009a1 c1d5      	RJMP _0x2120009
                 _0x204002B:
0009a2 85ee      	LDD  R30,Y+14
0009a3 87e8      	STD  Y+8,R30
0009a4 89a8      	LDD  R26,Y+16
0009a5 27bb      	CLR  R27
0009a6 85ee      	LDD  R30,Y+14
0009a7 e0f0      	LDI  R31,0
0009a8 0fae      	ADD  R26,R30
0009a9 1fbf      	ADC  R27,R31
0009aa 35a5      	CPI  R26,LOW(0x55)
0009ab e0e0      	LDI  R30,HIGH(0x55)
0009ac 07be      	CPC  R27,R30
0009ad f020      	BRLO _0x204002E
0009ae 89a8      	LDD  R26,Y+16
0009af e5e4      	LDI  R30,LOW(84)
0009b0 1bea      	SUB  R30,R26
0009b1 87ee      	STD  Y+14,R30
                 _0x204002E:
0009b2 852d      	LDD  R18,Y+13
0009b3 85af      	LDD  R26,Y+15
0009b4 27bb      	CLR  R27
0009b5 85ed      	LDD  R30,Y+13
0009b6 e0f0      	LDI  R31,0
0009b7 0fae      	ADD  R26,R30
0009b8 1fbf      	ADC  R27,R31
0009b9 97d1      	SBIW R26,49
0009ba f020      	BRLO _0x204002F
0009bb 85af      	LDD  R26,Y+15
0009bc e3e0      	LDI  R30,LOW(48)
0009bd 1bea      	SUB  R30,R26
0009be 87ed      	STD  Y+13,R30
                 _0x204002F:
0009bf 85a9      	LDD  R26,Y+9
0009c0 30a6      	CPI  R26,LOW(0x6)
0009c1 f009      	BREQ PC+2
0009c2 c05b      	RJMP _0x2040030
0009c3 85ec      	LDD  R30,Y+12
0009c4 30e1      	CPI  R30,LOW(0x1)
0009c5 f409      	BRNE _0x2040034
0009c6 c1b0      	RJMP _0x2120009
                 _0x2040034:
0009c7 30e3      	CPI  R30,LOW(0x3)
0009c8 f439      	BRNE _0x2040037
                +
0009c9 91e0 0687+LDS R30 , _glcd_state + ( 27 )
0009cb 91f0 0688+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0009cd 9730      	SBIW R30,0
0009ce f409      	BRNE _0x2040036
0009cf c1a7      	RJMP _0x2120009
                 _0x2040036:
                 _0x2040037:
0009d0 8508      	LDD  R16,Y+8
0009d1 85ed      	LDD  R30,Y+13
0009d2 95e6      	LSR  R30
0009d3 95e6      	LSR  R30
0009d4 95e6      	LSR  R30
0009d5 2f3e      	MOV  R19,R30
0009d6 2fe2      	MOV  R30,R18
0009d7 70e7      	ANDI R30,LOW(0x7)
0009d8 f419      	BRNE _0x2040039
0009d9 85ad      	LDD  R26,Y+13
0009da 172a      	CP   R18,R26
0009db f0e9      	BREQ _0x2040038
                 _0x2040039:
0009dc 2fa0      	MOV  R26,R16
0009dd 27bb      	CLR  R27
0009de 2fe3      	MOV  R30,R19
0009df e0f0      	LDI  R31,0
0009e0 940e 1146 	CALL __MULW12U
0009e2 85aa      	LDD  R26,Y+10
0009e3 85bb      	LDD  R27,Y+10+1
0009e4 940e 1075 	CALL SUBOPT_0x1A
0009e6 9526      	LSR  R18
0009e7 9526      	LSR  R18
0009e8 9526      	LSR  R18
0009e9 2f53      	MOV  R21,R19
                 _0x204003B:
0009ea 935f      	PUSH R21
0009eb 5f5f      	SUBI R21,-1
0009ec 2fe2      	MOV  R30,R18
0009ed 91af      	POP  R26
0009ee 17ea      	CP   R30,R26
0009ef f048      	BRLO _0x204003D
0009f0 2f10      	MOV  R17,R16
                 _0x204003E:
0009f1 2fe1      	MOV  R30,R17
0009f2 5011      	SUBI R17,1
0009f3 30e0      	CPI  R30,0
0009f4 f019      	BREQ _0x2040040
0009f5 940e 107a 	CALL SUBOPT_0x1B
0009f7 cff9      	RJMP _0x204003E
                 _0x2040040:
0009f8 cff1      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0009f9 85ae      	LDD  R26,Y+14
0009fa 170a      	CP   R16,R26
0009fb f111      	BREQ _0x2040041
0009fc 85ee      	LDD  R30,Y+14
0009fd 85aa      	LDD  R26,Y+10
0009fe 85bb      	LDD  R27,Y+10+1
0009ff e0f0      	LDI  R31,0
000a00 940e 1075 	CALL SUBOPT_0x1A
000a02 85ed      	LDD  R30,Y+13
000a03 70e7      	ANDI R30,LOW(0x7)
000a04 f009      	BREQ _0x2040042
000a05 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
000a06 e020      	LDI  R18,LOW(0)
                 _0x2040043:
000a07 932f      	PUSH R18
000a08 5f2f      	SUBI R18,-1
000a09 2fe3      	MOV  R30,R19
000a0a 91af      	POP  R26
000a0b 17ae      	CP   R26,R30
000a0c f488      	BRSH _0x2040045
000a0d 851e      	LDD  R17,Y+14
                 _0x2040046:
000a0e 931f      	PUSH R17
000a0f 5f1f      	SUBI R17,-1
000a10 2fe0      	MOV  R30,R16
000a11 91af      	POP  R26
000a12 17ae      	CP   R26,R30
000a13 f418      	BRSH _0x2040048
000a14 940e 107a 	CALL SUBOPT_0x1B
000a16 cff7      	RJMP _0x2040046
                 _0x2040048:
000a17 85ee      	LDD  R30,Y+14
000a18 81ae      	LDD  R26,Y+6
000a19 81bf      	LDD  R27,Y+6+1
000a1a e0f0      	LDI  R31,0
000a1b 940e 1075 	CALL SUBOPT_0x1A
000a1d cfe9      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
000a1e 85ef      	LDD  R30,Y+15
000a1f 70e7      	ANDI R30,LOW(0x7)
000a20 2f3e      	MOV  R19,R30
                 _0x2040049:
000a21 85ed      	LDD  R30,Y+13
000a22 30e0      	CPI  R30,0
000a23 f409      	BRNE PC+2
000a24 c152      	RJMP _0x204004B
000a25 85ea      	LDD  R30,Y+10
000a26 85fb      	LDD  R31,Y+10+1
000a27 83ee      	STD  Y+6,R30
000a28 83ff      	STD  Y+6+1,R31
000a29 e010      	LDI  R17,LOW(0)
000a2a 8908      	LDD  R16,Y+16
000a2b 3030      	CPI  R19,0
000a2c f009      	BREQ PC+2
000a2d c066      	RJMP _0x204004C
000a2e 85ad      	LDD  R26,Y+13
000a2f 30a8      	CPI  R26,LOW(0x8)
000a30 f408      	BRSH PC+2
000a31 c05d      	RJMP _0x204004D
000a32 85e9      	LDD  R30,Y+9
000a33 30e0      	CPI  R30,0
000a34 f011      	BREQ _0x2040052
000a35 30e3      	CPI  R30,LOW(0x3)
000a36 f409      	BRNE _0x2040053
                 _0x2040052:
000a37 c002      	RJMP _0x2040054
                 _0x2040053:
000a38 30e7      	CPI  R30,LOW(0x7)
000a39 f409      	BRNE _0x2040055
                 _0x2040054:
000a3a c002      	RJMP _0x2040056
                 _0x2040055:
000a3b 30e8      	CPI  R30,LOW(0x8)
000a3c f409      	BRNE _0x2040057
                 _0x2040056:
000a3d c002      	RJMP _0x2040058
                 _0x2040057:
000a3e 30e9      	CPI  R30,LOW(0x9)
000a3f f409      	BRNE _0x2040059
                 _0x2040058:
000a40 c002      	RJMP _0x204005A
                 _0x2040059:
000a41 30ea      	CPI  R30,LOW(0xA)
000a42 f421      	BRNE _0x204005B
                 _0x204005A:
000a43 930a      	ST   -Y,R16
000a44 89a8      	LDD  R26,Y+16
000a45 de24      	RCALL _pcd8544_gotoxy
000a46 c004      	RJMP _0x2040050
                 _0x204005B:
000a47 30e6      	CPI  R30,LOW(0x6)
000a48 f411      	BRNE _0x2040050
000a49 940e 1087 	CALL SUBOPT_0x1C
                 _0x2040050:
                 _0x204005D:
000a4b 931f      	PUSH R17
000a4c 5f1f      	SUBI R17,-1
000a4d 85ee      	LDD  R30,Y+14
000a4e 91af      	POP  R26
000a4f 17ae      	CP   R26,R30
000a50 f5b8      	BRSH _0x204005F
000a51 85a9      	LDD  R26,Y+9
000a52 30a6      	CPI  R26,LOW(0x6)
000a53 f469      	BRNE _0x2040060
000a54 940e 108b 	CALL SUBOPT_0x1D
000a56 93fa      	ST   -Y,R31
000a57 93ea      	ST   -Y,R30
000a58 940e 1072 	CALL SUBOPT_0x19
000a5a 9731      	SBIW R30,1
000a5b 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
000a5c 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000a5d 81a0      	LD   R26,Z
000a5e 940e 0fac 	CALL _glcd_writemem
000a60 c026      	RJMP _0x2040061
                 _0x2040060:
000a61 85e9      	LDD  R30,Y+9
000a62 30e9      	CPI  R30,LOW(0x9)
000a63 f411      	BRNE _0x2040065
000a64 e050      	LDI  R21,LOW(0)
000a65 c00e      	RJMP _0x2040066
                 _0x2040065:
000a66 30ea      	CPI  R30,LOW(0xA)
000a67 f411      	BRNE _0x2040064
000a68 ef5f      	LDI  R21,LOW(255)
000a69 c00a      	RJMP _0x2040066
                 _0x2040064:
000a6a 940e 108b 	CALL SUBOPT_0x1D
000a6c 940e 1094 	CALL SUBOPT_0x1E
000a6e 2f5e      	MOV  R21,R30
000a6f 85e9      	LDD  R30,Y+9
000a70 30e7      	CPI  R30,LOW(0x7)
000a71 f011      	BREQ _0x204006D
000a72 30e8      	CPI  R30,LOW(0x8)
000a73 f421      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
000a74 940e 109a 	CALL SUBOPT_0x1F
000a76 2f5e      	MOV  R21,R30
000a77 c006      	RJMP _0x204006F
                 _0x204006E:
000a78 30e3      	CPI  R30,LOW(0x3)
000a79 f411      	BRNE _0x2040071
000a7a 9550      	COM  R21
000a7b c002      	RJMP _0x2040072
                 _0x2040071:
000a7c 30e0      	CPI  R30,0
000a7d f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
000a7e 2fa5      	MOV  R26,R21
000a7f ddce      	RCALL _pcd8544_wrdata_G102
000a80 c006      	RJMP _0x204006B
                 _0x2040074:
000a81 940e 109e 	CALL SUBOPT_0x20
000a83 efef      	LDI  R30,LOW(255)
000a84 93ea      	ST   -Y,R30
000a85 85ad      	LDD  R26,Y+13
000a86 ded1      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
000a87 cfc3      	RJMP _0x204005D
                 _0x204005F:
000a88 85ef      	LDD  R30,Y+15
000a89 5fe8      	SUBI R30,-LOW(8)
000a8a 87ef      	STD  Y+15,R30
000a8b 85ed      	LDD  R30,Y+13
000a8c 50e8      	SUBI R30,LOW(8)
000a8d 87ed      	STD  Y+13,R30
000a8e c0df      	RJMP _0x2040075
                 _0x204004D:
000a8f 855d      	LDD  R21,Y+13
000a90 e020      	LDI  R18,LOW(0)
000a91 e0e0      	LDI  R30,LOW(0)
000a92 87ed      	STD  Y+13,R30
000a93 c081      	RJMP _0x2040076
                 _0x204004C:
000a94 2fe3      	MOV  R30,R19
000a95 85ad      	LDD  R26,Y+13
000a96 0fae      	ADD  R26,R30
000a97 30a9      	CPI  R26,LOW(0x9)
000a98 f420      	BRSH _0x2040077
000a99 852d      	LDD  R18,Y+13
000a9a e0e0      	LDI  R30,LOW(0)
000a9b 87ed      	STD  Y+13,R30
000a9c c003      	RJMP _0x2040078
                 _0x2040077:
000a9d e0e8      	LDI  R30,LOW(8)
000a9e 1be3      	SUB  R30,R19
000a9f 2f2e      	MOV  R18,R30
                 _0x2040078:
000aa0 933a      	ST   -Y,R19
000aa1 2fa2      	MOV  R26,R18
000aa2 940e 0f5a 	CALL _glcd_getmask
000aa4 2f4e      	MOV  R20,R30
000aa5 85e9      	LDD  R30,Y+9
000aa6 30e6      	CPI  R30,LOW(0x6)
000aa7 f529      	BRNE _0x204007C
000aa8 940e 1087 	CALL SUBOPT_0x1C
                 _0x204007D:
000aaa 931f      	PUSH R17
000aab 5f1f      	SUBI R17,-1
000aac 85ee      	LDD  R30,Y+14
000aad 91af      	POP  R26
000aae 17ae      	CP   R26,R30
000aaf f4e0      	BRSH _0x204007F
000ab0 940e 1072 	CALL SUBOPT_0x19
000ab2 9731      	SBIW R30,1
000ab3 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
000ab4 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000ab5 81e0      	LD   R30,Z
000ab6 23e4      	AND  R30,R20
000ab7 2fae      	MOV  R26,R30
000ab8 2fe3      	MOV  R30,R19
000ab9 940e 1139 	CALL __LSRB12
000abb 940e 10a4 	CALL SUBOPT_0x21
000abd 2fe3      	MOV  R30,R19
000abe 2fa4      	MOV  R26,R20
000abf 940e 1139 	CALL __LSRB12
000ac1 95e0      	COM  R30
000ac2 21e1      	AND  R30,R1
000ac3 2b5e      	OR   R21,R30
000ac4 940e 108b 	CALL SUBOPT_0x1D
000ac6 93fa      	ST   -Y,R31
000ac7 93ea      	ST   -Y,R30
000ac8 2fa5      	MOV  R26,R21
000ac9 940e 0fac 	CALL _glcd_writemem
000acb cfde      	RJMP _0x204007D
                 _0x204007F:
000acc c02c      	RJMP _0x204007B
                 _0x204007C:
000acd 30e9      	CPI  R30,LOW(0x9)
000ace f411      	BRNE _0x2040080
000acf e050      	LDI  R21,LOW(0)
000ad0 c003      	RJMP _0x2040081
                 _0x2040080:
000ad1 30ea      	CPI  R30,LOW(0xA)
000ad2 f4a9      	BRNE _0x2040087
000ad3 ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
000ad4 940e 109a 	CALL SUBOPT_0x1F
000ad6 2fae      	MOV  R26,R30
000ad7 2fe3      	MOV  R30,R19
000ad8 940e 1131 	CALL __LSLB12
000ada 2f5e      	MOV  R21,R30
                 _0x2040084:
000adb 931f      	PUSH R17
000adc 5f1f      	SUBI R17,-1
000add 85ee      	LDD  R30,Y+14
000ade 91af      	POP  R26
000adf 17ae      	CP   R26,R30
000ae0 f430      	BRSH _0x2040086
000ae1 940e 109e 	CALL SUBOPT_0x20
000ae3 934a      	ST   -Y,R20
000ae4 e0a0      	LDI  R26,LOW(0)
000ae5 de72      	RCALL _pcd8544_wrmasked_G102
000ae6 cff4      	RJMP _0x2040084
                 _0x2040086:
000ae7 c011      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
000ae8 931f      	PUSH R17
000ae9 5f1f      	SUBI R17,-1
000aea 85ee      	LDD  R30,Y+14
000aeb 91af      	POP  R26
000aec 17ae      	CP   R26,R30
000aed f458      	BRSH _0x204008A
000aee 940e 10af 	CALL SUBOPT_0x22
000af0 2fae      	MOV  R26,R30
000af1 2fe3      	MOV  R30,R19
000af2 940e 1131 	CALL __LSLB12
000af4 93ea      	ST   -Y,R30
000af5 934a      	ST   -Y,R20
000af6 85ad      	LDD  R26,Y+13
000af7 de60      	RCALL _pcd8544_wrmasked_G102
000af8 cfef      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
000af9 85ed      	LDD  R30,Y+13
000afa 30e0      	CPI  R30,0
000afb f409      	BRNE _0x204008B
000afc c07a      	RJMP _0x204004B
                 _0x204008B:
000afd 85ad      	LDD  R26,Y+13
000afe 30a8      	CPI  R26,LOW(0x8)
000aff f428      	BRSH _0x204008C
000b00 85ed      	LDD  R30,Y+13
000b01 1be2      	SUB  R30,R18
000b02 2f5e      	MOV  R21,R30
000b03 e0e0      	LDI  R30,LOW(0)
000b04 c003      	RJMP _0x20400A1
                 _0x204008C:
000b05 2f53      	MOV  R21,R19
000b06 85ed      	LDD  R30,Y+13
000b07 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
000b08 87ed      	STD  Y+13,R30
000b09 e010      	LDI  R17,LOW(0)
000b0a 85ef      	LDD  R30,Y+15
000b0b 5fe8      	SUBI R30,-LOW(8)
000b0c 87ef      	STD  Y+15,R30
000b0d e0e8      	LDI  R30,LOW(8)
000b0e 1be3      	SUB  R30,R19
000b0f 2f2e      	MOV  R18,R30
000b10 8908      	LDD  R16,Y+16
000b11 85ea      	LDD  R30,Y+10
000b12 85fb      	LDD  R31,Y+10+1
000b13 83ee      	STD  Y+6,R30
000b14 83ff      	STD  Y+6+1,R31
                 _0x2040076:
000b15 2fe5      	MOV  R30,R21
000b16 e0f0      	LDI  R31,0
000b17 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000b18 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000b19 9144      	LPM  R20,Z
000b1a 85e9      	LDD  R30,Y+9
000b1b 30e6      	CPI  R30,LOW(0x6)
000b1c f529      	BRNE _0x2040091
000b1d 940e 1087 	CALL SUBOPT_0x1C
                 _0x2040092:
000b1f 931f      	PUSH R17
000b20 5f1f      	SUBI R17,-1
000b21 85ee      	LDD  R30,Y+14
000b22 91af      	POP  R26
000b23 17ae      	CP   R26,R30
000b24 f4e0      	BRSH _0x2040094
000b25 940e 1072 	CALL SUBOPT_0x19
000b27 9731      	SBIW R30,1
000b28 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
000b29 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000b2a 81e0      	LD   R30,Z
000b2b 23e4      	AND  R30,R20
000b2c 2fae      	MOV  R26,R30
000b2d 2fe2      	MOV  R30,R18
000b2e 940e 1131 	CALL __LSLB12
000b30 940e 10a4 	CALL SUBOPT_0x21
000b32 2fe2      	MOV  R30,R18
000b33 2fa4      	MOV  R26,R20
000b34 940e 1131 	CALL __LSLB12
000b36 95e0      	COM  R30
000b37 21e1      	AND  R30,R1
000b38 2b5e      	OR   R21,R30
000b39 940e 108b 	CALL SUBOPT_0x1D
000b3b 93fa      	ST   -Y,R31
000b3c 93ea      	ST   -Y,R30
000b3d 2fa5      	MOV  R26,R21
000b3e 940e 0fac 	CALL _glcd_writemem
000b40 cfde      	RJMP _0x2040092
                 _0x2040094:
000b41 c02c      	RJMP _0x2040090
                 _0x2040091:
000b42 30e9      	CPI  R30,LOW(0x9)
000b43 f411      	BRNE _0x2040095
000b44 e050      	LDI  R21,LOW(0)
000b45 c003      	RJMP _0x2040096
                 _0x2040095:
000b46 30ea      	CPI  R30,LOW(0xA)
000b47 f4a9      	BRNE _0x204009C
000b48 ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
000b49 940e 109a 	CALL SUBOPT_0x1F
000b4b 2fae      	MOV  R26,R30
000b4c 2fe2      	MOV  R30,R18
000b4d 940e 1139 	CALL __LSRB12
000b4f 2f5e      	MOV  R21,R30
                 _0x2040099:
000b50 931f      	PUSH R17
000b51 5f1f      	SUBI R17,-1
000b52 85ee      	LDD  R30,Y+14
000b53 91af      	POP  R26
000b54 17ae      	CP   R26,R30
000b55 f430      	BRSH _0x204009B
000b56 940e 109e 	CALL SUBOPT_0x20
000b58 934a      	ST   -Y,R20
000b59 e0a0      	LDI  R26,LOW(0)
000b5a ddfd      	RCALL _pcd8544_wrmasked_G102
000b5b cff4      	RJMP _0x2040099
                 _0x204009B:
000b5c c011      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
000b5d 931f      	PUSH R17
000b5e 5f1f      	SUBI R17,-1
000b5f 85ee      	LDD  R30,Y+14
000b60 91af      	POP  R26
000b61 17ae      	CP   R26,R30
000b62 f458      	BRSH _0x204009F
000b63 940e 10af 	CALL SUBOPT_0x22
000b65 2fae      	MOV  R26,R30
000b66 2fe2      	MOV  R30,R18
000b67 940e 1139 	CALL __LSRB12
000b69 93ea      	ST   -Y,R30
000b6a 934a      	ST   -Y,R20
000b6b 85ad      	LDD  R26,Y+13
000b6c ddeb      	RCALL _pcd8544_wrmasked_G102
000b6d cfef      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
000b6e 85e8      	LDD  R30,Y+8
000b6f 85aa      	LDD  R26,Y+10
000b70 85bb      	LDD  R27,Y+10+1
000b71 e0f0      	LDI  R31,0
000b72 0fea      	ADD  R30,R26
000b73 1ffb      	ADC  R31,R27
000b74 87ea      	STD  Y+10,R30
000b75 87fb      	STD  Y+10+1,R31
000b76 ceaa      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120009:
000b77 940e 118d 	CALL __LOADLOCR6
000b79 9661      	ADIW R28,17
000b7a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000b7b 940e 1001 	CALL SUBOPT_0x8
000b7d 940e 1182 	CALL __CPW02
000b7f f024      	BRLT _0x2060003
000b80 e0e0      	LDI  R30,LOW(0)
000b81 e0f0      	LDI  R31,HIGH(0)
000b82 940c 0f63 	JMP  _0x2120002
                 _0x2060003:
000b84 81a8      	LD   R26,Y
000b85 81b9      	LDD  R27,Y+1
000b86 35a4      	CPI  R26,LOW(0x54)
000b87 e0e0      	LDI  R30,HIGH(0x54)
000b88 07be      	CPC  R27,R30
000b89 f024      	BRLT _0x2060004
000b8a e5e3      	LDI  R30,LOW(83)
000b8b e0f0      	LDI  R31,HIGH(83)
000b8c 940c 0f63 	JMP  _0x2120002
                 _0x2060004:
000b8e 81e8      	LD   R30,Y
000b8f 81f9      	LDD  R31,Y+1
000b90 940c 0f63 	JMP  _0x2120002
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000b92 940e 1001 	CALL SUBOPT_0x8
000b94 940e 1182 	CALL __CPW02
000b96 f024      	BRLT _0x2060005
000b97 e0e0      	LDI  R30,LOW(0)
000b98 e0f0      	LDI  R31,HIGH(0)
000b99 940c 0f63 	JMP  _0x2120002
                 _0x2060005:
000b9b 81a8      	LD   R26,Y
000b9c 81b9      	LDD  R27,Y+1
000b9d 97d0      	SBIW R26,48
000b9e f024      	BRLT _0x2060006
000b9f e2ef      	LDI  R30,LOW(47)
000ba0 e0f0      	LDI  R31,HIGH(47)
000ba1 940c 0f63 	JMP  _0x2120002
                 _0x2060006:
000ba3 81e8      	LD   R30,Y
000ba4 81f9      	LDD  R31,Y+1
000ba5 940c 0f63 	JMP  _0x2120002
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
000ba7 93ba      	ST   -Y,R27
000ba8 93aa      	ST   -Y,R26
000ba9 9723      	SBIW R28,3
000baa 940e 10bc 	CALL SUBOPT_0x23
000bac 018f      	MOVW R16,R30
000bad 2e00      	MOV  R0,R16
000bae 2a01      	OR   R0,R17
000baf f419      	BRNE _0x206000B
000bb0 e0e0      	LDI  R30,LOW(0)
000bb1 e0f0      	LDI  R31,HIGH(0)
000bb2 c05f      	RJMP _0x2120008
                 _0x206000B:
000bb3 940e 10c3 	CALL SUBOPT_0x24
000bb5 820f      	STD  Y+7,R0
000bb6 940e 10c3 	CALL SUBOPT_0x24
000bb8 820e      	STD  Y+6,R0
000bb9 940e 10c3 	CALL SUBOPT_0x24
000bbb 8608      	STD  Y+8,R0
000bbc 85eb      	LDD  R30,Y+11
000bbd 85a8      	LDD  R26,Y+8
000bbe 17ea      	CP   R30,R26
000bbf f418      	BRSH _0x206000C
000bc0 e0e0      	LDI  R30,LOW(0)
000bc1 e0f0      	LDI  R31,HIGH(0)
000bc2 c04f      	RJMP _0x2120008
                 _0x206000C:
000bc3 01f8      	MOVW R30,R16
                +
000bc4 5f0f     +SUBI R16 , LOW ( - 1 )
000bc5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000bc6 9154      	LPM  R21,Z
000bc7 85a8      	LDD  R26,Y+8
000bc8 27bb      	CLR  R27
000bc9 27ee      	CLR  R30
000bca 0fa5      	ADD  R26,R21
000bcb 1fbe      	ADC  R27,R30
000bcc 85eb      	LDD  R30,Y+11
000bcd e0f0      	LDI  R31,0
000bce 17ea      	CP   R30,R26
000bcf 07fb      	CPC  R31,R27
000bd0 f018      	BRLO _0x206000D
000bd1 e0e0      	LDI  R30,LOW(0)
000bd2 e0f0      	LDI  R31,HIGH(0)
000bd3 c03e      	RJMP _0x2120008
                 _0x206000D:
000bd4 81ee      	LDD  R30,Y+6
000bd5 95e6      	LSR  R30
000bd6 95e6      	LSR  R30
000bd7 95e6      	LSR  R30
000bd8 2f4e      	MOV  R20,R30
000bd9 81ee      	LDD  R30,Y+6
000bda 70e7      	ANDI R30,LOW(0x7)
000bdb f009      	BREQ _0x206000E
000bdc 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
000bdd 81ef      	LDD  R30,Y+7
000bde 30e0      	CPI  R30,0
000bdf f0a1      	BREQ _0x206000F
000be0 85a9      	LDD  R26,Y+9
000be1 85ba      	LDD  R27,Y+9+1
000be2 93ec      	ST   X,R30
000be3 85a8      	LDD  R26,Y+8
000be4 85eb      	LDD  R30,Y+11
000be5 1bea      	SUB  R30,R26
000be6 e0f0      	LDI  R31,0
000be7 01df      	MOVW R26,R30
000be8 81ef      	LDD  R30,Y+7
000be9 e0f0      	LDI  R31,0
000bea 940e 1146 	CALL __MULW12U
000bec 01df      	MOVW R26,R30
000bed 2fe4      	MOV  R30,R20
000bee e0f0      	LDI  R31,0
000bef 940e 1146 	CALL __MULW12U
000bf1 0fe0      	ADD  R30,R16
000bf2 1ff1      	ADC  R31,R17
000bf3 c01e      	RJMP _0x2120008
                 _0x206000F:
000bf4 0198      	MOVW R18,R16
000bf5 2fe5      	MOV  R30,R21
000bf6 e0f0      	LDI  R31,0
                +
000bf7 0f0e     +ADD R16 , R30
000bf8 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
000bf9 85a8      	LDD  R26,Y+8
000bfa 5faf      	SUBI R26,-LOW(1)
000bfb 87a8      	STD  Y+8,R26
000bfc 50a1      	SUBI R26,LOW(1)
000bfd 85eb      	LDD  R30,Y+11
000bfe 17ae      	CP   R26,R30
000bff f460      	BRSH _0x2060012
000c00 01f9      	MOVW R30,R18
                +
000c01 5f2f     +SUBI R18 , LOW ( - 1 )
000c02 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000c03 91a4      	LPM  R26,Z
000c04 e0b0      	LDI  R27,0
000c05 2fe4      	MOV  R30,R20
000c06 e0f0      	LDI  R31,0
000c07 940e 1146 	CALL __MULW12U
                +
000c09 0f0e     +ADD R16 , R30
000c0a 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000c0b cfed      	RJMP _0x2060010
                 _0x2060012:
000c0c 01f9      	MOVW R30,R18
000c0d 91e4      	LPM  R30,Z
000c0e 85a9      	LDD  R26,Y+9
000c0f 85ba      	LDD  R27,Y+9+1
000c10 93ec      	ST   X,R30
000c11 01f8      	MOVW R30,R16
                 _0x2120008:
000c12 940e 118d 	CALL __LOADLOCR6
000c14 962c      	ADIW R28,12
000c15 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
000c16 e0e0      	LDI  R30,LOW(0)
                +
000c17 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000c19 91a0 066f+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c1b 27bb      	CLR  R27
000c1c 940e 10c8 	CALL SUBOPT_0x25
000c1e e0f0      	LDI  R31,0
000c1f 0fae      	ADD  R26,R30
000c20 1fbf      	ADC  R27,R31
                +
000c21 91e0 0673+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c23 e0f0      	LDI  R31,0
000c24 0fae      	ADD  R26,R30
000c25 1fbf      	ADC  R27,R31
000c26 df6b      	RCALL _glcd_clipy
                +
000c27 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000c29 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000c2a 93aa      	ST   -Y,R26
000c2b 9721      	SBIW R28,1
000c2c 940e 10bc 	CALL SUBOPT_0x23
000c2e 9730      	SBIW R30,0
000c2f f409      	BRNE PC+2
000c30 c055      	RJMP _0x206001F
000c31 81af      	LDD  R26,Y+7
000c32 30aa      	CPI  R26,LOW(0xA)
000c33 f409      	BRNE _0x2060020
000c34 c04f      	RJMP _0x2060021
                 _0x2060020:
000c35 81ef      	LDD  R30,Y+7
000c36 93ea      	ST   -Y,R30
000c37 01de      	MOVW R26,R28
000c38 9617      	ADIW R26,7
000c39 df6d      	RCALL _glcd_getcharw_G103
000c3a 01af      	MOVW R20,R30
000c3b 9730      	SBIW R30,0
000c3c f409      	BRNE _0x2060022
000c3d c04a      	RJMP _0x2120007
                 _0x2060022:
                +
000c3e 91e0 0672+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c40 81ae      	LDD  R26,Y+6
000c41 0fea      	ADD  R30,R26
000c42 2f3e      	MOV  R19,R30
                +
000c43 91a0 066e+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000c45 27bb      	CLR  R27
000c46 e0f0      	LDI  R31,0
000c47 0fea      	ADD  R30,R26
000c48 1ffb      	ADC  R31,R27
000c49 018f      	MOVW R16,R30
                +
000c4a 3505     +CPI R16 , LOW ( 85 )
000c4b e0e0     +LDI R30 , HIGH ( 85 )
000c4c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000c4d f018      	BRLO _0x2060023
000c4e 2f03      	MOV  R16,R19
000c4f 2711      	CLR  R17
000c50 dfc5      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
000c51 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c53 93ea      	ST   -Y,R30
                +
000c54 91e0 066f+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c56 93ea      	ST   -Y,R30
000c57 85e8      	LDD  R30,Y+8
000c58 93ea      	ST   -Y,R30
000c59 940e 10c8 	CALL SUBOPT_0x25
000c5b 93ea      	ST   -Y,R30
000c5c e0e1      	LDI  R30,LOW(1)
000c5d 93ea      	ST   -Y,R30
000c5e 935a      	ST   -Y,R21
000c5f 934a      	ST   -Y,R20
000c60 e0a7      	LDI  R26,LOW(7)
000c61 dd2f      	RCALL _glcd_block
                +
000c62 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c64 81ae      	LDD  R26,Y+6
000c65 0fea      	ADD  R30,R26
000c66 93ea      	ST   -Y,R30
                +
000c67 91e0 066f+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c69 93ea      	ST   -Y,R30
                +
000c6a 91e0 0672+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c6c 93ea      	ST   -Y,R30
000c6d 940e 10c8 	CALL SUBOPT_0x25
000c6f 940e 10cf 	CALL SUBOPT_0x26
                +
000c71 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c73 93ea      	ST   -Y,R30
                +
000c74 91a0 066f+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c76 940e 10c8 	CALL SUBOPT_0x25
000c78 0fea      	ADD  R30,R26
000c79 93ea      	ST   -Y,R30
000c7a 933a      	ST   -Y,R19
                +
000c7b 91e0 0673+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c7d 940e 10cf 	CALL SUBOPT_0x26
000c7f e5e4      	LDI  R30,LOW(84)
000c80 e0f0      	LDI  R31,HIGH(84)
000c81 17e0      	CP   R30,R16
000c82 07f1      	CPC  R31,R17
000c83 f411      	BRNE _0x2060024
                 _0x2060021:
000c84 df91      	RCALL _glcd_new_line_G103
000c85 c002      	RJMP _0x2120007
                 _0x2060024:
                 _0x206001F:
                +
000c86 9300 066e+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120007:
000c88 940e 118d 	CALL __LOADLOCR6
000c8a 9628      	ADIW R28,8
000c8b 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
000c8c 93ba      	ST   -Y,R27
000c8d 93aa      	ST   -Y,R26
000c8e 931a      	ST   -Y,R17
                 _0x206002E:
000c8f 81a9      	LDD  R26,Y+1
000c90 81ba      	LDD  R27,Y+1+1
000c91 91ed      	LD   R30,X+
000c92 83a9      	STD  Y+1,R26
000c93 83ba      	STD  Y+1+1,R27
000c94 2f1e      	MOV  R17,R30
000c95 30e0      	CPI  R30,0
000c96 f019      	BREQ _0x2060030
000c97 2fa1      	MOV  R26,R17
000c98 df91      	RCALL _glcd_putchar
000c99 cff5      	RJMP _0x206002E
                 _0x2060030:
000c9a 8118      	LDD  R17,Y+0
000c9b c30e      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
000c9c 93aa      	ST   -Y,R26
000c9d 81ea      	LDD  R30,Y+2
000c9e 93ea      	ST   -Y,R30
000c9f 81ea      	LDD  R30,Y+2
000ca0 93ea      	ST   -Y,R30
                +
000ca1 91e0 0675+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000ca3 81aa      	LDD  R26,Y+2
000ca4 23ea      	AND  R30,R26
000ca5 f019      	BREQ _0x206003E
000ca6 91e0 066c 	LDS  R30,_glcd_state
000ca8 c002      	RJMP _0x206003F
                 _0x206003E:
                +
000ca9 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
000cab 2fae      	MOV  R26,R30
000cac dc89      	RCALL _glcd_putpixel
000cad 81e8      	LD   R30,Y
000cae 0fee      	LSL  R30
000caf 83e8      	ST   Y,R30
000cb0 30e0      	CPI  R30,0
000cb1 f411      	BRNE _0x2060041
000cb2 e0e1      	LDI  R30,LOW(1)
000cb3 83e8      	ST   Y,R30
                 _0x2060041:
000cb4 81e8      	LD   R30,Y
000cb5 c2f4      	RJMP _0x2120001
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000cb6 93aa      	ST   -Y,R26
000cb7 81a9      	LDD  R26,Y+1
000cb8 27bb      	CLR  R27
000cb9 dec1      	RCALL _glcd_clipx
                +
000cba 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000cbc 81a8      	LD   R26,Y
000cbd 27bb      	CLR  R27
000cbe ded3      	RCALL _glcd_clipy
                +
000cbf 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000cc1 c2a1      	RJMP _0x2120002
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000cc2 93aa      	ST   -Y,R26
000cc3 972b      	SBIW R28,11
000cc4 940e 1186 	CALL __SAVELOCR6
000cc6 89ac      	LDD  R26,Y+20
000cc7 27bb      	CLR  R27
000cc8 deb2      	RCALL _glcd_clipx
000cc9 8bec      	STD  Y+20,R30
000cca 89aa      	LDD  R26,Y+18
000ccb 27bb      	CLR  R27
000ccc deae      	RCALL _glcd_clipx
000ccd 8bea      	STD  Y+18,R30
000cce 89ab      	LDD  R26,Y+19
000ccf 27bb      	CLR  R27
000cd0 dec1      	RCALL _glcd_clipy
000cd1 8beb      	STD  Y+19,R30
000cd2 89a9      	LDD  R26,Y+17
000cd3 27bb      	CLR  R27
000cd4 debd      	RCALL _glcd_clipy
000cd5 8be9      	STD  Y+17,R30
000cd6 89ea      	LDD  R30,Y+18
                +
000cd7 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000cd9 89e9      	LDD  R30,Y+17
                +
000cda 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000cdc e0e1      	LDI  R30,LOW(1)
000cdd 87e8      	STD  Y+8,R30
000cde 89e9      	LDD  R30,Y+17
000cdf 89ab      	LDD  R26,Y+19
000ce0 17ea      	CP   R30,R26
000ce1 f571      	BRNE _0x2060042
000ce2 891c      	LDD  R17,Y+20
000ce3 89aa      	LDD  R26,Y+18
000ce4 171a      	CP   R17,R26
000ce5 f431      	BRNE _0x2060043
000ce6 931a      	ST   -Y,R17
000ce7 89ec      	LDD  R30,Y+20
000ce8 93ea      	ST   -Y,R30
000ce9 e0a1      	LDI  R26,LOW(1)
000cea dfb1      	RCALL _glcd_putpixelm_G103
000ceb c0c8      	RJMP _0x2120006
                 _0x2060043:
000cec 89aa      	LDD  R26,Y+18
000ced 171a      	CP   R17,R26
000cee f430      	BRSH _0x2060044
000cef 89ea      	LDD  R30,Y+18
000cf0 1be1      	SUB  R30,R17
000cf1 2f0e      	MOV  R16,R30
                +
000cf2 e041     +LDI R20 , LOW ( 1 )
000cf3 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000cf4 c006      	RJMP _0x2060045
                 _0x2060044:
000cf5 89aa      	LDD  R26,Y+18
000cf6 2fe1      	MOV  R30,R17
000cf7 1bea      	SUB  R30,R26
000cf8 2f0e      	MOV  R16,R30
                +
000cf9 ef4f     +LDI R20 , LOW ( - 1 )
000cfa ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
000cfb 893b      	LDD  R19,Y+19
000cfc e0e0      	LDI  R30,LOW(0)
000cfd 83ee      	STD  Y+6,R30
                 _0x2060049:
000cfe 940e 10d9 	CALL SUBOPT_0x27
000d00 f438      	BRSH _0x206004B
000d01 931a      	ST   -Y,R17
000d02 933a      	ST   -Y,R19
000d03 9533      	INC  R19
000d04 85aa      	LDD  R26,Y+10
000d05 df96      	RCALL _glcd_putpixelm_G103
000d06 83ef      	STD  Y+7,R30
000d07 cff6      	RJMP _0x2060049
                 _0x206004B:
000d08 81ef      	LDD  R30,Y+7
000d09 87e8      	STD  Y+8,R30
000d0a 0f14      	ADD  R17,R20
000d0b 2fe0      	MOV  R30,R16
000d0c 5001      	SUBI R16,1
000d0d 30e0      	CPI  R30,0
000d0e f761      	BRNE _0x2060047
000d0f c0a4      	RJMP _0x206004C
                 _0x2060042:
000d10 89ea      	LDD  R30,Y+18
000d11 89ac      	LDD  R26,Y+20
000d12 17ea      	CP   R30,R26
000d13 f539      	BRNE _0x206004D
000d14 893b      	LDD  R19,Y+19
000d15 89a9      	LDD  R26,Y+17
000d16 173a      	CP   R19,R26
000d17 f430      	BRSH _0x206004E
000d18 89e9      	LDD  R30,Y+17
000d19 1be3      	SUB  R30,R19
000d1a 2f2e      	MOV  R18,R30
000d1b e0e1      	LDI  R30,LOW(1)
000d1c e0f0      	LDI  R31,HIGH(1)
000d1d c006      	RJMP _0x206011B
                 _0x206004E:
000d1e 89a9      	LDD  R26,Y+17
000d1f 2fe3      	MOV  R30,R19
000d20 1bea      	SUB  R30,R26
000d21 2f2e      	MOV  R18,R30
000d22 efef      	LDI  R30,LOW(65535)
000d23 efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
000d24 87ed      	STD  Y+13,R30
000d25 87fe      	STD  Y+13+1,R31
                 _0x2060051:
000d26 891c      	LDD  R17,Y+20
000d27 e0e0      	LDI  R30,LOW(0)
000d28 83ee      	STD  Y+6,R30
                 _0x2060053:
000d29 940e 10d9 	CALL SUBOPT_0x27
000d2b f430      	BRSH _0x2060055
000d2c 931a      	ST   -Y,R17
000d2d 9513      	INC  R17
000d2e 940e 10e1 	CALL SUBOPT_0x28
000d30 83ef      	STD  Y+7,R30
000d31 cff7      	RJMP _0x2060053
                 _0x2060055:
000d32 81ef      	LDD  R30,Y+7
000d33 87e8      	STD  Y+8,R30
000d34 85ed      	LDD  R30,Y+13
000d35 0f3e      	ADD  R19,R30
000d36 2fe2      	MOV  R30,R18
000d37 5021      	SUBI R18,1
000d38 30e0      	CPI  R30,0
000d39 f761      	BRNE _0x2060051
000d3a c079      	RJMP _0x2060056
                 _0x206004D:
000d3b e0e0      	LDI  R30,LOW(0)
000d3c 83ee      	STD  Y+6,R30
                 _0x2060057:
000d3d 940e 10d9 	CALL SUBOPT_0x27
000d3f f008      	BRLO PC+2
000d40 c073      	RJMP _0x2060059
000d41 891c      	LDD  R17,Y+20
000d42 893b      	LDD  R19,Y+19
000d43 e0e1      	LDI  R30,LOW(1)
000d44 2f2e      	MOV  R18,R30
000d45 2f0e      	MOV  R16,R30
000d46 89aa      	LDD  R26,Y+18
000d47 27bb      	CLR  R27
000d48 89ec      	LDD  R30,Y+20
000d49 e0f0      	LDI  R31,0
000d4a 1bae      	SUB  R26,R30
000d4b 0bbf      	SBC  R27,R31
000d4c 01ad      	MOVW R20,R26
000d4d 2355      	TST  R21
000d4e f42a      	BRPL _0x206005A
000d4f ef0f      	LDI  R16,LOW(255)
000d50 01fa      	MOVW R30,R20
000d51 940e 112d 	CALL __ANEGW1
000d53 01af      	MOVW R20,R30
                 _0x206005A:
000d54 01fa      	MOVW R30,R20
000d55 0fee      	LSL  R30
000d56 1fff      	ROL  R31
000d57 87ef      	STD  Y+15,R30
000d58 8bf8      	STD  Y+15+1,R31
000d59 89a9      	LDD  R26,Y+17
000d5a 27bb      	CLR  R27
000d5b 89eb      	LDD  R30,Y+19
000d5c e0f0      	LDI  R31,0
000d5d 1bae      	SUB  R26,R30
000d5e 0bbf      	SBC  R27,R31
000d5f 87ad      	STD  Y+13,R26
000d60 87be      	STD  Y+13+1,R27
000d61 85ae      	LDD  R26,Y+14
000d62 23aa      	TST  R26
000d63 f43a      	BRPL _0x206005B
000d64 ef2f      	LDI  R18,LOW(255)
000d65 85ed      	LDD  R30,Y+13
000d66 85fe      	LDD  R31,Y+13+1
000d67 940e 112d 	CALL __ANEGW1
000d69 87ed      	STD  Y+13,R30
000d6a 87fe      	STD  Y+13+1,R31
                 _0x206005B:
000d6b 85ed      	LDD  R30,Y+13
000d6c 85fe      	LDD  R31,Y+13+1
000d6d 0fee      	LSL  R30
000d6e 1fff      	ROL  R31
000d6f 87eb      	STD  Y+11,R30
000d70 87fc      	STD  Y+11+1,R31
000d71 931a      	ST   -Y,R17
000d72 933a      	ST   -Y,R19
000d73 e0a1      	LDI  R26,LOW(1)
000d74 df27      	RCALL _glcd_putpixelm_G103
000d75 87e8      	STD  Y+8,R30
000d76 e0e0      	LDI  R30,LOW(0)
000d77 87e9      	STD  Y+9,R30
000d78 87ea      	STD  Y+9+1,R30
000d79 85ad      	LDD  R26,Y+13
000d7a 85be      	LDD  R27,Y+13+1
000d7b 174a      	CP   R20,R26
000d7c 075b      	CPC  R21,R27
000d7d f0bc      	BRLT _0x206005C
                 _0x206005E:
000d7e 0f10      	ADD  R17,R16
000d7f 85eb      	LDD  R30,Y+11
000d80 85fc      	LDD  R31,Y+11+1
000d81 940e 10e5 	CALL SUBOPT_0x29
000d83 85a9      	LDD  R26,Y+9
000d84 85ba      	LDD  R27,Y+9+1
000d85 174a      	CP   R20,R26
000d86 075b      	CPC  R21,R27
000d87 f42c      	BRGE _0x2060060
000d88 0f32      	ADD  R19,R18
000d89 85af      	LDD  R26,Y+15
000d8a 89b8      	LDD  R27,Y+15+1
000d8b 940e 10ec 	CALL SUBOPT_0x2A
                 _0x2060060:
000d8d 931a      	ST   -Y,R17
000d8e 940e 10e1 	CALL SUBOPT_0x28
000d90 87e8      	STD  Y+8,R30
000d91 89ea      	LDD  R30,Y+18
000d92 17e1      	CP   R30,R17
000d93 f751      	BRNE _0x206005E
000d94 c018      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
000d95 0f32      	ADD  R19,R18
000d96 85ef      	LDD  R30,Y+15
000d97 89f8      	LDD  R31,Y+15+1
000d98 940e 10e5 	CALL SUBOPT_0x29
000d9a 85ed      	LDD  R30,Y+13
000d9b 85fe      	LDD  R31,Y+13+1
000d9c 85a9      	LDD  R26,Y+9
000d9d 85ba      	LDD  R27,Y+9+1
000d9e 17ea      	CP   R30,R26
000d9f 07fb      	CPC  R31,R27
000da0 f42c      	BRGE _0x2060065
000da1 0f10      	ADD  R17,R16
000da2 85ab      	LDD  R26,Y+11
000da3 85bc      	LDD  R27,Y+11+1
000da4 940e 10ec 	CALL SUBOPT_0x2A
                 _0x2060065:
000da6 931a      	ST   -Y,R17
000da7 940e 10e1 	CALL SUBOPT_0x28
000da9 87e8      	STD  Y+8,R30
000daa 89e9      	LDD  R30,Y+17
000dab 17e3      	CP   R30,R19
000dac f741      	BRNE _0x2060063
                 _0x2060061:
000dad 89eb      	LDD  R30,Y+19
000dae 5fef      	SUBI R30,-LOW(1)
000daf 8beb      	STD  Y+19,R30
000db0 89e9      	LDD  R30,Y+17
000db1 5fef      	SUBI R30,-LOW(1)
000db2 8be9      	STD  Y+17,R30
000db3 cf89      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120006:
000db4 940e 118d 	CALL __LOADLOCR6
000db6 9665      	ADIW R28,21
000db7 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G105:
                 ; .FSTART _put_buff_G105
000db8 93ba      	ST   -Y,R27
000db9 93aa      	ST   -Y,R26
000dba 931a      	ST   -Y,R17
000dbb 930a      	ST   -Y,R16
000dbc 81aa      	LDD  R26,Y+2
000dbd 81bb      	LDD  R27,Y+2+1
000dbe 9612      	ADIW R26,2
000dbf 940e 114e 	CALL __GETW1P
000dc1 9730      	SBIW R30,0
000dc2 f129      	BREQ _0x20A0010
000dc3 81aa      	LDD  R26,Y+2
000dc4 81bb      	LDD  R27,Y+2+1
000dc5 9614      	ADIW R26,4
000dc6 940e 114e 	CALL __GETW1P
000dc8 018f      	MOVW R16,R30
000dc9 9730      	SBIW R30,0
000dca f061      	BREQ _0x20A0012
                +
000dcb 3002     +CPI R16 , LOW ( 2 )
000dcc e0e0     +LDI R30 , HIGH ( 2 )
000dcd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000dce f080      	BRLO _0x20A0013
000dcf 01f8      	MOVW R30,R16
000dd0 9731      	SBIW R30,1
000dd1 018f      	MOVW R16,R30
                +
000dd2 81aa     +LDD R26 , Y + 2
000dd3 81bb     +LDD R27 , Y + 2 + 1
000dd4 9614     +ADIW R26 , 4
000dd5 93ed     +ST X + , R30
000dd6 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x20A0012:
000dd7 81aa      	LDD  R26,Y+2
000dd8 81bb      	LDD  R27,Y+2+1
000dd9 9612      	ADIW R26,2
000dda 940e 0fcb 	CALL SUBOPT_0x0
000ddc 9731      	SBIW R30,1
000ddd 81ac      	LDD  R26,Y+4
000dde 83a0      	STD  Z+0,R26
                 _0x20A0013:
000ddf 81aa      	LDD  R26,Y+2
000de0 81bb      	LDD  R27,Y+2+1
000de1 940e 114e 	CALL __GETW1P
000de3 23ff      	TST  R31
000de4 f012      	BRMI _0x20A0014
000de5 940e 0fcb 	CALL SUBOPT_0x0
                 _0x20A0014:
000de7 c006      	RJMP _0x20A0015
                 _0x20A0010:
000de8 81aa      	LDD  R26,Y+2
000de9 81bb      	LDD  R27,Y+2+1
000dea efef      	LDI  R30,LOW(65535)
000deb efff      	LDI  R31,HIGH(65535)
000dec 93ed      	ST   X+,R30
000ded 93fc      	ST   X,R31
                 _0x20A0015:
                 _0x2120004:
000dee 8119      	LDD  R17,Y+1
000def 8108      	LDD  R16,Y+0
                 _0x2120005:
000df0 9625      	ADIW R28,5
000df1 9508      	RET
                 ; .FEND
                 __print_G105:
                 ; .FSTART __print_G105
000df2 93ba      	ST   -Y,R27
000df3 93aa      	ST   -Y,R26
000df4 9726      	SBIW R28,6
000df5 940e 1186 	CALL __SAVELOCR6
000df7 e010      	LDI  R17,0
000df8 85ac      	LDD  R26,Y+12
000df9 85bd      	LDD  R27,Y+12+1
000dfa e0e0      	LDI  R30,LOW(0)
000dfb e0f0      	LDI  R31,HIGH(0)
000dfc 93ed      	ST   X+,R30
000dfd 93fc      	ST   X,R31
                 _0x20A0016:
000dfe 89ea      	LDD  R30,Y+18
000dff 89fb      	LDD  R31,Y+18+1
000e00 9631      	ADIW R30,1
000e01 8bea      	STD  Y+18,R30
000e02 8bfb      	STD  Y+18+1,R31
000e03 9731      	SBIW R30,1
000e04 91e4      	LPM  R30,Z
000e05 2f2e      	MOV  R18,R30
000e06 30e0      	CPI  R30,0
000e07 f409      	BRNE PC+2
000e08 c115      	RJMP _0x20A0018
000e09 2fe1      	MOV  R30,R17
000e0a 30e0      	CPI  R30,0
000e0b f439      	BRNE _0x20A001C
000e0c 3225      	CPI  R18,37
000e0d f411      	BRNE _0x20A001D
000e0e e011      	LDI  R17,LOW(1)
000e0f c002      	RJMP _0x20A001E
                 _0x20A001D:
000e10 940e 10f3 	CALL SUBOPT_0x2B
                 _0x20A001E:
000e12 c10a      	RJMP _0x20A001B
                 _0x20A001C:
000e13 30e1      	CPI  R30,LOW(0x1)
000e14 f4a9      	BRNE _0x20A001F
000e15 3225      	CPI  R18,37
000e16 f419      	BRNE _0x20A0020
000e17 940e 10f3 	CALL SUBOPT_0x2B
000e19 c102      	RJMP _0x20A00CC
                 _0x20A0020:
000e1a e012      	LDI  R17,LOW(2)
000e1b e040      	LDI  R20,LOW(0)
000e1c e000      	LDI  R16,LOW(0)
000e1d 322d      	CPI  R18,45
000e1e f411      	BRNE _0x20A0021
000e1f e001      	LDI  R16,LOW(1)
000e20 c0fc      	RJMP _0x20A001B
                 _0x20A0021:
000e21 322b      	CPI  R18,43
000e22 f411      	BRNE _0x20A0022
000e23 e24b      	LDI  R20,LOW(43)
000e24 c0f8      	RJMP _0x20A001B
                 _0x20A0022:
000e25 3220      	CPI  R18,32
000e26 f411      	BRNE _0x20A0023
000e27 e240      	LDI  R20,LOW(32)
000e28 c0f4      	RJMP _0x20A001B
                 _0x20A0023:
000e29 c002      	RJMP _0x20A0024
                 _0x20A001F:
000e2a 30e2      	CPI  R30,LOW(0x2)
000e2b f439      	BRNE _0x20A0025
                 _0x20A0024:
000e2c e050      	LDI  R21,LOW(0)
000e2d e013      	LDI  R17,LOW(3)
000e2e 3320      	CPI  R18,48
000e2f f411      	BRNE _0x20A0026
000e30 6800      	ORI  R16,LOW(128)
000e31 c0eb      	RJMP _0x20A001B
                 _0x20A0026:
000e32 c003      	RJMP _0x20A0027
                 _0x20A0025:
000e33 30e3      	CPI  R30,LOW(0x3)
000e34 f009      	BREQ PC+2
000e35 c0e7      	RJMP _0x20A001B
                 _0x20A0027:
000e36 3320      	CPI  R18,48
000e37 f010      	BRLO _0x20A002A
000e38 332a      	CPI  R18,58
000e39 f008      	BRLO _0x20A002B
                 _0x20A002A:
000e3a c007      	RJMP _0x20A0029
                 _0x20A002B:
000e3b e0aa      	LDI  R26,LOW(10)
000e3c 9f5a      	MUL  R21,R26
000e3d 2d50      	MOV  R21,R0
000e3e 2fe2      	MOV  R30,R18
000e3f 53e0      	SUBI R30,LOW(48)
000e40 0f5e      	ADD  R21,R30
000e41 c0db      	RJMP _0x20A001B
                 _0x20A0029:
000e42 2fe2      	MOV  R30,R18
000e43 36e3      	CPI  R30,LOW(0x63)
000e44 f449      	BRNE _0x20A002F
000e45 940e 10fa 	CALL SUBOPT_0x2C
000e47 89e8      	LDD  R30,Y+16
000e48 89f9      	LDD  R31,Y+16+1
000e49 81a4      	LDD  R26,Z+4
000e4a 93aa      	ST   -Y,R26
000e4b 940e 1100 	CALL SUBOPT_0x2D
000e4d c0ce      	RJMP _0x20A0030
                 _0x20A002F:
000e4e 37e3      	CPI  R30,LOW(0x73)
000e4f f441      	BRNE _0x20A0032
000e50 940e 10fa 	CALL SUBOPT_0x2C
000e52 940e 1106 	CALL SUBOPT_0x2E
000e54 940e 07d3 	CALL _strlen
000e56 2f1e      	MOV  R17,R30
000e57 c00a      	RJMP _0x20A0033
                 _0x20A0032:
000e58 37e0      	CPI  R30,LOW(0x70)
000e59 f461      	BRNE _0x20A0035
000e5a 940e 10fa 	CALL SUBOPT_0x2C
000e5c 940e 1106 	CALL SUBOPT_0x2E
000e5e 940e 07df 	CALL _strlenf
000e60 2f1e      	MOV  R17,R30
000e61 6008      	ORI  R16,LOW(8)
                 _0x20A0033:
000e62 6002      	ORI  R16,LOW(2)
000e63 770f      	ANDI R16,LOW(127)
000e64 e030      	LDI  R19,LOW(0)
000e65 c034      	RJMP _0x20A0036
                 _0x20A0035:
000e66 36e4      	CPI  R30,LOW(0x64)
000e67 f011      	BREQ _0x20A0039
000e68 36e9      	CPI  R30,LOW(0x69)
000e69 f411      	BRNE _0x20A003A
                 _0x20A0039:
000e6a 6004      	ORI  R16,LOW(4)
000e6b c002      	RJMP _0x20A003B
                 _0x20A003A:
000e6c 37e5      	CPI  R30,LOW(0x75)
000e6d f431      	BRNE _0x20A003C
                 _0x20A003B:
000e6e e7ea      	LDI  R30,LOW(_tbl10_G105*2)
000e6f e0f2      	LDI  R31,HIGH(_tbl10_G105*2)
000e70 83ee      	STD  Y+6,R30
000e71 83ff      	STD  Y+6+1,R31
000e72 e015      	LDI  R17,LOW(5)
000e73 c00c      	RJMP _0x20A003D
                 _0x20A003C:
000e74 35e8      	CPI  R30,LOW(0x58)
000e75 f411      	BRNE _0x20A003F
000e76 6008      	ORI  R16,LOW(8)
000e77 c003      	RJMP _0x20A0040
                 _0x20A003F:
000e78 37e8      	CPI  R30,LOW(0x78)
000e79 f009      	BREQ PC+2
000e7a c0a1      	RJMP _0x20A0071
                 _0x20A0040:
000e7b e8e4      	LDI  R30,LOW(_tbl16_G105*2)
000e7c e0f2      	LDI  R31,HIGH(_tbl16_G105*2)
000e7d 83ee      	STD  Y+6,R30
000e7e 83ff      	STD  Y+6+1,R31
000e7f e014      	LDI  R17,LOW(4)
                 _0x20A003D:
000e80 ff02      	SBRS R16,2
000e81 c014      	RJMP _0x20A0042
000e82 940e 10fa 	CALL SUBOPT_0x2C
000e84 940e 1110 	CALL SUBOPT_0x2F
000e86 85ab      	LDD  R26,Y+11
000e87 23aa      	TST  R26
000e88 f43a      	BRPL _0x20A0043
000e89 85ea      	LDD  R30,Y+10
000e8a 85fb      	LDD  R31,Y+10+1
000e8b 940e 112d 	CALL __ANEGW1
000e8d 87ea      	STD  Y+10,R30
000e8e 87fb      	STD  Y+10+1,R31
000e8f e24d      	LDI  R20,LOW(45)
                 _0x20A0043:
000e90 3040      	CPI  R20,0
000e91 f011      	BREQ _0x20A0044
000e92 5f1f      	SUBI R17,-LOW(1)
000e93 c001      	RJMP _0x20A0045
                 _0x20A0044:
000e94 7f0b      	ANDI R16,LOW(251)
                 _0x20A0045:
000e95 c004      	RJMP _0x20A0046
                 _0x20A0042:
000e96 940e 10fa 	CALL SUBOPT_0x2C
000e98 940e 1110 	CALL SUBOPT_0x2F
                 _0x20A0046:
                 _0x20A0036:
000e9a fd00      	SBRC R16,0
000e9b c011      	RJMP _0x20A0047
                 _0x20A0048:
000e9c 1715      	CP   R17,R21
000e9d f478      	BRSH _0x20A004A
000e9e ff07      	SBRS R16,7
000e9f c008      	RJMP _0x20A004B
000ea0 ff02      	SBRS R16,2
000ea1 c004      	RJMP _0x20A004C
000ea2 7f0b      	ANDI R16,LOW(251)
000ea3 2f24      	MOV  R18,R20
000ea4 5011      	SUBI R17,LOW(1)
000ea5 c001      	RJMP _0x20A004D
                 _0x20A004C:
000ea6 e320      	LDI  R18,LOW(48)
                 _0x20A004D:
000ea7 c001      	RJMP _0x20A004E
                 _0x20A004B:
000ea8 e220      	LDI  R18,LOW(32)
                 _0x20A004E:
000ea9 940e 10f3 	CALL SUBOPT_0x2B
000eab 5051      	SUBI R21,LOW(1)
000eac cfef      	RJMP _0x20A0048
                 _0x20A004A:
                 _0x20A0047:
000ead 2f31      	MOV  R19,R17
000eae ff01      	SBRS R16,1
000eaf c017      	RJMP _0x20A004F
                 _0x20A0050:
000eb0 3030      	CPI  R19,0
000eb1 f0a1      	BREQ _0x20A0052
000eb2 ff03      	SBRS R16,3
000eb3 c006      	RJMP _0x20A0053
000eb4 81ee      	LDD  R30,Y+6
000eb5 81ff      	LDD  R31,Y+6+1
000eb6 9125      	LPM  R18,Z+
000eb7 83ee      	STD  Y+6,R30
000eb8 83ff      	STD  Y+6+1,R31
000eb9 c005      	RJMP _0x20A0054
                 _0x20A0053:
000eba 81ae      	LDD  R26,Y+6
000ebb 81bf      	LDD  R27,Y+6+1
000ebc 912d      	LD   R18,X+
000ebd 83ae      	STD  Y+6,R26
000ebe 83bf      	STD  Y+6+1,R27
                 _0x20A0054:
000ebf 940e 10f3 	CALL SUBOPT_0x2B
000ec1 3050      	CPI  R21,0
000ec2 f009      	BREQ _0x20A0055
000ec3 5051      	SUBI R21,LOW(1)
                 _0x20A0055:
000ec4 5031      	SUBI R19,LOW(1)
000ec5 cfea      	RJMP _0x20A0050
                 _0x20A0052:
000ec6 c04b      	RJMP _0x20A0056
                 _0x20A004F:
                 _0x20A0058:
000ec7 e320      	LDI  R18,LOW(48)
000ec8 81ee      	LDD  R30,Y+6
000ec9 81ff      	LDD  R31,Y+6+1
000eca 940e 115c 	CALL __GETW1PF
000ecc 87e8      	STD  Y+8,R30
000ecd 87f9      	STD  Y+8+1,R31
000ece 81ee      	LDD  R30,Y+6
000ecf 81ff      	LDD  R31,Y+6+1
000ed0 9632      	ADIW R30,2
000ed1 83ee      	STD  Y+6,R30
000ed2 83ff      	STD  Y+6+1,R31
                 _0x20A005A:
000ed3 85e8      	LDD  R30,Y+8
000ed4 85f9      	LDD  R31,Y+8+1
000ed5 85aa      	LDD  R26,Y+10
000ed6 85bb      	LDD  R27,Y+10+1
000ed7 17ae      	CP   R26,R30
000ed8 07bf      	CPC  R27,R31
000ed9 f050      	BRLO _0x20A005C
000eda 5f2f      	SUBI R18,-LOW(1)
000edb 85a8      	LDD  R26,Y+8
000edc 85b9      	LDD  R27,Y+8+1
000edd 85ea      	LDD  R30,Y+10
000ede 85fb      	LDD  R31,Y+10+1
000edf 1bea      	SUB  R30,R26
000ee0 0bfb      	SBC  R31,R27
000ee1 87ea      	STD  Y+10,R30
000ee2 87fb      	STD  Y+10+1,R31
000ee3 cfef      	RJMP _0x20A005A
                 _0x20A005C:
000ee4 332a      	CPI  R18,58
000ee5 f028      	BRLO _0x20A005D
000ee6 ff03      	SBRS R16,3
000ee7 c002      	RJMP _0x20A005E
000ee8 5f29      	SUBI R18,-LOW(7)
000ee9 c001      	RJMP _0x20A005F
                 _0x20A005E:
000eea 5d29      	SUBI R18,-LOW(39)
                 _0x20A005F:
                 _0x20A005D:
000eeb fd04      	SBRC R16,4
000eec c01a      	RJMP _0x20A0061
000eed 3321      	CPI  R18,49
000eee f420      	BRSH _0x20A0063
000eef 85a8      	LDD  R26,Y+8
000ef0 85b9      	LDD  R27,Y+8+1
000ef1 9711      	SBIW R26,1
000ef2 f409      	BRNE _0x20A0062
                 _0x20A0063:
000ef3 c009      	RJMP _0x20A00CD
                 _0x20A0062:
000ef4 1753      	CP   R21,R19
000ef5 f010      	BRLO _0x20A0067
000ef6 ff00      	SBRS R16,0
000ef7 c001      	RJMP _0x20A0068
                 _0x20A0067:
000ef8 c013      	RJMP _0x20A0066
                 _0x20A0068:
000ef9 e220      	LDI  R18,LOW(32)
000efa ff07      	SBRS R16,7
000efb c00b      	RJMP _0x20A0069
000efc e320      	LDI  R18,LOW(48)
                 _0x20A00CD:
000efd 6100      	ORI  R16,LOW(16)
000efe ff02      	SBRS R16,2
000eff c007      	RJMP _0x20A006A
000f00 7f0b      	ANDI R16,LOW(251)
000f01 934a      	ST   -Y,R20
000f02 940e 1100 	CALL SUBOPT_0x2D
000f04 3050      	CPI  R21,0
000f05 f009      	BREQ _0x20A006B
000f06 5051      	SUBI R21,LOW(1)
                 _0x20A006B:
                 _0x20A006A:
                 _0x20A0069:
                 _0x20A0061:
000f07 940e 10f3 	CALL SUBOPT_0x2B
000f09 3050      	CPI  R21,0
000f0a f009      	BREQ _0x20A006C
000f0b 5051      	SUBI R21,LOW(1)
                 _0x20A006C:
                 _0x20A0066:
000f0c 5031      	SUBI R19,LOW(1)
000f0d 85a8      	LDD  R26,Y+8
000f0e 85b9      	LDD  R27,Y+8+1
000f0f 9712      	SBIW R26,2
000f10 f008      	BRLO _0x20A0059
000f11 cfb5      	RJMP _0x20A0058
                 _0x20A0059:
                 _0x20A0056:
000f12 ff00      	SBRS R16,0
000f13 c008      	RJMP _0x20A006D
                 _0x20A006E:
000f14 3050      	CPI  R21,0
000f15 f031      	BREQ _0x20A0070
000f16 5051      	SUBI R21,LOW(1)
000f17 e2e0      	LDI  R30,LOW(32)
000f18 93ea      	ST   -Y,R30
000f19 940e 1100 	CALL SUBOPT_0x2D
000f1b cff8      	RJMP _0x20A006E
                 _0x20A0070:
                 _0x20A006D:
                 _0x20A0071:
                 _0x20A0030:
                 _0x20A00CC:
000f1c e010      	LDI  R17,LOW(0)
                 _0x20A001B:
000f1d cee0      	RJMP _0x20A0016
                 _0x20A0018:
000f1e 85ac      	LDD  R26,Y+12
000f1f 85bd      	LDD  R27,Y+12+1
000f20 940e 114e 	CALL __GETW1P
000f22 940e 118d 	CALL __LOADLOCR6
000f24 9664      	ADIW R28,20
000f25 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000f26 92ff      	PUSH R15
000f27 2ef8      	MOV  R15,R24
000f28 9726      	SBIW R28,6
000f29 940e 1188 	CALL __SAVELOCR4
000f2b 940e 1118 	CALL SUBOPT_0x30
000f2d 9730      	SBIW R30,0
000f2e f419      	BRNE _0x20A0072
000f2f efef      	LDI  R30,LOW(65535)
000f30 efff      	LDI  R31,HIGH(65535)
000f31 c023      	RJMP _0x2120003
                 _0x20A0072:
000f32 01de      	MOVW R26,R28
000f33 9616      	ADIW R26,6
000f34 940e 1129 	CALL __ADDW2R15
000f36 018d      	MOVW R16,R26
000f37 940e 1118 	CALL SUBOPT_0x30
000f39 83ee      	STD  Y+6,R30
000f3a 83ff      	STD  Y+6+1,R31
000f3b e0e0      	LDI  R30,LOW(0)
000f3c 87e8      	STD  Y+8,R30
000f3d 87e9      	STD  Y+8+1,R30
000f3e 01de      	MOVW R26,R28
000f3f 961a      	ADIW R26,10
000f40 940e 1129 	CALL __ADDW2R15
000f42 940e 114e 	CALL __GETW1P
000f44 93fa      	ST   -Y,R31
000f45 93ea      	ST   -Y,R30
000f46 931a      	ST   -Y,R17
000f47 930a      	ST   -Y,R16
000f48 ebe8      	LDI  R30,LOW(_put_buff_G105)
000f49 e0fd      	LDI  R31,HIGH(_put_buff_G105)
000f4a 93fa      	ST   -Y,R31
000f4b 93ea      	ST   -Y,R30
000f4c 01de      	MOVW R26,R28
000f4d 961a      	ADIW R26,10
000f4e dea3      	RCALL __print_G105
000f4f 019f      	MOVW R18,R30
000f50 81ae      	LDD  R26,Y+6
000f51 81bf      	LDD  R27,Y+6+1
000f52 e0e0      	LDI  R30,LOW(0)
000f53 93ec      	ST   X,R30
000f54 01f9      	MOVW R30,R18
                 _0x2120003:
000f55 940e 118f 	CALL __LOADLOCR4
000f57 962a      	ADIW R28,10
000f58 90ff      	POP  R15
000f59 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000f5a 93aa      	ST   -Y,R26
000f5b 81e8      	LD   R30,Y
000f5c e0f0      	LDI  R31,0
000f5d 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000f5e 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000f5f 91a4      	LPM  R26,Z
000f60 81e9      	LDD  R30,Y+1
000f61 940e 1131 	CALL __LSLB12
                 _0x2120002:
000f63 9622      	ADIW R28,2
000f64 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000f65 93aa      	ST   -Y,R26
000f66 931a      	ST   -Y,R17
000f67 81e9      	LDD  R30,Y+1
000f68 30e7      	CPI  R30,LOW(0x7)
000f69 f011      	BREQ _0x2100007
000f6a 30ea      	CPI  R30,LOW(0xA)
000f6b f419      	BRNE _0x2100008
                 _0x2100007:
000f6c 9110 066c 	LDS  R17,_glcd_state
000f6e c009      	RJMP _0x2100009
                 _0x2100008:
000f6f 30e9      	CPI  R30,LOW(0x9)
000f70 f419      	BRNE _0x210000B
                +
000f71 9110 066d+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000f73 c004      	RJMP _0x2100009
                 _0x210000B:
000f74 30e8      	CPI  R30,LOW(0x8)
000f75 f4a1      	BRNE _0x2100005
                +
000f76 9110 067c+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000f78 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000f7a 30e0      	CPI  R30,0
000f7b f049      	BREQ _0x210000E
000f7c 3010      	CPI  R17,0
000f7d f019      	BREQ _0x210000F
000f7e efef      	LDI  R30,LOW(255)
000f7f 8118      	LDD  R17,Y+0
000f80 c029      	RJMP _0x2120001
                 _0x210000F:
000f81 81ea      	LDD  R30,Y+2
000f82 95e0      	COM  R30
000f83 8118      	LDD  R17,Y+0
000f84 c025      	RJMP _0x2120001
                 _0x210000E:
000f85 3010      	CPI  R17,0
000f86 f419      	BRNE _0x2100011
000f87 e0e0      	LDI  R30,LOW(0)
000f88 8118      	LDD  R17,Y+0
000f89 c020      	RJMP _0x2120001
                 _0x2100011:
                 _0x2100005:
000f8a 81ea      	LDD  R30,Y+2
000f8b 8118      	LDD  R17,Y+0
000f8c c01d      	RJMP _0x2120001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000f8d 93ba      	ST   -Y,R27
000f8e 93aa      	ST   -Y,R26
000f8f 81ea      	LDD  R30,Y+2
000f90 30e1      	CPI  R30,LOW(0x1)
000f91 f421      	BRNE _0x2100015
000f92 81e8      	LD   R30,Y
000f93 81f9      	LDD  R31,Y+1
000f94 91e4      	LPM  R30,Z
000f95 c014      	RJMP _0x2120001
                 _0x2100015:
000f96 30e2      	CPI  R30,LOW(0x2)
000f97 f429      	BRNE _0x2100016
000f98 81a8      	LD   R26,Y
000f99 81b9      	LDD  R27,Y+1
000f9a 940e 1165 	CALL __EEPROMRDB
000f9c c00d      	RJMP _0x2120001
                 _0x2100016:
000f9d 30e3      	CPI  R30,LOW(0x3)
000f9e f441      	BRNE _0x2100018
000f9f 81a8      	LD   R26,Y
000fa0 81b9      	LDD  R27,Y+1
                +
000fa1 91e0 0685+LDS R30 , _glcd_state + ( 25 )
000fa3 91f0 0686+LDS R31 , _glcd_state + ( 25 ) + 1
000fa5 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000fa6 c003      	RJMP _0x2120001
                 _0x2100018:
000fa7 81a8      	LD   R26,Y
000fa8 81b9      	LDD  R27,Y+1
000fa9 91ec      	LD   R30,X
                 _0x2120001:
000faa 9623      	ADIW R28,3
000fab 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000fac 93aa      	ST   -Y,R26
000fad 81eb      	LDD  R30,Y+3
000fae 30e0      	CPI  R30,0
000faf f429      	BRNE _0x210001C
000fb0 81e8      	LD   R30,Y
000fb1 81a9      	LDD  R26,Y+1
000fb2 81ba      	LDD  R27,Y+1+1
000fb3 93ec      	ST   X,R30
000fb4 c014      	RJMP _0x210001B
                 _0x210001C:
000fb5 30e2      	CPI  R30,LOW(0x2)
000fb6 f431      	BRNE _0x210001D
000fb7 81e8      	LD   R30,Y
000fb8 81a9      	LDD  R26,Y+1
000fb9 81ba      	LDD  R27,Y+1+1
000fba 940e 1171 	CALL __EEPROMWRB
000fbc c00c      	RJMP _0x210001B
                 _0x210001D:
000fbd 30e3      	CPI  R30,LOW(0x3)
000fbe f451      	BRNE _0x210001B
000fbf 81e9      	LDD  R30,Y+1
000fc0 81fa      	LDD  R31,Y+1+1
000fc1 93fa      	ST   -Y,R31
000fc2 93ea      	ST   -Y,R30
000fc3 81aa      	LDD  R26,Y+2
                +
000fc4 91e0 0687+LDS R30 , _glcd_state + ( 27 )
000fc6 91f0 0688+LDS R31 , _glcd_state + ( 27 ) + 1
000fc8 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
000fc9 9624      	ADIW R28,4
000fca 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
00066c           	.BYTE 0x1D
                 _key:
000689           	.BYTE 0xA
                 _cmd:
000693           	.BYTE 0xFA
                 _rx_buffer0:
00078d           	.BYTE 0x40
                 _rx_wr_index0:
0007cd           	.BYTE 0x1
                 _rx_rd_index0:
0007ce           	.BYTE 0x1
                 _rx_counter0:
0007cf           	.BYTE 0x1
                 _buff:
0007d0           	.BYTE 0x104
                 _i:
0008d4           	.BYTE 0x2
                 _time_s:
0008d6           	.BYTE 0x2
                 _time_flow:
0008d8           	.BYTE 0x4
                 _tx_buffer0:
0008dc           	.BYTE 0x40
                 _tx_wr_index0:
00091c           	.BYTE 0x1
                 _tx_rd_index0:
00091d           	.BYTE 0x1
                 _tx_counter0:
00091e           	.BYTE 0x1
                 _station_receive:
00091f           	.BYTE 0xC
                 _tay_cam_receive:
00092b           	.BYTE 0x8
                 _data_receive:
000933           	.BYTE 0x12
                 _result:
000945           	.BYTE 0x1
                 __seed_G101:
000946           	.BYTE 0x4
                 _gfx_addr_G102:
00094a           	.BYTE 0x2
                 _gfx_buffer_G102:
00094c           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
000fcb 91ed      	LD   R30,X+
000fcc 91fd      	LD   R31,X+
000fcd 9631      	ADIW R30,1
000fce 93fe      	ST   -X,R31
000fcf 93ee      	ST   -X,R30
000fd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1:
                +
000fd1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fd2 958a     +DEC R24
000fd3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fd4 81e9      	LDD  R30,Y+1
000fd5 0fee      	LSL  R30
000fd6 83e9      	STD  Y+1,R30
000fd7 9adc      	SBI  0x1B,4
                +
000fd8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fd9 958a     +DEC R24
000fda f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fdb e0e0      	LDI  R30,0
000fdc 99cd      	SBIC 0x19,5
000fdd e0e1      	LDI  R30,1
000fde 81a9      	LDD  R26,Y+1
000fdf 2bea      	OR   R30,R26
000fe0 83e9      	STD  Y+1,R30
000fe1 98dc      	CBI  0x1B,4
000fe2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
000fe3 93aa      	ST   -Y,R26
000fe4 98da      	CBI  0x1B,2
000fe5 81e9      	LDD  R30,Y+1
000fe6 62e0      	ORI  R30,0x20
000fe7 2fae      	MOV  R26,R30
000fe8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000fe9 9ada      	SBI  0x1B,2
                +
000fea e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000feb 958a     +DEC R24
000fec f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000fed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000fee 940e 03ea 	CALL _SPI_RW_RX
000ff0 81a8      	LD   R26,Y
000ff1 940c 03ea 	JMP  _SPI_RW_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000ff3 940e 0434 	CALL _RF_Write3_RX
000ff5 e1e0      	LDI  R30,LOW(16)
000ff6 93ea      	ST   -Y,R30
000ff7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000ff8 93ea      	ST   -Y,R30
000ff9 e0af      	LDI  R26,LOW(15)
000ffa 940c 041e 	JMP  _RF_Write_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
000ffc e0f0      	LDI  R31,0
000ffd 93ed      	ST   X+,R30
000ffe 93fc      	ST   X,R31
000fff 940c 03fd 	JMP  _SPI_Read_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
001001 93ba      	ST   -Y,R27
001002 93aa      	ST   -Y,R26
001003 81a8      	LD   R26,Y
001004 81b9      	LDD  R27,Y+1
001005 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
001006 940e 0918 	CALL _glcd_clear
001008 e0e0      	LDI  R30,LOW(0)
001009 93ea      	ST   -Y,R30
00100a e0a0      	LDI  R26,LOW(0)
00100b 940c 0cb6 	JMP  _glcd_moveto
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
00100d eda0      	LDI  R26,LOW(_buff)
00100e e0b7      	LDI  R27,HIGH(_buff)
00100f 940c 0c8c 	JMP  _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
001011 1ba2      	SUB  R26,R18
001012 0bb3      	SBC  R27,R19
001013 a5ee      	LDD  R30,Y+46
001014 a5ff      	LDD  R31,Y+46+1
001015 17ea      	CP   R30,R26
001016 07fb      	CPC  R31,R27
001017 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC:
001018 ede0      	LDI  R30,LOW(_buff)
001019 e0f7      	LDI  R31,HIGH(_buff)
00101a 93fa      	ST   -Y,R31
00101b 93ea      	ST   -Y,R30
00101c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD:
00101d e9e3      	LDI  R30,LOW(_cmd)
00101e e0f6      	LDI  R31,HIGH(_cmd)
00101f 93fa      	ST   -Y,R31
001020 93ea      	ST   -Y,R30
001021 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
                +
001022 01de     +MOVW R26 , R28
001023 5ca0     +SUBI R26 , LOW ( - 64 )
001024 4fbf     +SBCI R27 , HIGH ( - 64 )
001025 900d     +LD R0 , X +
001026 91bc     +LD R27 , X
001027 2da0     +MOV R26 , R0
                 	__GETW2SX 64
001028 91ec      	LD   R30,X
001029 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
00102a 940e 04b7 	CALL _put_string
00102c e2ac      	LDI  R26,LOW(300)
00102d e0b1      	LDI  R27,HIGH(300)
00102e 940c 111f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
001030 93fa      	ST   -Y,R31
001031 93ea      	ST   -Y,R30
001032 e0a2      	LDI  R26,LOW(2)
001033 e0b0      	LDI  R27,0
001034 940e 04de 	CALL _wait_until
001036 e0a0      	LDI  R26,LOW(0)
001037 e0b0      	LDI  R27,0
001038 940c 04cc 	JMP  _refresh
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
00103a 93fa      	ST   -Y,R31
00103b 93ea      	ST   -Y,R30
00103c e0aa      	LDI  R26,LOW(10)
00103d e0b0      	LDI  R27,0
00103e 940c 04de 	JMP  _wait_until
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
001040 93fa      	ST   -Y,R31
001041 93ea      	ST   -Y,R30
001042 01de      	MOVW R26,R28
001043 965a      	ADIW R26,26
001044 940e 0803 	CALL _itoa
001046 cfd6      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
001047 01de      	MOVW R26,R28
001048 965a      	ADIW R26,26
001049 940e 07b5 	CALL _strcat
00104b 01de      	MOVW R26,R28
00104c 9658      	ADIW R26,24
00104d 940c 07d3 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
00104f 93ea      	ST   -Y,R30
001050 e3e0      	LDI  R30,LOW(48)
001051 93ea      	ST   -Y,R30
001052 e0af      	LDI  R26,LOW(15)
001053 940e 0cc2 	CALL _glcd_line
001055 e0e0      	LDI  R30,LOW(0)
001056 93ea      	ST   -Y,R30
001057 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
001058 93ea      	ST   -Y,R30
001059 e5e4      	LDI  R30,LOW(84)
00105a 93ea      	ST   -Y,R30
00105b e3a0      	LDI  R26,LOW(48)
00105c 940e 0cc2 	CALL _glcd_line
00105e e0e0      	LDI  R30,LOW(0)
00105f 93ea      	ST   -Y,R30
001060 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
001061 940e 0c8c 	CALL _glcd_outtext
001063 e0e4      	LDI  R30,LOW(4)
001064 93ea      	ST   -Y,R30
001065 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
001066 940e 0cb6 	CALL _glcd_moveto
001068 cfaf      	RJMP SUBOPT_0xC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
001069 940e 1141 	CALL __CWD1
00106b 940e 1160 	CALL __PUTPARD1
00106d e084      	LDI  R24,4
00106e 940e 0f26 	CALL _sprintf
001070 9628      	ADIW R28,8
001071 cf9b      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
001072 e4aa      	LDI  R26,LOW(_gfx_addr_G102)
001073 e0b9      	LDI  R27,HIGH(_gfx_addr_G102)
001074 cf56      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
001075 0fea      	ADD  R30,R26
001076 1ffb      	ADC  R31,R27
001077 83ee      	STD  Y+6,R30
001078 83ff      	STD  Y+6+1,R31
001079 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1B:
00107a 85ec      	LDD  R30,Y+12
00107b 93ea      	ST   -Y,R30
00107c 81ef      	LDD  R30,Y+7
00107d 85f8      	LDD  R31,Y+7+1
00107e 9631      	ADIW R30,1
00107f 83ef      	STD  Y+7,R30
001080 87f8      	STD  Y+7+1,R31
001081 9731      	SBIW R30,1
001082 93fa      	ST   -Y,R31
001083 93ea      	ST   -Y,R30
001084 e0a0      	LDI  R26,LOW(0)
001085 940c 0fac 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
001087 930a      	ST   -Y,R16
001088 89a8      	LDD  R26,Y+16
001089 940c 0853 	JMP  _pcd8544_setaddr_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D:
00108b 85ec      	LDD  R30,Y+12
00108c 93ea      	ST   -Y,R30
00108d 81ef      	LDD  R30,Y+7
00108e 85f8      	LDD  R31,Y+7+1
00108f 9631      	ADIW R30,1
001090 83ef      	STD  Y+7,R30
001091 87f8      	STD  Y+7+1,R31
001092 9731      	SBIW R30,1
001093 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
001094 2766      	CLR  R22
001095 2777      	CLR  R23
001096 01df      	MOVW R26,R30
001097 01cb      	MOVW R24,R22
001098 940c 0f8d 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
00109a 935a      	ST   -Y,R21
00109b 85aa      	LDD  R26,Y+10
00109c 940c 0f65 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
00109e 930a      	ST   -Y,R16
00109f 9503      	INC  R16
0010a0 89e8      	LDD  R30,Y+16
0010a1 93ea      	ST   -Y,R30
0010a2 935a      	ST   -Y,R21
0010a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
0010a4 2f5e      	MOV  R21,R30
0010a5 85ec      	LDD  R30,Y+12
0010a6 93ea      	ST   -Y,R30
0010a7 81af      	LDD  R26,Y+7
0010a8 85b8      	LDD  R27,Y+7+1
0010a9 2788      	CLR  R24
0010aa 2799      	CLR  R25
0010ab 940e 0f8d 	CALL _glcd_readmem
0010ad 2e1e      	MOV  R1,R30
0010ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22:
0010af 930a      	ST   -Y,R16
0010b0 9503      	INC  R16
0010b1 89e8      	LDD  R30,Y+16
0010b2 93ea      	ST   -Y,R30
0010b3 85ee      	LDD  R30,Y+14
0010b4 93ea      	ST   -Y,R30
0010b5 85e9      	LDD  R30,Y+9
0010b6 85fa      	LDD  R31,Y+9+1
0010b7 9631      	ADIW R30,1
0010b8 87e9      	STD  Y+9,R30
0010b9 87fa      	STD  Y+9+1,R31
0010ba 9731      	SBIW R30,1
0010bb cfd8      	RJMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
0010bc 940e 1186 	CALL __SAVELOCR6
                +
0010be 91e0 0670+LDS R30 , _glcd_state + ( 4 )
0010c0 91f0 0671+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
0010c3 01f8      	MOVW R30,R16
                +
0010c4 5f0f     +SUBI R16 , LOW ( - 1 )
0010c5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0010c6 9004      	LPM  R0,Z
0010c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
                +
0010c8 91e0 0670+LDS R30 , _glcd_state + ( 4 )
0010ca 91f0 0671+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010cc 9631      	ADIW R30,1
0010cd 91e4      	LPM  R30,Z
0010ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
0010cf 93ea      	ST   -Y,R30
0010d0 e0e0      	LDI  R30,LOW(0)
0010d1 93ea      	ST   -Y,R30
0010d2 e0e0      	LDI  R30,LOW(0)
0010d3 e0f0      	LDI  R31,HIGH(0)
0010d4 93fa      	ST   -Y,R31
0010d5 93ea      	ST   -Y,R30
0010d6 e0a9      	LDI  R26,LOW(9)
0010d7 940c 0991 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x27:
0010d9 81ae      	LDD  R26,Y+6
0010da 5faf      	SUBI R26,-LOW(1)
0010db 83ae      	STD  Y+6,R26
0010dc 50a1      	SUBI R26,LOW(1)
                +
0010dd 91e0 0674+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0010df 17ae      	CP   R26,R30
0010e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
0010e1 933a      	ST   -Y,R19
0010e2 85aa      	LDD  R26,Y+10
0010e3 940c 0c9c 	JMP  _glcd_putpixelm_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0010e5 85a9      	LDD  R26,Y+9
0010e6 85ba      	LDD  R27,Y+9+1
0010e7 0fea      	ADD  R30,R26
0010e8 1ffb      	ADC  R31,R27
0010e9 87e9      	STD  Y+9,R30
0010ea 87fa      	STD  Y+9+1,R31
0010eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0010ec 85e9      	LDD  R30,Y+9
0010ed 85fa      	LDD  R31,Y+9+1
0010ee 1bea      	SUB  R30,R26
0010ef 0bfb      	SBC  R31,R27
0010f0 87e9      	STD  Y+9,R30
0010f1 87fa      	STD  Y+9+1,R31
0010f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2B:
0010f3 932a      	ST   -Y,R18
0010f4 85ad      	LDD  R26,Y+13
0010f5 85be      	LDD  R27,Y+13+1
0010f6 85ef      	LDD  R30,Y+15
0010f7 89f8      	LDD  R31,Y+15+1
0010f8 9509      	ICALL
0010f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2C:
0010fa 89e8      	LDD  R30,Y+16
0010fb 89f9      	LDD  R31,Y+16+1
0010fc 9734      	SBIW R30,4
0010fd 8be8      	STD  Y+16,R30
0010fe 8bf9      	STD  Y+16+1,R31
0010ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
001100 85ad      	LDD  R26,Y+13
001101 85be      	LDD  R27,Y+13+1
001102 85ef      	LDD  R30,Y+15
001103 89f8      	LDD  R31,Y+15+1
001104 9509      	ICALL
001105 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E:
001106 89a8      	LDD  R26,Y+16
001107 89b9      	LDD  R27,Y+16+1
001108 9614      	ADIW R26,4
001109 940e 114e 	CALL __GETW1P
00110b 83ee      	STD  Y+6,R30
00110c 83ff      	STD  Y+6+1,R31
00110d 81ae      	LDD  R26,Y+6
00110e 81bf      	LDD  R27,Y+6+1
00110f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2F:
001110 89a8      	LDD  R26,Y+16
001111 89b9      	LDD  R27,Y+16+1
001112 9614      	ADIW R26,4
001113 940e 114e 	CALL __GETW1P
001115 87ea      	STD  Y+10,R30
001116 87fb      	STD  Y+10+1,R31
001117 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
001118 01de      	MOVW R26,R28
001119 961c      	ADIW R26,12
00111a 940e 1129 	CALL __ADDW2R15
00111c 940e 114e 	CALL __GETW1P
00111e 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00111f 9610      	adiw r26,0
001120 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001121 ed80     +LDI R24 , LOW ( 0x7D0 )
001122 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
001123 9701     +SBIW R24 , 1
001124 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001125 95a8      	wdr
001126 9711      	sbiw r26,1
001127 f7c9      	brne __delay_ms0
                 __delay_ms1:
001128 9508      	ret
                 
                 __ADDW2R15:
001129 2400      	CLR  R0
00112a 0daf      	ADD  R26,R15
00112b 1db0      	ADC  R27,R0
00112c 9508      	RET
                 
                 __ANEGW1:
00112d 95f1      	NEG  R31
00112e 95e1      	NEG  R30
00112f 40f0      	SBCI R31,0
001130 9508      	RET
                 
                 __LSLB12:
001131 23ee      	TST  R30
001132 2e0e      	MOV  R0,R30
001133 2fea      	MOV  R30,R26
001134 f019      	BREQ __LSLB12R
                 __LSLB12L:
001135 0fee      	LSL  R30
001136 940a      	DEC  R0
001137 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
001138 9508      	RET
                 
                 __LSRB12:
001139 23ee      	TST  R30
00113a 2e0e      	MOV  R0,R30
00113b 2fea      	MOV  R30,R26
00113c f019      	BREQ __LSRB12R
                 __LSRB12L:
00113d 95e6      	LSR  R30
00113e 940a      	DEC  R0
00113f f7e9      	BRNE __LSRB12L
                 __LSRB12R:
001140 9508      	RET
                 
                 __CWD1:
001141 2f6f      	MOV  R22,R31
001142 0f66      	ADD  R22,R22
001143 0b66      	SBC  R22,R22
001144 2f76      	MOV  R23,R22
001145 9508      	RET
                 
                 __MULW12U:
001146 9ffa      	MUL  R31,R26
001147 2df0      	MOV  R31,R0
001148 9feb      	MUL  R30,R27
001149 0df0      	ADD  R31,R0
00114a 9fea      	MUL  R30,R26
00114b 2de0      	MOV  R30,R0
00114c 0df1      	ADD  R31,R1
00114d 9508      	RET
                 
                 __GETW1P:
00114e 91ed      	LD   R30,X+
00114f 91fc      	LD   R31,X
001150 9711      	SBIW R26,1
001151 9508      	RET
                 
                 __GETD1P_INC:
001152 91ed      	LD   R30,X+
001153 91fd      	LD   R31,X+
001154 916d      	LD   R22,X+
001155 917d      	LD   R23,X+
001156 9508      	RET
                 
                 __PUTDP1_DEC:
001157 937e      	ST   -X,R23
001158 936e      	ST   -X,R22
001159 93fe      	ST   -X,R31
00115a 93ee      	ST   -X,R30
00115b 9508      	RET
                 
                 __GETW1PF:
00115c 9005      	LPM  R0,Z+
00115d 91f4      	LPM  R31,Z
00115e 2de0      	MOV  R30,R0
00115f 9508      	RET
                 
                 __PUTPARD1:
001160 937a      	ST   -Y,R23
001161 936a      	ST   -Y,R22
001162 93fa      	ST   -Y,R31
001163 93ea      	ST   -Y,R30
001164 9508      	RET
                 
                 __EEPROMRDB:
001165 99e1      	SBIC EECR,EEWE
001166 cffe      	RJMP __EEPROMRDB
001167 93ff      	PUSH R31
001168 b7ff      	IN   R31,SREG
001169 94f8      	CLI
00116a bbae      	OUT  EEARL,R26
00116b bbbf      	OUT  EEARH,R27
00116c 9ae0      	SBI  EECR,EERE
00116d b3ed      	IN   R30,EEDR
00116e bfff      	OUT  SREG,R31
00116f 91ff      	POP  R31
001170 9508      	RET
                 
                 __EEPROMWRB:
001171 9be1      	SBIS EECR,EEWE
001172 c002      	RJMP __EEPROMWRB1
001173 95a8      	WDR
001174 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001175 b79f      	IN   R25,SREG
001176 94f8      	CLI
001177 bbae      	OUT  EEARL,R26
001178 bbbf      	OUT  EEARH,R27
001179 9ae0      	SBI  EECR,EERE
00117a b38d      	IN   R24,EEDR
00117b 17e8      	CP   R30,R24
00117c f019      	BREQ __EEPROMWRB0
00117d bbed      	OUT  EEDR,R30
00117e 9ae2      	SBI  EECR,EEMWE
00117f 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
001180 bf9f      	OUT  SREG,R25
001181 9508      	RET
                 
                 __CPW02:
001182 2400      	CLR  R0
001183 160a      	CP   R0,R26
001184 060b      	CPC  R0,R27
001185 9508      	RET
                 
                 __SAVELOCR6:
001186 935a      	ST   -Y,R21
                 __SAVELOCR5:
001187 934a      	ST   -Y,R20
                 __SAVELOCR4:
001188 933a      	ST   -Y,R19
                 __SAVELOCR3:
001189 932a      	ST   -Y,R18
                 __SAVELOCR2:
00118a 931a      	ST   -Y,R17
00118b 930a      	ST   -Y,R16
00118c 9508      	RET
                 
                 __LOADLOCR6:
00118d 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00118e 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00118f 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001190 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001191 8119      	LDD  R17,Y+1
001192 8108      	LD   R16,Y
001193 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  36 r1 :   5 r2 :   1 r3 :   0 r4 :   1 r5 :   0 r6 :   1 r7 :   5 
r8 :   3 r9 :   1 r10:  13 r11:   3 r12:   4 r13:   2 r14:   0 r15:   4 
r16: 102 r17: 138 r18:  69 r19:  54 r20:  36 r21:  52 r22:  43 r23:  11 
r24:  50 r25:  16 r26: 536 r27: 200 r28:  53 r29:   1 r30:1118 r31: 262 
x  :  57 y  : 788 z  :  38 
Registers used: 32 out of 35 (91.4%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  23 add   :  37 
adiw  :  70 and   :  10 andi  :  19 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  52 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   7 brmi  :   1 brne  : 114 brpl  :   4 brsh  :  26 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 272 
cbi   :  17 cbr   :   0 clc   :   0 clh   :   0 cli   :   4 cln   :   0 
clr   :  36 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :  10 
cp    :  41 cpc   :  21 cpi   : 117 cpse  :   0 dec   :  10 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  10 inc   :   5 jmp   :  73 ld    : 106 ldd   : 354 
ldi   : 476 lds   :  75 lpm   :  30 lsl   :   8 lsr   :  15 mov   : 115 
movw  :  89 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   8 ori   :  15 out   :  58 pop   :  12 push  :  12 rcall : 103 
ret   :  79 reti  :   4 rjmp  : 175 rol   :   3 ror   :   0 sbc   :   7 
sbci  :  24 sbi   :  25 sbic  :   6 sbis  :   1 sbiw  :  44 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   2 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 292 std   : 111 sts   :  70 sub   :  16 subi  :  73 
swap  :   0 tst   :  14 wdr   :   2 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002328   7860   1140   9000  131072   6.9%
[.dseg] 0x000100 0x000b44      0   1604   1604    4096  39.2%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 13 warnings
