
AVRASM ver. 2.1.30  C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm Sat Sep 09 18:09:55 2017

C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1090): warning: Register r5 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1091): warning: Register r4 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1092): warning: Register r7 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1093): warning: Register r6 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1094): warning: Register r9 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1095): warning: Register r8 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1096): warning: Register r11 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1097): warning: Register r12 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1098): warning: Register r13 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1099): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _P_Add=R5
                 	.DEF _Code_tay_cam1=R4
                 	.DEF _Code_tay_cam2=R7
                 	.DEF _Code_tay_cam3=R6
                 	.DEF _Code_tay_cam4=R9
                 	.DEF _p=R8
                 	.DEF _lan_bam=R11
                 	.DEF _count=R12
                 	.DEF _count_msb=R13
                 	.DEF _flag=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0282 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 031b 	JMP  _timer2_ovf_isr
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0346 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 02c3 	JMP  _usart0_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 02f7 	JMP  _usart0_tx_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G105:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G105:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000146 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000147 00a1
000148 a2a3      	.DB  0xA1,0x0,0xA3,0xA2
000149 a400
00014a 0000      	.DB  0x0,0xA4,0x0,0x0
                 
                 _0x4:
00014b 0500
00014c 0501
00014d 0512
00014e 0523      	.DB  LOW(_0x3),HIGH(_0x3),LOW(_0x3+1),HIGH(_0x3+1),LOW(_0x3+18),HIGH(_0x3+18),LOW(_0x3+35),HIGH(_0x3+35)
00014f 0534      	.DB  LOW(_0x3+52),HIGH(_0x3+52)
                 _0xCE:
000150 4547
000151 2054
000152 752f
000153 6470      	.DB  0x47,0x45,0x54,0x20,0x2F,0x75,0x70,0x64
000154 7461
000155 3f65
000156 656b
000157 3d79      	.DB  0x61,0x74,0x65,0x3F,0x6B,0x65,0x79,0x3D
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1230): warning: .cseg .db misalignment - padding zero byte
000158 0000      	.DB  0x0
                 _0x0:
000159 3400
00015a 375a
00015b 4741
00015c 4636      	.DB  0x0,0x34,0x5A,0x37,0x41,0x47,0x36,0x46
00015d 4553
00015e 3442
00015f 5848
000160 5534      	.DB  0x53,0x45,0x42,0x34,0x48,0x58,0x34,0x55
000161 0058
000162 5a4d
000163 3053
000164 4f56      	.DB  0x58,0x0,0x4D,0x5A,0x53,0x30,0x56,0x4F
000165 4e4a
000166 5750
000167 4b4d
000168 4549      	.DB  0x4A,0x4E,0x50,0x57,0x4D,0x4B,0x49,0x45
000169 3736
00016a 5000
00016b 3053
00016c 3332      	.DB  0x36,0x37,0x0,0x50,0x53,0x30,0x32,0x33
00016d 3752
00016e 3754
00016f 564d
000170 4255      	.DB  0x52,0x37,0x54,0x37,0x4D,0x56,0x55,0x42
000171 4553
000172 0057
000173 3643
000174 5631      	.DB  0x53,0x45,0x57,0x0,0x43,0x36,0x31,0x56
000175 304c
000176 365a
000177 4449
000178 364b      	.DB  0x4C,0x30,0x5A,0x36,0x49,0x44,0x4B,0x36
000179 3957
00017a 4752
00017b 4500
00017c 5252      	.DB  0x57,0x39,0x52,0x47,0x0,0x45,0x52,0x52
00017d 524f
00017e 4100
00017f 2b54
000180 4943      	.DB  0x4F,0x52,0x0,0x41,0x54,0x2B,0x43,0x49
000181 4d50
000182 444f
000183 3d45
000184 0030      	.DB  0x50,0x4D,0x4F,0x44,0x45,0x3D,0x30,0x0
000185 0a0d
000186 4f00
000187 004b
000188 5441      	.DB  0xD,0xA,0x0,0x4F,0x4B,0x0,0x41,0x54
000189 432b
00018a 5049
00018b 554d
00018c 3d58      	.DB  0x2B,0x43,0x49,0x50,0x4D,0x55,0x58,0x3D
00018d 0031
00018e 5441
00018f 432b
000190 5049      	.DB  0x31,0x0,0x41,0x54,0x2B,0x43,0x49,0x50
000191 5453
000192 5241
000193 3d54
000194 2c30      	.DB  0x53,0x54,0x41,0x52,0x54,0x3D,0x30,0x2C
000195 5422
000196 5043
000197 2c22
000198 6122      	.DB  0x22,0x54,0x43,0x50,0x22,0x2C,0x22,0x61
000199 6970
00019a 742e
00019b 6968
00019c 676e      	.DB  0x70,0x69,0x2E,0x74,0x68,0x69,0x6E,0x67
00019d 7073
00019e 6165
00019f 2e6b
0001a0 6f63      	.DB  0x73,0x70,0x65,0x61,0x6B,0x2E,0x63,0x6F
0001a1 226d
0001a2 382c
0001a3 0030
0001a4 6553      	.DB  0x6D,0x22,0x2C,0x38,0x30,0x0,0x53,0x65
0001a5 7672
0001a6 7265
0001a7 6320
0001a8 6e6f      	.DB  0x72,0x76,0x65,0x72,0x20,0x63,0x6F,0x6E
0001a9 656e
0001aa 7463
0001ab 6465
0001ac 2600      	.DB  0x6E,0x65,0x63,0x74,0x65,0x64,0x0,0x26
0001ad 6966
0001ae 6c65
0001af 3164
0001b0 003d      	.DB  0x66,0x69,0x65,0x6C,0x64,0x31,0x3D,0x0
0001b1 6626
0001b2 6569
0001b3 646c
0001b4 3d32      	.DB  0x26,0x66,0x69,0x65,0x6C,0x64,0x32,0x3D
0001b5 2600
0001b6 6966
0001b7 6c65
0001b8 3364      	.DB  0x0,0x26,0x66,0x69,0x65,0x6C,0x64,0x33
0001b9 003d
0001ba 5441
0001bb 432b
0001bc 5049      	.DB  0x3D,0x0,0x41,0x54,0x2B,0x43,0x49,0x50
0001bd 4553
0001be 444e
0001bf 303d
0001c0 002c      	.DB  0x53,0x45,0x4E,0x44,0x3D,0x30,0x2C,0x0
0001c1 203e
0001c2 5300
0001c3 6e65
0001c4 6964      	.DB  0x3E,0x20,0x0,0x53,0x65,0x6E,0x64,0x69
0001c5 676e
0001c6 4900
0001c7 5044
0001c8 4e00      	.DB  0x6E,0x67,0x0,0x49,0x44,0x50,0x0,0x4E
0001c9 646f
0001ca 3a65
0001cb 0020
0001cc 6554      	.DB  0x6F,0x64,0x65,0x3A,0x20,0x0,0x54,0x65
0001cd 706d
0001ce 203a
0001cf 4800
0001d0 6d75      	.DB  0x6D,0x70,0x3A,0x20,0x0,0x48,0x75,0x6D
0001d1 6469
0001d2 203a
0001d3 5700
0001d4 7461      	.DB  0x69,0x64,0x3A,0x20,0x0,0x57,0x61,0x74
0001d5 7265
0001d6 203a
0001d7 6d00
0001d8 006d      	.DB  0x65,0x72,0x3A,0x20,0x0,0x6D,0x6D,0x0
0001d9 6425
0001da 0020
0001db 6425
0001dc 2020      	.DB  0x25,0x64,0x20,0x0,0x25,0x64,0x20,0x20
0001dd 4100
0001de 0d54
0001df 000a
0001e0 5441      	.DB  0x0,0x41,0x54,0xD,0xA,0x0,0x41,0x54
0001e1 432b
0001e2 4d57
0001e3 444f
0001e4 3d45      	.DB  0x2B,0x43,0x57,0x4D,0x4F,0x44,0x45,0x3D
0001e5 0d31
0001e6 000a
0001e7 5441
0001e8 432b      	.DB  0x31,0xD,0xA,0x0,0x41,0x54,0x2B,0x43
0001e9 4a57
0001ea 5041
0001eb 223d
0001ec 6854      	.DB  0x57,0x4A,0x41,0x50,0x3D,0x22,0x54,0x68
0001ed 7961
0001ee 545f
0001ef 6168
0001f0 5f6f      	.DB  0x61,0x79,0x5F,0x54,0x68,0x61,0x6F,0x5F
0001f1 6564
0001f2 5f6f
0001f3 6967
0001f4 6961      	.DB  0x64,0x65,0x6F,0x5F,0x67,0x69,0x61,0x69
0001f5 2c22
0001f6 6322
0001f7 6968
0001f8 686e      	.DB  0x22,0x2C,0x22,0x63,0x68,0x69,0x6E,0x68
0001f9 6178
0001fa 2263
0001fb 0a0d
0001fc 7300      	.DB  0x78,0x61,0x63,0x22,0xD,0xA,0x0,0x73
0001fd 6174
0001fe 7472
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1273): warning: .cseg .db misalignment - padding zero byte
0001ff 0000      	.DB  0x74,0x61,0x72,0x74,0x0
                 _0x2020060:
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1275): warning: .cseg .db misalignment - padding zero byte
000200 0001      	.DB  0x1
                 _0x2020000:
000201 4e2d
000202 4e41
000203 4900
000204 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1278): warning: .cseg .db misalignment - padding zero byte
000205 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000206 0001      	.DW  0x01
000207 0002      	.DW  0x02
000208 028c      	.DW  __REG_BIT_VARS*2
                 
000209 0008      	.DW  0x08
00020a 0004      	.DW  0x04
00020b 028e      	.DW  __REG_VARS*2
                 
00020c 0001      	.DW  0x01
00020d 0500      	.DW  _0x3
00020e 02b2      	.DW  _0x0*2
                 
00020f 0011      	.DW  0x11
000210 0501      	.DW  _0x3+1
000211 02b3      	.DW  _0x0*2+1
                 
000212 0011      	.DW  0x11
000213 0512      	.DW  _0x3+18
000214 02c4      	.DW  _0x0*2+18
                 
000215 0011      	.DW  0x11
000216 0523      	.DW  _0x3+35
000217 02d5      	.DW  _0x0*2+35
                 
000218 0011      	.DW  0x11
000219 0534      	.DW  _0x3+52
00021a 02e6      	.DW  _0x0*2+52
                 
00021b 000a      	.DW  0x0A
00021c 067c      	.DW  _key
00021d 0296      	.DW  _0x4*2
                 
00021e 0006      	.DW  0x06
00021f 0545      	.DW  _0xCD
000220 02f7      	.DW  _0x0*2+69
                 
000221 000d      	.DW  0x0D
000222 054b      	.DW  _0xD2
000223 02fd      	.DW  _0x0*2+75
                 
000224 0003      	.DW  0x03
000225 0558      	.DW  _0xD2+13
000226 030a      	.DW  _0x0*2+88
                 
000227 0003      	.DW  0x03
000228 055b      	.DW  _0xD2+16
000229 030d      	.DW  _0x0*2+91
                 
00022a 000c      	.DW  0x0C
00022b 055e      	.DW  _0xD2+19
00022c 0310      	.DW  _0x0*2+94
                 
00022d 0003      	.DW  0x03
00022e 056a      	.DW  _0xD2+31
00022f 030a      	.DW  _0x0*2+88
                 
000230 0003      	.DW  0x03
000231 056d      	.DW  _0xD2+34
000232 030d      	.DW  _0x0*2+91
                 
000233 002c      	.DW  0x2C
000234 0570      	.DW  _0xD2+37
000235 031c      	.DW  _0x0*2+106
                 
000236 0003      	.DW  0x03
000237 059c      	.DW  _0xD2+81
000238 030a      	.DW  _0x0*2+88
                 
000239 0003      	.DW  0x03
00023a 059f      	.DW  _0xD2+84
00023b 030d      	.DW  _0x0*2+91
                 
00023c 0011      	.DW  0x11
00023d 05a2      	.DW  _0xD2+87
00023e 0348      	.DW  _0x0*2+150
                 
00023f 0009      	.DW  0x09
000240 05b3      	.DW  _0xD2+104
000241 0359      	.DW  _0x0*2+167
                 
000242 0009      	.DW  0x09
000243 05bc      	.DW  _0xD2+113
000244 0362      	.DW  _0x0*2+176
                 
000245 0009      	.DW  0x09
000246 05c5      	.DW  _0xD2+122
000247 036b      	.DW  _0x0*2+185
                 
000248 000e      	.DW  0x0E
000249 05ce      	.DW  _0xD2+131
00024a 0374      	.DW  _0x0*2+194
                 
00024b 0003      	.DW  0x03
00024c 05dc      	.DW  _0xD2+145
00024d 030a      	.DW  _0x0*2+88
                 
00024e 0003      	.DW  0x03
00024f 05df      	.DW  _0xD2+148
000250 0382      	.DW  _0x0*2+208
                 
000251 0003      	.DW  0x03
000252 05e2      	.DW  _0xD2+151
000253 030a      	.DW  _0x0*2+88
                 
000254 0008      	.DW  0x08
000255 05e5      	.DW  _0xD2+154
000256 0385      	.DW  _0x0*2+211
                 
000257 0004      	.DW  0x04
000258 05ed      	.DW  _0xD2+162
000259 038d      	.DW  _0x0*2+219
                 
00025a 0007      	.DW  0x07
00025b 05f1      	.DW  _0xD6
00025c 0391      	.DW  _0x0*2+223
                 
00025d 0007      	.DW  0x07
00025e 05f8      	.DW  _0xD6+7
00025f 0398      	.DW  _0x0*2+230
                 
000260 0008      	.DW  0x08
000261 05ff      	.DW  _0xD6+14
000262 039f      	.DW  _0x0*2+237
                 
000263 0008      	.DW  0x08
000264 0607      	.DW  _0xD6+22
000265 03a7      	.DW  _0x0*2+245
                 
000266 0003      	.DW  0x03
000267 060f      	.DW  _0xD6+30
000268 03af      	.DW  _0x0*2+253
                 
000269 0005      	.DW  0x05
00026a 0612      	.DW  _0xDE
00026b 03bb      	.DW  _0x0*2+265
                 
00026c 0003      	.DW  0x03
00026d 0617      	.DW  _0xDE+5
00026e 030d      	.DW  _0x0*2+91
                 
00026f 000e      	.DW  0x0E
000270 061a      	.DW  _0xDE+8
000271 03c0      	.DW  _0x0*2+270
                 
000272 0003      	.DW  0x03
000273 0628      	.DW  _0xDE+22
000274 030d      	.DW  _0x0*2+91
                 
000275 002b      	.DW  0x2B
000276 062b      	.DW  _0xDE+25
000277 03ce      	.DW  _0x0*2+284
                 
000278 0003      	.DW  0x03
000279 0656      	.DW  _0xDE+68
00027a 030d      	.DW  _0x0*2+91
                 
00027b 0006      	.DW  0x06
00027c 0659      	.DW  _0xDE+71
00027d 03f9      	.DW  _0x0*2+327
                 
00027e 0001      	.DW  0x01
00027f 084d      	.DW  __seed_G101
000280 0400      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000281 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000282 94f8      	CLI
000283 27ee      	CLR  R30
000284 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000285 e0f1      	LDI  R31,1
000286 bff5      	OUT  MCUCR,R31
000287 bfe5      	OUT  MCUCR,R30
000288 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00028a e08d      	LDI  R24,(14-2)+1
00028b e0a2      	LDI  R26,2
00028c 27bb      	CLR  R27
                 __CLEAR_REG:
00028d 93ed      	ST   X+,R30
00028e 958a      	DEC  R24
00028f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000290 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000291 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000292 e0a0      	LDI  R26,LOW(__SRAM_START)
000293 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000294 93ed      	ST   X+,R30
000295 9701      	SBIW R24,1
000296 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000297 e0ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000298 e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000299 9185      	LPM  R24,Z+
00029a 9195      	LPM  R25,Z+
00029b 9700      	SBIW R24,0
00029c f061      	BREQ __GLOBAL_INI_END
00029d 91a5      	LPM  R26,Z+
00029e 91b5      	LPM  R27,Z+
00029f 9005      	LPM  R0,Z+
0002a0 9015      	LPM  R1,Z+
0002a1 01bf      	MOVW R22,R30
0002a2 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002a3 9005      	LPM  R0,Z+
0002a4 920d      	ST   X+,R0
0002a5 9701      	SBIW R24,1
0002a6 f7e1      	BRNE __GLOBAL_INI_LOOP
0002a7 01fb      	MOVW R30,R22
0002a8 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0002a9 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002aa efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002ab bfed      	OUT  SPL,R30
0002ac e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002ad bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002ae e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002af e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002b0 940c 0675 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;unsigned char P_Add;
                 ;unsigned char P_Add, Code_tay_cam1 = 0xA1, Code_tay_cam2 = 0xA2, Code_tay_cam3 = 0xA3, Code_tay_cam4 = 0xA4;
                 ;unsigned char p=0,lan_bam=0;
                 ;int count;
                 ;bool flag;
                 ;unsigned char* key[] = {"", "4Z7AG6FSEB4HX4UX", "MZS0VOJNPWMKIE67", "PS023R7T7MVUBSEW", "C61VL0Z6IDK6W9RG"};
                 
                 	.DSEG
                 _0x3:
000500           	.BYTE 0x45
                 ;
                 ;unsigned int dem=0;
                 ;#define CE PORTA.3
                 ;#define CSN PORTA.2
                 ;#define SCK PORTA.4
                 ;#define MOSI PORTA.1
                 ;#define MISO PINA.5
                 ;#define IRQ PINA.0
                 ;
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE0)
                 ;#define RX_COMPLETE (1<<RXC0)
                 ;#define FRAMING_ERROR (1<<FE0)
                 ;#define PARITY_ERROR (1<<UPE0)
                 ;#define DATA_OVERRUN (1<<DOR0)
                 ;
                 ;// USART0 Receiver buffer
                 ;#define RX_BUFFER_SIZE0 64
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;#if RX_BUFFER_SIZE0 <= 256
                 ;unsigned char rx_wr_index0=0,rx_rd_index0=0;
                 ;#else
                 ;unsigned int rx_wr_index0=0,rx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE0 < 256
                 ;unsigned char rx_counter0=0;
                 ;#else
                 ;unsigned int rx_counter0=0;
                 ;#endif
                 ;
                 ;char buff[260];
                 ;int i = 0, time_s = 0;
                 ;long time_flow = 0;
                 ;
                 ;void del_string(unsigned char *s) {
                 ; 0000 0035 void del_string(unsigned char *s) {
                 
                 	.CSEG
                 _del_string:
                 ; .FSTART _del_string
                 ; 0000 0036     while (*s) {
0002b2 93ba      	ST   -Y,R27
0002b3 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0x5:
0002b4 81a8      	LD   R26,Y
0002b5 81b9      	LDD  R27,Y+1
0002b6 91ec      	LD   R30,X
0002b7 30e0      	CPI  R30,0
0002b8 f041      	BREQ _0x7
                 ; 0000 0037         *s = '\0';
0002b9 e0e0      	LDI  R30,LOW(0)
0002ba 93ec      	ST   X,R30
                 ; 0000 0038         s++;
0002bb 81e8      	LD   R30,Y
0002bc 81f9      	LDD  R31,Y+1
0002bd 9631      	ADIW R30,1
0002be 83e8      	ST   Y,R30
0002bf 83f9      	STD  Y+1,R31
                 ; 0000 0039     }
0002c0 cff3      	RJMP _0x5
                 _0x7:
                 ; 0000 003A }
0002c1 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void) {
                 ; 0000 0040 interrupt [19] void usart0_rx_isr(void) {
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
0002c3 940e 0faf 	CALL SUBOPT_0x0
                 ; 0000 0041     char status,data;
                 ; 0000 0042     status=UCSR0A;
0002c5 931a      	ST   -Y,R17
0002c6 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0002c7 b11b      	IN   R17,11
                 ; 0000 0043     data=UDR0;
0002c8 b10c      	IN   R16,12
                 ; 0000 0044     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0) {
0002c9 2fe1      	MOV  R30,R17
0002ca 71ec      	ANDI R30,LOW(0x1C)
0002cb f4e9      	BRNE _0x8
                 ; 0000 0045         rx_buffer0[rx_wr_index0++]=data;
0002cc 91e0 06c8 	LDS  R30,_rx_wr_index0
0002ce 5fef      	SUBI R30,-LOW(1)
0002cf 93e0 06c8 	STS  _rx_wr_index0,R30
0002d1 50e1      	SUBI R30,LOW(1)
0002d2 e0f0      	LDI  R31,0
0002d3 57e8      	SUBI R30,LOW(-_rx_buffer0)
0002d4 4ff9      	SBCI R31,HIGH(-_rx_buffer0)
0002d5 8300      	ST   Z,R16
                 ; 0000 0046 #if RX_BUFFER_SIZE0 == 256
                 ; 0000 0047         // special case for receiver buffer size=256
                 ; 0000 0048         if (++rx_counter0 == 0) rx_buffer_overflow0=1;
                 ; 0000 0049 #else
                 ; 0000 004A         if (rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0=0;
0002d6 91a0 06c8 	LDS  R26,_rx_wr_index0
0002d8 34a0      	CPI  R26,LOW(0x40)
0002d9 f419      	BRNE _0x9
0002da e0e0      	LDI  R30,LOW(0)
0002db 93e0 06c8 	STS  _rx_wr_index0,R30
                 ; 0000 004B         if (++rx_counter0 == RX_BUFFER_SIZE0) {
                 _0x9:
0002dd 91a0 06ca 	LDS  R26,_rx_counter0
0002df 5faf      	SUBI R26,-LOW(1)
0002e0 93a0 06ca 	STS  _rx_counter0,R26
0002e2 34a0      	CPI  R26,LOW(0x40)
0002e3 f429      	BRNE _0xA
                 ; 0000 004C             rx_counter0=0;
0002e4 e0e0      	LDI  R30,LOW(0)
0002e5 93e0 06ca 	STS  _rx_counter0,R30
                 ; 0000 004D             rx_buffer_overflow0=1;
0002e7 9468      	SET
0002e8 f820      	BLD  R2,0
                 ; 0000 004E         }
                 ; 0000 004F #endif
                 ; 0000 0050     }
                 _0xA:
                 ; 0000 0051     buff[i] = data;
                 _0x8:
0002e9 91e0 07cf 	LDS  R30,_i
0002eb 91f0 07d0 	LDS  R31,_i+1
0002ed 53e5      	SUBI R30,LOW(-_buff)
0002ee 4ff9      	SBCI R31,HIGH(-_buff)
0002ef 8300      	ST   Z,R16
                 ; 0000 0052     i++;
0002f0 ecaf      	LDI  R26,LOW(_i)
0002f1 e0b7      	LDI  R27,HIGH(_i)
0002f2 940e 0fb6 	CALL SUBOPT_0x1
                 ; 0000 0053 }
0002f4 9109      	LD   R16,Y+
0002f5 9119      	LD   R17,Y+
0002f6 c048      	RJMP _0xEA
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void) {
                 ; 0000 0059 char getchar(void) {
                 ; 0000 005A     char data;
                 ; 0000 005B     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0000 005C     data=rx_buffer0[rx_rd_index0++];
                 ; 0000 005D #if RX_BUFFER_SIZE0 != 256
                 ; 0000 005E     if (rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0=0;
                 ; 0000 005F #endif
                 ; 0000 0060 #asm("cli")
                 ; 0000 0061     --rx_counter0;
                 ; 0000 0062 #asm("sei")
                 ; 0000 0063     return data;
                 ; 0000 0064 }
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// USART0 Transmitter buffer
                 ;#define TX_BUFFER_SIZE0 64
                 ;char tx_buffer0[TX_BUFFER_SIZE0];
                 ;
                 ;#if TX_BUFFER_SIZE0 <= 256
                 ;unsigned char tx_wr_index0=0,tx_rd_index0=0;
                 ;#else
                 ;unsigned int tx_wr_index0=0,tx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if TX_BUFFER_SIZE0 < 256
                 ;unsigned char tx_counter0=0;
                 ;#else
                 ;unsigned int tx_counter0=0;
                 ;#endif
                 ;
                 ;// USART0 Transmitter interrupt service routine
                 ;interrupt [USART0_TXC] void usart0_tx_isr(void) {
                 ; 0000 0079 interrupt [21] void usart0_tx_isr(void) {
                 _usart0_tx_isr:
                 ; .FSTART _usart0_tx_isr
0002f7 93aa      	ST   -Y,R26
0002f8 93ea      	ST   -Y,R30
0002f9 93fa      	ST   -Y,R31
0002fa b7ef      	IN   R30,SREG
0002fb 93ea      	ST   -Y,R30
                 ; 0000 007A     if (tx_counter0) {
0002fc 91e0 0819 	LDS  R30,_tx_counter0
0002fe 30e0      	CPI  R30,0
0002ff f0a9      	BREQ _0xF
                 ; 0000 007B         --tx_counter0;
000300 50e1      	SUBI R30,LOW(1)
000301 93e0 0819 	STS  _tx_counter0,R30
                 ; 0000 007C         UDR0=tx_buffer0[tx_rd_index0++];
000303 91e0 0818 	LDS  R30,_tx_rd_index0
000305 5fef      	SUBI R30,-LOW(1)
000306 93e0 0818 	STS  _tx_rd_index0,R30
000308 50e1      	SUBI R30,LOW(1)
000309 e0f0      	LDI  R31,0
00030a 52e9      	SUBI R30,LOW(-_tx_buffer0)
00030b 4ff8      	SBCI R31,HIGH(-_tx_buffer0)
00030c 81e0      	LD   R30,Z
00030d b9ec      	OUT  0xC,R30
                 ; 0000 007D #if TX_BUFFER_SIZE0 != 256
                 ; 0000 007E         if (tx_rd_index0 == TX_BUFFER_SIZE0) tx_rd_index0=0;
00030e 91a0 0818 	LDS  R26,_tx_rd_index0
000310 34a0      	CPI  R26,LOW(0x40)
000311 f419      	BRNE _0x10
000312 e0e0      	LDI  R30,LOW(0)
000313 93e0 0818 	STS  _tx_rd_index0,R30
                 ; 0000 007F #endif
                 ; 0000 0080     }
                 _0x10:
                 ; 0000 0081 }
                 _0xF:
000315 91e9      	LD   R30,Y+
000316 bfef      	OUT  SREG,R30
000317 91f9      	LD   R31,Y+
000318 91e9      	LD   R30,Y+
000319 91a9      	LD   R26,Y+
00031a 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0083 {
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
00031b 940e 0faf 	CALL SUBOPT_0x0
                 ; 0000 0084 TCNT2=0xB2;    //10ms
00031d ebe2      	LDI  R30,LOW(178)
00031e bde4      	OUT  0x24,R30
                 ; 0000 0085 if(flag == true)
00031f e0e1      	LDI  R30,LOW(1)
000320 15ea      	CP   R30,R10
000321 f421      	BRNE _0x11
                 ; 0000 0086     dem++;
000322 e8a6      	LDI  R26,LOW(_dem)
000323 e0b6      	LDI  R27,HIGH(_dem)
000324 940e 0fb6 	CALL SUBOPT_0x1
                 ; 0000 0087 if(dem == 500){
                 _0x11:
000326 91a0 0686 	LDS  R26,_dem
000328 91b0 0687 	LDS  R27,_dem+1
00032a 3fa4      	CPI  R26,LOW(0x1F4)
00032b e0e1      	LDI  R30,HIGH(0x1F4)
00032c 07be      	CPC  R27,R30
00032d f489      	BRNE _0x12
                 ; 0000 0088     flag = false;
00032e 24aa      	CLR  R10
                 ; 0000 0089     count++;
00032f 01f6      	MOVW R30,R12
000330 9631      	ADIW R30,1
000331 016f      	MOVW R12,R30
                 ; 0000 008A     dem = 0;
000332 e0e0      	LDI  R30,LOW(0)
000333 93e0 0686 	STS  _dem,R30
000335 93e0 0687 	STS  _dem+1,R30
                 ; 0000 008B     if(count == 5)
000337 e0e5      	LDI  R30,LOW(5)
000338 e0f0      	LDI  R31,HIGH(5)
000339 15ec      	CP   R30,R12
00033a 05fd      	CPC  R31,R13
00033b f419      	BRNE _0x13
                 ; 0000 008C         count = 1;
00033c e0e1      	LDI  R30,LOW(1)
00033d e0f0      	LDI  R31,HIGH(1)
00033e 016f      	MOVW R12,R30
                 ; 0000 008D }
                 _0x13:
                 ; 0000 008E }
                 _0x12:
                 _0xEA:
00033f 91e9      	LD   R30,Y+
000340 bfef      	OUT  SREG,R30
000341 91f9      	LD   R31,Y+
000342 91e9      	LD   R30,Y+
000343 91b9      	LD   R27,Y+
000344 91a9      	LD   R26,Y+
000345 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void) {
                 ; 0000 008F interrupt [17] void timer0_ovf_isr(void) {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000346 936a      	ST   -Y,R22
000347 937a      	ST   -Y,R23
000348 938a      	ST   -Y,R24
000349 939a      	ST   -Y,R25
00034a 93aa      	ST   -Y,R26
00034b 93ba      	ST   -Y,R27
00034c 93ea      	ST   -Y,R30
00034d 93fa      	ST   -Y,R31
00034e b7ef      	IN   R30,SREG
00034f 93ea      	ST   -Y,R30
                 ; 0000 0090     //0.02 ms => 50k = 1s.
                 ; 0000 0091     TCNT0=0x60;
000350 e6e0      	LDI  R30,LOW(96)
000351 bfe2      	OUT  0x32,R30
                 ; 0000 0092     // Place your code here
                 ; 0000 0093     time_flow++;
000352 eda3      	LDI  R26,LOW(_time_flow)
000353 e0b7      	LDI  R27,HIGH(_time_flow)
000354 940e 1149 	CALL __GETD1P_INC
                +
000356 5fef     +SUBI R30 , LOW ( - 1 )
000357 4fff     +SBCI R31 , HIGH ( - 1 )
000358 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000359 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00035a 940e 114e 	CALL __PUTDP1_DEC
                 ; 0000 0094 
                 ; 0000 0095     if (time_flow == 50000) {
00035c 91a0 07d3 	LDS  R26,_time_flow
00035e 91b0 07d4 	LDS  R27,_time_flow+1
000360 9180 07d5 	LDS  R24,_time_flow+2
000362 9190 07d6 	LDS  R25,_time_flow+3
                +
000364 35a0     +CPI R26 , LOW ( 0xC350 )
000365 ece3     +LDI R30 , HIGH ( 0xC350 )
000366 07be     +CPC R27 , R30
000367 e0e0     +LDI R30 , BYTE3 ( 0xC350 )
000368 078e     +CPC R24 , R30
000369 e0e0     +LDI R30 , BYTE4 ( 0xC350 )
00036a 079e     +CPC R25 , R30
                 	__CPD2N 0xC350
00036b f469      	BRNE _0x14
                 ; 0000 0096         time_s++;
00036c eda1      	LDI  R26,LOW(_time_s)
00036d e0b7      	LDI  R27,HIGH(_time_s)
00036e 940e 0fb6 	CALL SUBOPT_0x1
                 ; 0000 0097         time_flow = 0;
000370 e0e0      	LDI  R30,LOW(0)
000371 93e0 07d3 	STS  _time_flow,R30
000373 93e0 07d4 	STS  _time_flow+1,R30
000375 93e0 07d5 	STS  _time_flow+2,R30
000377 93e0 07d6 	STS  _time_flow+3,R30
                 ; 0000 0098     }
                 ; 0000 0099 }
                 _0x14:
000379 91e9      	LD   R30,Y+
00037a bfef      	OUT  SREG,R30
00037b 91f9      	LD   R31,Y+
00037c 91e9      	LD   R30,Y+
00037d 91b9      	LD   R27,Y+
00037e 91a9      	LD   R26,Y+
00037f 9199      	LD   R25,Y+
000380 9189      	LD   R24,Y+
000381 9179      	LD   R23,Y+
000382 9169      	LD   R22,Y+
000383 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Write a character to the USART0 Transmitter buffer
                 ;#define _ALTERNATE_PUTCHAR_
                 ;#pragma used+
                 ;void putchar(char c) {
                 ; 0000 009F void putchar(char c) {
                 _putchar:
                 ; .FSTART _putchar
                 ; 0000 00A0     while (tx_counter0 == TX_BUFFER_SIZE0);
000384 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x15:
000385 91a0 0819 	LDS  R26,_tx_counter0
000387 34a0      	CPI  R26,LOW(0x40)
000388 f3e1      	BREQ _0x15
                 ; 0000 00A1 #asm("cli")
000389 94f8      	cli
                 ; 0000 00A2     if (tx_counter0 || ((UCSR0A & DATA_REGISTER_EMPTY)==0)) {
00038a 91e0 0819 	LDS  R30,_tx_counter0
00038c 30e0      	CPI  R30,0
00038d f411      	BRNE _0x19
00038e 995d      	SBIC 0xB,5
00038f c018      	RJMP _0x18
                 _0x19:
                 ; 0000 00A3         tx_buffer0[tx_wr_index0++]=c;
000390 91e0 0817 	LDS  R30,_tx_wr_index0
000392 5fef      	SUBI R30,-LOW(1)
000393 93e0 0817 	STS  _tx_wr_index0,R30
000395 50e1      	SUBI R30,LOW(1)
000396 e0f0      	LDI  R31,0
000397 52e9      	SUBI R30,LOW(-_tx_buffer0)
000398 4ff8      	SBCI R31,HIGH(-_tx_buffer0)
000399 81a8      	LD   R26,Y
00039a 83a0      	STD  Z+0,R26
                 ; 0000 00A4 #if TX_BUFFER_SIZE0 != 256
                 ; 0000 00A5         if (tx_wr_index0 == TX_BUFFER_SIZE0) tx_wr_index0=0;
00039b 91a0 0817 	LDS  R26,_tx_wr_index0
00039d 34a0      	CPI  R26,LOW(0x40)
00039e f419      	BRNE _0x1B
00039f e0e0      	LDI  R30,LOW(0)
0003a0 93e0 0817 	STS  _tx_wr_index0,R30
                 ; 0000 00A6 #endif
                 ; 0000 00A7         ++tx_counter0;
                 _0x1B:
0003a2 91e0 0819 	LDS  R30,_tx_counter0
0003a4 5fef      	SUBI R30,-LOW(1)
0003a5 93e0 0819 	STS  _tx_counter0,R30
                 ; 0000 00A8     } else
0003a7 c002      	RJMP _0x1C
                 _0x18:
                 ; 0000 00A9         UDR0=c;
0003a8 81e8      	LD   R30,Y
0003a9 b9ec      	OUT  0xC,R30
                 ; 0000 00AA #asm("sei")
                 _0x1C:
0003aa 9478      	sei
                 ; 0000 00AB }
0003ab 940c 08fa 	JMP  _0x212000C
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;#include <nrf_code.h>
                 _config:
                 ; .FSTART _config
                +
0003ad e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0003ae 958a     +DEC R24
0003af f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0003b0 e0e0      	LDI  R30,LOW(0)
0003b1 93ea      	ST   -Y,R30
0003b2 e1af      	LDI  R26,LOW(31)
0003b3 d024      	RCALL _RF_Write_TX
0003b4 e0a2      	LDI  R26,LOW(2)
0003b5 e0b0      	LDI  R27,0
0003b6 940e 1116 	CALL _delay_ms
0003b8 e0e7      	LDI  R30,LOW(7)
0003b9 93ea      	ST   -Y,R30
0003ba e7ae      	LDI  R26,LOW(126)
0003bb d01c      	RCALL _RF_Write_TX
0003bc e1ed      	LDI  R30,LOW(29)
0003bd 93ea      	ST   -Y,R30
0003be e0a4      	LDI  R26,LOW(4)
0003bf d018      	RCALL _RF_Write_TX
0003c0 e0e5      	LDI  R30,LOW(5)
0003c1 93ea      	ST   -Y,R30
0003c2 e0a2      	LDI  R26,LOW(2)
0003c3 d014      	RCALL _RF_Write_TX
0003c4 9508      	RET
                 ; .FEND
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
0003c5 93aa      	ST   -Y,R26
0003c6 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003c7 e010      	LDI  R17,LOW(0)
                 _0x1E:
0003c8 3018      	CPI  R17,8
0003c9 f450      	BRSH _0x1F
0003ca 81e9      	LDD  R30,Y+1
0003cb 78e0      	ANDI R30,LOW(0x80)
0003cc f411      	BRNE _0x20
0003cd 98d9      	CBI  0x1B,1
0003ce c001      	RJMP _0x21
                 _0x20:
0003cf 9ad9      	SBI  0x1B,1
                 _0x21:
0003d0 940e 0fbc 	CALL SUBOPT_0x2
0003d2 5f1f      	SUBI R17,-1
0003d3 cff4      	RJMP _0x1E
                 _0x1F:
0003d4 81e9      	LDD  R30,Y+1
0003d5 8118      	LDD  R17,Y+0
0003d6 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
0003d8 940e 0fce 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
0003da dfea      	RCALL _SPI_RW_TX
0003db 93e0 0840 	STS  _result,R30
0003dd 81a8      	LD   R26,Y
0003de dfe6      	RCALL _SPI_RW_TX
0003df 940e 0fd4 	CALL SUBOPT_0x4
0003e1 91e0 0840 	LDS  R30,_result
0003e3 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 ;	Address -> Y+0
                 ;	Address -> Y+1
                 ;	Address2 -> Y+0
                 ;	command -> Y+0
                 ;	send -> Y+0
                 ;	send -> Y+0
                 _SPI_RW_RX:
                 ; .FSTART _SPI_RW_RX
0003e5 93aa      	ST   -Y,R26
0003e6 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003e7 e010      	LDI  R17,LOW(0)
                 _0x6B:
0003e8 3018      	CPI  R17,8
0003e9 f450      	BRSH _0x6C
0003ea 81e9      	LDD  R30,Y+1
0003eb 78e0      	ANDI R30,LOW(0x80)
0003ec f411      	BRNE _0x6D
0003ed 98d9      	CBI  0x1B,1
0003ee c001      	RJMP _0x6E
                 _0x6D:
0003ef 9ad9      	SBI  0x1B,1
                 _0x6E:
0003f0 940e 0fbc 	CALL SUBOPT_0x2
0003f2 5f1f      	SUBI R17,-1
0003f3 cff4      	RJMP _0x6B
                 _0x6C:
0003f4 81e9      	LDD  R30,Y+1
0003f5 8118      	LDD  R17,Y+0
0003f6 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 _SPI_Read_RX:
                 ; .FSTART _SPI_Read_RX
0003f8 931a      	ST   -Y,R17
0003f9 930a      	ST   -Y,R16
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
0003fa e010      	LDI  R17,0
0003fb e000      	LDI  R16,LOW(0)
                 _0x74:
0003fc 3008      	CPI  R16,8
0003fd f478      	BRSH _0x75
                +
0003fe e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003ff 958a     +DEC R24
000400 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000401 0f11      	LSL  R17
000402 9adc      	SBI  0x1B,4
                +
000403 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000404 958a     +DEC R24
000405 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000406 e0e0      	LDI  R30,0
000407 99cd      	SBIC 0x19,5
000408 e0e1      	LDI  R30,1
000409 2b1e      	OR   R17,R30
00040a 98dc      	CBI  0x1B,4
00040b 5f0f      	SUBI R16,-1
00040c cfef      	RJMP _0x74
                 _0x75:
00040d 2fe1      	MOV  R30,R17
00040e 9109      	LD   R16,Y+
00040f 9119      	LD   R17,Y+
000410 9508      	RET
                 ; .FEND
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
000411 9adb      	SBI  0x1B,3
                +
000412 e788     +LDI R24 , LOW ( 1400 )
000413 e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
000414 9701     +SBIW R24 , 1
000415 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
000416 98db      	CBI  0x1B,3
000417 9ada      	SBI  0x1B,2
000418 9508      	RET
                 ; .FEND
                 _RF_Write_RX:
                 ; .FSTART _RF_Write_RX
000419 940e 0fce 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00041b 940e 0fd9 	CALL SUBOPT_0x5
00041d 940e 0fd4 	CALL SUBOPT_0x4
00041f 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write2_RX:
                 ; .FSTART _RF_Write2_RX
000421 940e 0fce 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000423 940e 0fd9 	CALL SUBOPT_0x5
000425 81a8      	LD   R26,Y
000426 940e 0fd9 	CALL SUBOPT_0x5
000428 81a8      	LD   R26,Y
000429 940e 0fd9 	CALL SUBOPT_0x5
00042b 940e 0fd4 	CALL SUBOPT_0x4
00042d 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write3_RX:
                 ; .FSTART _RF_Write3_RX
00042f 940e 0fce 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000431 dfb3      	RCALL _SPI_RW_RX
000432 2da7      	MOV  R26,R7
000433 dfb1      	RCALL _SPI_RW_RX
000434 2da7      	MOV  R26,R7
000435 dfaf      	RCALL _SPI_RW_RX
000436 2da7      	MOV  R26,R7
000437 dfad      	RCALL _SPI_RW_RX
000438 2da7      	MOV  R26,R7
000439 940e 0fd9 	CALL SUBOPT_0x5
00043b 940e 0fd4 	CALL SUBOPT_0x4
00043d 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 _RF_Command_RX:
                 ; .FSTART _RF_Command_RX
00043f 93aa      	ST   -Y,R26
                 ;	command -> Y+0
000440 98da      	CBI  0x1B,2
000441 81a8      	LD   R26,Y
000442 dfa2      	RCALL _SPI_RW_RX
000443 940e 0fd4 	CALL SUBOPT_0x4
000445 940c 08fa 	JMP  _0x212000C
                 ; .FEND
                 _RF_Write_Address_RX:
                 ; .FSTART _RF_Write_Address_RX
000447 93aa      	ST   -Y,R26
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
000448 98da      	CBI  0x1B,2
000449 e0e3      	LDI  R30,LOW(3)
00044a 93ea      	ST   -Y,R30
00044b e0a3      	LDI  R26,LOW(3)
00044c dfcc      	RCALL _RF_Write_RX
00044d 940e 0fd4 	CALL SUBOPT_0x4
00044f 98da      	CBI  0x1B,2
000450 e0ea      	LDI  R30,LOW(10)
000451 93ea      	ST   -Y,R30
000452 81ac      	LDD  R26,Y+4
000453 dfcd      	RCALL _RF_Write2_RX
000454 e1e0      	LDI  R30,LOW(16)
000455 93ea      	ST   -Y,R30
000456 81ac      	LDD  R26,Y+4
000457 dfc9      	RCALL _RF_Write2_RX
000458 e0eb      	LDI  R30,LOW(11)
000459 93ea      	ST   -Y,R30
00045a 81ab      	LDD  R26,Y+3
00045b 940e 0fde 	CALL SUBOPT_0x6
00045d 81ab      	LDD  R26,Y+3
00045e dfd0      	RCALL _RF_Write3_RX
00045f e0ec      	LDI  R30,LOW(12)
000460 93ea      	ST   -Y,R30
000461 81aa      	LDD  R26,Y+2
000462 940e 0fde 	CALL SUBOPT_0x6
000464 81aa      	LDD  R26,Y+2
000465 dfc9      	RCALL _RF_Write3_RX
000466 e0ed      	LDI  R30,LOW(13)
000467 93ea      	ST   -Y,R30
000468 81a9      	LDD  R26,Y+1
000469 940e 0fde 	CALL SUBOPT_0x6
00046b 81a9      	LDD  R26,Y+1
00046c dfc2      	RCALL _RF_Write3_RX
00046d 940c 0918 	JMP  _0x212000B
                 ; .FEND
                 ;	Address1 -> Y+0
                 _RF_Mode_RX:
                 ; .FSTART _RF_Mode_RX
00046f e0e0      	LDI  R30,LOW(0)
000470 93ea      	ST   -Y,R30
000471 e1af      	LDI  R26,LOW(31)
000472 dfa6      	RCALL _RF_Write_RX
000473 9adb      	SBI  0x1B,3
000474 9508      	RET
                 ; .FEND
                 _RF_Config_RX:
                 ; .FSTART _RF_Config_RX
000475 e1ec      	LDI  R30,LOW(28)
000476 940e 0fe3 	CALL SUBOPT_0x7
000478 924a      	ST   -Y,R4
000479 927a      	ST   -Y,R7
00047a 926a      	ST   -Y,R6
00047b 2da9      	MOV  R26,R9
00047c dfca      	RCALL _RF_Write_Address_RX
00047d e0e2      	LDI  R30,LOW(2)
00047e 940e 0fe3 	CALL SUBOPT_0x7
000480 e0e1      	LDI  R30,LOW(1)
000481 940e 0fe3 	CALL SUBOPT_0x7
000483 9508      	RET
                 ; .FEND
                 _RF_Read_RX_3:
                 ; .FSTART _RF_Read_RX_3
000484 98db      	CBI  0x1B,3
000485 940e 0fd4 	CALL SUBOPT_0x4
000487 98da      	CBI  0x1B,2
000488 e6a1      	LDI  R26,LOW(97)
000489 df5b      	RCALL _SPI_RW_RX
                +
00048a e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00048b 958a     +DEC R24
00048c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
00048d df6a      	RCALL _SPI_Read_RX
00048e e0f0      	LDI  R31,0
00048f 93e0 081a 	STS  _station_receive,R30
000491 93f0 081b 	STS  _station_receive+1,R31
000493 df64      	RCALL _SPI_Read_RX
                +
000494 e1ac     +LDI R26 , LOW ( _station_receive + ( 2 ) )
000495 e0b8     +LDI R27 , HIGH ( _station_receive + ( 2 ) )
                 	__POINTW2MN _station_receive,2
000496 940e 0fe7 	CALL SUBOPT_0x8
                +
000498 e1ae     +LDI R26 , LOW ( _station_receive + ( 4 ) )
000499 e0b8     +LDI R27 , HIGH ( _station_receive + ( 4 ) )
                 	__POINTW2MN _station_receive,4
00049a 940e 0fe7 	CALL SUBOPT_0x8
                +
00049c e2a0     +LDI R26 , LOW ( _station_receive + ( 6 ) )
00049d e0b8     +LDI R27 , HIGH ( _station_receive + ( 6 ) )
                 	__POINTW2MN _station_receive,6
00049e 940e 0fe7 	CALL SUBOPT_0x8
                +
0004a0 e2a2     +LDI R26 , LOW ( _station_receive + ( 8 ) )
0004a1 e0b8     +LDI R27 , HIGH ( _station_receive + ( 8 ) )
                 	__POINTW2MN _station_receive,8
0004a2 940e 0fe7 	CALL SUBOPT_0x8
                +
0004a4 e2a4     +LDI R26 , LOW ( _station_receive + ( 10 ) )
0004a5 e0b8     +LDI R27 , HIGH ( _station_receive + ( 10 ) )
                 	__POINTW2MN _station_receive,10
0004a6 e0f0      	LDI  R31,0
0004a7 93ed      	ST   X+,R30
0004a8 93fc      	ST   X,R31
0004a9 9ada      	SBI  0x1B,2
0004aa 9adb      	SBI  0x1B,3
0004ab e0e7      	LDI  R30,LOW(7)
0004ac 93ea      	ST   -Y,R30
0004ad e7ae      	LDI  R26,LOW(126)
0004ae df6a      	RCALL _RF_Write_RX
0004af eea2      	LDI  R26,LOW(226)
0004b0 df8e      	RCALL _RF_Command_RX
0004b1 9508      	RET
                 ; .FEND
                 ;station_info data_send;
                 ;
                 ;void put_string (unsigned char *s) {
                 ; 0000 00B4 void put_string (unsigned char *s) {
                 _put_string:
                 ; .FSTART _put_string
                 ; 0000 00B5     while(*s) {
0004b2 93ba      	ST   -Y,R27
0004b3 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0xBC:
0004b4 81a8      	LD   R26,Y
0004b5 81b9      	LDD  R27,Y+1
0004b6 91ec      	LD   R30,X
0004b7 30e0      	CPI  R30,0
0004b8 f061      	BREQ _0xBE
                 ; 0000 00B6         putchar(*s);
0004b9 91ac      	LD   R26,X
0004ba dec9      	RCALL _putchar
                 ; 0000 00B7         delay_ms(50);
0004bb e3a2      	LDI  R26,LOW(50)
0004bc e0b0      	LDI  R27,0
0004bd 940e 1116 	CALL _delay_ms
                 ; 0000 00B8         s++;
0004bf 81e8      	LD   R30,Y
0004c0 81f9      	LDD  R31,Y+1
0004c1 9631      	ADIW R30,1
0004c2 83e8      	ST   Y,R30
0004c3 83f9      	STD  Y+1,R31
                 ; 0000 00B9     }
0004c4 cfef      	RJMP _0xBC
                 _0xBE:
                 ; 0000 00BA }
0004c5 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;void refresh(int time_ms) {
                 ; 0000 00BC void refresh(int time_ms) {
                 _refresh:
                 ; .FSTART _refresh
                 ; 0000 00BD     delay_ms(time_ms);
0004c7 940e 0fec 	CALL SUBOPT_0x9
                 ;	time_ms -> Y+0
0004c9 940e 1116 	CALL _delay_ms
                 ; 0000 00BE     glcd_clear();
0004cb 940e 0ff1 	CALL SUBOPT_0xA
                 ; 0000 00BF     glcd_moveto(0,0);
                 ; 0000 00C0     glcd_outtext(buff);
0004cd 940e 0ff8 	CALL SUBOPT_0xB
                 ; 0000 00C1     del_string(buff);
0004cf ecab      	LDI  R26,LOW(_buff)
0004d0 e0b6      	LDI  R27,HIGH(_buff)
0004d1 dde0      	RCALL _del_string
                 ; 0000 00C2     i = 0;
0004d2 e0e0      	LDI  R30,LOW(0)
0004d3 93e0 07cf 	STS  _i,R30
0004d5 93e0 07d0 	STS  _i+1,R30
                 ; 0000 00C3 }
0004d7 940c 0867 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;bool wait_until(unsigned char *keyword, int time_out_s) {
                 ; 0000 00C5 _Bool wait_until(unsigned char *keyword, int time_out_s) {
                 _wait_until:
                 ; .FSTART _wait_until
                 ; 0000 00C6     /*     deu biet cai temp2 de lam gi nhung khong co thi no khong chay trong 1 so truong hop @@
                 ; 0000 00C7         Vi du nhap vao "Hell" thi no se tach thua ra them 2 char. Co the do vi tri o nho. Cha biet @@*/
                 ; 0000 00C8     char temp[20], temp2[20];
                 ; 0000 00C9     int i = 0, time_start, time_temp;
                 ; 0000 00CA 
                 ; 0000 00CB     del_string(temp);
0004d9 93ba      	ST   -Y,R27
0004da 93aa      	ST   -Y,R26
0004db 97a8      	SBIW R28,40
0004dc 940e 117d 	CALL __SAVELOCR6
                 ;	*keyword -> Y+48
                 ;	time_out_s -> Y+46
                 ;	temp -> Y+26
                 ;	temp2 -> Y+6
                 ;	i -> R16,R17
                 ;	time_start -> R18,R19
                 ;	time_temp -> R20,R21
                +
0004de e000     +LDI R16 , LOW ( 0 )
0004df e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0004e0 01de      	MOVW R26,R28
0004e1 965a      	ADIW R26,26
0004e2 ddcf      	RCALL _del_string
                 ; 0000 00CC 
                 ; 0000 00CD     while (*keyword) {
                 _0xBF:
0004e3 a9a8      	LDD  R26,Y+48
0004e4 a9b9      	LDD  R27,Y+48+1
0004e5 91ec      	LD   R30,X
0004e6 30e0      	CPI  R30,0
0004e7 f101      	BREQ _0xC1
                 ; 0000 00CE         temp[i] = *keyword;
0004e8 01f8      	MOVW R30,R16
0004e9 01de      	MOVW R26,R28
0004ea 965a      	ADIW R26,26
0004eb 0fea      	ADD  R30,R26
0004ec 1ffb      	ADC  R31,R27
0004ed 010f      	MOVW R0,R30
0004ee a9a8      	LDD  R26,Y+48
0004ef a9b9      	LDD  R27,Y+48+1
0004f0 91ec      	LD   R30,X
0004f1 01d0      	MOVW R26,R0
0004f2 93ec      	ST   X,R30
                 ; 0000 00CF         temp2[i] = temp[i];
0004f3 01f8      	MOVW R30,R16
0004f4 01de      	MOVW R26,R28
0004f5 9616      	ADIW R26,6
0004f6 0fea      	ADD  R30,R26
0004f7 1ffb      	ADC  R31,R27
0004f8 010f      	MOVW R0,R30
0004f9 01de      	MOVW R26,R28
0004fa 965a      	ADIW R26,26
0004fb 0fa0      	ADD  R26,R16
0004fc 1fb1      	ADC  R27,R17
0004fd 91ec      	LD   R30,X
0004fe 01d0      	MOVW R26,R0
0004ff 93ec      	ST   X,R30
                 ; 0000 00D0         keyword++;
000500 a9e8      	LDD  R30,Y+48
000501 a9f9      	LDD  R31,Y+48+1
000502 9631      	ADIW R30,1
000503 abe8      	STD  Y+48,R30
000504 abf9      	STD  Y+48+1,R31
                 ; 0000 00D1         i++;
                +
000505 5f0f     +SUBI R16 , LOW ( - 1 )
000506 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 00D2     }
000507 cfdb      	RJMP _0xBF
                 _0xC1:
                 ; 0000 00D3 
                 ; 0000 00D4     time_start = time_s;
                +
000508 9120 07d1+LDS R18 , 0 + ( _time_s )
00050a 9130 07d2+LDS R19 , 0 + ( _time_s ) + 1
                 	__GETWRMN 18,19,0,_time_s
                 ; 0000 00D5 
                 ; 0000 00D6     while (1) {
                 _0xC2:
                 ; 0000 00D7         if (time_s < time_start) {
00050c 91a0 07d1 	LDS  R26,_time_s
00050e 91b0 07d2 	LDS  R27,_time_s+1
000510 17a2      	CP   R26,R18
000511 07b3      	CPC  R27,R19
000512 f45c      	BRGE _0xC5
                 ; 0000 00D8             time_temp = time_s + 60;
000513 91e0 07d1 	LDS  R30,_time_s
000515 91f0 07d2 	LDS  R31,_time_s+1
000517 96fc      	ADIW R30,60
000518 01af      	MOVW R20,R30
                 ; 0000 00D9             if (time_temp - time_start > time_out_s) {
000519 01da      	MOVW R26,R20
00051a 940e 0ffc 	CALL SUBOPT_0xC
00051c f11c      	BRLT _0x212000F
                 ; 0000 00DA                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00DB                 return false;
                 ; 0000 00DC             }
                 ; 0000 00DD         } else {
00051d c007      	RJMP _0xC7
                 _0xC5:
                 ; 0000 00DE             if (time_s - time_start > time_out_s) {
00051e 91a0 07d1 	LDS  R26,_time_s
000520 91b0 07d2 	LDS  R27,_time_s+1
000522 940e 0ffc 	CALL SUBOPT_0xC
000524 f0dc      	BRLT _0x212000F
                 ; 0000 00DF                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00E0                 return false;
                 ; 0000 00E1             }
                 ; 0000 00E2         }
                 _0xC7:
                 ; 0000 00E3 
                 ; 0000 00E4         if ((strstr(buff, temp)) || (strstr(buff, temp2))) {
000525 940e 1003 	CALL SUBOPT_0xD
000527 01de      	MOVW R26,R28
000528 965c      	ADIW R26,28
000529 940e 07d0 	CALL _strstr
00052b 9730      	SBIW R30,0
00052c f441      	BRNE _0xCA
00052d 940e 1003 	CALL SUBOPT_0xD
00052f 01de      	MOVW R26,R28
000530 9618      	ADIW R26,8
000531 940e 07d0 	CALL _strstr
000533 9730      	SBIW R30,0
000534 f011      	BREQ _0xC9
                 _0xCA:
                 ; 0000 00E5             return true;
000535 e0e1      	LDI  R30,LOW(1)
000536 c00a      	RJMP _0x2120010
                 ; 0000 00E6         }
                 ; 0000 00E7         if (strstr(buff, "ERROR")) {
                 _0xC9:
000537 940e 1003 	CALL SUBOPT_0xD
                +
000539 e4a5     +LDI R26 , LOW ( _0xCD + ( 0 ) )
00053a e0b5     +LDI R27 , HIGH ( _0xCD + ( 0 ) )
                 	__POINTW2MN _0xCD,0
00053b 940e 07d0 	CALL _strstr
00053d 9730      	SBIW R30,0
00053e f409      	BRNE _0x212000F
                 ; 0000 00E8             /*glcd_outtext("Error found, attempting to continue..\r\n");
                 ; 0000 00E9             delay_ms(3000);
                 ; 0000 00EA             glcd_clear();
                 ; 0000 00EB             glcd_moveto(0,0);*/
                 ; 0000 00EC             return false;
                 ; 0000 00ED             //nen lam them ve cai nay nua
                 ; 0000 00EE         }
                 ; 0000 00EF     }
00053f cfcc      	RJMP _0xC2
                 ; 0000 00F0 	return false;
                 _0x212000F:
000540 e0e0      	LDI  R30,LOW(0)
                 _0x2120010:
000541 940e 1184 	CALL __LOADLOCR6
000543 96e2      	ADIW R28,50
000544 9508      	RET
                 ; 0000 00F1 }
                 ; .FEND
                 
                 	.DSEG
                 _0xCD:
000545           	.BYTE 0x6
                 ;
                 ;
                 ;bool read_and_send(unsigned char *s){
                 ; 0000 00F4 _Bool read_and_send(unsigned char *s){
                 
                 	.CSEG
                 _read_and_send:
                 ; .FSTART _read_and_send
                 ; 0000 00F5     // Thay nhung ham respones_read bang ham wait_until
                 ; 0000 00F6     char api_key[20], cmd[] = "GET /update?key=", temp[20], temp2[20];
                 ; 0000 00F7     int length = 0, i = 0;
                 ; 0000 00F8 
                 ; 0000 00F9     while (*s) {
000545 93ba      	ST   -Y,R27
000546 93aa      	ST   -Y,R26
000547 97ef      	SBIW R28,63
000548 972e      	SBIW R28,14
000549 e181      	LDI  R24,17
00054a e2a8      	LDI  R26,LOW(40)
00054b e0b0      	LDI  R27,HIGH(40)
00054c eae0      	LDI  R30,LOW(_0xCE*2)
00054d e0f2      	LDI  R31,HIGH(_0xCE*2)
00054e 940e 118b 	CALL __INITLOCB
000550 940e 117f 	CALL __SAVELOCR4
                 ;	*s -> Y+81
                 ;	api_key -> Y+61
                 ;	cmd -> Y+44
                 ;	temp -> Y+24
                 ;	temp2 -> Y+4
                 ;	length -> R16,R17
                 ;	i -> R18,R19
                +
000552 e000     +LDI R16 , LOW ( 0 )
000553 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000554 e020     +LDI R18 , LOW ( 0 )
000555 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCF:
000556 940e 1008 	CALL SUBOPT_0xE
000558 30e0      	CPI  R30,0
000559 f0f9      	BREQ _0xD1
                 ; 0000 00FA         temp2[i] = *s;
00055a 01f9      	MOVW R30,R18
00055b 01de      	MOVW R26,R28
00055c 9614      	ADIW R26,4
00055d 0fea      	ADD  R30,R26
00055e 1ffb      	ADC  R31,R27
00055f 01bf      	MOVW R22,R30
000560 940e 1008 	CALL SUBOPT_0xE
000562 01db      	MOVW R26,R22
000563 93ec      	ST   X,R30
                 ; 0000 00FB         api_key[i] = temp2[i];
000564 01f9      	MOVW R30,R18
000565 01de      	MOVW R26,R28
000566 96dd      	ADIW R26,61
000567 0fea      	ADD  R30,R26
000568 1ffb      	ADC  R31,R27
000569 010f      	MOVW R0,R30
00056a 01de      	MOVW R26,R28
00056b 9614      	ADIW R26,4
00056c 0fa2      	ADD  R26,R18
00056d 1fb3      	ADC  R27,R19
00056e 91ec      	LD   R30,X
00056f 01d0      	MOVW R26,R0
000570 93ec      	ST   X,R30
                 ; 0000 00FC         s++;
000571 01de      	MOVW R26,R28
000572 5aaf      	SUBI R26,LOW(-(81))
000573 4fbf      	SBCI R27,HIGH(-(81))
000574 940e 0fb6 	CALL SUBOPT_0x1
                 ; 0000 00FD         i++;
                +
000576 5f2f     +SUBI R18 , LOW ( - 1 )
000577 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 00FE     }
000578 cfdd      	RJMP _0xCF
                 _0xD1:
                 ; 0000 00FF 
                 ; 0000 0100     put_string("AT+CIPMODE=0");
                +
000579 e4ab     +LDI R26 , LOW ( _0xD2 + ( 0 ) )
00057a e0b5     +LDI R27 , HIGH ( _0xD2 + ( 0 ) )
                 	__POINTW2MN _0xD2,0
00057b 940e 1010 	CALL SUBOPT_0xF
                 ; 0000 0101     delay_ms(300);
                 ; 0000 0102     put_string("\r\n");
                +
00057d e5a8     +LDI R26 , LOW ( _0xD2 + ( 13 ) )
00057e e0b5     +LDI R27 , HIGH ( _0xD2 + ( 13 ) )
                 	__POINTW2MN _0xD2,13
00057f df32      	RCALL _put_string
                 ; 0000 0103     wait_until("OK", 2);
                +
000580 e5eb     +LDI R30 , LOW ( _0xD2 + ( 16 ) )
000581 e0f5     +LDI R31 , HIGH ( _0xD2 + ( 16 ) )
                 	__POINTW1MN _0xD2,16
000582 940e 1016 	CALL SUBOPT_0x10
                 ; 0000 0104     refresh(0);
                 ; 0000 0105 
                 ; 0000 0106     put_string("AT+CIPMUX=1");
                +
000584 e5ae     +LDI R26 , LOW ( _0xD2 + ( 19 ) )
000585 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 19 ) )
                 	__POINTW2MN _0xD2,19
000586 940e 1010 	CALL SUBOPT_0xF
                 ; 0000 0107     delay_ms(300);
                 ; 0000 0108     put_string("\r\n");
                +
000588 e6aa     +LDI R26 , LOW ( _0xD2 + ( 31 ) )
000589 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 31 ) )
                 	__POINTW2MN _0xD2,31
00058a df27      	RCALL _put_string
                 ; 0000 0109     wait_until("OK", 2);
                +
00058b e6ed     +LDI R30 , LOW ( _0xD2 + ( 34 ) )
00058c e0f5     +LDI R31 , HIGH ( _0xD2 + ( 34 ) )
                 	__POINTW1MN _0xD2,34
00058d 940e 1016 	CALL SUBOPT_0x10
                 ; 0000 010A     refresh(0);
                 ; 0000 010B 
                 ; 0000 010C 
                 ; 0000 010D 
                 ; 0000 010E     put_string("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80");
                +
00058f e7a0     +LDI R26 , LOW ( _0xD2 + ( 37 ) )
000590 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 37 ) )
                 	__POINTW2MN _0xD2,37
000591 940e 1010 	CALL SUBOPT_0xF
                 ; 0000 010F     delay_ms(300);
                 ; 0000 0110     put_string("\r\n");
                +
000593 e9ac     +LDI R26 , LOW ( _0xD2 + ( 81 ) )
000594 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 81 ) )
                 	__POINTW2MN _0xD2,81
000595 df1c      	RCALL _put_string
                 ; 0000 0111     if(!wait_until("OK", 10))
                +
000596 e9ef     +LDI R30 , LOW ( _0xD2 + ( 84 ) )
000597 e0f5     +LDI R31 , HIGH ( _0xD2 + ( 84 ) )
                 	__POINTW1MN _0xD2,84
000598 940e 1020 	CALL SUBOPT_0x11
00059a 30e0      	CPI  R30,0
00059b f411      	BRNE _0xD3
                 ; 0000 0112         return false;
00059c e0e0      	LDI  R30,LOW(0)
00059d c085      	RJMP _0x212000E
                 ; 0000 0113     refresh(2000);
                 _0xD3:
00059e eda0      	LDI  R26,LOW(2000)
00059f e0b7      	LDI  R27,HIGH(2000)
0005a0 df26      	RCALL _refresh
                 ; 0000 0114 
                 ; 0000 0115     glcd_clear();
0005a1 940e 0ff1 	CALL SUBOPT_0xA
                 ; 0000 0116     glcd_moveto(0,0);
                 ; 0000 0117     glcd_outtext("Server connected");
                +
0005a3 eaa2     +LDI R26 , LOW ( _0xD2 + ( 87 ) )
0005a4 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 87 ) )
                 	__POINTW2MN _0xD2,87
0005a5 940e 0c70 	CALL _glcd_outtext
                 ; 0000 0118 
                 ; 0000 0119     strcat(cmd, api_key);
0005a7 940e 1026 	CALL SUBOPT_0x12
0005a9 01de      	MOVW R26,R28
0005aa 96df      	ADIW R26,63
0005ab 940e 07a6 	CALL _strcat
                 ; 0000 011A     strcat(cmd, "&field1=");
0005ad 940e 1026 	CALL SUBOPT_0x12
                +
0005af eba3     +LDI R26 , LOW ( _0xD2 + ( 104 ) )
0005b0 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 104 ) )
                 	__POINTW2MN _0xD2,104
0005b1 940e 07a6 	CALL _strcat
                 ; 0000 011B     itoa(station_receive.temp, temp);
                +
0005b3 91e0 0820+LDS R30 , _station_receive + ( 6 )
0005b5 91f0 0821+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
0005b7 940e 102b 	CALL SUBOPT_0x13
                 ; 0000 011C     //itoa(200, temp);
                 ; 0000 011D     strcat(cmd, temp);
0005b9 940e 1032 	CALL SUBOPT_0x14
                 ; 0000 011E 
                 ; 0000 011F     length = strlen(temp);
0005bb 018f      	MOVW R16,R30
                 ; 0000 0120 
                 ; 0000 0121     strcat(cmd, "&field2=");
0005bc 940e 1026 	CALL SUBOPT_0x12
                +
0005be ebac     +LDI R26 , LOW ( _0xD2 + ( 113 ) )
0005bf e0b5     +LDI R27 , HIGH ( _0xD2 + ( 113 ) )
                 	__POINTW2MN _0xD2,113
0005c0 940e 07a6 	CALL _strcat
                 ; 0000 0122     itoa(station_receive.humi, temp);
                +
0005c2 91e0 081e+LDS R30 , _station_receive + ( 4 )
0005c4 91f0 081f+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
0005c6 940e 102b 	CALL SUBOPT_0x13
                 ; 0000 0123     //itoa(200, temp);
                 ; 0000 0124     strcat(cmd, temp);
0005c8 940e 1032 	CALL SUBOPT_0x14
                 ; 0000 0125 
                 ; 0000 0126     length += strlen(temp);
                +
0005ca 0f0e     +ADD R16 , R30
0005cb 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0127 
                 ; 0000 0128     strcat(cmd, "&field3=");
0005cc 940e 1026 	CALL SUBOPT_0x12
                +
0005ce eca5     +LDI R26 , LOW ( _0xD2 + ( 122 ) )
0005cf e0b5     +LDI R27 , HIGH ( _0xD2 + ( 122 ) )
                 	__POINTW2MN _0xD2,122
0005d0 940e 07a6 	CALL _strcat
                 ; 0000 0129     itoa(station_receive.water, temp);
                +
0005d2 91e0 0824+LDS R30 , _station_receive + ( 10 )
0005d4 91f0 0825+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
0005d6 940e 102b 	CALL SUBOPT_0x13
                 ; 0000 012A     //itoa(200, temp);
                 ; 0000 012B     strcat(cmd, temp);
0005d8 940e 1032 	CALL SUBOPT_0x14
                 ; 0000 012C 
                 ; 0000 012D     length += strlen(temp);
                +
0005da 0f0e     +ADD R16 , R30
0005db 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 012E 
                 ; 0000 012F     glcd_clear();
0005dc 940e 0ff1 	CALL SUBOPT_0xA
                 ; 0000 0130     glcd_moveto(0,0);
                 ; 0000 0131     glcd_outtext(cmd);
0005de 01de      	MOVW R26,R28
0005df 969c      	ADIW R26,44
0005e0 940e 0c70 	CALL _glcd_outtext
                 ; 0000 0132 
                 ; 0000 0133     length += 58;//strlen(cmd);
                +
0005e2 5c06     +SUBI R16 , LOW ( - 58 )
0005e3 4f1f     +SBCI R17 , HIGH ( - 58 )
                 	__ADDWRN 16,17,58
                 ; 0000 0134     //length += 2;
                 ; 0000 0135 
                 ; 0000 0136     itoa(length, temp);
0005e4 931a      	ST   -Y,R17
0005e5 930a      	ST   -Y,R16
0005e6 01de      	MOVW R26,R28
0005e7 965a      	ADIW R26,26
0005e8 940e 07e7 	CALL _itoa
                 ; 0000 0137     glcd_moveto(0, 40);
0005ea e0e0      	LDI  R30,LOW(0)
0005eb 93ea      	ST   -Y,R30
0005ec e2a8      	LDI  R26,LOW(40)
0005ed 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 0138     glcd_outtext(temp);
0005ef 01de      	MOVW R26,R28
0005f0 9658      	ADIW R26,24
0005f1 940e 0c70 	CALL _glcd_outtext
                 ; 0000 0139     delay_ms(1000);
0005f3 940e 103a 	CALL SUBOPT_0x15
                 ; 0000 013A 
                 ; 0000 013B 
                 ; 0000 013C 
                 ; 0000 013D     put_string("AT+CIPSEND=0,");
                +
0005f5 ecae     +LDI R26 , LOW ( _0xD2 + ( 131 ) )
0005f6 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 131 ) )
                 	__POINTW2MN _0xD2,131
0005f7 940e 1010 	CALL SUBOPT_0xF
                 ; 0000 013E     delay_ms(300);
                 ; 0000 013F     put_string(temp);
0005f9 01de      	MOVW R26,R28
0005fa 9658      	ADIW R26,24
0005fb deb6      	RCALL _put_string
                 ; 0000 0140     delay_ms(1000);
0005fc 940e 103a 	CALL SUBOPT_0x15
                 ; 0000 0141     put_string("\r\n");
                +
0005fe edac     +LDI R26 , LOW ( _0xD2 + ( 145 ) )
0005ff e0b5     +LDI R27 , HIGH ( _0xD2 + ( 145 ) )
                 	__POINTW2MN _0xD2,145
000600 deb1      	RCALL _put_string
                 ; 0000 0142 
                 ; 0000 0143     if(!wait_until("> ", 5))
                +
000601 edef     +LDI R30 , LOW ( _0xD2 + ( 148 ) )
000602 e0f5     +LDI R31 , HIGH ( _0xD2 + ( 148 ) )
                 	__POINTW1MN _0xD2,148
000603 940e 103e 	CALL SUBOPT_0x16
000605 f411      	BRNE _0xD4
                 ; 0000 0144         return false;
000606 e0e0      	LDI  R30,LOW(0)
000607 c01b      	RJMP _0x212000E
                 ; 0000 0145 
                 ; 0000 0146     put_string(cmd);
                 _0xD4:
000608 01de      	MOVW R26,R28
000609 969c      	ADIW R26,44
00060a dea7      	RCALL _put_string
                 ; 0000 0147     put_string("\r\n");
                +
00060b eea2     +LDI R26 , LOW ( _0xD2 + ( 151 ) )
00060c e0b5     +LDI R27 , HIGH ( _0xD2 + ( 151 ) )
                 	__POINTW2MN _0xD2,151
00060d dea4      	RCALL _put_string
                 ; 0000 0148     delay_ms(1000);
00060e 940e 103a 	CALL SUBOPT_0x15
                 ; 0000 0149     putchar(0x1A);
000610 e1aa      	LDI  R26,LOW(26)
000611 dd72      	RCALL _putchar
                 ; 0000 014A 
                 ; 0000 014B     glcd_clear();
000612 940e 0ff1 	CALL SUBOPT_0xA
                 ; 0000 014C     glcd_moveto(0,0);
                 ; 0000 014D     glcd_outtext("Sending");
                +
000614 eea5     +LDI R26 , LOW ( _0xD2 + ( 154 ) )
000615 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 154 ) )
                 	__POINTW2MN _0xD2,154
000616 940e 0c70 	CALL _glcd_outtext
                 ; 0000 014E 
                 ; 0000 014F     refresh(0);
000618 e0a0      	LDI  R26,LOW(0)
000619 e0b0      	LDI  R27,0
00061a deac      	RCALL _refresh
                 ; 0000 0150     if(!wait_until("IDP", 5))
                +
00061b eeed     +LDI R30 , LOW ( _0xD2 + ( 162 ) )
00061c e0f5     +LDI R31 , HIGH ( _0xD2 + ( 162 ) )
                 	__POINTW1MN _0xD2,162
00061d 940e 103e 	CALL SUBOPT_0x16
00061f f411      	BRNE _0xD5
                 ; 0000 0151         return false;
000620 e0e0      	LDI  R30,LOW(0)
000621 c001      	RJMP _0x212000E
                 ; 0000 0152     return true;
                 _0xD5:
000622 e0e1      	LDI  R30,LOW(1)
                 _0x212000E:
000623 940e 1186 	CALL __LOADLOCR4
000625 96ef      	ADIW R28,63
000626 9664      	ADIW R28,20
000627 9508      	RET
                 ; 0000 0153 
                 ; 0000 0154 }
                 ; .FEND
                 
                 	.DSEG
                 _0xD2:
00054b           	.BYTE 0xA6
                 ;
                 ;void print_border(){
                 ; 0000 0156 void print_border(){
                 
                 	.CSEG
                 _print_border:
                 ; .FSTART _print_border
                 ; 0000 0157     glcd_line(48,0, 48, 15);
000628 e3e0      	LDI  R30,LOW(48)
000629 93ea      	ST   -Y,R30
00062a e0e0      	LDI  R30,LOW(0)
00062b 940e 1046 	CALL SUBOPT_0x17
                 ; 0000 0158     glcd_line(0, 15, 48, 15);
00062d e0ef      	LDI  R30,LOW(15)
00062e 940e 1046 	CALL SUBOPT_0x17
                 ; 0000 0159 
                 ; 0000 015A     glcd_line(0,0,84,0);
000630 e0e0      	LDI  R30,LOW(0)
000631 93ea      	ST   -Y,R30
000632 e5e4      	LDI  R30,LOW(84)
000633 93ea      	ST   -Y,R30
000634 e0a0      	LDI  R26,LOW(0)
000635 940e 0ca6 	CALL _glcd_line
                 ; 0000 015B     glcd_line(84,0, 84, 48);
000637 e5e4      	LDI  R30,LOW(84)
000638 93ea      	ST   -Y,R30
000639 e0e0      	LDI  R30,LOW(0)
00063a 940e 104f 	CALL SUBOPT_0x18
                 ; 0000 015C     glcd_line(0, 48, 84, 48);
00063c e3e0      	LDI  R30,LOW(48)
00063d 940e 104f 	CALL SUBOPT_0x18
                 ; 0000 015D     glcd_line(0, 0, 0, 48);
00063f e0e0      	LDI  R30,LOW(0)
000640 93ea      	ST   -Y,R30
000641 93ea      	ST   -Y,R30
000642 e3a0      	LDI  R26,LOW(48)
000643 940e 0ca6 	CALL _glcd_line
                 ; 0000 015E     glcd_moveto(3,3);
000645 e0e3      	LDI  R30,LOW(3)
000646 93ea      	ST   -Y,R30
000647 e0a3      	LDI  R26,LOW(3)
000648 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 015F     glcd_outtext("Node: ");
                +
00064a efa1     +LDI R26 , LOW ( _0xD6 + ( 0 ) )
00064b e0b5     +LDI R27 , HIGH ( _0xD6 + ( 0 ) )
                 	__POINTW2MN _0xD6,0
00064c 940e 1058 	CALL SUBOPT_0x19
                 ; 0000 0160 
                 ; 0000 0161     glcd_moveto(4, 18);
00064e e1a2      	LDI  R26,LOW(18)
00064f 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 0162     glcd_outtext("Temp: ");
                +
000651 efa8     +LDI R26 , LOW ( _0xD6 + ( 7 ) )
000652 e0b5     +LDI R27 , HIGH ( _0xD6 + ( 7 ) )
                 	__POINTW2MN _0xD6,7
000653 940e 1058 	CALL SUBOPT_0x19
                 ; 0000 0163     glcd_moveto(4, 28);
000655 e1ac      	LDI  R26,LOW(28)
000656 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 0164     glcd_outtext("Humid: ");
                +
000658 efaf     +LDI R26 , LOW ( _0xD6 + ( 14 ) )
000659 e0b5     +LDI R27 , HIGH ( _0xD6 + ( 14 ) )
                 	__POINTW2MN _0xD6,14
00065a 940e 1058 	CALL SUBOPT_0x19
                 ; 0000 0165     glcd_moveto(4, 37);
00065c e2a5      	LDI  R26,LOW(37)
00065d 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 0166     glcd_outtext("Water: ");
                +
00065f e0a7     +LDI R26 , LOW ( _0xD6 + ( 22 ) )
000660 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 22 ) )
                 	__POINTW2MN _0xD6,22
000661 940e 0c70 	CALL _glcd_outtext
                 ; 0000 0167     glcd_moveto(67, 28);
000663 e4e3      	LDI  R30,LOW(67)
000664 93ea      	ST   -Y,R30
000665 e1ac      	LDI  R26,LOW(28)
000666 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 0168     glcd_putchar(37);
000668 e2a5      	LDI  R26,LOW(37)
000669 940e 0c0e 	CALL _glcd_putchar
                 ; 0000 0169     glcd_moveto(67, 37);
00066b e4e3      	LDI  R30,LOW(67)
00066c 93ea      	ST   -Y,R30
00066d e2a5      	LDI  R26,LOW(37)
00066e 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 016A     glcd_outtext("mm");
                +
000670 e0af     +LDI R26 , LOW ( _0xD6 + ( 30 ) )
000671 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 30 ) )
                 	__POINTW2MN _0xD6,30
000672 940e 0c70 	CALL _glcd_outtext
                 ; 0000 016B }
000674 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xD6:
0005f1           	.BYTE 0x21
                 ;
                 ;void check_do_rac(int value){
                 ; 0000 016D void check_do_rac(int value){
                 
                 	.CSEG
                 ; 0000 016E     if(value == 1)
                 ;	value -> Y+0
                 ; 0000 016F         P_Add = 0xA1;
                 ; 0000 0170     else if(value == 2)
                 ; 0000 0171         P_Add = 0xA2;
                 ; 0000 0172     else if(value == 3)
                 ; 0000 0173         P_Add = 0xA3;
                 ; 0000 0174     else
                 ; 0000 0175         P_Add = 0xA4;
                 ; 0000 0176     RF_Config_TX();
                 ; 0000 0177     RF_Mode_TX();
                 ; 0000 0178     RF_Send_TX(data_send);
                 ; 0000 0179     delay_ms(100);
                 ; 0000 017A     RF_Send_TX(data_send);
                 ; 0000 017B     delay_ms(500);
                 ; 0000 017C     RF_Config_RX_2();
                 ; 0000 017D     RF_Mode_RX();
                 ; 0000 017E         if(IRQ == 0){
                 ; 0000 017F            RF_Read_RX_3();
                 ; 0000 0180            print_border();
                 ; 0000 0181            //if(station_receive.flag == count){
                 ; 0000 0182             glcd_moveto(40, 3);
                 ; 0000 0183             itoa(station_receive.flag, buff);
                 ; 0000 0184             glcd_outtext(buff);
                 ; 0000 0185             glcd_moveto(46, 18);
                 ; 0000 0186             sprintf(buff, "%d ", station_receive.temp);
                 ; 0000 0187             glcd_outtext(buff);
                 ; 0000 0188             glcd_moveto(46, 28);
                 ; 0000 0189             sprintf(buff, "%d ", station_receive.humi);
                 ; 0000 018A             glcd_outtext(buff);
                 ; 0000 018B             glcd_moveto(46, 37);
                 ; 0000 018C             sprintf(buff, "%d  ", station_receive.water);
                 ; 0000 018D             glcd_outtext(buff);
                 ; 0000 018E             delay_ms(2000);
                 ; 0000 018F             /*count++;
                 ; 0000 0190             if(count == 5)
                 ; 0000 0191                 count = 1;
                 ; 0000 0192         }     */
                 ; 0000 0193 
                 ; 0000 0194         }
                 ; 0000 0195     }
                 ;
                 ;void main(void) {
                 ; 0000 0197 void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 0198 
                 ; 0000 0199 // Declare your local variables here
                 ; 0000 019A // Variable used to store graphic display
                 ; 0000 019B // controller initialization data
                 ; 0000 019C     GLCDINIT_t glcd_init_data;
                 ; 0000 019D 
                 ; 0000 019E DDRA=(0<<DDA7) | (1<<DDA6) | (0<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (0<<DDA0);
000675 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000676 e5ee      	LDI  R30,LOW(94)
000677 bbea      	OUT  0x1A,R30
                 ; 0000 019F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01A0 PORTA=(0<<PORTA7) | (0<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
000678 e3ef      	LDI  R30,LOW(63)
000679 bbeb      	OUT  0x1B,R30
                 ; 0000 01A1 // Port B initialization
                 ; 0000 01A2 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01A3     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00067a e0e8      	LDI  R30,LOW(8)
00067b bbe7      	OUT  0x17,R30
                 ; 0000 01A4 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01A5     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00067c e0e0      	LDI  R30,LOW(0)
00067d bbe8      	OUT  0x18,R30
                 ; 0000 01A6 
                 ; 0000 01A7 // Port C initialization
                 ; 0000 01A8 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01A9     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00067e bbe4      	OUT  0x14,R30
                 ; 0000 01AA // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01AB     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (1<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00067f e0e8      	LDI  R30,LOW(8)
000680 bbe5      	OUT  0x15,R30
                 ; 0000 01AC 
                 ; 0000 01AD // Port D initialization
                 ; 0000 01AE // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01AF     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000681 e0e0      	LDI  R30,LOW(0)
000682 bbe1      	OUT  0x11,R30
                 ; 0000 01B0 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01B1     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000683 bbe2      	OUT  0x12,R30
                 ; 0000 01B2 
                 ; 0000 01B3 // Port E initialization
                 ; 0000 01B4 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01B5     DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
000684 b9e2      	OUT  0x2,R30
                 ; 0000 01B6 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01B7     PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
000685 b9e3      	OUT  0x3,R30
                 ; 0000 01B8 
                 ; 0000 01B9 // Port F initialization
                 ; 0000 01BA // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01BB     DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
000686 93e0 0061 	STS  97,R30
                 ; 0000 01BC // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01BD     PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
000688 93e0 0062 	STS  98,R30
                 ; 0000 01BE 
                 ; 0000 01BF // Port G initialization
                 ; 0000 01C0 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01C1     DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
00068a 93e0 0064 	STS  100,R30
                 ; 0000 01C2 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01C3     PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
00068c 93e0 0065 	STS  101,R30
                 ; 0000 01C4 
                 ; 0000 01C5 // Timer/Counter 0 initialization
                 ; 0000 01C6 // Clock source: System Clock
                 ; 0000 01C7 // Clock value: 8000.000 kHz
                 ; 0000 01C8 // Mode: Normal top=0xFF
                 ; 0000 01C9 // OC0 output: Disconnected
                 ; 0000 01CA // Timer Period: 0.02 ms
                 ; 0000 01CB 
                 ; 0000 01CC         ASSR=0<<AS0;
00068e bfe0      	OUT  0x30,R30
                 ; 0000 01CD         TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00);
00068f e0e1      	LDI  R30,LOW(1)
000690 bfe3      	OUT  0x33,R30
                 ; 0000 01CE         TCNT0=0x60;
000691 e6e0      	LDI  R30,LOW(96)
000692 bfe2      	OUT  0x32,R30
                 ; 0000 01CF         OCR0=0x00;
000693 e0e0      	LDI  R30,LOW(0)
000694 bfe1      	OUT  0x31,R30
                 ; 0000 01D0 
                 ; 0000 01D1 // Timer/Counter 1 initialization
                 ; 0000 01D2 // Clock source: System Clock
                 ; 0000 01D3 // Clock value: Timer1 Stopped
                 ; 0000 01D4 // Mode: Normal top=0xFFFF
                 ; 0000 01D5 // OC1A output: Disconnected
                 ; 0000 01D6 // OC1B output: Disconnected
                 ; 0000 01D7 // OC1C output: Disconnected
                 ; 0000 01D8 // Noise Canceler: Off
                 ; 0000 01D9 // Input Capture on Falling Edge
                 ; 0000 01DA // Timer1 Overflow Interrupt: Off
                 ; 0000 01DB // Input Capture Interrupt: Off
                 ; 0000 01DC // Compare A Match Interrupt: Off
                 ; 0000 01DD // Compare B Match Interrupt: Off
                 ; 0000 01DE // Compare C Match Interrupt: Off
                 ; 0000 01DF     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
000695 bdef      	OUT  0x2F,R30
                 ; 0000 01E0     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000696 bdee      	OUT  0x2E,R30
                 ; 0000 01E1     TCNT1H=0x00;
000697 bded      	OUT  0x2D,R30
                 ; 0000 01E2     TCNT1L=0x00;
000698 bdec      	OUT  0x2C,R30
                 ; 0000 01E3     ICR1H=0x00;
000699 bde7      	OUT  0x27,R30
                 ; 0000 01E4     ICR1L=0x00;
00069a bde6      	OUT  0x26,R30
                 ; 0000 01E5     OCR1AH=0x00;
00069b bdeb      	OUT  0x2B,R30
                 ; 0000 01E6     OCR1AL=0x00;
00069c bdea      	OUT  0x2A,R30
                 ; 0000 01E7     OCR1BH=0x00;
00069d bde9      	OUT  0x29,R30
                 ; 0000 01E8     OCR1BL=0x00;
00069e bde8      	OUT  0x28,R30
                 ; 0000 01E9     OCR1CH=0x00;
00069f 93e0 0079 	STS  121,R30
                 ; 0000 01EA     OCR1CL=0x00;
0006a1 93e0 0078 	STS  120,R30
                 ; 0000 01EB 
                 ; 0000 01EC // Timer/Counter 2 initialization
                 ; 0000 01ED // Clock source: System Clock
                 ; 0000 01EE // Clock value: 7.813 kHz
                 ; 0000 01EF // Mode: Normal top=0xFF
                 ; 0000 01F0 // OC2 output: Disconnected
                 ; 0000 01F1 // Timer Period: 9.984 ms
                 ; 0000 01F2 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (1<<CS22) | (0<<CS21) | (1<<CS20);
0006a3 e0e5      	LDI  R30,LOW(5)
0006a4 bde5      	OUT  0x25,R30
                 ; 0000 01F3 TCNT2=0xB2;
0006a5 ebe2      	LDI  R30,LOW(178)
0006a6 bde4      	OUT  0x24,R30
                 ; 0000 01F4 OCR2=0x00;
0006a7 e0e0      	LDI  R30,LOW(0)
0006a8 bde3      	OUT  0x23,R30
                 ; 0000 01F5 
                 ; 0000 01F6 // Timer/Counter 3 initialization
                 ; 0000 01F7 // Clock source: System Clock
                 ; 0000 01F8 // Clock value: Timer3 Stopped
                 ; 0000 01F9 // Mode: Normal top=0xFFFF
                 ; 0000 01FA // OC3A output: Disconnected
                 ; 0000 01FB // OC3B output: Disconnected
                 ; 0000 01FC // OC3C output: Disconnected
                 ; 0000 01FD // Noise Canceler: Off
                 ; 0000 01FE // Input Capture on Falling Edge
                 ; 0000 01FF // Timer3 Overflow Interrupt: Off
                 ; 0000 0200 // Input Capture Interrupt: Off
                 ; 0000 0201 // Compare A Match Interrupt: Off
                 ; 0000 0202 // Compare B Match Interrupt: Off
                 ; 0000 0203 // Compare C Match Interrupt: Off
                 ; 0000 0204     TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
0006a9 93e0 008b 	STS  139,R30
                 ; 0000 0205     TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
0006ab 93e0 008a 	STS  138,R30
                 ; 0000 0206     TCNT3H=0x00;
0006ad 93e0 0089 	STS  137,R30
                 ; 0000 0207     TCNT3L=0x00;
0006af 93e0 0088 	STS  136,R30
                 ; 0000 0208     ICR3H=0x00;
0006b1 93e0 0081 	STS  129,R30
                 ; 0000 0209     ICR3L=0x00;
0006b3 93e0 0080 	STS  128,R30
                 ; 0000 020A     OCR3AH=0x00;
0006b5 93e0 0087 	STS  135,R30
                 ; 0000 020B     OCR3AL=0x00;
0006b7 93e0 0086 	STS  134,R30
                 ; 0000 020C     OCR3BH=0x00;
0006b9 93e0 0085 	STS  133,R30
                 ; 0000 020D     OCR3BL=0x00;
0006bb 93e0 0084 	STS  132,R30
                 ; 0000 020E     OCR3CH=0x00;
0006bd 93e0 0083 	STS  131,R30
                 ; 0000 020F     OCR3CL=0x00;
0006bf 93e0 0082 	STS  130,R30
                 ; 0000 0210 
                 ; 0000 0211 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0212     TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0006c1 e4e1      	LDI  R30,LOW(65)
0006c2 bfe7      	OUT  0x37,R30
                 ; 0000 0213     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0006c3 e0e0      	LDI  R30,LOW(0)
0006c4 93e0 007d 	STS  125,R30
                 ; 0000 0214 
                 ; 0000 0215 
                 ; 0000 0216 // External Interrupt(s) initialization
                 ; 0000 0217 // INT0: Off
                 ; 0000 0218 // INT1: Off
                 ; 0000 0219 // INT2: Off
                 ; 0000 021A // INT3: Off
                 ; 0000 021B // INT4: Off
                 ; 0000 021C // INT5: Off
                 ; 0000 021D // INT6: Off
                 ; 0000 021E // INT7: Off
                 ; 0000 021F     EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0006c6 93e0 006a 	STS  106,R30
                 ; 0000 0220     EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
0006c8 bfea      	OUT  0x3A,R30
                 ; 0000 0221     EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
0006c9 bfe9      	OUT  0x39,R30
                 ; 0000 0222 
                 ; 0000 0223 // USART0 initialization
                 ; 0000 0224 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0225 // USART0 Receiver: On
                 ; 0000 0226 // USART0 Transmitter: On
                 ; 0000 0227 // USART0 Mode: Asynchronous
                 ; 0000 0228 // USART0 Baud Rate: 9600
                 ; 0000 0229     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0006ca b9eb      	OUT  0xB,R30
                 ; 0000 022A     UCSR0B=(1<<RXCIE0) | (1<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0006cb ede8      	LDI  R30,LOW(216)
0006cc b9ea      	OUT  0xA,R30
                 ; 0000 022B     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0006cd e0e6      	LDI  R30,LOW(6)
0006ce 93e0 0095 	STS  149,R30
                 ; 0000 022C     UBRR0H=0x00;
0006d0 e0e0      	LDI  R30,LOW(0)
0006d1 93e0 0090 	STS  144,R30
                 ; 0000 022D     UBRR0L=0x33;
0006d3 e3e3      	LDI  R30,LOW(51)
0006d4 b9e9      	OUT  0x9,R30
                 ; 0000 022E 
                 ; 0000 022F // USART1 initialization
                 ; 0000 0230 // USART1 disabled
                 ; 0000 0231     UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0006d5 e0e0      	LDI  R30,LOW(0)
0006d6 93e0 009a 	STS  154,R30
                 ; 0000 0232 
                 ; 0000 0233 // Analog Comparator initialization
                 ; 0000 0234 // Analog Comparator: Off
                 ; 0000 0235 // The Analog Comparator's positive input is
                 ; 0000 0236 // connected to the AIN0 pin
                 ; 0000 0237 // The Analog Comparator's negative input is
                 ; 0000 0238 // connected to the AIN1 pin
                 ; 0000 0239     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0006d8 e8e0      	LDI  R30,LOW(128)
0006d9 b9e8      	OUT  0x8,R30
                 ; 0000 023A     SFIOR=(0<<ACME);
0006da e0e0      	LDI  R30,LOW(0)
0006db bde0      	OUT  0x20,R30
                 ; 0000 023B 
                 ; 0000 023C // ADC initialization
                 ; 0000 023D // ADC disabled
                 ; 0000 023E     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0006dc b9e6      	OUT  0x6,R30
                 ; 0000 023F 
                 ; 0000 0240 // SPI initialization
                 ; 0000 0241 // SPI disabled
                 ; 0000 0242     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0006dd b9ed      	OUT  0xD,R30
                 ; 0000 0243 
                 ; 0000 0244 // TWI initialization
                 ; 0000 0245 // TWI disabled
                 ; 0000 0246     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0006de 93e0 0074 	STS  116,R30
                 ; 0000 0247 
                 ; 0000 0248 // Graphic Display Controller initialization
                 ; 0000 0249 // The PCD8544 connections are specified in the
                 ; 0000 024A // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 024B // SDIN - PORTC Bit 7
                 ; 0000 024C // SCLK - PORTA Bit 7
                 ; 0000 024D // D /C - PORTC Bit 6
                 ; 0000 024E // /SCE - PORTC Bit 5
                 ; 0000 024F // /RES - PORTC Bit 4
                 ; 0000 0250 
                 ; 0000 0251 // Specify the current font for displaying text
                 ; 0000 0252     glcd_init_data.font=font5x7;
0006e0 e8ec      	LDI  R30,LOW(_font5x7*2)
0006e1 e0f0      	LDI  R31,HIGH(_font5x7*2)
0006e2 83e8      	ST   Y,R30
0006e3 83f9      	STD  Y+1,R31
                 ; 0000 0253 // No function is used for reading
                 ; 0000 0254 // image data from external memory
                 ; 0000 0255     glcd_init_data.readxmem=NULL;
0006e4 e0e0      	LDI  R30,LOW(0)
0006e5 83ea      	STD  Y+2,R30
0006e6 83eb      	STD  Y+2+1,R30
                 ; 0000 0256 // No function is used for writing
                 ; 0000 0257 // image data to external memory
                 ; 0000 0258     glcd_init_data.writexmem=NULL;
0006e7 83ec      	STD  Y+4,R30
0006e8 83ed      	STD  Y+4+1,R30
                 ; 0000 0259 // Set the LCD temperature coefficient
                 ; 0000 025A     glcd_init_data.temp_coef=90;
0006e9 81ee      	LDD  R30,Y+6
0006ea 7fec      	ANDI R30,LOW(0xFC)
0006eb 60e2      	ORI  R30,2
0006ec 83ee      	STD  Y+6,R30
                 ; 0000 025B // Set the LCD bias
                 ; 0000 025C     glcd_init_data.bias=3;
0006ed 7ee3      	ANDI R30,LOW(0xE3)
0006ee 60ec      	ORI  R30,LOW(0xC)
0006ef 83ee      	STD  Y+6,R30
                 ; 0000 025D // Set the LCD contrast control voltage VLCD
                 ; 0000 025E     glcd_init_data.vlcd=57;
0006f0 81ef      	LDD  R30,Y+7
0006f1 78e0      	ANDI R30,LOW(0x80)
0006f2 63e9      	ORI  R30,LOW(0x39)
0006f3 83ef      	STD  Y+7,R30
                 ; 0000 025F 
                 ; 0000 0260     glcd_init(&glcd_init_data);
0006f4 01de      	MOVW R26,R28
0006f5 940e 0873 	CALL _glcd_init
                 ; 0000 0261 
                 ; 0000 0262 // Global enable interrupts
                 ; 0000 0263 #asm("sei")
0006f7 9478      	sei
                 ; 0000 0264 
                 ; 0000 0265     put_string("AT\r\n");
                +
0006f8 e1a2     +LDI R26 , LOW ( _0xDE + ( 0 ) )
0006f9 e0b6     +LDI R27 , HIGH ( _0xDE + ( 0 ) )
                 	__POINTW2MN _0xDE,0
0006fa ddb7      	RCALL _put_string
                 ; 0000 0266     wait_until("OK", 2);
                +
0006fb e1e7     +LDI R30 , LOW ( _0xDE + ( 5 ) )
0006fc e0f6     +LDI R31 , HIGH ( _0xDE + ( 5 ) )
                 	__POINTW1MN _0xDE,5
0006fd 940e 1016 	CALL SUBOPT_0x10
                 ; 0000 0267     refresh(0);
                 ; 0000 0268 
                 ; 0000 0269     put_string("AT+CWMODE=1\r\n");
                +
0006ff e1aa     +LDI R26 , LOW ( _0xDE + ( 8 ) )
000700 e0b6     +LDI R27 , HIGH ( _0xDE + ( 8 ) )
                 	__POINTW2MN _0xDE,8
000701 ddb0      	RCALL _put_string
                 ; 0000 026A     wait_until("OK", 2);
                +
000702 e2e8     +LDI R30 , LOW ( _0xDE + ( 22 ) )
000703 e0f6     +LDI R31 , HIGH ( _0xDE + ( 22 ) )
                 	__POINTW1MN _0xDE,22
000704 940e 1016 	CALL SUBOPT_0x10
                 ; 0000 026B     refresh(0);
                 ; 0000 026C 
                 ; 0000 026D     put_string("AT+CWJAP=\"Thay_Thao_deo_giai\",\"chinhxac\"\r\n");
                +
000706 e2ab     +LDI R26 , LOW ( _0xDE + ( 25 ) )
000707 e0b6     +LDI R27 , HIGH ( _0xDE + ( 25 ) )
                 	__POINTW2MN _0xDE,25
000708 dda9      	RCALL _put_string
                 ; 0000 026E     wait_until("OK", 10);
                +
000709 e5e6     +LDI R30 , LOW ( _0xDE + ( 68 ) )
00070a e0f6     +LDI R31 , HIGH ( _0xDE + ( 68 ) )
                 	__POINTW1MN _0xDE,68
00070b 940e 1020 	CALL SUBOPT_0x11
                 ; 0000 026F     refresh(0);
00070d e0a0      	LDI  R26,LOW(0)
00070e e0b0      	LDI  R27,0
00070f ddb7      	RCALL _refresh
                 ; 0000 0270 
                 ; 0000 0271 
                 ; 0000 0272 //while(!read_and_send("6ZF1YB8AXISBSA2P"));
                 ; 0000 0273 delay_ms(3000);
000710 eba8      	LDI  R26,LOW(3000)
000711 e0bb      	LDI  R27,HIGH(3000)
000712 940e 1116 	CALL _delay_ms
                 ; 0000 0274 RF_Init_RX();
000714 dcfc      	RCALL _RF_Init_RX
                 ; 0000 0275 config();
000715 dc97      	RCALL _config
                 ; 0000 0276 RF_Config_RX();
000716 dd5e      	RCALL _RF_Config_RX
                 ; 0000 0277 count = 1;
000717 e0e1      	LDI  R30,LOW(1)
000718 e0f0      	LDI  R31,HIGH(1)
000719 016f      	MOVW R12,R30
                 ; 0000 0278 
                 ; 0000 0279 glcd_moveto(10,10);
00071a e0ea      	LDI  R30,LOW(10)
00071b 93ea      	ST   -Y,R30
00071c e0aa      	LDI  R26,LOW(10)
00071d 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 027A glcd_clear();
00071f 940e 08fc 	CALL _glcd_clear
                 ; 0000 027B glcd_outtext("start");
                +
000721 e5a9     +LDI R26 , LOW ( _0xDE + ( 71 ) )
000722 e0b6     +LDI R27 , HIGH ( _0xDE + ( 71 ) )
                 	__POINTW2MN _0xDE,71
000723 940e 0c70 	CALL _glcd_outtext
                 ; 0000 027C 
                 ; 0000 027D while (1) {
                 _0xDF:
                 ; 0000 027E      /*if((PINC.3==0)&&(lan_bam==0))
                 ; 0000 027F      {delay_ms(250); check_do_rac(1);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=1;}
                 ; 0000 0280      if((PINC.3==0)&&(lan_bam==1))
                 ; 0000 0281      {delay_ms(250); check_do_rac(2);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=2;}
                 ; 0000 0282      if((PINC.3==0)&&(lan_bam==2))
                 ; 0000 0283      {delay_ms(250); check_do_rac(3);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=3;}
                 ; 0000 0284      if((PINC.3==0)&&(lan_bam==3))
                 ; 0000 0285      {delay_ms(250); check_do_rac(4);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=0;}*/
                 ; 0000 0286      RF_Mode_RX();
000725 dd49      	RCALL _RF_Mode_RX
                 ; 0000 0287 
                 ; 0000 0288     if(IRQ == 0){
000726 99c8      	SBIC 0x19,0
000727 c06c      	RJMP _0xE2
                 ; 0000 0289         RF_Read_RX_3();
000728 dd5b      	RCALL _RF_Read_RX_3
                 ; 0000 028A         if(station_receive.flag == count){
000729 91a0 081a 	LDS  R26,_station_receive
00072b 91b0 081b 	LDS  R27,_station_receive+1
00072d 16ca      	CP   R12,R26
00072e 06db      	CPC  R13,R27
00072f f009      	BREQ PC+2
000730 c063      	RJMP _0xE3
                 ; 0000 028B             print_border();
000731 def6      	RCALL _print_border
                 ; 0000 028C             glcd_moveto(40, 3);
000732 e2e8      	LDI  R30,LOW(40)
000733 93ea      	ST   -Y,R30
000734 e0a3      	LDI  R26,LOW(3)
000735 940e 0c9a 	CALL _glcd_moveto
                 ; 0000 028D             itoa(station_receive.flag, buff);
000737 91e0 081a 	LDS  R30,_station_receive
000739 91f0 081b 	LDS  R31,_station_receive+1
00073b 93fa      	ST   -Y,R31
00073c 93ea      	ST   -Y,R30
00073d ecab      	LDI  R26,LOW(_buff)
00073e e0b6      	LDI  R27,HIGH(_buff)
00073f 940e 07e7 	CALL _itoa
                 ; 0000 028E             glcd_outtext(buff);
000741 940e 0ff8 	CALL SUBOPT_0xB
                 ; 0000 028F             glcd_moveto(46, 18);
000743 e2ee      	LDI  R30,LOW(46)
000744 93ea      	ST   -Y,R30
000745 e1a2      	LDI  R26,LOW(18)
000746 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0290             sprintf(buff, "%d ", station_receive.temp);
                +
000748 ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 256 ) )
000749 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 256 ) )
                 	__POINTW1FN _0x0,256
00074a 93fa      	ST   -Y,R31
00074b 93ea      	ST   -Y,R30
                +
00074c 91e0 0820+LDS R30 , _station_receive + ( 6 )
00074e 91f0 0821+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
000750 940e 1060 	CALL SUBOPT_0x1B
                 ; 0000 0291             glcd_outtext(buff);
                 ; 0000 0292             glcd_moveto(46, 28);
000752 e2ee      	LDI  R30,LOW(46)
000753 93ea      	ST   -Y,R30
000754 e1ac      	LDI  R26,LOW(28)
000755 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0293             sprintf(buff, "%d ", station_receive.humi);
                +
000757 ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 256 ) )
000758 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 256 ) )
                 	__POINTW1FN _0x0,256
000759 93fa      	ST   -Y,R31
00075a 93ea      	ST   -Y,R30
                +
00075b 91e0 081e+LDS R30 , _station_receive + ( 4 )
00075d 91f0 081f+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
00075f 940e 1060 	CALL SUBOPT_0x1B
                 ; 0000 0294             glcd_outtext(buff);
                 ; 0000 0295             glcd_moveto(46, 37);
000761 e2ee      	LDI  R30,LOW(46)
000762 93ea      	ST   -Y,R30
000763 e2a5      	LDI  R26,LOW(37)
000764 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0296             sprintf(buff, "%d  ", station_receive.water);
                +
000766 ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
000767 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
                 	__POINTW1FN _0x0,260
000768 93fa      	ST   -Y,R31
000769 93ea      	ST   -Y,R30
                +
00076a 91e0 0824+LDS R30 , _station_receive + ( 10 )
00076c 91f0 0825+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
00076e 940e 1060 	CALL SUBOPT_0x1B
                 ; 0000 0297             glcd_outtext(buff);
                 ; 0000 0298             delay_ms(100);
000770 e6a4      	LDI  R26,LOW(100)
000771 e0b0      	LDI  R27,0
000772 940e 1116 	CALL _delay_ms
                 ; 0000 0299             while(!read_and_send(key[count]));
                 _0xE4:
000774 01f6      	MOVW R30,R12
000775 e7ac      	LDI  R26,LOW(_key)
000776 e0b6      	LDI  R27,HIGH(_key)
000777 0fee      	LSL  R30
000778 1fff      	ROL  R31
000779 0fae      	ADD  R26,R30
00077a 1fbf      	ADC  R27,R31
00077b 940e 1145 	CALL __GETW1P
00077d 01df      	MOVW R26,R30
00077e ddc6      	RCALL _read_and_send
00077f 30e0      	CPI  R30,0
000780 f399      	BREQ _0xE4
                 ; 0000 029A             delay_ms(200);
000781 eca8      	LDI  R26,LOW(200)
000782 e0b0      	LDI  R27,0
000783 940e 1116 	CALL _delay_ms
                 ; 0000 029B             glcd_clear();
000785 940e 08fc 	CALL _glcd_clear
                 ; 0000 029C             count++;
000787 01f6      	MOVW R30,R12
000788 9631      	ADIW R30,1
000789 016f      	MOVW R12,R30
                 ; 0000 029D             if(count == 5)
00078a e0e5      	LDI  R30,LOW(5)
00078b e0f0      	LDI  R31,HIGH(5)
00078c 15ec      	CP   R30,R12
00078d 05fd      	CPC  R31,R13
00078e f419      	BRNE _0xE7
                 ; 0000 029E                 count = 1;
00078f e0e1      	LDI  R30,LOW(1)
000790 e0f0      	LDI  R31,HIGH(1)
000791 016f      	MOVW R12,R30
                 ; 0000 029F             flag = true;
                 _0xE7:
000792 e0e1      	LDI  R30,LOW(1)
000793 2eae      	MOV  R10,R30
                 ; 0000 02A0 
                 ; 0000 02A1         }
                 ; 0000 02A2     }
                 _0xE3:
                 ; 0000 02A3     }
                 _0xE2:
000794 cf90      	RJMP _0xDF
                 ; 0000 02A4 }
                 _0xE8:
000795 cfff      	RJMP _0xE8
                 ; .FEND
                 
                 	.DSEG
                 _0xDE:
000612           	.BYTE 0x4D
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000796 93ba      	ST   -Y,R27
000797 93aa      	ST   -Y,R26
000798 81b9          ldd  r27,y+1
000799 81a8          ld   r26,y
00079a 9610          adiw r26,0
00079b f031          breq memset1
00079c 81fc          ldd  r31,y+4
00079d 81eb          ldd  r30,y+3
00079e 816a          ldd  r22,y+2
                 memset0:
00079f 9361          st   z+,r22
0007a0 9711          sbiw r26,1
0007a1 f7e9          brne memset0
                 memset1:
0007a2 81eb          ldd  r30,y+3
0007a3 81fc          ldd  r31,y+4
0007a4 940c 0dd4 	JMP  _0x2120005
                 ; .FEND
                 _strcat:
                 ; .FSTART _strcat
0007a6 93ba      	ST   -Y,R27
0007a7 93aa      	ST   -Y,R26
0007a8 91e9          ld   r30,y+
0007a9 91f9          ld   r31,y+
0007aa 91a9          ld   r26,y+
0007ab 91b9          ld   r27,y+
0007ac 01cd          movw r24,r26
                 strcat0:
0007ad 916d          ld   r22,x+
0007ae 2366          tst  r22
0007af f7e9          brne strcat0
0007b0 9711          sbiw r26,1
                 strcat1:
0007b1 9161          ld   r22,z+
0007b2 936d          st   x+,r22
0007b3 2366          tst  r22
0007b4 f7e1          brne strcat1
0007b5 01fc          movw r30,r24
0007b6 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0007b7 93ba      	ST   -Y,R27
0007b8 93aa      	ST   -Y,R26
0007b9 91a9          ld   r26,y+
0007ba 91b9          ld   r27,y+
0007bb 27ee          clr  r30
0007bc 27ff          clr  r31
                 strlen0:
0007bd 916d          ld   r22,x+
0007be 2366          tst  r22
0007bf f011          breq strlen1
0007c0 9631          adiw r30,1
0007c1 cffb          rjmp strlen0
                 strlen1:
0007c2 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0007c3 93ba      	ST   -Y,R27
0007c4 93aa      	ST   -Y,R26
0007c5 27aa          clr  r26
0007c6 27bb          clr  r27
0007c7 91e9          ld   r30,y+
0007c8 91f9          ld   r31,y+
                 strlenf0:
0007c9 9005      	lpm  r0,z+
0007ca 2000          tst  r0
0007cb f011          breq strlenf1
0007cc 9611          adiw r26,1
0007cd cffb          rjmp strlenf0
                 strlenf1:
0007ce 01fd          movw r30,r26
0007cf 9508          ret
                 ; .FEND
                 _strstr:
                 ; .FSTART _strstr
0007d0 93ba      	ST   -Y,R27
0007d1 93aa      	ST   -Y,R26
0007d2 81aa          ldd  r26,y+2
0007d3 81bb          ldd  r27,y+3
0007d4 01cd          movw r24,r26
                 strstr0:
0007d5 81e8          ld   r30,y
0007d6 81f9          ldd  r31,y+1
                 strstr1:
0007d7 9171          ld   r23,z+
0007d8 2377          tst  r23
0007d9 f411          brne strstr2
0007da 01fc          movw r30,r24
0007db c009          rjmp strstr3
                 strstr2:
0007dc 916d          ld   r22,x+
0007dd 1767          cp   r22,r23
0007de f3c1          breq strstr1
0007df 9601          adiw r24,1
0007e0 01dc          movw r26,r24
0007e1 2366          tst  r22
0007e2 f791          brne strstr0
0007e3 27ee          clr  r30
0007e4 27ff          clr  r31
                 strstr3:
0007e5 940c 0918 	JMP  _0x212000B
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0007e7 93ba      	ST   -Y,R27
0007e8 93aa      	ST   -Y,R26
0007e9 91a9          ld   r26,y+
0007ea 91b9          ld   r27,y+
0007eb 91e9          ld   r30,y+
0007ec 91f9          ld   r31,y+
0007ed 9630          adiw r30,0
0007ee f42a          brpl __itoa0
0007ef 95e0          com  r30
0007f0 95f0          com  r31
0007f1 9631          adiw r30,1
0007f2 e26d          ldi  r22,'-'
0007f3 936d          st   x+,r22
                 __itoa0:
0007f4 94e8          clt
0007f5 e180          ldi  r24,low(10000)
0007f6 e297          ldi  r25,high(10000)
0007f7 d00d          rcall __itoa1
0007f8 ee88          ldi  r24,low(1000)
0007f9 e093          ldi  r25,high(1000)
0007fa d00a          rcall __itoa1
0007fb e684          ldi  r24,100
0007fc 2799          clr  r25
0007fd d007          rcall __itoa1
0007fe e08a          ldi  r24,10
0007ff d005          rcall __itoa1
000800 2f6e          mov  r22,r30
000801 d010          rcall __itoa5
000802 2766          clr  r22
000803 936c          st   x,r22
000804 9508          ret
                 
                 __itoa1:
000805 2766          clr	 r22
                 __itoa2:
000806 17e8          cp   r30,r24
000807 07f9          cpc  r31,r25
000808 f020          brlo __itoa3
000809 9563          inc  r22
00080a 1be8          sub  r30,r24
00080b 0bf9          sbc  r31,r25
00080c f7c9          brne __itoa2
                 __itoa3:
00080d 2366          tst  r22
00080e f411          brne __itoa4
00080f f016          brts __itoa5
000810 9508          ret
                 __itoa4:
000811 9468          set
                 __itoa5:
000812 5d60          subi r22,-0x30
000813 936d          st   x+,r22
000814 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
000815 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
000816 93aa      	ST   -Y,R26
000817 931a      	ST   -Y,R17
000818 98ad      	CBI  0x15,5
000819 e018      	LDI  R17,LOW(8)
                 _0x2040004:
00081a dffa      	RCALL _pcd8544_delay_G102
00081b 81e9      	LDD  R30,Y+1
00081c 78e0      	ANDI R30,LOW(0x80)
00081d f011      	BREQ _0x2040006
00081e 9aaf      	SBI  0x15,7
00081f c001      	RJMP _0x2040007
                 _0x2040006:
000820 98af      	CBI  0x15,7
                 _0x2040007:
000821 81e9      	LDD  R30,Y+1
000822 0fee      	LSL  R30
000823 83e9      	STD  Y+1,R30
000824 dff0      	RCALL _pcd8544_delay_G102
000825 9adf      	SBI  0x1B,7
000826 dfee      	RCALL _pcd8544_delay_G102
000827 98df      	CBI  0x1B,7
000828 5011      	SUBI R17,LOW(1)
000829 f781      	BRNE _0x2040004
00082a 9aad      	SBI  0x15,5
00082b 8118      	LDD  R17,Y+0
00082c c03a      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
00082d 93aa      	ST   -Y,R26
00082e 98ae      	CBI  0x15,6
00082f 81a8      	LD   R26,Y
000830 dfe5      	RCALL _pcd8544_wrbus_G102
000831 c0c8      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
000832 93aa      	ST   -Y,R26
000833 9aae      	SBI  0x15,6
000834 81a8      	LD   R26,Y
000835 dfe0      	RCALL _pcd8544_wrbus_G102
000836 c0c3      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
000837 93aa      	ST   -Y,R26
000838 931a      	ST   -Y,R17
000839 81e9      	LDD  R30,Y+1
00083a 95e6      	LSR  R30
00083b 95e6      	LSR  R30
00083c 95e6      	LSR  R30
00083d 2f1e      	MOV  R17,R30
00083e e5e4      	LDI  R30,LOW(84)
00083f 9fe1      	MUL  R30,R17
000840 01f0      	MOVW R30,R0
000841 01df      	MOVW R26,R30
000842 81ea      	LDD  R30,Y+2
000843 e0f0      	LDI  R31,0
000844 0fea      	ADD  R30,R26
000845 1ffb      	ADC  R31,R27
000846 93e0 0851 	STS  _gfx_addr_G102,R30
000848 93f0 0852 	STS  _gfx_addr_G102+1,R31
00084a 2fe1      	MOV  R30,R17
00084b 8118      	LDD  R17,Y+0
00084c 9623      	ADIW R28,3
00084d 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00084e 93aa      	ST   -Y,R26
00084f 81e9      	LDD  R30,Y+1
000850 68e0      	ORI  R30,0x80
000851 2fae      	MOV  R26,R30
000852 dfda      	RCALL _pcd8544_wrcmd
000853 81e9      	LDD  R30,Y+1
000854 93ea      	ST   -Y,R30
000855 81a9      	LDD  R26,Y+1
000856 dfe0      	RCALL _pcd8544_setaddr_G102
000857 64e0      	ORI  R30,0x40
000858 2fae      	MOV  R26,R30
000859 dfd3      	RCALL _pcd8544_wrcmd
00085a c00c      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00085b 93aa      	ST   -Y,R26
00085c 81e9      	LDD  R30,Y+1
00085d 93ea      	ST   -Y,R30
00085e 81a9      	LDD  R26,Y+1
00085f dfee      	RCALL _pcd8544_gotoxy
000860 91e0 0851 	LDS  R30,_gfx_addr_G102
000862 91f0 0852 	LDS  R31,_gfx_addr_G102+1
000864 5aed      	SUBI R30,LOW(-_gfx_buffer_G102)
000865 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000866 81e0      	LD   R30,Z
                 _0x212000D:
000867 9622      	ADIW R28,2
000868 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000869 93aa      	ST   -Y,R26
00086a 940e 1069 	CALL SUBOPT_0x1C
00086c 9731      	SBIW R30,1
00086d 5aed      	SUBI R30,LOW(-_gfx_buffer_G102)
00086e 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
00086f 81a8      	LD   R26,Y
000870 83a0      	STD  Z+0,R26
000871 dfc0      	RCALL _pcd8544_wrdata_G102
000872 c087      	RJMP _0x212000C
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000873 93ba      	ST   -Y,R27
000874 93aa      	ST   -Y,R26
000875 940e 117f 	CALL __SAVELOCR4
000877 9aa5      	SBI  0x14,5
000878 9aad      	SBI  0x15,5
000879 9ad7      	SBI  0x1A,7
00087a 98df      	CBI  0x1B,7
00087b 9aa7      	SBI  0x14,7
00087c 9aa6      	SBI  0x14,6
00087d 9aa4      	SBI  0x14,4
00087e 98ac      	CBI  0x15,4
00087f e0aa      	LDI  R26,LOW(10)
000880 e0b0      	LDI  R27,0
000881 940e 1116 	CALL _delay_ms
000883 9aac      	SBI  0x15,4
000884 81ec      	LDD  R30,Y+4
000885 81fd      	LDD  R31,Y+4+1
000886 9730      	SBIW R30,0
000887 f121      	BREQ _0x2040008
000888 81e6      	LDD  R30,Z+6
000889 70e3      	ANDI R30,LOW(0x3)
00088a 2f1e      	MOV  R17,R30
00088b 81ec      	LDD  R30,Y+4
00088c 81fd      	LDD  R31,Y+4+1
00088d 81e6      	LDD  R30,Z+6
00088e 95e6      	LSR  R30
00088f 95e6      	LSR  R30
000890 70e7      	ANDI R30,LOW(0x7)
000891 2f0e      	MOV  R16,R30
000892 81ec      	LDD  R30,Y+4
000893 81fd      	LDD  R31,Y+4+1
000894 81e7      	LDD  R30,Z+7
000895 77ef      	ANDI R30,0x7F
000896 2f3e      	MOV  R19,R30
000897 81ac      	LDD  R26,Y+4
000898 81bd      	LDD  R27,Y+4+1
000899 940e 1145 	CALL __GETW1P
                +
00089b 93e0 0663+STS _glcd_state + ( 4 ) , R30
00089d 93f0 0664+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
00089f 9612      	ADIW R26,2
0008a0 940e 1145 	CALL __GETW1P
                +
0008a2 93e0 0678+STS _glcd_state + ( 25 ) , R30
0008a4 93f0 0679+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0008a6 81ac      	LDD  R26,Y+4
0008a7 81bd      	LDD  R27,Y+4+1
0008a8 9614      	ADIW R26,4
0008a9 940e 1145 	CALL __GETW1P
0008ab c00d      	RJMP _0x20400A0
                 _0x2040008:
0008ac e010      	LDI  R17,LOW(0)
0008ad e003      	LDI  R16,LOW(3)
0008ae e332      	LDI  R19,LOW(50)
0008af e0e0      	LDI  R30,LOW(0)
0008b0 e0f0      	LDI  R31,HIGH(0)
                +
0008b1 93e0 0663+STS _glcd_state + ( 4 ) , R30
0008b3 93f0 0664+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0008b5 93e0 0678+STS _glcd_state + ( 25 ) , R30
0008b7 93f0 0679+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400A0:
                +
0008b9 93e0 067a+STS _glcd_state + ( 27 ) , R30
0008bb 93f0 067b+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0008bd e2a1      	LDI  R26,LOW(33)
0008be df6e      	RCALL _pcd8544_wrcmd
0008bf 2fe1      	MOV  R30,R17
0008c0 60e4      	ORI  R30,4
0008c1 2fae      	MOV  R26,R30
0008c2 df6a      	RCALL _pcd8544_wrcmd
0008c3 2fe0      	MOV  R30,R16
0008c4 61e0      	ORI  R30,0x10
0008c5 2fae      	MOV  R26,R30
0008c6 df66      	RCALL _pcd8544_wrcmd
0008c7 2fe3      	MOV  R30,R19
0008c8 68e0      	ORI  R30,0x80
0008c9 2fae      	MOV  R26,R30
0008ca df62      	RCALL _pcd8544_wrcmd
0008cb e2a0      	LDI  R26,LOW(32)
0008cc df60      	RCALL _pcd8544_wrcmd
0008cd e0a1      	LDI  R26,LOW(1)
0008ce d022      	RCALL _glcd_display
0008cf e0e1      	LDI  R30,LOW(1)
0008d0 93e0 065f 	STS  _glcd_state,R30
0008d2 e0e0      	LDI  R30,LOW(0)
                +
0008d3 93e0 0660+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0008d5 e0e1      	LDI  R30,LOW(1)
                +
0008d6 93e0 0665+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0008d8 93e0 0666+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0008da 93e0 0667+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0008dc efef      	LDI  R30,LOW(255)
                +
0008dd 93e0 0668+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0008df e0e1      	LDI  R30,LOW(1)
                +
0008e0 93e0 066f+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0008e2 e7e0     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0008e3 e0f6     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0008e4 93fa      	ST   -Y,R31
0008e5 93ea      	ST   -Y,R30
0008e6 efef      	LDI  R30,LOW(255)
0008e7 93ea      	ST   -Y,R30
0008e8 e0a8      	LDI  R26,LOW(8)
0008e9 e0b0      	LDI  R27,0
0008ea 940e 0796 	CALL _memset
0008ec d00f      	RCALL _glcd_clear
0008ed e0e1      	LDI  R30,LOW(1)
0008ee 940e 1186 	CALL __LOADLOCR4
0008f0 c082      	RJMP _0x212000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0008f1 93aa      	ST   -Y,R26
0008f2 81e8      	LD   R30,Y
0008f3 30e0      	CPI  R30,0
0008f4 f011      	BREQ _0x204000A
0008f5 e0ec      	LDI  R30,LOW(12)
0008f6 c001      	RJMP _0x204000B
                 _0x204000A:
0008f7 e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
0008f8 2fae      	MOV  R26,R30
0008f9 df33      	RCALL _pcd8544_wrcmd
                 _0x212000C:
0008fa 9621      	ADIW R28,1
0008fb 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0008fc 940e 117f 	CALL __SAVELOCR4
0008fe e030      	LDI  R19,0
                +
0008ff 91e0 0660+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000901 30e0      	CPI  R30,0
000902 f009      	BREQ _0x204000D
000903 ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
000904 e0e0      	LDI  R30,LOW(0)
000905 93ea      	ST   -Y,R30
000906 e0a0      	LDI  R26,LOW(0)
000907 df46      	RCALL _pcd8544_gotoxy
                +
000908 ef08     +LDI R16 , LOW ( 504 )
000909 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
00090a 01f8      	MOVW R30,R16
                +
00090b 5001     +SUBI R16 , LOW ( 1 )
00090c 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00090d 9730      	SBIW R30,0
00090e f019      	BREQ _0x2040010
00090f 2fa3      	MOV  R26,R19
000910 df58      	RCALL _pcd8544_wrbyte
000911 cff8      	RJMP _0x204000E
                 _0x2040010:
000912 e0e0      	LDI  R30,LOW(0)
000913 93ea      	ST   -Y,R30
000914 e0a0      	LDI  R26,LOW(0)
000915 d384      	RCALL _glcd_moveto
000916 940e 1186 	CALL __LOADLOCR4
                 _0x212000B:
000918 9624      	ADIW R28,4
000919 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
00091a 93aa      	ST   -Y,R26
00091b 931a      	ST   -Y,R17
00091c 930a      	ST   -Y,R16
00091d 81ac      	LDD  R26,Y+4
00091e 35a4      	CPI  R26,LOW(0x54)
00091f f418      	BRSH _0x2040012
000920 81ab      	LDD  R26,Y+3
000921 33a0      	CPI  R26,LOW(0x30)
000922 f010      	BRLO _0x2040011
                 _0x2040012:
000923 940c 0dd2 	JMP  _0x2120004
                 _0x2040011:
000925 81ec      	LDD  R30,Y+4
000926 93ea      	ST   -Y,R30
000927 81ac      	LDD  R26,Y+4
000928 df32      	RCALL _pcd8544_rdbyte
000929 2f1e      	MOV  R17,R30
00092a 81eb      	LDD  R30,Y+3
00092b 70e7      	ANDI R30,LOW(0x7)
00092c e0a1      	LDI  R26,LOW(1)
00092d 940e 1128 	CALL __LSLB12
00092f 2f0e      	MOV  R16,R30
000930 81ea      	LDD  R30,Y+2
000931 30e0      	CPI  R30,0
000932 f011      	BREQ _0x2040014
000933 2b10      	OR   R17,R16
000934 c003      	RJMP _0x2040015
                 _0x2040014:
000935 2fe0      	MOV  R30,R16
000936 95e0      	COM  R30
000937 231e      	AND  R17,R30
                 _0x2040015:
000938 2fa1      	MOV  R26,R17
000939 df2f      	RCALL _pcd8544_wrbyte
00093a 940c 0dd2 	JMP  _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
00093c 93aa      	ST   -Y,R26
00093d 931a      	ST   -Y,R17
00093e 81ed      	LDD  R30,Y+5
00093f 93ea      	ST   -Y,R30
000940 81ad      	LDD  R26,Y+5
000941 df19      	RCALL _pcd8544_rdbyte
000942 2f1e      	MOV  R17,R30
000943 81e9      	LDD  R30,Y+1
000944 30e7      	CPI  R30,LOW(0x7)
000945 f011      	BREQ _0x2040020
000946 30e8      	CPI  R30,LOW(0x8)
000947 f439      	BRNE _0x2040021
                 _0x2040020:
000948 81eb      	LDD  R30,Y+3
000949 93ea      	ST   -Y,R30
00094a 81aa      	LDD  R26,Y+2
00094b 940e 0f49 	CALL _glcd_mappixcolor1bit
00094d 83eb      	STD  Y+3,R30
00094e c008      	RJMP _0x2040022
                 _0x2040021:
00094f 30e3      	CPI  R30,LOW(0x3)
000950 f421      	BRNE _0x2040024
000951 81eb      	LDD  R30,Y+3
000952 95e0      	COM  R30
000953 83eb      	STD  Y+3,R30
000954 c002      	RJMP _0x2040025
                 _0x2040024:
000955 30e0      	CPI  R30,0
000956 f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
000957 81ea      	LDD  R30,Y+2
000958 95e0      	COM  R30
000959 231e      	AND  R17,R30
00095a c002      	RJMP _0x2040027
                 _0x2040026:
00095b 30e2      	CPI  R30,LOW(0x2)
00095c f429      	BRNE _0x2040028
                 _0x2040027:
00095d 81ea      	LDD  R30,Y+2
00095e 81ab      	LDD  R26,Y+3
00095f 23ea      	AND  R30,R26
000960 2b1e      	OR   R17,R30
000961 c00e      	RJMP _0x204001E
                 _0x2040028:
000962 30e1      	CPI  R30,LOW(0x1)
000963 f429      	BRNE _0x2040029
000964 81ea      	LDD  R30,Y+2
000965 81ab      	LDD  R26,Y+3
000966 23ea      	AND  R30,R26
000967 271e      	EOR  R17,R30
000968 c007      	RJMP _0x204001E
                 _0x2040029:
000969 30e4      	CPI  R30,LOW(0x4)
00096a f429      	BRNE _0x204001E
00096b 81ea      	LDD  R30,Y+2
00096c 95e0      	COM  R30
00096d 81ab      	LDD  R26,Y+3
00096e 2bea      	OR   R30,R26
00096f 231e      	AND  R17,R30
                 _0x204001E:
000970 2fa1      	MOV  R26,R17
000971 def7      	RCALL _pcd8544_wrbyte
000972 8118      	LDD  R17,Y+0
                 _0x212000A:
000973 9626      	ADIW R28,6
000974 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000975 93aa      	ST   -Y,R26
000976 9723      	SBIW R28,3
000977 940e 117d 	CALL __SAVELOCR6
000979 89a8      	LDD  R26,Y+16
00097a 35a4      	CPI  R26,LOW(0x54)
00097b f448      	BRSH _0x204002C
00097c 85af      	LDD  R26,Y+15
00097d 33a0      	CPI  R26,LOW(0x30)
00097e f430      	BRSH _0x204002C
00097f 85ae      	LDD  R26,Y+14
000980 30a0      	CPI  R26,LOW(0x0)
000981 f019      	BREQ _0x204002C
000982 85ad      	LDD  R26,Y+13
000983 30a0      	CPI  R26,LOW(0x0)
000984 f409      	BRNE _0x204002B
                 _0x204002C:
000985 c1d5      	RJMP _0x2120009
                 _0x204002B:
000986 85ee      	LDD  R30,Y+14
000987 87e8      	STD  Y+8,R30
000988 89a8      	LDD  R26,Y+16
000989 27bb      	CLR  R27
00098a 85ee      	LDD  R30,Y+14
00098b e0f0      	LDI  R31,0
00098c 0fae      	ADD  R26,R30
00098d 1fbf      	ADC  R27,R31
00098e 35a5      	CPI  R26,LOW(0x55)
00098f e0e0      	LDI  R30,HIGH(0x55)
000990 07be      	CPC  R27,R30
000991 f020      	BRLO _0x204002E
000992 89a8      	LDD  R26,Y+16
000993 e5e4      	LDI  R30,LOW(84)
000994 1bea      	SUB  R30,R26
000995 87ee      	STD  Y+14,R30
                 _0x204002E:
000996 852d      	LDD  R18,Y+13
000997 85af      	LDD  R26,Y+15
000998 27bb      	CLR  R27
000999 85ed      	LDD  R30,Y+13
00099a e0f0      	LDI  R31,0
00099b 0fae      	ADD  R26,R30
00099c 1fbf      	ADC  R27,R31
00099d 97d1      	SBIW R26,49
00099e f020      	BRLO _0x204002F
00099f 85af      	LDD  R26,Y+15
0009a0 e3e0      	LDI  R30,LOW(48)
0009a1 1bea      	SUB  R30,R26
0009a2 87ed      	STD  Y+13,R30
                 _0x204002F:
0009a3 85a9      	LDD  R26,Y+9
0009a4 30a6      	CPI  R26,LOW(0x6)
0009a5 f009      	BREQ PC+2
0009a6 c05b      	RJMP _0x2040030
0009a7 85ec      	LDD  R30,Y+12
0009a8 30e1      	CPI  R30,LOW(0x1)
0009a9 f409      	BRNE _0x2040034
0009aa c1b0      	RJMP _0x2120009
                 _0x2040034:
0009ab 30e3      	CPI  R30,LOW(0x3)
0009ac f439      	BRNE _0x2040037
                +
0009ad 91e0 067a+LDS R30 , _glcd_state + ( 27 )
0009af 91f0 067b+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0009b1 9730      	SBIW R30,0
0009b2 f409      	BRNE _0x2040036
0009b3 c1a7      	RJMP _0x2120009
                 _0x2040036:
                 _0x2040037:
0009b4 8508      	LDD  R16,Y+8
0009b5 85ed      	LDD  R30,Y+13
0009b6 95e6      	LSR  R30
0009b7 95e6      	LSR  R30
0009b8 95e6      	LSR  R30
0009b9 2f3e      	MOV  R19,R30
0009ba 2fe2      	MOV  R30,R18
0009bb 70e7      	ANDI R30,LOW(0x7)
0009bc f419      	BRNE _0x2040039
0009bd 85ad      	LDD  R26,Y+13
0009be 172a      	CP   R18,R26
0009bf f0e9      	BREQ _0x2040038
                 _0x2040039:
0009c0 2fa0      	MOV  R26,R16
0009c1 27bb      	CLR  R27
0009c2 2fe3      	MOV  R30,R19
0009c3 e0f0      	LDI  R31,0
0009c4 940e 113d 	CALL __MULW12U
0009c6 85aa      	LDD  R26,Y+10
0009c7 85bb      	LDD  R27,Y+10+1
0009c8 940e 106c 	CALL SUBOPT_0x1D
0009ca 9526      	LSR  R18
0009cb 9526      	LSR  R18
0009cc 9526      	LSR  R18
0009cd 2f53      	MOV  R21,R19
                 _0x204003B:
0009ce 935f      	PUSH R21
0009cf 5f5f      	SUBI R21,-1
0009d0 2fe2      	MOV  R30,R18
0009d1 91af      	POP  R26
0009d2 17ea      	CP   R30,R26
0009d3 f048      	BRLO _0x204003D
0009d4 2f10      	MOV  R17,R16
                 _0x204003E:
0009d5 2fe1      	MOV  R30,R17
0009d6 5011      	SUBI R17,1
0009d7 30e0      	CPI  R30,0
0009d8 f019      	BREQ _0x2040040
0009d9 940e 1071 	CALL SUBOPT_0x1E
0009db cff9      	RJMP _0x204003E
                 _0x2040040:
0009dc cff1      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0009dd 85ae      	LDD  R26,Y+14
0009de 170a      	CP   R16,R26
0009df f111      	BREQ _0x2040041
0009e0 85ee      	LDD  R30,Y+14
0009e1 85aa      	LDD  R26,Y+10
0009e2 85bb      	LDD  R27,Y+10+1
0009e3 e0f0      	LDI  R31,0
0009e4 940e 106c 	CALL SUBOPT_0x1D
0009e6 85ed      	LDD  R30,Y+13
0009e7 70e7      	ANDI R30,LOW(0x7)
0009e8 f009      	BREQ _0x2040042
0009e9 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
0009ea e020      	LDI  R18,LOW(0)
                 _0x2040043:
0009eb 932f      	PUSH R18
0009ec 5f2f      	SUBI R18,-1
0009ed 2fe3      	MOV  R30,R19
0009ee 91af      	POP  R26
0009ef 17ae      	CP   R26,R30
0009f0 f488      	BRSH _0x2040045
0009f1 851e      	LDD  R17,Y+14
                 _0x2040046:
0009f2 931f      	PUSH R17
0009f3 5f1f      	SUBI R17,-1
0009f4 2fe0      	MOV  R30,R16
0009f5 91af      	POP  R26
0009f6 17ae      	CP   R26,R30
0009f7 f418      	BRSH _0x2040048
0009f8 940e 1071 	CALL SUBOPT_0x1E
0009fa cff7      	RJMP _0x2040046
                 _0x2040048:
0009fb 85ee      	LDD  R30,Y+14
0009fc 81ae      	LDD  R26,Y+6
0009fd 81bf      	LDD  R27,Y+6+1
0009fe e0f0      	LDI  R31,0
0009ff 940e 106c 	CALL SUBOPT_0x1D
000a01 cfe9      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
000a02 85ef      	LDD  R30,Y+15
000a03 70e7      	ANDI R30,LOW(0x7)
000a04 2f3e      	MOV  R19,R30
                 _0x2040049:
000a05 85ed      	LDD  R30,Y+13
000a06 30e0      	CPI  R30,0
000a07 f409      	BRNE PC+2
000a08 c152      	RJMP _0x204004B
000a09 85ea      	LDD  R30,Y+10
000a0a 85fb      	LDD  R31,Y+10+1
000a0b 83ee      	STD  Y+6,R30
000a0c 83ff      	STD  Y+6+1,R31
000a0d e010      	LDI  R17,LOW(0)
000a0e 8908      	LDD  R16,Y+16
000a0f 3030      	CPI  R19,0
000a10 f009      	BREQ PC+2
000a11 c066      	RJMP _0x204004C
000a12 85ad      	LDD  R26,Y+13
000a13 30a8      	CPI  R26,LOW(0x8)
000a14 f408      	BRSH PC+2
000a15 c05d      	RJMP _0x204004D
000a16 85e9      	LDD  R30,Y+9
000a17 30e0      	CPI  R30,0
000a18 f011      	BREQ _0x2040052
000a19 30e3      	CPI  R30,LOW(0x3)
000a1a f409      	BRNE _0x2040053
                 _0x2040052:
000a1b c002      	RJMP _0x2040054
                 _0x2040053:
000a1c 30e7      	CPI  R30,LOW(0x7)
000a1d f409      	BRNE _0x2040055
                 _0x2040054:
000a1e c002      	RJMP _0x2040056
                 _0x2040055:
000a1f 30e8      	CPI  R30,LOW(0x8)
000a20 f409      	BRNE _0x2040057
                 _0x2040056:
000a21 c002      	RJMP _0x2040058
                 _0x2040057:
000a22 30e9      	CPI  R30,LOW(0x9)
000a23 f409      	BRNE _0x2040059
                 _0x2040058:
000a24 c002      	RJMP _0x204005A
                 _0x2040059:
000a25 30ea      	CPI  R30,LOW(0xA)
000a26 f421      	BRNE _0x204005B
                 _0x204005A:
000a27 930a      	ST   -Y,R16
000a28 89a8      	LDD  R26,Y+16
000a29 de24      	RCALL _pcd8544_gotoxy
000a2a c004      	RJMP _0x2040050
                 _0x204005B:
000a2b 30e6      	CPI  R30,LOW(0x6)
000a2c f411      	BRNE _0x2040050
000a2d 940e 107e 	CALL SUBOPT_0x1F
                 _0x2040050:
                 _0x204005D:
000a2f 931f      	PUSH R17
000a30 5f1f      	SUBI R17,-1
000a31 85ee      	LDD  R30,Y+14
000a32 91af      	POP  R26
000a33 17ae      	CP   R26,R30
000a34 f5b8      	BRSH _0x204005F
000a35 85a9      	LDD  R26,Y+9
000a36 30a6      	CPI  R26,LOW(0x6)
000a37 f469      	BRNE _0x2040060
000a38 940e 1082 	CALL SUBOPT_0x20
000a3a 93fa      	ST   -Y,R31
000a3b 93ea      	ST   -Y,R30
000a3c 940e 1069 	CALL SUBOPT_0x1C
000a3e 9731      	SBIW R30,1
000a3f 5aed      	SUBI R30,LOW(-_gfx_buffer_G102)
000a40 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000a41 81a0      	LD   R26,Z
000a42 940e 0f90 	CALL _glcd_writemem
000a44 c026      	RJMP _0x2040061
                 _0x2040060:
000a45 85e9      	LDD  R30,Y+9
000a46 30e9      	CPI  R30,LOW(0x9)
000a47 f411      	BRNE _0x2040065
000a48 e050      	LDI  R21,LOW(0)
000a49 c00e      	RJMP _0x2040066
                 _0x2040065:
000a4a 30ea      	CPI  R30,LOW(0xA)
000a4b f411      	BRNE _0x2040064
000a4c ef5f      	LDI  R21,LOW(255)
000a4d c00a      	RJMP _0x2040066
                 _0x2040064:
000a4e 940e 1082 	CALL SUBOPT_0x20
000a50 940e 108b 	CALL SUBOPT_0x21
000a52 2f5e      	MOV  R21,R30
000a53 85e9      	LDD  R30,Y+9
000a54 30e7      	CPI  R30,LOW(0x7)
000a55 f011      	BREQ _0x204006D
000a56 30e8      	CPI  R30,LOW(0x8)
000a57 f421      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
000a58 940e 1091 	CALL SUBOPT_0x22
000a5a 2f5e      	MOV  R21,R30
000a5b c006      	RJMP _0x204006F
                 _0x204006E:
000a5c 30e3      	CPI  R30,LOW(0x3)
000a5d f411      	BRNE _0x2040071
000a5e 9550      	COM  R21
000a5f c002      	RJMP _0x2040072
                 _0x2040071:
000a60 30e0      	CPI  R30,0
000a61 f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
000a62 2fa5      	MOV  R26,R21
000a63 ddce      	RCALL _pcd8544_wrdata_G102
000a64 c006      	RJMP _0x204006B
                 _0x2040074:
000a65 940e 1095 	CALL SUBOPT_0x23
000a67 efef      	LDI  R30,LOW(255)
000a68 93ea      	ST   -Y,R30
000a69 85ad      	LDD  R26,Y+13
000a6a ded1      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
000a6b cfc3      	RJMP _0x204005D
                 _0x204005F:
000a6c 85ef      	LDD  R30,Y+15
000a6d 5fe8      	SUBI R30,-LOW(8)
000a6e 87ef      	STD  Y+15,R30
000a6f 85ed      	LDD  R30,Y+13
000a70 50e8      	SUBI R30,LOW(8)
000a71 87ed      	STD  Y+13,R30
000a72 c0df      	RJMP _0x2040075
                 _0x204004D:
000a73 855d      	LDD  R21,Y+13
000a74 e020      	LDI  R18,LOW(0)
000a75 e0e0      	LDI  R30,LOW(0)
000a76 87ed      	STD  Y+13,R30
000a77 c081      	RJMP _0x2040076
                 _0x204004C:
000a78 2fe3      	MOV  R30,R19
000a79 85ad      	LDD  R26,Y+13
000a7a 0fae      	ADD  R26,R30
000a7b 30a9      	CPI  R26,LOW(0x9)
000a7c f420      	BRSH _0x2040077
000a7d 852d      	LDD  R18,Y+13
000a7e e0e0      	LDI  R30,LOW(0)
000a7f 87ed      	STD  Y+13,R30
000a80 c003      	RJMP _0x2040078
                 _0x2040077:
000a81 e0e8      	LDI  R30,LOW(8)
000a82 1be3      	SUB  R30,R19
000a83 2f2e      	MOV  R18,R30
                 _0x2040078:
000a84 933a      	ST   -Y,R19
000a85 2fa2      	MOV  R26,R18
000a86 940e 0f3e 	CALL _glcd_getmask
000a88 2f4e      	MOV  R20,R30
000a89 85e9      	LDD  R30,Y+9
000a8a 30e6      	CPI  R30,LOW(0x6)
000a8b f529      	BRNE _0x204007C
000a8c 940e 107e 	CALL SUBOPT_0x1F
                 _0x204007D:
000a8e 931f      	PUSH R17
000a8f 5f1f      	SUBI R17,-1
000a90 85ee      	LDD  R30,Y+14
000a91 91af      	POP  R26
000a92 17ae      	CP   R26,R30
000a93 f4e0      	BRSH _0x204007F
000a94 940e 1069 	CALL SUBOPT_0x1C
000a96 9731      	SBIW R30,1
000a97 5aed      	SUBI R30,LOW(-_gfx_buffer_G102)
000a98 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000a99 81e0      	LD   R30,Z
000a9a 23e4      	AND  R30,R20
000a9b 2fae      	MOV  R26,R30
000a9c 2fe3      	MOV  R30,R19
000a9d 940e 1130 	CALL __LSRB12
000a9f 940e 109b 	CALL SUBOPT_0x24
000aa1 2fe3      	MOV  R30,R19
000aa2 2fa4      	MOV  R26,R20
000aa3 940e 1130 	CALL __LSRB12
000aa5 95e0      	COM  R30
000aa6 21e1      	AND  R30,R1
000aa7 2b5e      	OR   R21,R30
000aa8 940e 1082 	CALL SUBOPT_0x20
000aaa 93fa      	ST   -Y,R31
000aab 93ea      	ST   -Y,R30
000aac 2fa5      	MOV  R26,R21
000aad 940e 0f90 	CALL _glcd_writemem
000aaf cfde      	RJMP _0x204007D
                 _0x204007F:
000ab0 c02c      	RJMP _0x204007B
                 _0x204007C:
000ab1 30e9      	CPI  R30,LOW(0x9)
000ab2 f411      	BRNE _0x2040080
000ab3 e050      	LDI  R21,LOW(0)
000ab4 c003      	RJMP _0x2040081
                 _0x2040080:
000ab5 30ea      	CPI  R30,LOW(0xA)
000ab6 f4a9      	BRNE _0x2040087
000ab7 ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
000ab8 940e 1091 	CALL SUBOPT_0x22
000aba 2fae      	MOV  R26,R30
000abb 2fe3      	MOV  R30,R19
000abc 940e 1128 	CALL __LSLB12
000abe 2f5e      	MOV  R21,R30
                 _0x2040084:
000abf 931f      	PUSH R17
000ac0 5f1f      	SUBI R17,-1
000ac1 85ee      	LDD  R30,Y+14
000ac2 91af      	POP  R26
000ac3 17ae      	CP   R26,R30
000ac4 f430      	BRSH _0x2040086
000ac5 940e 1095 	CALL SUBOPT_0x23
000ac7 934a      	ST   -Y,R20
000ac8 e0a0      	LDI  R26,LOW(0)
000ac9 de72      	RCALL _pcd8544_wrmasked_G102
000aca cff4      	RJMP _0x2040084
                 _0x2040086:
000acb c011      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
000acc 931f      	PUSH R17
000acd 5f1f      	SUBI R17,-1
000ace 85ee      	LDD  R30,Y+14
000acf 91af      	POP  R26
000ad0 17ae      	CP   R26,R30
000ad1 f458      	BRSH _0x204008A
000ad2 940e 10a6 	CALL SUBOPT_0x25
000ad4 2fae      	MOV  R26,R30
000ad5 2fe3      	MOV  R30,R19
000ad6 940e 1128 	CALL __LSLB12
000ad8 93ea      	ST   -Y,R30
000ad9 934a      	ST   -Y,R20
000ada 85ad      	LDD  R26,Y+13
000adb de60      	RCALL _pcd8544_wrmasked_G102
000adc cfef      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
000add 85ed      	LDD  R30,Y+13
000ade 30e0      	CPI  R30,0
000adf f409      	BRNE _0x204008B
000ae0 c07a      	RJMP _0x204004B
                 _0x204008B:
000ae1 85ad      	LDD  R26,Y+13
000ae2 30a8      	CPI  R26,LOW(0x8)
000ae3 f428      	BRSH _0x204008C
000ae4 85ed      	LDD  R30,Y+13
000ae5 1be2      	SUB  R30,R18
000ae6 2f5e      	MOV  R21,R30
000ae7 e0e0      	LDI  R30,LOW(0)
000ae8 c003      	RJMP _0x20400A1
                 _0x204008C:
000ae9 2f53      	MOV  R21,R19
000aea 85ed      	LDD  R30,Y+13
000aeb 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
000aec 87ed      	STD  Y+13,R30
000aed e010      	LDI  R17,LOW(0)
000aee 85ef      	LDD  R30,Y+15
000aef 5fe8      	SUBI R30,-LOW(8)
000af0 87ef      	STD  Y+15,R30
000af1 e0e8      	LDI  R30,LOW(8)
000af2 1be3      	SUB  R30,R19
000af3 2f2e      	MOV  R18,R30
000af4 8908      	LDD  R16,Y+16
000af5 85ea      	LDD  R30,Y+10
000af6 85fb      	LDD  R31,Y+10+1
000af7 83ee      	STD  Y+6,R30
000af8 83ff      	STD  Y+6+1,R31
                 _0x2040076:
000af9 2fe5      	MOV  R30,R21
000afa e0f0      	LDI  R31,0
000afb 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000afc 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000afd 9144      	LPM  R20,Z
000afe 85e9      	LDD  R30,Y+9
000aff 30e6      	CPI  R30,LOW(0x6)
000b00 f529      	BRNE _0x2040091
000b01 940e 107e 	CALL SUBOPT_0x1F
                 _0x2040092:
000b03 931f      	PUSH R17
000b04 5f1f      	SUBI R17,-1
000b05 85ee      	LDD  R30,Y+14
000b06 91af      	POP  R26
000b07 17ae      	CP   R26,R30
000b08 f4e0      	BRSH _0x2040094
000b09 940e 1069 	CALL SUBOPT_0x1C
000b0b 9731      	SBIW R30,1
000b0c 5aed      	SUBI R30,LOW(-_gfx_buffer_G102)
000b0d 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000b0e 81e0      	LD   R30,Z
000b0f 23e4      	AND  R30,R20
000b10 2fae      	MOV  R26,R30
000b11 2fe2      	MOV  R30,R18
000b12 940e 1128 	CALL __LSLB12
000b14 940e 109b 	CALL SUBOPT_0x24
000b16 2fe2      	MOV  R30,R18
000b17 2fa4      	MOV  R26,R20
000b18 940e 1128 	CALL __LSLB12
000b1a 95e0      	COM  R30
000b1b 21e1      	AND  R30,R1
000b1c 2b5e      	OR   R21,R30
000b1d 940e 1082 	CALL SUBOPT_0x20
000b1f 93fa      	ST   -Y,R31
000b20 93ea      	ST   -Y,R30
000b21 2fa5      	MOV  R26,R21
000b22 940e 0f90 	CALL _glcd_writemem
000b24 cfde      	RJMP _0x2040092
                 _0x2040094:
000b25 c02c      	RJMP _0x2040090
                 _0x2040091:
000b26 30e9      	CPI  R30,LOW(0x9)
000b27 f411      	BRNE _0x2040095
000b28 e050      	LDI  R21,LOW(0)
000b29 c003      	RJMP _0x2040096
                 _0x2040095:
000b2a 30ea      	CPI  R30,LOW(0xA)
000b2b f4a9      	BRNE _0x204009C
000b2c ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
000b2d 940e 1091 	CALL SUBOPT_0x22
000b2f 2fae      	MOV  R26,R30
000b30 2fe2      	MOV  R30,R18
000b31 940e 1130 	CALL __LSRB12
000b33 2f5e      	MOV  R21,R30
                 _0x2040099:
000b34 931f      	PUSH R17
000b35 5f1f      	SUBI R17,-1
000b36 85ee      	LDD  R30,Y+14
000b37 91af      	POP  R26
000b38 17ae      	CP   R26,R30
000b39 f430      	BRSH _0x204009B
000b3a 940e 1095 	CALL SUBOPT_0x23
000b3c 934a      	ST   -Y,R20
000b3d e0a0      	LDI  R26,LOW(0)
000b3e ddfd      	RCALL _pcd8544_wrmasked_G102
000b3f cff4      	RJMP _0x2040099
                 _0x204009B:
000b40 c011      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
000b41 931f      	PUSH R17
000b42 5f1f      	SUBI R17,-1
000b43 85ee      	LDD  R30,Y+14
000b44 91af      	POP  R26
000b45 17ae      	CP   R26,R30
000b46 f458      	BRSH _0x204009F
000b47 940e 10a6 	CALL SUBOPT_0x25
000b49 2fae      	MOV  R26,R30
000b4a 2fe2      	MOV  R30,R18
000b4b 940e 1130 	CALL __LSRB12
000b4d 93ea      	ST   -Y,R30
000b4e 934a      	ST   -Y,R20
000b4f 85ad      	LDD  R26,Y+13
000b50 ddeb      	RCALL _pcd8544_wrmasked_G102
000b51 cfef      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
000b52 85e8      	LDD  R30,Y+8
000b53 85aa      	LDD  R26,Y+10
000b54 85bb      	LDD  R27,Y+10+1
000b55 e0f0      	LDI  R31,0
000b56 0fea      	ADD  R30,R26
000b57 1ffb      	ADC  R31,R27
000b58 87ea      	STD  Y+10,R30
000b59 87fb      	STD  Y+10+1,R31
000b5a ceaa      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120009:
000b5b 940e 1184 	CALL __LOADLOCR6
000b5d 9661      	ADIW R28,17
000b5e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000b5f 940e 0fec 	CALL SUBOPT_0x9
000b61 940e 1179 	CALL __CPW02
000b63 f024      	BRLT _0x2060003
000b64 e0e0      	LDI  R30,LOW(0)
000b65 e0f0      	LDI  R31,HIGH(0)
000b66 940c 0f47 	JMP  _0x2120002
                 _0x2060003:
000b68 81a8      	LD   R26,Y
000b69 81b9      	LDD  R27,Y+1
000b6a 35a4      	CPI  R26,LOW(0x54)
000b6b e0e0      	LDI  R30,HIGH(0x54)
000b6c 07be      	CPC  R27,R30
000b6d f024      	BRLT _0x2060004
000b6e e5e3      	LDI  R30,LOW(83)
000b6f e0f0      	LDI  R31,HIGH(83)
000b70 940c 0f47 	JMP  _0x2120002
                 _0x2060004:
000b72 81e8      	LD   R30,Y
000b73 81f9      	LDD  R31,Y+1
000b74 940c 0f47 	JMP  _0x2120002
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000b76 940e 0fec 	CALL SUBOPT_0x9
000b78 940e 1179 	CALL __CPW02
000b7a f024      	BRLT _0x2060005
000b7b e0e0      	LDI  R30,LOW(0)
000b7c e0f0      	LDI  R31,HIGH(0)
000b7d 940c 0f47 	JMP  _0x2120002
                 _0x2060005:
000b7f 81a8      	LD   R26,Y
000b80 81b9      	LDD  R27,Y+1
000b81 97d0      	SBIW R26,48
000b82 f024      	BRLT _0x2060006
000b83 e2ef      	LDI  R30,LOW(47)
000b84 e0f0      	LDI  R31,HIGH(47)
000b85 940c 0f47 	JMP  _0x2120002
                 _0x2060006:
000b87 81e8      	LD   R30,Y
000b88 81f9      	LDD  R31,Y+1
000b89 940c 0f47 	JMP  _0x2120002
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
000b8b 93ba      	ST   -Y,R27
000b8c 93aa      	ST   -Y,R26
000b8d 9723      	SBIW R28,3
000b8e 940e 10b3 	CALL SUBOPT_0x26
000b90 018f      	MOVW R16,R30
000b91 2e00      	MOV  R0,R16
000b92 2a01      	OR   R0,R17
000b93 f419      	BRNE _0x206000B
000b94 e0e0      	LDI  R30,LOW(0)
000b95 e0f0      	LDI  R31,HIGH(0)
000b96 c05f      	RJMP _0x2120008
                 _0x206000B:
000b97 940e 10ba 	CALL SUBOPT_0x27
000b99 820f      	STD  Y+7,R0
000b9a 940e 10ba 	CALL SUBOPT_0x27
000b9c 820e      	STD  Y+6,R0
000b9d 940e 10ba 	CALL SUBOPT_0x27
000b9f 8608      	STD  Y+8,R0
000ba0 85eb      	LDD  R30,Y+11
000ba1 85a8      	LDD  R26,Y+8
000ba2 17ea      	CP   R30,R26
000ba3 f418      	BRSH _0x206000C
000ba4 e0e0      	LDI  R30,LOW(0)
000ba5 e0f0      	LDI  R31,HIGH(0)
000ba6 c04f      	RJMP _0x2120008
                 _0x206000C:
000ba7 01f8      	MOVW R30,R16
                +
000ba8 5f0f     +SUBI R16 , LOW ( - 1 )
000ba9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000baa 9154      	LPM  R21,Z
000bab 85a8      	LDD  R26,Y+8
000bac 27bb      	CLR  R27
000bad 27ee      	CLR  R30
000bae 0fa5      	ADD  R26,R21
000baf 1fbe      	ADC  R27,R30
000bb0 85eb      	LDD  R30,Y+11
000bb1 e0f0      	LDI  R31,0
000bb2 17ea      	CP   R30,R26
000bb3 07fb      	CPC  R31,R27
000bb4 f018      	BRLO _0x206000D
000bb5 e0e0      	LDI  R30,LOW(0)
000bb6 e0f0      	LDI  R31,HIGH(0)
000bb7 c03e      	RJMP _0x2120008
                 _0x206000D:
000bb8 81ee      	LDD  R30,Y+6
000bb9 95e6      	LSR  R30
000bba 95e6      	LSR  R30
000bbb 95e6      	LSR  R30
000bbc 2f4e      	MOV  R20,R30
000bbd 81ee      	LDD  R30,Y+6
000bbe 70e7      	ANDI R30,LOW(0x7)
000bbf f009      	BREQ _0x206000E
000bc0 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
000bc1 81ef      	LDD  R30,Y+7
000bc2 30e0      	CPI  R30,0
000bc3 f0a1      	BREQ _0x206000F
000bc4 85a9      	LDD  R26,Y+9
000bc5 85ba      	LDD  R27,Y+9+1
000bc6 93ec      	ST   X,R30
000bc7 85a8      	LDD  R26,Y+8
000bc8 85eb      	LDD  R30,Y+11
000bc9 1bea      	SUB  R30,R26
000bca e0f0      	LDI  R31,0
000bcb 01df      	MOVW R26,R30
000bcc 81ef      	LDD  R30,Y+7
000bcd e0f0      	LDI  R31,0
000bce 940e 113d 	CALL __MULW12U
000bd0 01df      	MOVW R26,R30
000bd1 2fe4      	MOV  R30,R20
000bd2 e0f0      	LDI  R31,0
000bd3 940e 113d 	CALL __MULW12U
000bd5 0fe0      	ADD  R30,R16
000bd6 1ff1      	ADC  R31,R17
000bd7 c01e      	RJMP _0x2120008
                 _0x206000F:
000bd8 0198      	MOVW R18,R16
000bd9 2fe5      	MOV  R30,R21
000bda e0f0      	LDI  R31,0
                +
000bdb 0f0e     +ADD R16 , R30
000bdc 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
000bdd 85a8      	LDD  R26,Y+8
000bde 5faf      	SUBI R26,-LOW(1)
000bdf 87a8      	STD  Y+8,R26
000be0 50a1      	SUBI R26,LOW(1)
000be1 85eb      	LDD  R30,Y+11
000be2 17ae      	CP   R26,R30
000be3 f460      	BRSH _0x2060012
000be4 01f9      	MOVW R30,R18
                +
000be5 5f2f     +SUBI R18 , LOW ( - 1 )
000be6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000be7 91a4      	LPM  R26,Z
000be8 e0b0      	LDI  R27,0
000be9 2fe4      	MOV  R30,R20
000bea e0f0      	LDI  R31,0
000beb 940e 113d 	CALL __MULW12U
                +
000bed 0f0e     +ADD R16 , R30
000bee 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000bef cfed      	RJMP _0x2060010
                 _0x2060012:
000bf0 01f9      	MOVW R30,R18
000bf1 91e4      	LPM  R30,Z
000bf2 85a9      	LDD  R26,Y+9
000bf3 85ba      	LDD  R27,Y+9+1
000bf4 93ec      	ST   X,R30
000bf5 01f8      	MOVW R30,R16
                 _0x2120008:
000bf6 940e 1184 	CALL __LOADLOCR6
000bf8 962c      	ADIW R28,12
000bf9 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
000bfa e0e0      	LDI  R30,LOW(0)
                +
000bfb 93e0 0661+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000bfd 91a0 0662+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000bff 27bb      	CLR  R27
000c00 940e 10bf 	CALL SUBOPT_0x28
000c02 e0f0      	LDI  R31,0
000c03 0fae      	ADD  R26,R30
000c04 1fbf      	ADC  R27,R31
                +
000c05 91e0 0666+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c07 e0f0      	LDI  R31,0
000c08 0fae      	ADD  R26,R30
000c09 1fbf      	ADC  R27,R31
000c0a df6b      	RCALL _glcd_clipy
                +
000c0b 93e0 0662+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000c0d 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000c0e 93aa      	ST   -Y,R26
000c0f 9721      	SBIW R28,1
000c10 940e 10b3 	CALL SUBOPT_0x26
000c12 9730      	SBIW R30,0
000c13 f409      	BRNE PC+2
000c14 c055      	RJMP _0x206001F
000c15 81af      	LDD  R26,Y+7
000c16 30aa      	CPI  R26,LOW(0xA)
000c17 f409      	BRNE _0x2060020
000c18 c04f      	RJMP _0x2060021
                 _0x2060020:
000c19 81ef      	LDD  R30,Y+7
000c1a 93ea      	ST   -Y,R30
000c1b 01de      	MOVW R26,R28
000c1c 9617      	ADIW R26,7
000c1d df6d      	RCALL _glcd_getcharw_G103
000c1e 01af      	MOVW R20,R30
000c1f 9730      	SBIW R30,0
000c20 f409      	BRNE _0x2060022
000c21 c04a      	RJMP _0x2120007
                 _0x2060022:
                +
000c22 91e0 0665+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c24 81ae      	LDD  R26,Y+6
000c25 0fea      	ADD  R30,R26
000c26 2f3e      	MOV  R19,R30
                +
000c27 91a0 0661+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000c29 27bb      	CLR  R27
000c2a e0f0      	LDI  R31,0
000c2b 0fea      	ADD  R30,R26
000c2c 1ffb      	ADC  R31,R27
000c2d 018f      	MOVW R16,R30
                +
000c2e 3505     +CPI R16 , LOW ( 85 )
000c2f e0e0     +LDI R30 , HIGH ( 85 )
000c30 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000c31 f018      	BRLO _0x2060023
000c32 2f03      	MOV  R16,R19
000c33 2711      	CLR  R17
000c34 dfc5      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
000c35 91e0 0661+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c37 93ea      	ST   -Y,R30
                +
000c38 91e0 0662+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c3a 93ea      	ST   -Y,R30
000c3b 85e8      	LDD  R30,Y+8
000c3c 93ea      	ST   -Y,R30
000c3d 940e 10bf 	CALL SUBOPT_0x28
000c3f 93ea      	ST   -Y,R30
000c40 e0e1      	LDI  R30,LOW(1)
000c41 93ea      	ST   -Y,R30
000c42 935a      	ST   -Y,R21
000c43 934a      	ST   -Y,R20
000c44 e0a7      	LDI  R26,LOW(7)
000c45 dd2f      	RCALL _glcd_block
                +
000c46 91e0 0661+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c48 81ae      	LDD  R26,Y+6
000c49 0fea      	ADD  R30,R26
000c4a 93ea      	ST   -Y,R30
                +
000c4b 91e0 0662+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c4d 93ea      	ST   -Y,R30
                +
000c4e 91e0 0665+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c50 93ea      	ST   -Y,R30
000c51 940e 10bf 	CALL SUBOPT_0x28
000c53 940e 10c6 	CALL SUBOPT_0x29
                +
000c55 91e0 0661+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c57 93ea      	ST   -Y,R30
                +
000c58 91a0 0662+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c5a 940e 10bf 	CALL SUBOPT_0x28
000c5c 0fea      	ADD  R30,R26
000c5d 93ea      	ST   -Y,R30
000c5e 933a      	ST   -Y,R19
                +
000c5f 91e0 0666+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c61 940e 10c6 	CALL SUBOPT_0x29
000c63 e5e4      	LDI  R30,LOW(84)
000c64 e0f0      	LDI  R31,HIGH(84)
000c65 17e0      	CP   R30,R16
000c66 07f1      	CPC  R31,R17
000c67 f411      	BRNE _0x2060024
                 _0x2060021:
000c68 df91      	RCALL _glcd_new_line_G103
000c69 c002      	RJMP _0x2120007
                 _0x2060024:
                 _0x206001F:
                +
000c6a 9300 0661+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120007:
000c6c 940e 1184 	CALL __LOADLOCR6
000c6e 9628      	ADIW R28,8
000c6f 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
000c70 93ba      	ST   -Y,R27
000c71 93aa      	ST   -Y,R26
000c72 931a      	ST   -Y,R17
                 _0x206002E:
000c73 81a9      	LDD  R26,Y+1
000c74 81ba      	LDD  R27,Y+1+1
000c75 91ed      	LD   R30,X+
000c76 83a9      	STD  Y+1,R26
000c77 83ba      	STD  Y+1+1,R27
000c78 2f1e      	MOV  R17,R30
000c79 30e0      	CPI  R30,0
000c7a f019      	BREQ _0x2060030
000c7b 2fa1      	MOV  R26,R17
000c7c df91      	RCALL _glcd_putchar
000c7d cff5      	RJMP _0x206002E
                 _0x2060030:
000c7e 8118      	LDD  R17,Y+0
000c7f c30e      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
000c80 93aa      	ST   -Y,R26
000c81 81ea      	LDD  R30,Y+2
000c82 93ea      	ST   -Y,R30
000c83 81ea      	LDD  R30,Y+2
000c84 93ea      	ST   -Y,R30
                +
000c85 91e0 0668+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000c87 81aa      	LDD  R26,Y+2
000c88 23ea      	AND  R30,R26
000c89 f019      	BREQ _0x206003E
000c8a 91e0 065f 	LDS  R30,_glcd_state
000c8c c002      	RJMP _0x206003F
                 _0x206003E:
                +
000c8d 91e0 0660+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
000c8f 2fae      	MOV  R26,R30
000c90 dc89      	RCALL _glcd_putpixel
000c91 81e8      	LD   R30,Y
000c92 0fee      	LSL  R30
000c93 83e8      	ST   Y,R30
000c94 30e0      	CPI  R30,0
000c95 f411      	BRNE _0x2060041
000c96 e0e1      	LDI  R30,LOW(1)
000c97 83e8      	ST   Y,R30
                 _0x2060041:
000c98 81e8      	LD   R30,Y
000c99 c2f4      	RJMP _0x2120001
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000c9a 93aa      	ST   -Y,R26
000c9b 81a9      	LDD  R26,Y+1
000c9c 27bb      	CLR  R27
000c9d dec1      	RCALL _glcd_clipx
                +
000c9e 93e0 0661+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000ca0 81a8      	LD   R26,Y
000ca1 27bb      	CLR  R27
000ca2 ded3      	RCALL _glcd_clipy
                +
000ca3 93e0 0662+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000ca5 c2a1      	RJMP _0x2120002
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000ca6 93aa      	ST   -Y,R26
000ca7 972b      	SBIW R28,11
000ca8 940e 117d 	CALL __SAVELOCR6
000caa 89ac      	LDD  R26,Y+20
000cab 27bb      	CLR  R27
000cac deb2      	RCALL _glcd_clipx
000cad 8bec      	STD  Y+20,R30
000cae 89aa      	LDD  R26,Y+18
000caf 27bb      	CLR  R27
000cb0 deae      	RCALL _glcd_clipx
000cb1 8bea      	STD  Y+18,R30
000cb2 89ab      	LDD  R26,Y+19
000cb3 27bb      	CLR  R27
000cb4 dec1      	RCALL _glcd_clipy
000cb5 8beb      	STD  Y+19,R30
000cb6 89a9      	LDD  R26,Y+17
000cb7 27bb      	CLR  R27
000cb8 debd      	RCALL _glcd_clipy
000cb9 8be9      	STD  Y+17,R30
000cba 89ea      	LDD  R30,Y+18
                +
000cbb 93e0 0661+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000cbd 89e9      	LDD  R30,Y+17
                +
000cbe 93e0 0662+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000cc0 e0e1      	LDI  R30,LOW(1)
000cc1 87e8      	STD  Y+8,R30
000cc2 89e9      	LDD  R30,Y+17
000cc3 89ab      	LDD  R26,Y+19
000cc4 17ea      	CP   R30,R26
000cc5 f571      	BRNE _0x2060042
000cc6 891c      	LDD  R17,Y+20
000cc7 89aa      	LDD  R26,Y+18
000cc8 171a      	CP   R17,R26
000cc9 f431      	BRNE _0x2060043
000cca 931a      	ST   -Y,R17
000ccb 89ec      	LDD  R30,Y+20
000ccc 93ea      	ST   -Y,R30
000ccd e0a1      	LDI  R26,LOW(1)
000cce dfb1      	RCALL _glcd_putpixelm_G103
000ccf c0c8      	RJMP _0x2120006
                 _0x2060043:
000cd0 89aa      	LDD  R26,Y+18
000cd1 171a      	CP   R17,R26
000cd2 f430      	BRSH _0x2060044
000cd3 89ea      	LDD  R30,Y+18
000cd4 1be1      	SUB  R30,R17
000cd5 2f0e      	MOV  R16,R30
                +
000cd6 e041     +LDI R20 , LOW ( 1 )
000cd7 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000cd8 c006      	RJMP _0x2060045
                 _0x2060044:
000cd9 89aa      	LDD  R26,Y+18
000cda 2fe1      	MOV  R30,R17
000cdb 1bea      	SUB  R30,R26
000cdc 2f0e      	MOV  R16,R30
                +
000cdd ef4f     +LDI R20 , LOW ( - 1 )
000cde ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
000cdf 893b      	LDD  R19,Y+19
000ce0 e0e0      	LDI  R30,LOW(0)
000ce1 83ee      	STD  Y+6,R30
                 _0x2060049:
000ce2 940e 10d0 	CALL SUBOPT_0x2A
000ce4 f438      	BRSH _0x206004B
000ce5 931a      	ST   -Y,R17
000ce6 933a      	ST   -Y,R19
000ce7 9533      	INC  R19
000ce8 85aa      	LDD  R26,Y+10
000ce9 df96      	RCALL _glcd_putpixelm_G103
000cea 83ef      	STD  Y+7,R30
000ceb cff6      	RJMP _0x2060049
                 _0x206004B:
000cec 81ef      	LDD  R30,Y+7
000ced 87e8      	STD  Y+8,R30
000cee 0f14      	ADD  R17,R20
000cef 2fe0      	MOV  R30,R16
000cf0 5001      	SUBI R16,1
000cf1 30e0      	CPI  R30,0
000cf2 f761      	BRNE _0x2060047
000cf3 c0a4      	RJMP _0x206004C
                 _0x2060042:
000cf4 89ea      	LDD  R30,Y+18
000cf5 89ac      	LDD  R26,Y+20
000cf6 17ea      	CP   R30,R26
000cf7 f539      	BRNE _0x206004D
000cf8 893b      	LDD  R19,Y+19
000cf9 89a9      	LDD  R26,Y+17
000cfa 173a      	CP   R19,R26
000cfb f430      	BRSH _0x206004E
000cfc 89e9      	LDD  R30,Y+17
000cfd 1be3      	SUB  R30,R19
000cfe 2f2e      	MOV  R18,R30
000cff e0e1      	LDI  R30,LOW(1)
000d00 e0f0      	LDI  R31,HIGH(1)
000d01 c006      	RJMP _0x206011B
                 _0x206004E:
000d02 89a9      	LDD  R26,Y+17
000d03 2fe3      	MOV  R30,R19
000d04 1bea      	SUB  R30,R26
000d05 2f2e      	MOV  R18,R30
000d06 efef      	LDI  R30,LOW(65535)
000d07 efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
000d08 87ed      	STD  Y+13,R30
000d09 87fe      	STD  Y+13+1,R31
                 _0x2060051:
000d0a 891c      	LDD  R17,Y+20
000d0b e0e0      	LDI  R30,LOW(0)
000d0c 83ee      	STD  Y+6,R30
                 _0x2060053:
000d0d 940e 10d0 	CALL SUBOPT_0x2A
000d0f f430      	BRSH _0x2060055
000d10 931a      	ST   -Y,R17
000d11 9513      	INC  R17
000d12 940e 10d8 	CALL SUBOPT_0x2B
000d14 83ef      	STD  Y+7,R30
000d15 cff7      	RJMP _0x2060053
                 _0x2060055:
000d16 81ef      	LDD  R30,Y+7
000d17 87e8      	STD  Y+8,R30
000d18 85ed      	LDD  R30,Y+13
000d19 0f3e      	ADD  R19,R30
000d1a 2fe2      	MOV  R30,R18
000d1b 5021      	SUBI R18,1
000d1c 30e0      	CPI  R30,0
000d1d f761      	BRNE _0x2060051
000d1e c079      	RJMP _0x2060056
                 _0x206004D:
000d1f e0e0      	LDI  R30,LOW(0)
000d20 83ee      	STD  Y+6,R30
                 _0x2060057:
000d21 940e 10d0 	CALL SUBOPT_0x2A
000d23 f008      	BRLO PC+2
000d24 c073      	RJMP _0x2060059
000d25 891c      	LDD  R17,Y+20
000d26 893b      	LDD  R19,Y+19
000d27 e0e1      	LDI  R30,LOW(1)
000d28 2f2e      	MOV  R18,R30
000d29 2f0e      	MOV  R16,R30
000d2a 89aa      	LDD  R26,Y+18
000d2b 27bb      	CLR  R27
000d2c 89ec      	LDD  R30,Y+20
000d2d e0f0      	LDI  R31,0
000d2e 1bae      	SUB  R26,R30
000d2f 0bbf      	SBC  R27,R31
000d30 01ad      	MOVW R20,R26
000d31 2355      	TST  R21
000d32 f42a      	BRPL _0x206005A
000d33 ef0f      	LDI  R16,LOW(255)
000d34 01fa      	MOVW R30,R20
000d35 940e 1124 	CALL __ANEGW1
000d37 01af      	MOVW R20,R30
                 _0x206005A:
000d38 01fa      	MOVW R30,R20
000d39 0fee      	LSL  R30
000d3a 1fff      	ROL  R31
000d3b 87ef      	STD  Y+15,R30
000d3c 8bf8      	STD  Y+15+1,R31
000d3d 89a9      	LDD  R26,Y+17
000d3e 27bb      	CLR  R27
000d3f 89eb      	LDD  R30,Y+19
000d40 e0f0      	LDI  R31,0
000d41 1bae      	SUB  R26,R30
000d42 0bbf      	SBC  R27,R31
000d43 87ad      	STD  Y+13,R26
000d44 87be      	STD  Y+13+1,R27
000d45 85ae      	LDD  R26,Y+14
000d46 23aa      	TST  R26
000d47 f43a      	BRPL _0x206005B
000d48 ef2f      	LDI  R18,LOW(255)
000d49 85ed      	LDD  R30,Y+13
000d4a 85fe      	LDD  R31,Y+13+1
000d4b 940e 1124 	CALL __ANEGW1
000d4d 87ed      	STD  Y+13,R30
000d4e 87fe      	STD  Y+13+1,R31
                 _0x206005B:
000d4f 85ed      	LDD  R30,Y+13
000d50 85fe      	LDD  R31,Y+13+1
000d51 0fee      	LSL  R30
000d52 1fff      	ROL  R31
000d53 87eb      	STD  Y+11,R30
000d54 87fc      	STD  Y+11+1,R31
000d55 931a      	ST   -Y,R17
000d56 933a      	ST   -Y,R19
000d57 e0a1      	LDI  R26,LOW(1)
000d58 df27      	RCALL _glcd_putpixelm_G103
000d59 87e8      	STD  Y+8,R30
000d5a e0e0      	LDI  R30,LOW(0)
000d5b 87e9      	STD  Y+9,R30
000d5c 87ea      	STD  Y+9+1,R30
000d5d 85ad      	LDD  R26,Y+13
000d5e 85be      	LDD  R27,Y+13+1
000d5f 174a      	CP   R20,R26
000d60 075b      	CPC  R21,R27
000d61 f0bc      	BRLT _0x206005C
                 _0x206005E:
000d62 0f10      	ADD  R17,R16
000d63 85eb      	LDD  R30,Y+11
000d64 85fc      	LDD  R31,Y+11+1
000d65 940e 10dc 	CALL SUBOPT_0x2C
000d67 85a9      	LDD  R26,Y+9
000d68 85ba      	LDD  R27,Y+9+1
000d69 174a      	CP   R20,R26
000d6a 075b      	CPC  R21,R27
000d6b f42c      	BRGE _0x2060060
000d6c 0f32      	ADD  R19,R18
000d6d 85af      	LDD  R26,Y+15
000d6e 89b8      	LDD  R27,Y+15+1
000d6f 940e 10e3 	CALL SUBOPT_0x2D
                 _0x2060060:
000d71 931a      	ST   -Y,R17
000d72 940e 10d8 	CALL SUBOPT_0x2B
000d74 87e8      	STD  Y+8,R30
000d75 89ea      	LDD  R30,Y+18
000d76 17e1      	CP   R30,R17
000d77 f751      	BRNE _0x206005E
000d78 c018      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
000d79 0f32      	ADD  R19,R18
000d7a 85ef      	LDD  R30,Y+15
000d7b 89f8      	LDD  R31,Y+15+1
000d7c 940e 10dc 	CALL SUBOPT_0x2C
000d7e 85ed      	LDD  R30,Y+13
000d7f 85fe      	LDD  R31,Y+13+1
000d80 85a9      	LDD  R26,Y+9
000d81 85ba      	LDD  R27,Y+9+1
000d82 17ea      	CP   R30,R26
000d83 07fb      	CPC  R31,R27
000d84 f42c      	BRGE _0x2060065
000d85 0f10      	ADD  R17,R16
000d86 85ab      	LDD  R26,Y+11
000d87 85bc      	LDD  R27,Y+11+1
000d88 940e 10e3 	CALL SUBOPT_0x2D
                 _0x2060065:
000d8a 931a      	ST   -Y,R17
000d8b 940e 10d8 	CALL SUBOPT_0x2B
000d8d 87e8      	STD  Y+8,R30
000d8e 89e9      	LDD  R30,Y+17
000d8f 17e3      	CP   R30,R19
000d90 f741      	BRNE _0x2060063
                 _0x2060061:
000d91 89eb      	LDD  R30,Y+19
000d92 5fef      	SUBI R30,-LOW(1)
000d93 8beb      	STD  Y+19,R30
000d94 89e9      	LDD  R30,Y+17
000d95 5fef      	SUBI R30,-LOW(1)
000d96 8be9      	STD  Y+17,R30
000d97 cf89      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120006:
000d98 940e 1184 	CALL __LOADLOCR6
000d9a 9665      	ADIW R28,21
000d9b 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G105:
                 ; .FSTART _put_buff_G105
000d9c 93ba      	ST   -Y,R27
000d9d 93aa      	ST   -Y,R26
000d9e 931a      	ST   -Y,R17
000d9f 930a      	ST   -Y,R16
000da0 81aa      	LDD  R26,Y+2
000da1 81bb      	LDD  R27,Y+2+1
000da2 9612      	ADIW R26,2
000da3 940e 1145 	CALL __GETW1P
000da5 9730      	SBIW R30,0
000da6 f129      	BREQ _0x20A0010
000da7 81aa      	LDD  R26,Y+2
000da8 81bb      	LDD  R27,Y+2+1
000da9 9614      	ADIW R26,4
000daa 940e 1145 	CALL __GETW1P
000dac 018f      	MOVW R16,R30
000dad 9730      	SBIW R30,0
000dae f061      	BREQ _0x20A0012
                +
000daf 3002     +CPI R16 , LOW ( 2 )
000db0 e0e0     +LDI R30 , HIGH ( 2 )
000db1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000db2 f080      	BRLO _0x20A0013
000db3 01f8      	MOVW R30,R16
000db4 9731      	SBIW R30,1
000db5 018f      	MOVW R16,R30
                +
000db6 81aa     +LDD R26 , Y + 2
000db7 81bb     +LDD R27 , Y + 2 + 1
000db8 9614     +ADIW R26 , 4
000db9 93ed     +ST X + , R30
000dba 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x20A0012:
000dbb 81aa      	LDD  R26,Y+2
000dbc 81bb      	LDD  R27,Y+2+1
000dbd 9612      	ADIW R26,2
000dbe 940e 0fb6 	CALL SUBOPT_0x1
000dc0 9731      	SBIW R30,1
000dc1 81ac      	LDD  R26,Y+4
000dc2 83a0      	STD  Z+0,R26
                 _0x20A0013:
000dc3 81aa      	LDD  R26,Y+2
000dc4 81bb      	LDD  R27,Y+2+1
000dc5 940e 1145 	CALL __GETW1P
000dc7 23ff      	TST  R31
000dc8 f012      	BRMI _0x20A0014
000dc9 940e 0fb6 	CALL SUBOPT_0x1
                 _0x20A0014:
000dcb c006      	RJMP _0x20A0015
                 _0x20A0010:
000dcc 81aa      	LDD  R26,Y+2
000dcd 81bb      	LDD  R27,Y+2+1
000dce efef      	LDI  R30,LOW(65535)
000dcf efff      	LDI  R31,HIGH(65535)
000dd0 93ed      	ST   X+,R30
000dd1 93fc      	ST   X,R31
                 _0x20A0015:
                 _0x2120004:
000dd2 8119      	LDD  R17,Y+1
000dd3 8108      	LDD  R16,Y+0
                 _0x2120005:
000dd4 9625      	ADIW R28,5
000dd5 9508      	RET
                 ; .FEND
                 __print_G105:
                 ; .FSTART __print_G105
000dd6 93ba      	ST   -Y,R27
000dd7 93aa      	ST   -Y,R26
000dd8 9726      	SBIW R28,6
000dd9 940e 117d 	CALL __SAVELOCR6
000ddb e010      	LDI  R17,0
000ddc 85ac      	LDD  R26,Y+12
000ddd 85bd      	LDD  R27,Y+12+1
000dde e0e0      	LDI  R30,LOW(0)
000ddf e0f0      	LDI  R31,HIGH(0)
000de0 93ed      	ST   X+,R30
000de1 93fc      	ST   X,R31
                 _0x20A0016:
000de2 89ea      	LDD  R30,Y+18
000de3 89fb      	LDD  R31,Y+18+1
000de4 9631      	ADIW R30,1
000de5 8bea      	STD  Y+18,R30
000de6 8bfb      	STD  Y+18+1,R31
000de7 9731      	SBIW R30,1
000de8 91e4      	LPM  R30,Z
000de9 2f2e      	MOV  R18,R30
000dea 30e0      	CPI  R30,0
000deb f409      	BRNE PC+2
000dec c115      	RJMP _0x20A0018
000ded 2fe1      	MOV  R30,R17
000dee 30e0      	CPI  R30,0
000def f439      	BRNE _0x20A001C
000df0 3225      	CPI  R18,37
000df1 f411      	BRNE _0x20A001D
000df2 e011      	LDI  R17,LOW(1)
000df3 c002      	RJMP _0x20A001E
                 _0x20A001D:
000df4 940e 10ea 	CALL SUBOPT_0x2E
                 _0x20A001E:
000df6 c10a      	RJMP _0x20A001B
                 _0x20A001C:
000df7 30e1      	CPI  R30,LOW(0x1)
000df8 f4a9      	BRNE _0x20A001F
000df9 3225      	CPI  R18,37
000dfa f419      	BRNE _0x20A0020
000dfb 940e 10ea 	CALL SUBOPT_0x2E
000dfd c102      	RJMP _0x20A00CC
                 _0x20A0020:
000dfe e012      	LDI  R17,LOW(2)
000dff e040      	LDI  R20,LOW(0)
000e00 e000      	LDI  R16,LOW(0)
000e01 322d      	CPI  R18,45
000e02 f411      	BRNE _0x20A0021
000e03 e001      	LDI  R16,LOW(1)
000e04 c0fc      	RJMP _0x20A001B
                 _0x20A0021:
000e05 322b      	CPI  R18,43
000e06 f411      	BRNE _0x20A0022
000e07 e24b      	LDI  R20,LOW(43)
000e08 c0f8      	RJMP _0x20A001B
                 _0x20A0022:
000e09 3220      	CPI  R18,32
000e0a f411      	BRNE _0x20A0023
000e0b e240      	LDI  R20,LOW(32)
000e0c c0f4      	RJMP _0x20A001B
                 _0x20A0023:
000e0d c002      	RJMP _0x20A0024
                 _0x20A001F:
000e0e 30e2      	CPI  R30,LOW(0x2)
000e0f f439      	BRNE _0x20A0025
                 _0x20A0024:
000e10 e050      	LDI  R21,LOW(0)
000e11 e013      	LDI  R17,LOW(3)
000e12 3320      	CPI  R18,48
000e13 f411      	BRNE _0x20A0026
000e14 6800      	ORI  R16,LOW(128)
000e15 c0eb      	RJMP _0x20A001B
                 _0x20A0026:
000e16 c003      	RJMP _0x20A0027
                 _0x20A0025:
000e17 30e3      	CPI  R30,LOW(0x3)
000e18 f009      	BREQ PC+2
000e19 c0e7      	RJMP _0x20A001B
                 _0x20A0027:
000e1a 3320      	CPI  R18,48
000e1b f010      	BRLO _0x20A002A
000e1c 332a      	CPI  R18,58
000e1d f008      	BRLO _0x20A002B
                 _0x20A002A:
000e1e c007      	RJMP _0x20A0029
                 _0x20A002B:
000e1f e0aa      	LDI  R26,LOW(10)
000e20 9f5a      	MUL  R21,R26
000e21 2d50      	MOV  R21,R0
000e22 2fe2      	MOV  R30,R18
000e23 53e0      	SUBI R30,LOW(48)
000e24 0f5e      	ADD  R21,R30
000e25 c0db      	RJMP _0x20A001B
                 _0x20A0029:
000e26 2fe2      	MOV  R30,R18
000e27 36e3      	CPI  R30,LOW(0x63)
000e28 f449      	BRNE _0x20A002F
000e29 940e 10f1 	CALL SUBOPT_0x2F
000e2b 89e8      	LDD  R30,Y+16
000e2c 89f9      	LDD  R31,Y+16+1
000e2d 81a4      	LDD  R26,Z+4
000e2e 93aa      	ST   -Y,R26
000e2f 940e 10f7 	CALL SUBOPT_0x30
000e31 c0ce      	RJMP _0x20A0030
                 _0x20A002F:
000e32 37e3      	CPI  R30,LOW(0x73)
000e33 f441      	BRNE _0x20A0032
000e34 940e 10f1 	CALL SUBOPT_0x2F
000e36 940e 10fd 	CALL SUBOPT_0x31
000e38 940e 07b7 	CALL _strlen
000e3a 2f1e      	MOV  R17,R30
000e3b c00a      	RJMP _0x20A0033
                 _0x20A0032:
000e3c 37e0      	CPI  R30,LOW(0x70)
000e3d f461      	BRNE _0x20A0035
000e3e 940e 10f1 	CALL SUBOPT_0x2F
000e40 940e 10fd 	CALL SUBOPT_0x31
000e42 940e 07c3 	CALL _strlenf
000e44 2f1e      	MOV  R17,R30
000e45 6008      	ORI  R16,LOW(8)
                 _0x20A0033:
000e46 6002      	ORI  R16,LOW(2)
000e47 770f      	ANDI R16,LOW(127)
000e48 e030      	LDI  R19,LOW(0)
000e49 c034      	RJMP _0x20A0036
                 _0x20A0035:
000e4a 36e4      	CPI  R30,LOW(0x64)
000e4b f011      	BREQ _0x20A0039
000e4c 36e9      	CPI  R30,LOW(0x69)
000e4d f411      	BRNE _0x20A003A
                 _0x20A0039:
000e4e 6004      	ORI  R16,LOW(4)
000e4f c002      	RJMP _0x20A003B
                 _0x20A003A:
000e50 37e5      	CPI  R30,LOW(0x75)
000e51 f431      	BRNE _0x20A003C
                 _0x20A003B:
000e52 e7ea      	LDI  R30,LOW(_tbl10_G105*2)
000e53 e0f2      	LDI  R31,HIGH(_tbl10_G105*2)
000e54 83ee      	STD  Y+6,R30
000e55 83ff      	STD  Y+6+1,R31
000e56 e015      	LDI  R17,LOW(5)
000e57 c00c      	RJMP _0x20A003D
                 _0x20A003C:
000e58 35e8      	CPI  R30,LOW(0x58)
000e59 f411      	BRNE _0x20A003F
000e5a 6008      	ORI  R16,LOW(8)
000e5b c003      	RJMP _0x20A0040
                 _0x20A003F:
000e5c 37e8      	CPI  R30,LOW(0x78)
000e5d f009      	BREQ PC+2
000e5e c0a1      	RJMP _0x20A0071
                 _0x20A0040:
000e5f e8e4      	LDI  R30,LOW(_tbl16_G105*2)
000e60 e0f2      	LDI  R31,HIGH(_tbl16_G105*2)
000e61 83ee      	STD  Y+6,R30
000e62 83ff      	STD  Y+6+1,R31
000e63 e014      	LDI  R17,LOW(4)
                 _0x20A003D:
000e64 ff02      	SBRS R16,2
000e65 c014      	RJMP _0x20A0042
000e66 940e 10f1 	CALL SUBOPT_0x2F
000e68 940e 1107 	CALL SUBOPT_0x32
000e6a 85ab      	LDD  R26,Y+11
000e6b 23aa      	TST  R26
000e6c f43a      	BRPL _0x20A0043
000e6d 85ea      	LDD  R30,Y+10
000e6e 85fb      	LDD  R31,Y+10+1
000e6f 940e 1124 	CALL __ANEGW1
000e71 87ea      	STD  Y+10,R30
000e72 87fb      	STD  Y+10+1,R31
000e73 e24d      	LDI  R20,LOW(45)
                 _0x20A0043:
000e74 3040      	CPI  R20,0
000e75 f011      	BREQ _0x20A0044
000e76 5f1f      	SUBI R17,-LOW(1)
000e77 c001      	RJMP _0x20A0045
                 _0x20A0044:
000e78 7f0b      	ANDI R16,LOW(251)
                 _0x20A0045:
000e79 c004      	RJMP _0x20A0046
                 _0x20A0042:
000e7a 940e 10f1 	CALL SUBOPT_0x2F
000e7c 940e 1107 	CALL SUBOPT_0x32
                 _0x20A0046:
                 _0x20A0036:
000e7e fd00      	SBRC R16,0
000e7f c011      	RJMP _0x20A0047
                 _0x20A0048:
000e80 1715      	CP   R17,R21
000e81 f478      	BRSH _0x20A004A
000e82 ff07      	SBRS R16,7
000e83 c008      	RJMP _0x20A004B
000e84 ff02      	SBRS R16,2
000e85 c004      	RJMP _0x20A004C
000e86 7f0b      	ANDI R16,LOW(251)
000e87 2f24      	MOV  R18,R20
000e88 5011      	SUBI R17,LOW(1)
000e89 c001      	RJMP _0x20A004D
                 _0x20A004C:
000e8a e320      	LDI  R18,LOW(48)
                 _0x20A004D:
000e8b c001      	RJMP _0x20A004E
                 _0x20A004B:
000e8c e220      	LDI  R18,LOW(32)
                 _0x20A004E:
000e8d 940e 10ea 	CALL SUBOPT_0x2E
000e8f 5051      	SUBI R21,LOW(1)
000e90 cfef      	RJMP _0x20A0048
                 _0x20A004A:
                 _0x20A0047:
000e91 2f31      	MOV  R19,R17
000e92 ff01      	SBRS R16,1
000e93 c017      	RJMP _0x20A004F
                 _0x20A0050:
000e94 3030      	CPI  R19,0
000e95 f0a1      	BREQ _0x20A0052
000e96 ff03      	SBRS R16,3
000e97 c006      	RJMP _0x20A0053
000e98 81ee      	LDD  R30,Y+6
000e99 81ff      	LDD  R31,Y+6+1
000e9a 9125      	LPM  R18,Z+
000e9b 83ee      	STD  Y+6,R30
000e9c 83ff      	STD  Y+6+1,R31
000e9d c005      	RJMP _0x20A0054
                 _0x20A0053:
000e9e 81ae      	LDD  R26,Y+6
000e9f 81bf      	LDD  R27,Y+6+1
000ea0 912d      	LD   R18,X+
000ea1 83ae      	STD  Y+6,R26
000ea2 83bf      	STD  Y+6+1,R27
                 _0x20A0054:
000ea3 940e 10ea 	CALL SUBOPT_0x2E
000ea5 3050      	CPI  R21,0
000ea6 f009      	BREQ _0x20A0055
000ea7 5051      	SUBI R21,LOW(1)
                 _0x20A0055:
000ea8 5031      	SUBI R19,LOW(1)
000ea9 cfea      	RJMP _0x20A0050
                 _0x20A0052:
000eaa c04b      	RJMP _0x20A0056
                 _0x20A004F:
                 _0x20A0058:
000eab e320      	LDI  R18,LOW(48)
000eac 81ee      	LDD  R30,Y+6
000ead 81ff      	LDD  R31,Y+6+1
000eae 940e 1153 	CALL __GETW1PF
000eb0 87e8      	STD  Y+8,R30
000eb1 87f9      	STD  Y+8+1,R31
000eb2 81ee      	LDD  R30,Y+6
000eb3 81ff      	LDD  R31,Y+6+1
000eb4 9632      	ADIW R30,2
000eb5 83ee      	STD  Y+6,R30
000eb6 83ff      	STD  Y+6+1,R31
                 _0x20A005A:
000eb7 85e8      	LDD  R30,Y+8
000eb8 85f9      	LDD  R31,Y+8+1
000eb9 85aa      	LDD  R26,Y+10
000eba 85bb      	LDD  R27,Y+10+1
000ebb 17ae      	CP   R26,R30
000ebc 07bf      	CPC  R27,R31
000ebd f050      	BRLO _0x20A005C
000ebe 5f2f      	SUBI R18,-LOW(1)
000ebf 85a8      	LDD  R26,Y+8
000ec0 85b9      	LDD  R27,Y+8+1
000ec1 85ea      	LDD  R30,Y+10
000ec2 85fb      	LDD  R31,Y+10+1
000ec3 1bea      	SUB  R30,R26
000ec4 0bfb      	SBC  R31,R27
000ec5 87ea      	STD  Y+10,R30
000ec6 87fb      	STD  Y+10+1,R31
000ec7 cfef      	RJMP _0x20A005A
                 _0x20A005C:
000ec8 332a      	CPI  R18,58
000ec9 f028      	BRLO _0x20A005D
000eca ff03      	SBRS R16,3
000ecb c002      	RJMP _0x20A005E
000ecc 5f29      	SUBI R18,-LOW(7)
000ecd c001      	RJMP _0x20A005F
                 _0x20A005E:
000ece 5d29      	SUBI R18,-LOW(39)
                 _0x20A005F:
                 _0x20A005D:
000ecf fd04      	SBRC R16,4
000ed0 c01a      	RJMP _0x20A0061
000ed1 3321      	CPI  R18,49
000ed2 f420      	BRSH _0x20A0063
000ed3 85a8      	LDD  R26,Y+8
000ed4 85b9      	LDD  R27,Y+8+1
000ed5 9711      	SBIW R26,1
000ed6 f409      	BRNE _0x20A0062
                 _0x20A0063:
000ed7 c009      	RJMP _0x20A00CD
                 _0x20A0062:
000ed8 1753      	CP   R21,R19
000ed9 f010      	BRLO _0x20A0067
000eda ff00      	SBRS R16,0
000edb c001      	RJMP _0x20A0068
                 _0x20A0067:
000edc c013      	RJMP _0x20A0066
                 _0x20A0068:
000edd e220      	LDI  R18,LOW(32)
000ede ff07      	SBRS R16,7
000edf c00b      	RJMP _0x20A0069
000ee0 e320      	LDI  R18,LOW(48)
                 _0x20A00CD:
000ee1 6100      	ORI  R16,LOW(16)
000ee2 ff02      	SBRS R16,2
000ee3 c007      	RJMP _0x20A006A
000ee4 7f0b      	ANDI R16,LOW(251)
000ee5 934a      	ST   -Y,R20
000ee6 940e 10f7 	CALL SUBOPT_0x30
000ee8 3050      	CPI  R21,0
000ee9 f009      	BREQ _0x20A006B
000eea 5051      	SUBI R21,LOW(1)
                 _0x20A006B:
                 _0x20A006A:
                 _0x20A0069:
                 _0x20A0061:
000eeb 940e 10ea 	CALL SUBOPT_0x2E
000eed 3050      	CPI  R21,0
000eee f009      	BREQ _0x20A006C
000eef 5051      	SUBI R21,LOW(1)
                 _0x20A006C:
                 _0x20A0066:
000ef0 5031      	SUBI R19,LOW(1)
000ef1 85a8      	LDD  R26,Y+8
000ef2 85b9      	LDD  R27,Y+8+1
000ef3 9712      	SBIW R26,2
000ef4 f008      	BRLO _0x20A0059
000ef5 cfb5      	RJMP _0x20A0058
                 _0x20A0059:
                 _0x20A0056:
000ef6 ff00      	SBRS R16,0
000ef7 c008      	RJMP _0x20A006D
                 _0x20A006E:
000ef8 3050      	CPI  R21,0
000ef9 f031      	BREQ _0x20A0070
000efa 5051      	SUBI R21,LOW(1)
000efb e2e0      	LDI  R30,LOW(32)
000efc 93ea      	ST   -Y,R30
000efd 940e 10f7 	CALL SUBOPT_0x30
000eff cff8      	RJMP _0x20A006E
                 _0x20A0070:
                 _0x20A006D:
                 _0x20A0071:
                 _0x20A0030:
                 _0x20A00CC:
000f00 e010      	LDI  R17,LOW(0)
                 _0x20A001B:
000f01 cee0      	RJMP _0x20A0016
                 _0x20A0018:
000f02 85ac      	LDD  R26,Y+12
000f03 85bd      	LDD  R27,Y+12+1
000f04 940e 1145 	CALL __GETW1P
000f06 940e 1184 	CALL __LOADLOCR6
000f08 9664      	ADIW R28,20
000f09 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000f0a 92ff      	PUSH R15
000f0b 2ef8      	MOV  R15,R24
000f0c 9726      	SBIW R28,6
000f0d 940e 117f 	CALL __SAVELOCR4
000f0f 940e 110f 	CALL SUBOPT_0x33
000f11 9730      	SBIW R30,0
000f12 f419      	BRNE _0x20A0072
000f13 efef      	LDI  R30,LOW(65535)
000f14 efff      	LDI  R31,HIGH(65535)
000f15 c023      	RJMP _0x2120003
                 _0x20A0072:
000f16 01de      	MOVW R26,R28
000f17 9616      	ADIW R26,6
000f18 940e 1120 	CALL __ADDW2R15
000f1a 018d      	MOVW R16,R26
000f1b 940e 110f 	CALL SUBOPT_0x33
000f1d 83ee      	STD  Y+6,R30
000f1e 83ff      	STD  Y+6+1,R31
000f1f e0e0      	LDI  R30,LOW(0)
000f20 87e8      	STD  Y+8,R30
000f21 87e9      	STD  Y+8+1,R30
000f22 01de      	MOVW R26,R28
000f23 961a      	ADIW R26,10
000f24 940e 1120 	CALL __ADDW2R15
000f26 940e 1145 	CALL __GETW1P
000f28 93fa      	ST   -Y,R31
000f29 93ea      	ST   -Y,R30
000f2a 931a      	ST   -Y,R17
000f2b 930a      	ST   -Y,R16
000f2c e9ec      	LDI  R30,LOW(_put_buff_G105)
000f2d e0fd      	LDI  R31,HIGH(_put_buff_G105)
000f2e 93fa      	ST   -Y,R31
000f2f 93ea      	ST   -Y,R30
000f30 01de      	MOVW R26,R28
000f31 961a      	ADIW R26,10
000f32 dea3      	RCALL __print_G105
000f33 019f      	MOVW R18,R30
000f34 81ae      	LDD  R26,Y+6
000f35 81bf      	LDD  R27,Y+6+1
000f36 e0e0      	LDI  R30,LOW(0)
000f37 93ec      	ST   X,R30
000f38 01f9      	MOVW R30,R18
                 _0x2120003:
000f39 940e 1186 	CALL __LOADLOCR4
000f3b 962a      	ADIW R28,10
000f3c 90ff      	POP  R15
000f3d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000f3e 93aa      	ST   -Y,R26
000f3f 81e8      	LD   R30,Y
000f40 e0f0      	LDI  R31,0
000f41 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000f42 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000f43 91a4      	LPM  R26,Z
000f44 81e9      	LDD  R30,Y+1
000f45 940e 1128 	CALL __LSLB12
                 _0x2120002:
000f47 9622      	ADIW R28,2
000f48 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000f49 93aa      	ST   -Y,R26
000f4a 931a      	ST   -Y,R17
000f4b 81e9      	LDD  R30,Y+1
000f4c 30e7      	CPI  R30,LOW(0x7)
000f4d f011      	BREQ _0x2100007
000f4e 30ea      	CPI  R30,LOW(0xA)
000f4f f419      	BRNE _0x2100008
                 _0x2100007:
000f50 9110 065f 	LDS  R17,_glcd_state
000f52 c009      	RJMP _0x2100009
                 _0x2100008:
000f53 30e9      	CPI  R30,LOW(0x9)
000f54 f419      	BRNE _0x210000B
                +
000f55 9110 0660+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000f57 c004      	RJMP _0x2100009
                 _0x210000B:
000f58 30e8      	CPI  R30,LOW(0x8)
000f59 f4a1      	BRNE _0x2100005
                +
000f5a 9110 066f+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000f5c 91e0 0660+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000f5e 30e0      	CPI  R30,0
000f5f f049      	BREQ _0x210000E
000f60 3010      	CPI  R17,0
000f61 f019      	BREQ _0x210000F
000f62 efef      	LDI  R30,LOW(255)
000f63 8118      	LDD  R17,Y+0
000f64 c029      	RJMP _0x2120001
                 _0x210000F:
000f65 81ea      	LDD  R30,Y+2
000f66 95e0      	COM  R30
000f67 8118      	LDD  R17,Y+0
000f68 c025      	RJMP _0x2120001
                 _0x210000E:
000f69 3010      	CPI  R17,0
000f6a f419      	BRNE _0x2100011
000f6b e0e0      	LDI  R30,LOW(0)
000f6c 8118      	LDD  R17,Y+0
000f6d c020      	RJMP _0x2120001
                 _0x2100011:
                 _0x2100005:
000f6e 81ea      	LDD  R30,Y+2
000f6f 8118      	LDD  R17,Y+0
000f70 c01d      	RJMP _0x2120001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000f71 93ba      	ST   -Y,R27
000f72 93aa      	ST   -Y,R26
000f73 81ea      	LDD  R30,Y+2
000f74 30e1      	CPI  R30,LOW(0x1)
000f75 f421      	BRNE _0x2100015
000f76 81e8      	LD   R30,Y
000f77 81f9      	LDD  R31,Y+1
000f78 91e4      	LPM  R30,Z
000f79 c014      	RJMP _0x2120001
                 _0x2100015:
000f7a 30e2      	CPI  R30,LOW(0x2)
000f7b f429      	BRNE _0x2100016
000f7c 81a8      	LD   R26,Y
000f7d 81b9      	LDD  R27,Y+1
000f7e 940e 115c 	CALL __EEPROMRDB
000f80 c00d      	RJMP _0x2120001
                 _0x2100016:
000f81 30e3      	CPI  R30,LOW(0x3)
000f82 f441      	BRNE _0x2100018
000f83 81a8      	LD   R26,Y
000f84 81b9      	LDD  R27,Y+1
                +
000f85 91e0 0678+LDS R30 , _glcd_state + ( 25 )
000f87 91f0 0679+LDS R31 , _glcd_state + ( 25 ) + 1
000f89 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000f8a c003      	RJMP _0x2120001
                 _0x2100018:
000f8b 81a8      	LD   R26,Y
000f8c 81b9      	LDD  R27,Y+1
000f8d 91ec      	LD   R30,X
                 _0x2120001:
000f8e 9623      	ADIW R28,3
000f8f 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000f90 93aa      	ST   -Y,R26
000f91 81eb      	LDD  R30,Y+3
000f92 30e0      	CPI  R30,0
000f93 f429      	BRNE _0x210001C
000f94 81e8      	LD   R30,Y
000f95 81a9      	LDD  R26,Y+1
000f96 81ba      	LDD  R27,Y+1+1
000f97 93ec      	ST   X,R30
000f98 c014      	RJMP _0x210001B
                 _0x210001C:
000f99 30e2      	CPI  R30,LOW(0x2)
000f9a f431      	BRNE _0x210001D
000f9b 81e8      	LD   R30,Y
000f9c 81a9      	LDD  R26,Y+1
000f9d 81ba      	LDD  R27,Y+1+1
000f9e 940e 1168 	CALL __EEPROMWRB
000fa0 c00c      	RJMP _0x210001B
                 _0x210001D:
000fa1 30e3      	CPI  R30,LOW(0x3)
000fa2 f451      	BRNE _0x210001B
000fa3 81e9      	LDD  R30,Y+1
000fa4 81fa      	LDD  R31,Y+1+1
000fa5 93fa      	ST   -Y,R31
000fa6 93ea      	ST   -Y,R30
000fa7 81aa      	LDD  R26,Y+2
                +
000fa8 91e0 067a+LDS R30 , _glcd_state + ( 27 )
000faa 91f0 067b+LDS R31 , _glcd_state + ( 27 ) + 1
000fac 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
000fad 9624      	ADIW R28,4
000fae 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
00065f           	.BYTE 0x1D
                 _key:
00067c           	.BYTE 0xA
                 _dem:
000686           	.BYTE 0x2
                 _rx_buffer0:
000688           	.BYTE 0x40
                 _rx_wr_index0:
0006c8           	.BYTE 0x1
                 _rx_rd_index0:
0006c9           	.BYTE 0x1
                 _rx_counter0:
0006ca           	.BYTE 0x1
                 _buff:
0006cb           	.BYTE 0x104
                 _i:
0007cf           	.BYTE 0x2
                 _time_s:
0007d1           	.BYTE 0x2
                 _time_flow:
0007d3           	.BYTE 0x4
                 _tx_buffer0:
0007d7           	.BYTE 0x40
                 _tx_wr_index0:
000817           	.BYTE 0x1
                 _tx_rd_index0:
000818           	.BYTE 0x1
                 _tx_counter0:
000819           	.BYTE 0x1
                 _station_receive:
00081a           	.BYTE 0xC
                 _tay_cam_receive:
000826           	.BYTE 0x8
                 _data_receive:
00082e           	.BYTE 0x12
                 _result:
000840           	.BYTE 0x1
                 _data_send:
000841           	.BYTE 0xC
                 __seed_G101:
00084d           	.BYTE 0x4
                 _gfx_addr_G102:
000851           	.BYTE 0x2
                 _gfx_buffer_G102:
000853           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000faf 93aa      	ST   -Y,R26
000fb0 93ba      	ST   -Y,R27
000fb1 93ea      	ST   -Y,R30
000fb2 93fa      	ST   -Y,R31
000fb3 b7ef      	IN   R30,SREG
000fb4 93ea      	ST   -Y,R30
000fb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x1:
000fb6 91ed      	LD   R30,X+
000fb7 91fd      	LD   R31,X+
000fb8 9631      	ADIW R30,1
000fb9 93fe      	ST   -X,R31
000fba 93ee      	ST   -X,R30
000fbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
                +
000fbc e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fbd 958a     +DEC R24
000fbe f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fbf 81e9      	LDD  R30,Y+1
000fc0 0fee      	LSL  R30
000fc1 83e9      	STD  Y+1,R30
000fc2 9adc      	SBI  0x1B,4
                +
000fc3 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fc4 958a     +DEC R24
000fc5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fc6 e0e0      	LDI  R30,0
000fc7 99cd      	SBIC 0x19,5
000fc8 e0e1      	LDI  R30,1
000fc9 81a9      	LDD  R26,Y+1
000fca 2bea      	OR   R30,R26
000fcb 83e9      	STD  Y+1,R30
000fcc 98dc      	CBI  0x1B,4
000fcd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000fce 93aa      	ST   -Y,R26
000fcf 98da      	CBI  0x1B,2
000fd0 81e9      	LDD  R30,Y+1
000fd1 62e0      	ORI  R30,0x20
000fd2 2fae      	MOV  R26,R30
000fd3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000fd4 9ada      	SBI  0x1B,2
                +
000fd5 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000fd6 958a     +DEC R24
000fd7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000fd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000fd9 940e 03e5 	CALL _SPI_RW_RX
000fdb 81a8      	LD   R26,Y
000fdc 940c 03e5 	JMP  _SPI_RW_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000fde 940e 042f 	CALL _RF_Write3_RX
000fe0 e1e0      	LDI  R30,LOW(16)
000fe1 93ea      	ST   -Y,R30
000fe2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000fe3 93ea      	ST   -Y,R30
000fe4 e0af      	LDI  R26,LOW(15)
000fe5 940c 0419 	JMP  _RF_Write_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000fe7 e0f0      	LDI  R31,0
000fe8 93ed      	ST   X+,R30
000fe9 93fc      	ST   X,R31
000fea 940c 03f8 	JMP  _SPI_Read_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000fec 93ba      	ST   -Y,R27
000fed 93aa      	ST   -Y,R26
000fee 81a8      	LD   R26,Y
000fef 81b9      	LDD  R27,Y+1
000ff0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xA:
000ff1 940e 08fc 	CALL _glcd_clear
000ff3 e0e0      	LDI  R30,LOW(0)
000ff4 93ea      	ST   -Y,R30
000ff5 e0a0      	LDI  R26,LOW(0)
000ff6 940c 0c9a 	JMP  _glcd_moveto
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
000ff8 ecab      	LDI  R26,LOW(_buff)
000ff9 e0b6      	LDI  R27,HIGH(_buff)
000ffa 940c 0c70 	JMP  _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000ffc 1ba2      	SUB  R26,R18
000ffd 0bb3      	SBC  R27,R19
000ffe a5ee      	LDD  R30,Y+46
000fff a5ff      	LDD  R31,Y+46+1
001000 17ea      	CP   R30,R26
001001 07fb      	CPC  R31,R27
001002 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD:
001003 eceb      	LDI  R30,LOW(_buff)
001004 e0f6      	LDI  R31,HIGH(_buff)
001005 93fa      	ST   -Y,R31
001006 93ea      	ST   -Y,R30
001007 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
                +
001008 01de     +MOVW R26 , R28
001009 5aaf     +SUBI R26 , LOW ( - 81 )
00100a 4fbf     +SBCI R27 , HIGH ( - 81 )
00100b 900d     +LD R0 , X +
00100c 91bc     +LD R27 , X
00100d 2da0     +MOV R26 , R0
                 	__GETW2SX 81
00100e 91ec      	LD   R30,X
00100f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
001010 940e 04b2 	CALL _put_string
001012 e2ac      	LDI  R26,LOW(300)
001013 e0b1      	LDI  R27,HIGH(300)
001014 940c 1116 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
001016 93fa      	ST   -Y,R31
001017 93ea      	ST   -Y,R30
001018 e0a2      	LDI  R26,LOW(2)
001019 e0b0      	LDI  R27,0
00101a 940e 04d9 	CALL _wait_until
00101c e0a0      	LDI  R26,LOW(0)
00101d e0b0      	LDI  R27,0
00101e 940c 04c7 	JMP  _refresh
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
001020 93fa      	ST   -Y,R31
001021 93ea      	ST   -Y,R30
001022 e0aa      	LDI  R26,LOW(10)
001023 e0b0      	LDI  R27,0
001024 940c 04d9 	JMP  _wait_until
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
001026 01fe      	MOVW R30,R28
001027 96bc      	ADIW R30,44
001028 93fa      	ST   -Y,R31
001029 93ea      	ST   -Y,R30
00102a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
00102b 93fa      	ST   -Y,R31
00102c 93ea      	ST   -Y,R30
00102d 01de      	MOVW R26,R28
00102e 965a      	ADIW R26,26
00102f 940e 07e7 	CALL _itoa
001031 cff4      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
001032 01de      	MOVW R26,R28
001033 965a      	ADIW R26,26
001034 940e 07a6 	CALL _strcat
001036 01de      	MOVW R26,R28
001037 9658      	ADIW R26,24
001038 940c 07b7 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
00103a eea8      	LDI  R26,LOW(1000)
00103b e0b3      	LDI  R27,HIGH(1000)
00103c 940c 1116 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00103e 93fa      	ST   -Y,R31
00103f 93ea      	ST   -Y,R30
001040 e0a5      	LDI  R26,LOW(5)
001041 e0b0      	LDI  R27,0
001042 940e 04d9 	CALL _wait_until
001044 30e0      	CPI  R30,0
001045 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
001046 93ea      	ST   -Y,R30
001047 e3e0      	LDI  R30,LOW(48)
001048 93ea      	ST   -Y,R30
001049 e0af      	LDI  R26,LOW(15)
00104a 940e 0ca6 	CALL _glcd_line
00104c e0e0      	LDI  R30,LOW(0)
00104d 93ea      	ST   -Y,R30
00104e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
00104f 93ea      	ST   -Y,R30
001050 e5e4      	LDI  R30,LOW(84)
001051 93ea      	ST   -Y,R30
001052 e3a0      	LDI  R26,LOW(48)
001053 940e 0ca6 	CALL _glcd_line
001055 e0e0      	LDI  R30,LOW(0)
001056 93ea      	ST   -Y,R30
001057 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
001058 940e 0c70 	CALL _glcd_outtext
00105a e0e4      	LDI  R30,LOW(4)
00105b 93ea      	ST   -Y,R30
00105c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00105d 940e 0c9a 	CALL _glcd_moveto
00105f cfa3      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1B:
001060 940e 1138 	CALL __CWD1
001062 940e 1157 	CALL __PUTPARD1
001064 e084      	LDI  R24,4
001065 940e 0f0a 	CALL _sprintf
001067 9628      	ADIW R28,8
001068 cf8f      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
001069 e5a1      	LDI  R26,LOW(_gfx_addr_G102)
00106a e0b8      	LDI  R27,HIGH(_gfx_addr_G102)
00106b cf4a      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
00106c 0fea      	ADD  R30,R26
00106d 1ffb      	ADC  R31,R27
00106e 83ee      	STD  Y+6,R30
00106f 83ff      	STD  Y+6+1,R31
001070 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1E:
001071 85ec      	LDD  R30,Y+12
001072 93ea      	ST   -Y,R30
001073 81ef      	LDD  R30,Y+7
001074 85f8      	LDD  R31,Y+7+1
001075 9631      	ADIW R30,1
001076 83ef      	STD  Y+7,R30
001077 87f8      	STD  Y+7+1,R31
001078 9731      	SBIW R30,1
001079 93fa      	ST   -Y,R31
00107a 93ea      	ST   -Y,R30
00107b e0a0      	LDI  R26,LOW(0)
00107c 940c 0f90 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
00107e 930a      	ST   -Y,R16
00107f 89a8      	LDD  R26,Y+16
001080 940c 0837 	JMP  _pcd8544_setaddr_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x20:
001082 85ec      	LDD  R30,Y+12
001083 93ea      	ST   -Y,R30
001084 81ef      	LDD  R30,Y+7
001085 85f8      	LDD  R31,Y+7+1
001086 9631      	ADIW R30,1
001087 83ef      	STD  Y+7,R30
001088 87f8      	STD  Y+7+1,R31
001089 9731      	SBIW R30,1
00108a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
00108b 2766      	CLR  R22
00108c 2777      	CLR  R23
00108d 01df      	MOVW R26,R30
00108e 01cb      	MOVW R24,R22
00108f 940c 0f71 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
001091 935a      	ST   -Y,R21
001092 85aa      	LDD  R26,Y+10
001093 940c 0f49 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
001095 930a      	ST   -Y,R16
001096 9503      	INC  R16
001097 89e8      	LDD  R30,Y+16
001098 93ea      	ST   -Y,R30
001099 935a      	ST   -Y,R21
00109a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
00109b 2f5e      	MOV  R21,R30
00109c 85ec      	LDD  R30,Y+12
00109d 93ea      	ST   -Y,R30
00109e 81af      	LDD  R26,Y+7
00109f 85b8      	LDD  R27,Y+7+1
0010a0 2788      	CLR  R24
0010a1 2799      	CLR  R25
0010a2 940e 0f71 	CALL _glcd_readmem
0010a4 2e1e      	MOV  R1,R30
0010a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
0010a6 930a      	ST   -Y,R16
0010a7 9503      	INC  R16
0010a8 89e8      	LDD  R30,Y+16
0010a9 93ea      	ST   -Y,R30
0010aa 85ee      	LDD  R30,Y+14
0010ab 93ea      	ST   -Y,R30
0010ac 85e9      	LDD  R30,Y+9
0010ad 85fa      	LDD  R31,Y+9+1
0010ae 9631      	ADIW R30,1
0010af 87e9      	STD  Y+9,R30
0010b0 87fa      	STD  Y+9+1,R31
0010b1 9731      	SBIW R30,1
0010b2 cfd8      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
0010b3 940e 117d 	CALL __SAVELOCR6
                +
0010b5 91e0 0663+LDS R30 , _glcd_state + ( 4 )
0010b7 91f0 0664+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
0010ba 01f8      	MOVW R30,R16
                +
0010bb 5f0f     +SUBI R16 , LOW ( - 1 )
0010bc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0010bd 9004      	LPM  R0,Z
0010be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28:
                +
0010bf 91e0 0663+LDS R30 , _glcd_state + ( 4 )
0010c1 91f0 0664+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010c3 9631      	ADIW R30,1
0010c4 91e4      	LPM  R30,Z
0010c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
0010c6 93ea      	ST   -Y,R30
0010c7 e0e0      	LDI  R30,LOW(0)
0010c8 93ea      	ST   -Y,R30
0010c9 e0e0      	LDI  R30,LOW(0)
0010ca e0f0      	LDI  R31,HIGH(0)
0010cb 93fa      	ST   -Y,R31
0010cc 93ea      	ST   -Y,R30
0010cd e0a9      	LDI  R26,LOW(9)
0010ce 940c 0975 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2A:
0010d0 81ae      	LDD  R26,Y+6
0010d1 5faf      	SUBI R26,-LOW(1)
0010d2 83ae      	STD  Y+6,R26
0010d3 50a1      	SUBI R26,LOW(1)
                +
0010d4 91e0 0667+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0010d6 17ae      	CP   R26,R30
0010d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0010d8 933a      	ST   -Y,R19
0010d9 85aa      	LDD  R26,Y+10
0010da 940c 0c80 	JMP  _glcd_putpixelm_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
0010dc 85a9      	LDD  R26,Y+9
0010dd 85ba      	LDD  R27,Y+9+1
0010de 0fea      	ADD  R30,R26
0010df 1ffb      	ADC  R31,R27
0010e0 87e9      	STD  Y+9,R30
0010e1 87fa      	STD  Y+9+1,R31
0010e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
0010e3 85e9      	LDD  R30,Y+9
0010e4 85fa      	LDD  R31,Y+9+1
0010e5 1bea      	SUB  R30,R26
0010e6 0bfb      	SBC  R31,R27
0010e7 87e9      	STD  Y+9,R30
0010e8 87fa      	STD  Y+9+1,R31
0010e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2E:
0010ea 932a      	ST   -Y,R18
0010eb 85ad      	LDD  R26,Y+13
0010ec 85be      	LDD  R27,Y+13+1
0010ed 85ef      	LDD  R30,Y+15
0010ee 89f8      	LDD  R31,Y+15+1
0010ef 9509      	ICALL
0010f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F:
0010f1 89e8      	LDD  R30,Y+16
0010f2 89f9      	LDD  R31,Y+16+1
0010f3 9734      	SBIW R30,4
0010f4 8be8      	STD  Y+16,R30
0010f5 8bf9      	STD  Y+16+1,R31
0010f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30:
0010f7 85ad      	LDD  R26,Y+13
0010f8 85be      	LDD  R27,Y+13+1
0010f9 85ef      	LDD  R30,Y+15
0010fa 89f8      	LDD  R31,Y+15+1
0010fb 9509      	ICALL
0010fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x31:
0010fd 89a8      	LDD  R26,Y+16
0010fe 89b9      	LDD  R27,Y+16+1
0010ff 9614      	ADIW R26,4
001100 940e 1145 	CALL __GETW1P
001102 83ee      	STD  Y+6,R30
001103 83ff      	STD  Y+6+1,R31
001104 81ae      	LDD  R26,Y+6
001105 81bf      	LDD  R27,Y+6+1
001106 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32:
001107 89a8      	LDD  R26,Y+16
001108 89b9      	LDD  R27,Y+16+1
001109 9614      	ADIW R26,4
00110a 940e 1145 	CALL __GETW1P
00110c 87ea      	STD  Y+10,R30
00110d 87fb      	STD  Y+10+1,R31
00110e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
00110f 01de      	MOVW R26,R28
001110 961c      	ADIW R26,12
001111 940e 1120 	CALL __ADDW2R15
001113 940e 1145 	CALL __GETW1P
001115 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001116 9610      	adiw r26,0
001117 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001118 ed80     +LDI R24 , LOW ( 0x7D0 )
001119 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00111a 9701     +SBIW R24 , 1
00111b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00111c 95a8      	wdr
00111d 9711      	sbiw r26,1
00111e f7c9      	brne __delay_ms0
                 __delay_ms1:
00111f 9508      	ret
                 
                 __ADDW2R15:
001120 2400      	CLR  R0
001121 0daf      	ADD  R26,R15
001122 1db0      	ADC  R27,R0
001123 9508      	RET
                 
                 __ANEGW1:
001124 95f1      	NEG  R31
001125 95e1      	NEG  R30
001126 40f0      	SBCI R31,0
001127 9508      	RET
                 
                 __LSLB12:
001128 23ee      	TST  R30
001129 2e0e      	MOV  R0,R30
00112a 2fea      	MOV  R30,R26
00112b f019      	BREQ __LSLB12R
                 __LSLB12L:
00112c 0fee      	LSL  R30
00112d 940a      	DEC  R0
00112e f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00112f 9508      	RET
                 
                 __LSRB12:
001130 23ee      	TST  R30
001131 2e0e      	MOV  R0,R30
001132 2fea      	MOV  R30,R26
001133 f019      	BREQ __LSRB12R
                 __LSRB12L:
001134 95e6      	LSR  R30
001135 940a      	DEC  R0
001136 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
001137 9508      	RET
                 
                 __CWD1:
001138 2f6f      	MOV  R22,R31
001139 0f66      	ADD  R22,R22
00113a 0b66      	SBC  R22,R22
00113b 2f76      	MOV  R23,R22
00113c 9508      	RET
                 
                 __MULW12U:
00113d 9ffa      	MUL  R31,R26
00113e 2df0      	MOV  R31,R0
00113f 9feb      	MUL  R30,R27
001140 0df0      	ADD  R31,R0
001141 9fea      	MUL  R30,R26
001142 2de0      	MOV  R30,R0
001143 0df1      	ADD  R31,R1
001144 9508      	RET
                 
                 __GETW1P:
001145 91ed      	LD   R30,X+
001146 91fc      	LD   R31,X
001147 9711      	SBIW R26,1
001148 9508      	RET
                 
                 __GETD1P_INC:
001149 91ed      	LD   R30,X+
00114a 91fd      	LD   R31,X+
00114b 916d      	LD   R22,X+
00114c 917d      	LD   R23,X+
00114d 9508      	RET
                 
                 __PUTDP1_DEC:
00114e 937e      	ST   -X,R23
00114f 936e      	ST   -X,R22
001150 93fe      	ST   -X,R31
001151 93ee      	ST   -X,R30
001152 9508      	RET
                 
                 __GETW1PF:
001153 9005      	LPM  R0,Z+
001154 91f4      	LPM  R31,Z
001155 2de0      	MOV  R30,R0
001156 9508      	RET
                 
                 __PUTPARD1:
001157 937a      	ST   -Y,R23
001158 936a      	ST   -Y,R22
001159 93fa      	ST   -Y,R31
00115a 93ea      	ST   -Y,R30
00115b 9508      	RET
                 
                 __EEPROMRDB:
00115c 99e1      	SBIC EECR,EEWE
00115d cffe      	RJMP __EEPROMRDB
00115e 93ff      	PUSH R31
00115f b7ff      	IN   R31,SREG
001160 94f8      	CLI
001161 bbae      	OUT  EEARL,R26
001162 bbbf      	OUT  EEARH,R27
001163 9ae0      	SBI  EECR,EERE
001164 b3ed      	IN   R30,EEDR
001165 bfff      	OUT  SREG,R31
001166 91ff      	POP  R31
001167 9508      	RET
                 
                 __EEPROMWRB:
001168 9be1      	SBIS EECR,EEWE
001169 c002      	RJMP __EEPROMWRB1
00116a 95a8      	WDR
00116b cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00116c b79f      	IN   R25,SREG
00116d 94f8      	CLI
00116e bbae      	OUT  EEARL,R26
00116f bbbf      	OUT  EEARH,R27
001170 9ae0      	SBI  EECR,EERE
001171 b38d      	IN   R24,EEDR
001172 17e8      	CP   R30,R24
001173 f019      	BREQ __EEPROMWRB0
001174 bbed      	OUT  EEDR,R30
001175 9ae2      	SBI  EECR,EEMWE
001176 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
001177 bf9f      	OUT  SREG,R25
001178 9508      	RET
                 
                 __CPW02:
001179 2400      	CLR  R0
00117a 160a      	CP   R0,R26
00117b 060b      	CPC  R0,R27
00117c 9508      	RET
                 
                 __SAVELOCR6:
00117d 935a      	ST   -Y,R21
                 __SAVELOCR5:
00117e 934a      	ST   -Y,R20
                 __SAVELOCR4:
00117f 933a      	ST   -Y,R19
                 __SAVELOCR3:
001180 932a      	ST   -Y,R18
                 __SAVELOCR2:
001181 931a      	ST   -Y,R17
001182 930a      	ST   -Y,R16
001183 9508      	RET
                 
                 __LOADLOCR6:
001184 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001185 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001186 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001187 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001188 8119      	LDD  R17,Y+1
001189 8108      	LD   R16,Y
00118a 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00118b 0fac      	ADD  R26,R28
00118c 1fbd      	ADC  R27,R29
                 __INITLOC0:
00118d 9005      	LPM  R0,Z+
00118e 920d      	ST   X+,R0
00118f 958a      	DEC  R24
001190 f7e1      	BRNE __INITLOC0
001191 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  38 r1 :   5 r2 :   1 r3 :   0 r4 :   1 r5 :   0 r6 :   1 r7 :   5 
r8 :   0 r9 :   1 r10:   3 r11:   0 r12:  11 r13:   3 r14:   0 r15:   4 
r16: 102 r17: 138 r18:  69 r19:  54 r20:  36 r21:  52 r22:  40 r23:  11 
r24:  50 r25:  16 r26: 537 r27: 198 r28:  58 r29:   2 r30:1105 r31: 256 
x  :  57 y  : 773 z  :  38 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  24 add   :  38 
adiw  :  71 and   :  10 andi  :  19 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  52 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   7 brmi  :   1 brne  : 114 brpl  :   4 brsh  :  26 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 278 
cbi   :  17 cbr   :   0 clc   :   0 clh   :   0 cli   :   4 cln   :   0 
clr   :  34 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :  10 
cp    :  40 cpc   :  21 cpi   : 117 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   9 inc   :   5 jmp   :  74 ld    :  98 ldd   : 354 
ldi   : 470 lds   :  77 lpm   :  31 lsl   :   8 lsr   :  15 mov   : 115 
movw  :  86 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   8 ori   :  15 out   :  57 pop   :  12 push  :  12 rcall : 102 
ret   :  81 reti  :   3 rjmp  : 175 rol   :   3 ror   :   0 sbc   :   7 
sbci  :  24 sbi   :  25 sbic  :   5 sbis  :   1 sbiw  :  45 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   2 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 284 std   : 111 sts   :  72 sub   :  16 subi  :  73 
swap  :   0 tst   :  13 wdr   :   2 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002324   7852   1144   8996  131072   6.9%
[.dseg] 0x000100 0x000a4b      0   1355   1355    4096  33.1%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 15 warnings
