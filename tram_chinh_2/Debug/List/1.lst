
AVRASM ver. 2.1.30  C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm Fri Sep 08 17:30:37 2017

C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1090): warning: Register r4 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1091): warning: Register r5 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1092): warning: Register r6 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1093): warning: Register r7 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1094): warning: Register r8 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1095): warning: Register r9 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1096): warning: Register r10 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1097): warning: Register r11 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1098): warning: Register r13 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1099): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R4
                 	.DEF _i_msb=R5
                 	.DEF _time_flow=R6
                 	.DEF _time_flow_msb=R7
                 	.DEF _j=R8
                 	.DEF _j_msb=R9
                 	.DEF _k=R10
                 	.DEF _k_msb=R11
                 	.DEF _new_sms=R13
                 	.DEF _notified=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0261 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0586 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0291 	JMP  _usart0_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 036f 	JMP  _usart0_tx_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 03b4 	JMP  _usart1_rx_isr
00003e 940c 0000 	JMP  0x00
000040 940c 03df 	JMP  _usart1_tx_isr
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G104:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G104:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000146 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000147 0000
000148 0000      	.DB  0x0,0x0,0x0,0x0
000149 0000
00014a 0000      	.DB  0x0,0x0,0x0,0x0
00014b 0000      	.DB  0x0,0x0
                 
                 _0x3:
00014c ffff      	.DB  0xFF,0xFF
                 _0x3F:
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1228): warning: .cseg .db misalignment - padding zero byte
00014d 00a1      	.DB  0xA1
                 _0x40:
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1230): warning: .cseg .db misalignment - padding zero byte
00014e 00a2      	.DB  0xA2
                 _0x41:
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1232): warning: .cseg .db misalignment - padding zero byte
00014f 00a3      	.DB  0xA3
                 _0x42:
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1234): warning: .cseg .db misalignment - padding zero byte
000150 00a4      	.DB  0xA4
                 _0xFE:
000151 4547
000152 2054
000153 752f
000154 6470      	.DB  0x47,0x45,0x54,0x20,0x2F,0x75,0x70,0x64
000155 7461
000156 3f65
000157 656b
000158 3d79      	.DB  0x61,0x74,0x65,0x3F,0x6B,0x65,0x79,0x3D
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1238): warning: .cseg .db misalignment - padding zero byte
000159 0000      	.DB  0x0
                 _0x0:
00015a 6f4e
00015b 6564
00015c 203a
00015d 5400      	.DB  0x4E,0x6F,0x64,0x65,0x3A,0x20,0x0,0x54
00015e 6d65
00015f 3a70
000160 0020
000161 7548      	.DB  0x65,0x6D,0x70,0x3A,0x20,0x0,0x48,0x75
000162 696d
000163 3a64
000164 0020
000165 6157      	.DB  0x6D,0x69,0x64,0x3A,0x20,0x0,0x57,0x61
000166 6574
000167 3a72
000168 0020
000169 6d6d      	.DB  0x74,0x65,0x72,0x3A,0x20,0x0,0x6D,0x6D
00016a 4500
00016b 5252
00016c 524f
00016d 4100      	.DB  0x0,0x45,0x52,0x52,0x4F,0x52,0x0,0x41
00016e 2b54
00016f 5743
000170 4f4d
000171 4544      	.DB  0x54,0x2B,0x43,0x57,0x4D,0x4F,0x44,0x45
000172 313d
000173 0a0d
000174 4f00
000175 004b      	.DB  0x3D,0x31,0xD,0xA,0x0,0x4F,0x4B,0x0
000176 6f63
000177 666e
000178 6769
000179 6620      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x20,0x66
00017a 6961
00017b 006c
00017c 5441
00017d 432b      	.DB  0x61,0x69,0x6C,0x0,0x41,0x54,0x2B,0x43
00017e 4a57
00017f 5041
000180 223d
000181 6854      	.DB  0x57,0x4A,0x41,0x50,0x3D,0x22,0x54,0x68
000182 7961
000183 545f
000184 6168
000185 5f6f      	.DB  0x61,0x79,0x5F,0x54,0x68,0x61,0x6F,0x5F
000186 6564
000187 5f6f
000188 6967
000189 6961      	.DB  0x64,0x65,0x6F,0x5F,0x67,0x69,0x61,0x69
00018a 2c22
00018b 6322
00018c 6968
00018d 686e      	.DB  0x22,0x2C,0x22,0x63,0x68,0x69,0x6E,0x68
00018e 6178
00018f 2263
000190 0a0d
000191 6300      	.DB  0x78,0x61,0x63,0x22,0xD,0xA,0x0,0x63
000192 6e6f
000193 656e
000194 7463
000195 6620      	.DB  0x6F,0x6E,0x6E,0x65,0x63,0x74,0x20,0x66
000196 6961
000197 006c
000198 6f63
000199 6e6e      	.DB  0x61,0x69,0x6C,0x0,0x63,0x6F,0x6E,0x6E
00019a 6365
00019b 2074
00019c 6977
00019d 6966      	.DB  0x65,0x63,0x74,0x20,0x77,0x69,0x66,0x69
00019e 7320
00019f 6375
0001a0 6563
0001a1 7373      	.DB  0x20,0x73,0x75,0x63,0x63,0x65,0x73,0x73
0001a2 4100
0001a3 2b54
0001a4 4943
0001a5 4d50      	.DB  0x0,0x41,0x54,0x2B,0x43,0x49,0x50,0x4D
0001a6 5855
0001a7 313d
0001a8 4100
0001a9 2b54      	.DB  0x55,0x58,0x3D,0x31,0x0,0x41,0x54,0x2B
0001aa 4943
0001ab 5350
0001ac 4154
0001ad 5452      	.DB  0x43,0x49,0x50,0x53,0x54,0x41,0x52,0x54
0001ae 303d
0001af 222c
0001b0 4354
0001b1 2250      	.DB  0x3D,0x30,0x2C,0x22,0x54,0x43,0x50,0x22
0001b2 222c
0001b3 7061
0001b4 2e69
0001b5 6874      	.DB  0x2C,0x22,0x61,0x70,0x69,0x2E,0x74,0x68
0001b6 6e69
0001b7 7367
0001b8 6570
0001b9 6b61      	.DB  0x69,0x6E,0x67,0x73,0x70,0x65,0x61,0x6B
0001ba 632e
0001bb 6d6f
0001bc 2c22
0001bd 3038      	.DB  0x2E,0x63,0x6F,0x6D,0x22,0x2C,0x38,0x30
0001be 2600
0001bf 6966
0001c0 6c65
0001c1 3164      	.DB  0x0,0x26,0x66,0x69,0x65,0x6C,0x64,0x31
0001c2 003d
0001c3 6626
0001c4 6569
0001c5 646c      	.DB  0x3D,0x0,0x26,0x66,0x69,0x65,0x6C,0x64
0001c6 3d32
0001c7 2600
0001c8 6966
0001c9 6c65      	.DB  0x32,0x3D,0x0,0x26,0x66,0x69,0x65,0x6C
0001ca 3364
0001cb 003d
0001cc 5441
0001cd 432b      	.DB  0x64,0x33,0x3D,0x0,0x41,0x54,0x2B,0x43
0001ce 5049
0001cf 4553
0001d0 444e
0001d1 303d      	.DB  0x49,0x50,0x53,0x45,0x4E,0x44,0x3D,0x30
0001d2 002c
0001d3 203e
0001d4 5300
0001d5 6e65      	.DB  0x2C,0x0,0x3E,0x20,0x0,0x53,0x65,0x6E
0001d6 6964
0001d7 676e
0001d8 4400
0001d9 6e6f      	.DB  0x64,0x69,0x6E,0x67,0x0,0x44,0x6F,0x6E
0001da 0065
0001db 6161
0001dc 6161
0001dd 2500      	.DB  0x65,0x0,0x61,0x61,0x61,0x61,0x0,0x25
0001de 2064
0001df 2500
0001e0 2064
0001e1 0020      	.DB  0x64,0x20,0x0,0x25,0x64,0x20,0x20,0x0
0001e2 5a36
0001e3 3146
0001e4 4259
0001e5 4138      	.DB  0x36,0x5A,0x46,0x31,0x59,0x42,0x38,0x41
0001e6 4958
0001e7 4253
0001e8 4153
0001e9 5032      	.DB  0x58,0x49,0x53,0x42,0x53,0x41,0x32,0x50
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1276): warning: .cseg .db misalignment - padding zero byte
0001ea 0000      	.DB  0x0
                 _0x20A0060:
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1278): warning: .cseg .db misalignment - padding zero byte
0001eb 0001      	.DB  0x1
                 _0x20A0000:
0001ec 4e2d
0001ed 4e41
0001ee 4900
0001ef 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1281): warning: .cseg .db misalignment - padding zero byte
0001f0 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001f1 0001      	.DW  0x01
0001f2 0002      	.DW  0x02
0001f3 028c      	.DW  __REG_BIT_VARS*2
                 
0001f4 000a      	.DW  0x0A
0001f5 0004      	.DW  0x04
0001f6 028e      	.DW  __REG_VARS*2
                 
0001f7 0001      	.DW  0x01
0001f8 0931      	.DW  _Code_tay_cam1
0001f9 029a      	.DW  _0x3F*2
                 
0001fa 0001      	.DW  0x01
0001fb 0932      	.DW  _Code_tay_cam2
0001fc 029c      	.DW  _0x40*2
                 
0001fd 0001      	.DW  0x01
0001fe 0933      	.DW  _Code_tay_cam3
0001ff 029e      	.DW  _0x41*2
                 
000200 0001      	.DW  0x01
000201 0934      	.DW  _Code_tay_cam4
000202 02a0      	.DW  _0x42*2
                 
000203 0007      	.DW  0x07
000204 0500      	.DW  _0xE2
000205 02b4      	.DW  _0x0*2
                 
000206 0007      	.DW  0x07
000207 0507      	.DW  _0xE2+7
000208 02bb      	.DW  _0x0*2+7
                 
000209 0008      	.DW  0x08
00020a 050e      	.DW  _0xE2+14
00020b 02c2      	.DW  _0x0*2+14
                 
00020c 0008      	.DW  0x08
00020d 0516      	.DW  _0xE2+22
00020e 02ca      	.DW  _0x0*2+22
                 
00020f 0003      	.DW  0x03
000210 051e      	.DW  _0xE2+30
000211 02d2      	.DW  _0x0*2+30
                 
000212 0006      	.DW  0x06
000213 0521      	.DW  _0xFA
000214 02d5      	.DW  _0x0*2+33
                 
000215 000e      	.DW  0x0E
000216 0527      	.DW  _0xFB
000217 02db      	.DW  _0x0*2+39
                 
000218 0003      	.DW  0x03
000219 0535      	.DW  _0xFB+14
00021a 02e9      	.DW  _0x0*2+53
                 
00021b 000c      	.DW  0x0C
00021c 0538      	.DW  _0xFB+17
00021d 02ec      	.DW  _0x0*2+56
                 
00021e 002b      	.DW  0x2B
00021f 0544      	.DW  _0xFB+29
000220 02f8      	.DW  _0x0*2+68
                 
000221 0003      	.DW  0x03
000222 056f      	.DW  _0xFB+72
000223 02e9      	.DW  _0x0*2+53
                 
000224 000d      	.DW  0x0D
000225 0572      	.DW  _0xFB+75
000226 0323      	.DW  _0x0*2+111
                 
000227 0015      	.DW  0x15
000228 057f      	.DW  _0xFB+88
000229 0330      	.DW  _0x0*2+124
                 
00022a 000c      	.DW  0x0C
00022b 0594      	.DW  _0x102
00022c 0345      	.DW  _0x0*2+145
                 
00022d 0003      	.DW  0x03
00022e 05a0      	.DW  _0x102+12
00022f 02e6      	.DW  _0x0*2+50
                 
000230 0003      	.DW  0x03
000231 05a3      	.DW  _0x102+15
000232 02e9      	.DW  _0x0*2+53
                 
000233 002c      	.DW  0x2C
000234 05a6      	.DW  _0x102+18
000235 0351      	.DW  _0x0*2+157
                 
000236 0003      	.DW  0x03
000237 05d2      	.DW  _0x102+62
000238 02e6      	.DW  _0x0*2+50
                 
000239 0003      	.DW  0x03
00023a 05d5      	.DW  _0x102+65
00023b 02e9      	.DW  _0x0*2+53
                 
00023c 0009      	.DW  0x09
00023d 05d8      	.DW  _0x102+68
00023e 037d      	.DW  _0x0*2+201
                 
00023f 0009      	.DW  0x09
000240 05e1      	.DW  _0x102+77
000241 0386      	.DW  _0x0*2+210
                 
000242 0009      	.DW  0x09
000243 05ea      	.DW  _0x102+86
000244 038f      	.DW  _0x0*2+219
                 
000245 000e      	.DW  0x0E
000246 05f3      	.DW  _0x102+95
000247 0398      	.DW  _0x0*2+228
                 
000248 0003      	.DW  0x03
000249 0601      	.DW  _0x102+109
00024a 02e6      	.DW  _0x0*2+50
                 
00024b 0003      	.DW  0x03
00024c 0604      	.DW  _0x102+112
00024d 03a6      	.DW  _0x0*2+242
                 
00024e 0008      	.DW  0x08
00024f 0607      	.DW  _0x102+115
000250 03a9      	.DW  _0x0*2+245
                 
000251 0003      	.DW  0x03
000252 060f      	.DW  _0x102+123
000253 02e6      	.DW  _0x0*2+50
                 
000254 0005      	.DW  0x05
000255 0612      	.DW  _0x102+126
000256 03b1      	.DW  _0x0*2+253
                 
000257 0005      	.DW  0x05
000258 0617      	.DW  _0x103
000259 03b6      	.DW  _0x0*2+258
                 
00025a 0011      	.DW  0x11
00025b 061c      	.DW  _0x103+5
00025c 03c4      	.DW  _0x0*2+272
                 
00025d 0001      	.DW  0x01
00025e 0b5d      	.DW  __seed_G105
00025f 03d6      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000260 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000261 94f8      	CLI
000262 27ee      	CLR  R30
000263 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000264 e0f1      	LDI  R31,1
000265 bff5      	OUT  MCUCR,R31
000266 bfe5      	OUT  MCUCR,R30
000267 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000269 e08d      	LDI  R24,(14-2)+1
00026a e0a2      	LDI  R26,2
00026b 27bb      	CLR  R27
                 __CLEAR_REG:
00026c 93ed      	ST   X+,R30
00026d 958a      	DEC  R24
00026e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00026f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000270 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000271 e0a0      	LDI  R26,LOW(__SRAM_START)
000272 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000273 93ed      	ST   X+,R30
000274 9701      	SBIW R24,1
000275 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000276 eee2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000277 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000278 9185      	LPM  R24,Z+
000279 9195      	LPM  R25,Z+
00027a 9700      	SBIW R24,0
00027b f061      	BREQ __GLOBAL_INI_END
00027c 91a5      	LPM  R26,Z+
00027d 91b5      	LPM  R27,Z+
00027e 9005      	LPM  R0,Z+
00027f 9015      	LPM  R1,Z+
000280 01bf      	MOVW R22,R30
000281 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000282 9005      	LPM  R0,Z+
000283 920d      	ST   X+,R0
000284 9701      	SBIW R24,1
000285 f7e1      	BRNE __GLOBAL_INI_LOOP
000286 01fb      	MOVW R30,R22
000287 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000288 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000289 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00028a bfed      	OUT  SPL,R30
00028b e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00028c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00028d e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00028e e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00028f 940c 0765 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;
                 ;
                 ;#include <mega128a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;// I2C Bus functions
                 ;#include <i2c.h>
                 ;
                 ;// DS1307 Real Time Clock functions
                 ;#include <ds1307.h>
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;
                 ;//============================================================= WIFI CONFIG ============================================ ...
                 ;
                 ;const int BUFFSIZE = 460, TIME_LOOP_S = 120;
                 ;
                 ;int i = 0, time_flow = 0;
                 ;int j,k = 0;
                 ;char cmd[4];
                 ;char buff[BUFFSIZE],la[20],lo[20], sms_command[8], gprs_command[6], entry_id[4], entry_id_old[6];
                 ;bool new_sms = false, notified = false, stop = false, send_ok = false, loop = false;
                 ;int pr_back = -1, time_s = 0;
                 
                 	.DSEG
                 ;//====================================================================================================================== ...
                 ;
                 ;
                 ;// Declare your global variables here
                 ;
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE0)
                 ;#define RX_COMPLETE (1<<RXC0)
                 ;#define FRAMING_ERROR (1<<FE0)
                 ;#define PARITY_ERROR (1<<UPE0)
                 ;#define DATA_OVERRUN (1<<DOR0)
                 ;
                 ;// USART0 Receiver buffer
                 ;#define RX_BUFFER_SIZE0 64
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;#if RX_BUFFER_SIZE0 <= 256
                 ;unsigned char rx_wr_index0=0,rx_rd_index0=0;
                 ;#else
                 ;unsigned int rx_wr_index0=0,rx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE0 < 256
                 ;unsigned char rx_counter0=0;
                 ;#else
                 ;unsigned int rx_counter0=0;
                 ;#endif
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0000 0040 {
                 
                 	.CSEG
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
000291 920a      	ST   -Y,R0
000292 921a      	ST   -Y,R1
000293 93aa      	ST   -Y,R26
000294 93ba      	ST   -Y,R27
000295 93ea      	ST   -Y,R30
000296 93fa      	ST   -Y,R31
000297 b7ef      	IN   R30,SREG
000298 93ea      	ST   -Y,R30
                 ; 0000 0041 char status,data;
                 ; 0000 0042 bool id_found = false;
                 ; 0000 0043 status=UCSR0A;
000299 940e 12ca 	CALL __SAVELOCR4
                 ;	status -> R17
                 ;	data -> R16
                 ;	id_found -> R19
00029b e030      	LDI  R19,0
00029c b11b      	IN   R17,11
                 ; 0000 0044 data=UDR0;
00029d b10c      	IN   R16,12
                 ; 0000 0045 if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
00029e 2fe1      	MOV  R30,R17
00029f 71ec      	ANDI R30,LOW(0x1C)
0002a0 f4e9      	BRNE _0x4
                 ; 0000 0046    {
                 ; 0000 0047    rx_buffer0[rx_wr_index0++]=data;
0002a1 91e0 0864 	LDS  R30,_rx_wr_index0
0002a3 5fef      	SUBI R30,-LOW(1)
0002a4 93e0 0864 	STS  _rx_wr_index0,R30
0002a6 50e1      	SUBI R30,LOW(1)
0002a7 e0f0      	LDI  R31,0
0002a8 5dec      	SUBI R30,LOW(-_rx_buffer0)
0002a9 4ff7      	SBCI R31,HIGH(-_rx_buffer0)
0002aa 8300      	ST   Z,R16
                 ; 0000 0048 #if RX_BUFFER_SIZE0 == 256
                 ; 0000 0049    // special case for receiver buffer size=256
                 ; 0000 004A    if (++rx_counter0 == 0) rx_buffer_overflow0=1;
                 ; 0000 004B #else
                 ; 0000 004C    if (rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0=0;
0002ab 91a0 0864 	LDS  R26,_rx_wr_index0
0002ad 34a0      	CPI  R26,LOW(0x40)
0002ae f419      	BRNE _0x5
0002af e0e0      	LDI  R30,LOW(0)
0002b0 93e0 0864 	STS  _rx_wr_index0,R30
                 ; 0000 004D    if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x5:
0002b2 91a0 0866 	LDS  R26,_rx_counter0
0002b4 5faf      	SUBI R26,-LOW(1)
0002b5 93a0 0866 	STS  _rx_counter0,R26
0002b7 34a0      	CPI  R26,LOW(0x40)
0002b8 f429      	BRNE _0x6
                 ; 0000 004E       {
                 ; 0000 004F       rx_counter0=0;
0002b9 e0e0      	LDI  R30,LOW(0)
0002ba 93e0 0866 	STS  _rx_counter0,R30
                 ; 0000 0050       rx_buffer_overflow0=1;
0002bc 9468      	SET
0002bd f820      	BLD  R2,0
                 ; 0000 0051       }
                 ; 0000 0052 #endif
                 ; 0000 0053    }
                 _0x6:
                 ; 0000 0054       buff[i] = data;
                 _0x4:
0002be 01f2      	MOVW R30,R4
0002bf 5be6      	SUBI R30,LOW(-_buff)
0002c0 4ff9      	SBCI R31,HIGH(-_buff)
0002c1 8300      	ST   Z,R16
                 ; 0000 0055 
                 ; 0000 0056     if (data == ']') {
0002c2 350d      	CPI  R16,93
0002c3 f419      	BRNE _0x7
                 ; 0000 0057         stop = true;
0002c4 e0e1      	LDI  R30,LOW(1)
0002c5 93e0 0820 	STS  _stop,R30
                 ; 0000 0058     }
                 ; 0000 0059 
                 ; 0000 005A     if (buff[i] == 'I') {
                 _0x7:
0002c7 940e 10a1 	CALL SUBOPT_0x0
0002c9 34a9      	CPI  R26,LOW(0x49)
0002ca f4c1      	BRNE _0x8
                 ; 0000 005B         if (buff[i - 1] == 'T') {
0002cb 01f2      	MOVW R30,R4
0002cc 9731      	SBIW R30,1
0002cd 5be6      	SUBI R30,LOW(-_buff)
0002ce 4ff9      	SBCI R31,HIGH(-_buff)
0002cf 81a0      	LD   R26,Z
0002d0 35a4      	CPI  R26,LOW(0x54)
0002d1 f489      	BRNE _0x9
                 ; 0000 005C             if (buff[i - 2] == 'M') {
0002d2 01f2      	MOVW R30,R4
0002d3 9732      	SBIW R30,2
0002d4 5be6      	SUBI R30,LOW(-_buff)
0002d5 4ff9      	SBCI R31,HIGH(-_buff)
0002d6 81a0      	LD   R26,Z
0002d7 34ad      	CPI  R26,LOW(0x4D)
0002d8 f451      	BRNE _0xA
                 ; 0000 005D                 if (buff[i - 3] == 'C') {
0002d9 01f2      	MOVW R30,R4
0002da 9733      	SBIW R30,3
0002db 5be6      	SUBI R30,LOW(-_buff)
0002dc 4ff9      	SBCI R31,HIGH(-_buff)
0002dd 81a0      	LD   R26,Z
0002de 34a3      	CPI  R26,LOW(0x43)
0002df f419      	BRNE _0xB
                 ; 0000 005E                     new_sms = true;
0002e0 e0e1      	LDI  R30,LOW(1)
0002e1 2ede      	MOV  R13,R30
                 ; 0000 005F                     notified = false;
0002e2 24cc      	CLR  R12
                 ; 0000 0060                 }
                 ; 0000 0061             }
                 _0xB:
                 ; 0000 0062         }
                 _0xA:
                 ; 0000 0063     }
                 _0x9:
                 ; 0000 0064 
                 ; 0000 0065     if (buff[i] == ']') {
                 _0x8:
0002e3 940e 10a1 	CALL SUBOPT_0x0
0002e5 35ad      	CPI  R26,LOW(0x5D)
0002e6 f009      	BREQ PC+2
0002e7 c055      	RJMP _0xC
                 ; 0000 0066         //"entry_id":15,"field1":"info"}]
                 ; 0000 0067         j = i - 2;
0002e8 01f2      	MOVW R30,R4
0002e9 9732      	SBIW R30,2
0002ea 014f      	MOVW R8,R30
                 ; 0000 0068         k = 0;
0002eb 24aa      	CLR  R10
0002ec 24bb      	CLR  R11
                 ; 0000 0069         while (1) {
                 _0xD:
                 ; 0000 006A             if (j < 0) {
0002ed 2400      	CLR  R0
0002ee 1480      	CP   R8,R0
0002ef 0490      	CPC  R9,R0
0002f0 f424      	BRGE _0x10
                 ; 0000 006B                 j += BUFFSIZE;
0002f1 01f4      	MOVW R30,R8
0002f2 53e4      	SUBI R30,LOW(-460)
0002f3 4ffe      	SBCI R31,HIGH(-460)
0002f4 014f      	MOVW R8,R30
                 ; 0000 006C             }
                 ; 0000 006D 
                 ; 0000 006E             gprs_command[k] = buff[j - k];
                 _0x10:
0002f5 01d5      	MOVW R26,R10
0002f6 5eaa      	SUBI R26,LOW(-_gprs_command)
0002f7 4fb7      	SBCI R27,HIGH(-_gprs_command)
0002f8 01f4      	MOVW R30,R8
0002f9 19ea      	SUB  R30,R10
0002fa 09fb      	SBC  R31,R11
0002fb 5be6      	SUBI R30,LOW(-_buff)
0002fc 4ff9      	SBCI R31,HIGH(-_buff)
0002fd 81e0      	LD   R30,Z
0002fe 93ec      	ST   X,R30
                 ; 0000 006F             k++;
0002ff 01f5      	MOVW R30,R10
000300 9631      	ADIW R30,1
000301 015f      	MOVW R10,R30
                 ; 0000 0070             if ((buff[j - k] == '"')) {
000302 01f4      	MOVW R30,R8
000303 19ea      	SUB  R30,R10
000304 09fb      	SBC  R31,R11
000305 5be6      	SUBI R30,LOW(-_buff)
000306 4ff9      	SBCI R31,HIGH(-_buff)
000307 81a0      	LD   R26,Z
000308 32a2      	CPI  R26,LOW(0x22)
000309 f719      	BRNE _0xD
                 ; 0000 0071                 break;
                 ; 0000 0072             }
                 ; 0000 0073         }
                 ; 0000 0074 
                 ; 0000 0075         while (!id_found) {
                 _0x12:
00030a 3030      	CPI  R19,0
00030b f589      	BRNE _0x14
                 ; 0000 0076             //nen them 1 cai check neu het gioi han mang nhu o tren
                 ; 0000 0077             // if (j < 0) {
                 ; 0000 0078                 // j += BUFFSIZE;
                 ; 0000 0079             // }
                 ; 0000 007A             if ((buff[j] == 'i') && (buff[j+1] == 'd')) {
00030c e4aa      	LDI  R26,LOW(_buff)
00030d e0b6      	LDI  R27,HIGH(_buff)
00030e 0da8      	ADD  R26,R8
00030f 1db9      	ADC  R27,R9
000310 91ac      	LD   R26,X
000311 36a9      	CPI  R26,LOW(0x69)
000312 f431      	BRNE _0x16
000313 01f4      	MOVW R30,R8
                +
000314 5be5     +SUBI R30 , LOW ( - _buff - ( 1 ) )
000315 4ff9     +SBCI R31 , HIGH ( - _buff - ( 1 ) )
                 	__ADDW1MN _buff,1
000316 81a0      	LD   R26,Z
000317 36a4      	CPI  R26,LOW(0x64)
000318 f009      	BREQ _0x17
                 _0x16:
000319 c01f      	RJMP _0x15
                 _0x17:
                 ; 0000 007B                 k = 0;
00031a 24aa      	CLR  R10
00031b 24bb      	CLR  R11
                 ; 0000 007C                 j = j + 4;
00031c 01f4      	MOVW R30,R8
00031d 9634      	ADIW R30,4
00031e 014f      	MOVW R8,R30
                 ; 0000 007D                 while (buff[j] != ',') {
                 _0x18:
00031f e4aa      	LDI  R26,LOW(_buff)
000320 e0b6      	LDI  R27,HIGH(_buff)
000321 0da8      	ADD  R26,R8
000322 1db9      	ADC  R27,R9
000323 91ac      	LD   R26,X
000324 32ac      	CPI  R26,LOW(0x2C)
000325 f091      	BREQ _0x1A
                 ; 0000 007E                     entry_id[k] = buff[j];
000326 01f5      	MOVW R30,R10
000327 5ee4      	SUBI R30,LOW(-_entry_id)
000328 4ff7      	SBCI R31,HIGH(-_entry_id)
000329 010f      	MOVW R0,R30
00032a e4aa      	LDI  R26,LOW(_buff)
00032b e0b6      	LDI  R27,HIGH(_buff)
00032c 0da8      	ADD  R26,R8
00032d 1db9      	ADC  R27,R9
00032e 91ec      	LD   R30,X
00032f 01d0      	MOVW R26,R0
000330 93ec      	ST   X,R30
                 ; 0000 007F                     j++;
000331 01f4      	MOVW R30,R8
000332 9631      	ADIW R30,1
000333 014f      	MOVW R8,R30
                 ; 0000 0080                     k++;
000334 01f5      	MOVW R30,R10
000335 9631      	ADIW R30,1
000336 015f      	MOVW R10,R30
                 ; 0000 0081                 }
000337 cfe7      	RJMP _0x18
                 _0x1A:
                 ; 0000 0082                 id_found = true;
000338 e031      	LDI  R19,LOW(1)
                 ; 0000 0083             }
                 ; 0000 0084             j--;
                 _0x15:
000339 01f4      	MOVW R30,R8
00033a 9731      	SBIW R30,1
00033b 014f      	MOVW R8,R30
                 ; 0000 0085         }
00033c cfcd      	RJMP _0x12
                 _0x14:
                 ; 0000 0086     }
                 ; 0000 0087 
                 ; 0000 0088 	if (buff[i] == 'e') {
                 _0xC:
00033d 940e 10a1 	CALL SUBOPT_0x0
00033f 36a5      	CPI  R26,LOW(0x65)
000340 f4c1      	BRNE _0x1B
                 ; 0000 0089 		if (buff[i - 1] == 'd') {
000341 01f2      	MOVW R30,R4
000342 9731      	SBIW R30,1
000343 5be6      	SUBI R30,LOW(-_buff)
000344 4ff9      	SBCI R31,HIGH(-_buff)
000345 81a0      	LD   R26,Z
000346 36a4      	CPI  R26,LOW(0x64)
000347 f489      	BRNE _0x1C
                 ; 0000 008A 			if (buff[i - 2] == 'a') {
000348 01f2      	MOVW R30,R4
000349 9732      	SBIW R30,2
00034a 5be6      	SUBI R30,LOW(-_buff)
00034b 4ff9      	SBCI R31,HIGH(-_buff)
00034c 81a0      	LD   R26,Z
00034d 36a1      	CPI  R26,LOW(0x61)
00034e f451      	BRNE _0x1D
                 ; 0000 008B 				if (buff[i - 3] == 'e') {
00034f 01f2      	MOVW R30,R4
000350 9733      	SBIW R30,3
000351 5be6      	SUBI R30,LOW(-_buff)
000352 4ff9      	SBCI R31,HIGH(-_buff)
000353 81a0      	LD   R26,Z
000354 36a5      	CPI  R26,LOW(0x65)
000355 f419      	BRNE _0x1E
                 ; 0000 008C 					send_ok = true;
000356 e0e1      	LDI  R30,LOW(1)
000357 93e0 0821 	STS  _send_ok,R30
                 ; 0000 008D 				}
                 ; 0000 008E 			}
                 _0x1E:
                 ; 0000 008F 		}
                 _0x1D:
                 ; 0000 0090 	}
                 _0x1C:
                 ; 0000 0091 
                 ; 0000 0092     i++;
                 _0x1B:
000359 01f2      	MOVW R30,R4
00035a 9631      	ADIW R30,1
00035b 012f      	MOVW R4,R30
                 ; 0000 0093     if (i > BUFFSIZE) {
00035c ecec      	LDI  R30,LOW(460)
00035d e0f1      	LDI  R31,HIGH(460)
00035e 15e4      	CP   R30,R4
00035f 05f5      	CPC  R31,R5
000360 f414      	BRGE _0x1F
                 ; 0000 0094         i = 0;
000361 2444      	CLR  R4
000362 2455      	CLR  R5
                 ; 0000 0095     }
                 ; 0000 0096 
                 ; 0000 0097 }
                 _0x1F:
000363 940e 12d1 	CALL __LOADLOCR4
000365 9624      	ADIW R28,4
000366 91e9      	LD   R30,Y+
000367 bfef      	OUT  SREG,R30
000368 91f9      	LD   R31,Y+
000369 91e9      	LD   R30,Y+
00036a 91b9      	LD   R27,Y+
00036b 91a9      	LD   R26,Y+
00036c 9019      	LD   R1,Y+
00036d 9009      	LD   R0,Y+
00036e 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0000 009E {
                 ; 0000 009F char data;
                 ; 0000 00A0 while (rx_counter0==0);
                 ;	data -> R17
                 ; 0000 00A1 data=rx_buffer0[rx_rd_index0++];
                 ; 0000 00A2 #if RX_BUFFER_SIZE0 != 256
                 ; 0000 00A3 if (rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0=0;
                 ; 0000 00A4 #endif
                 ; 0000 00A5 #asm("cli")
                 ; 0000 00A6 --rx_counter0;
                 ; 0000 00A7 #asm("sei")
                 ; 0000 00A8 return data;
                 ; 0000 00A9 }
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// USART0 Transmitter buffer
                 ;#define TX_BUFFER_SIZE0 64
                 ;char tx_buffer0[TX_BUFFER_SIZE0];
                 ;
                 ;#if TX_BUFFER_SIZE0 <= 256
                 ;unsigned char tx_wr_index0=0,tx_rd_index0=0;
                 ;#else
                 ;unsigned int tx_wr_index0=0,tx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if TX_BUFFER_SIZE0 < 256
                 ;unsigned char tx_counter0=0;
                 ;#else
                 ;unsigned int tx_counter0=0;
                 ;#endif
                 ;
                 ;// USART0 Transmitter interrupt service routine
                 ;interrupt [USART0_TXC] void usart0_tx_isr(void)
                 ; 0000 00BF {
                 _usart0_tx_isr:
                 ; .FSTART _usart0_tx_isr
00036f 940e 10a7 	CALL SUBOPT_0x1
                 ; 0000 00C0 if (tx_counter0)
000371 91e0 08a9 	LDS  R30,_tx_counter0
000373 30e0      	CPI  R30,0
000374 f0a9      	BREQ _0x24
                 ; 0000 00C1    {
                 ; 0000 00C2    --tx_counter0;
000375 50e1      	SUBI R30,LOW(1)
000376 93e0 08a9 	STS  _tx_counter0,R30
                 ; 0000 00C3    UDR0=tx_buffer0[tx_rd_index0++];
000378 91e0 08a8 	LDS  R30,_tx_rd_index0
00037a 5fef      	SUBI R30,-LOW(1)
00037b 93e0 08a8 	STS  _tx_rd_index0,R30
00037d 50e1      	SUBI R30,LOW(1)
00037e e0f0      	LDI  R31,0
00037f 59e9      	SUBI R30,LOW(-_tx_buffer0)
000380 4ff7      	SBCI R31,HIGH(-_tx_buffer0)
000381 81e0      	LD   R30,Z
000382 b9ec      	OUT  0xC,R30
                 ; 0000 00C4 #if TX_BUFFER_SIZE0 != 256
                 ; 0000 00C5    if (tx_rd_index0 == TX_BUFFER_SIZE0) tx_rd_index0=0;
000383 91a0 08a8 	LDS  R26,_tx_rd_index0
000385 34a0      	CPI  R26,LOW(0x40)
000386 f419      	BRNE _0x25
000387 e0e0      	LDI  R30,LOW(0)
000388 93e0 08a8 	STS  _tx_rd_index0,R30
                 ; 0000 00C6 #endif
                 ; 0000 00C7    }
                 _0x25:
                 ; 0000 00C8 }
                 _0x24:
00038a c070      	RJMP _0x10E
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Write a character to the USART0 Transmitter buffer
                 ;#define _ALTERNATE_PUTCHAR_
                 ;#pragma used+
                 ;void putchar(char c)
                 ; 0000 00CF {
                 _putchar:
                 ; .FSTART _putchar
                 ; 0000 00D0 while (tx_counter0 == TX_BUFFER_SIZE0);
00038b 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x26:
00038c 91a0 08a9 	LDS  R26,_tx_counter0
00038e 34a0      	CPI  R26,LOW(0x40)
00038f f3e1      	BREQ _0x26
                 ; 0000 00D1 #asm("cli")
000390 94f8      	cli
                 ; 0000 00D2 if (tx_counter0 || ((UCSR0A & DATA_REGISTER_EMPTY)==0))
000391 91e0 08a9 	LDS  R30,_tx_counter0
000393 30e0      	CPI  R30,0
000394 f411      	BRNE _0x2A
000395 995d      	SBIC 0xB,5
000396 c018      	RJMP _0x29
                 _0x2A:
                 ; 0000 00D3    {
                 ; 0000 00D4    tx_buffer0[tx_wr_index0++]=c;
000397 91e0 08a7 	LDS  R30,_tx_wr_index0
000399 5fef      	SUBI R30,-LOW(1)
00039a 93e0 08a7 	STS  _tx_wr_index0,R30
00039c 50e1      	SUBI R30,LOW(1)
00039d e0f0      	LDI  R31,0
00039e 59e9      	SUBI R30,LOW(-_tx_buffer0)
00039f 4ff7      	SBCI R31,HIGH(-_tx_buffer0)
0003a0 81a8      	LD   R26,Y
0003a1 83a0      	STD  Z+0,R26
                 ; 0000 00D5 #if TX_BUFFER_SIZE0 != 256
                 ; 0000 00D6    if (tx_wr_index0 == TX_BUFFER_SIZE0) tx_wr_index0=0;
0003a2 91a0 08a7 	LDS  R26,_tx_wr_index0
0003a4 34a0      	CPI  R26,LOW(0x40)
0003a5 f419      	BRNE _0x2C
0003a6 e0e0      	LDI  R30,LOW(0)
0003a7 93e0 08a7 	STS  _tx_wr_index0,R30
                 ; 0000 00D7 #endif
                 ; 0000 00D8    ++tx_counter0;
                 _0x2C:
0003a9 91e0 08a9 	LDS  R30,_tx_counter0
0003ab 5fef      	SUBI R30,-LOW(1)
0003ac 93e0 08a9 	STS  _tx_counter0,R30
                 ; 0000 00D9    }
                 ; 0000 00DA else
0003ae c002      	RJMP _0x2D
                 _0x29:
                 ; 0000 00DB    UDR0=c;
0003af 81e8      	LD   R30,Y
0003b0 b9ec      	OUT  0xC,R30
                 ; 0000 00DC #asm("sei")
                 _0x2D:
0003b1 9478      	sei
                 ; 0000 00DD }
0003b2 940c 096e 	JMP  _0x216000D
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// USART1 Receiver buffer
                 ;#define RX_BUFFER_SIZE1 64
                 ;char rx_buffer1[RX_BUFFER_SIZE1];
                 ;
                 ;#if RX_BUFFER_SIZE1 <= 256
                 ;unsigned char rx_wr_index1=0,rx_rd_index1=0;
                 ;#else
                 ;unsigned int rx_wr_index1=0,rx_rd_index1=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE1 < 256
                 ;unsigned char rx_counter1=0;
                 ;#else
                 ;unsigned int rx_counter1=0;
                 ;#endif
                 ;
                 ;// This flag is set on USART1 Receiver buffer overflow
                 ;bit rx_buffer_overflow1;
                 ;
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0000 00F6 {
                 _usart1_rx_isr:
                 ; .FSTART _usart1_rx_isr
0003b4 940e 10a7 	CALL SUBOPT_0x1
                 ; 0000 00F7 char status,data;
                 ; 0000 00F8 status=UCSR1A;
0003b6 931a      	ST   -Y,R17
0003b7 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0003b8 9110 009b 	LDS  R17,155
                 ; 0000 00F9 data=UDR1;
0003ba 9100 009c 	LDS  R16,156
                 ; 0000 00FA if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0003bc 2fe1      	MOV  R30,R17
0003bd 71ec      	ANDI R30,LOW(0x1C)
0003be f4e9      	BRNE _0x2E
                 ; 0000 00FB    {
                 ; 0000 00FC    rx_buffer1[rx_wr_index1++]=data;
0003bf 91e0 08ea 	LDS  R30,_rx_wr_index1
0003c1 5fef      	SUBI R30,-LOW(1)
0003c2 93e0 08ea 	STS  _rx_wr_index1,R30
0003c4 50e1      	SUBI R30,LOW(1)
0003c5 e0f0      	LDI  R31,0
0003c6 55e6      	SUBI R30,LOW(-_rx_buffer1)
0003c7 4ff7      	SBCI R31,HIGH(-_rx_buffer1)
0003c8 8300      	ST   Z,R16
                 ; 0000 00FD #if RX_BUFFER_SIZE1 == 256
                 ; 0000 00FE    // special case for receiver buffer size=256
                 ; 0000 00FF    if (++rx_counter1 == 0) rx_buffer_overflow1=1;
                 ; 0000 0100 #else
                 ; 0000 0101    if (rx_wr_index1 == RX_BUFFER_SIZE1) rx_wr_index1=0;
0003c9 91a0 08ea 	LDS  R26,_rx_wr_index1
0003cb 34a0      	CPI  R26,LOW(0x40)
0003cc f419      	BRNE _0x2F
0003cd e0e0      	LDI  R30,LOW(0)
0003ce 93e0 08ea 	STS  _rx_wr_index1,R30
                 ; 0000 0102    if (++rx_counter1 == RX_BUFFER_SIZE1)
                 _0x2F:
0003d0 91a0 08ec 	LDS  R26,_rx_counter1
0003d2 5faf      	SUBI R26,-LOW(1)
0003d3 93a0 08ec 	STS  _rx_counter1,R26
0003d5 34a0      	CPI  R26,LOW(0x40)
0003d6 f429      	BRNE _0x30
                 ; 0000 0103       {
                 ; 0000 0104       rx_counter1=0;
0003d7 e0e0      	LDI  R30,LOW(0)
0003d8 93e0 08ec 	STS  _rx_counter1,R30
                 ; 0000 0105       rx_buffer_overflow1=1;
0003da 9468      	SET
0003db f821      	BLD  R2,1
                 ; 0000 0106       }
                 ; 0000 0107 #endif
                 ; 0000 0108    }
                 _0x30:
                 ; 0000 0109 }
                 _0x2E:
0003dc 9109      	LD   R16,Y+
0003dd 9119      	LD   R17,Y+
0003de c01c      	RJMP _0x10E
                 ; .FEND
                 ;
                 ;// Get a character from the USART1 Receiver buffer
                 ;#pragma used+
                 ;char getchar1(void)
                 ; 0000 010E {
                 ; 0000 010F char data;
                 ; 0000 0110 while (rx_counter1==0);
                 ;	data -> R17
                 ; 0000 0111 data=rx_buffer1[rx_rd_index1++];
                 ; 0000 0112 #if RX_BUFFER_SIZE1 != 256
                 ; 0000 0113 if (rx_rd_index1 == RX_BUFFER_SIZE1) rx_rd_index1=0;
                 ; 0000 0114 #endif
                 ; 0000 0115 #asm("cli")
                 ; 0000 0116 --rx_counter1;
                 ; 0000 0117 #asm("sei")
                 ; 0000 0118 return data;
                 ; 0000 0119 }
                 ;#pragma used-
                 ;// USART1 Transmitter buffer
                 ;#define TX_BUFFER_SIZE1 64
                 ;char tx_buffer1[TX_BUFFER_SIZE1];
                 ;
                 ;#if TX_BUFFER_SIZE1 <= 256
                 ;unsigned char tx_wr_index1=0,tx_rd_index1=0;
                 ;#else
                 ;unsigned int tx_wr_index1=0,tx_rd_index1=0;
                 ;#endif
                 ;
                 ;#if TX_BUFFER_SIZE1 < 256
                 ;unsigned char tx_counter1=0;
                 ;#else
                 ;unsigned int tx_counter1=0;
                 ;#endif
                 ;
                 ;// USART1 Transmitter interrupt service routine
                 ;interrupt [USART1_TXC] void usart1_tx_isr(void)
                 ; 0000 012D {
                 _usart1_tx_isr:
                 ; .FSTART _usart1_tx_isr
0003df 940e 10a7 	CALL SUBOPT_0x1
                 ; 0000 012E if (tx_counter1)
0003e1 91e0 092f 	LDS  R30,_tx_counter1
0003e3 30e0      	CPI  R30,0
0003e4 f0b1      	BREQ _0x35
                 ; 0000 012F    {
                 ; 0000 0130    --tx_counter1;
0003e5 50e1      	SUBI R30,LOW(1)
0003e6 93e0 092f 	STS  _tx_counter1,R30
                 ; 0000 0131    UDR1=tx_buffer1[tx_rd_index1++];
0003e8 91e0 092e 	LDS  R30,_tx_rd_index1
0003ea 5fef      	SUBI R30,-LOW(1)
0003eb 93e0 092e 	STS  _tx_rd_index1,R30
0003ed 50e1      	SUBI R30,LOW(1)
0003ee e0f0      	LDI  R31,0
0003ef 51e3      	SUBI R30,LOW(-_tx_buffer1)
0003f0 4ff7      	SBCI R31,HIGH(-_tx_buffer1)
0003f1 81e0      	LD   R30,Z
0003f2 93e0 009c 	STS  156,R30
                 ; 0000 0132 #if TX_BUFFER_SIZE1 != 256
                 ; 0000 0133    if (tx_rd_index1 == TX_BUFFER_SIZE1) tx_rd_index1=0;
0003f4 91a0 092e 	LDS  R26,_tx_rd_index1
0003f6 34a0      	CPI  R26,LOW(0x40)
0003f7 f419      	BRNE _0x36
0003f8 e0e0      	LDI  R30,LOW(0)
0003f9 93e0 092e 	STS  _tx_rd_index1,R30
                 ; 0000 0134 #endif
                 ; 0000 0135    }
                 _0x36:
                 ; 0000 0136 }
                 _0x35:
                 _0x10E:
0003fb 91e9      	LD   R30,Y+
0003fc bfef      	OUT  SREG,R30
0003fd 91f9      	LD   R31,Y+
0003fe 91e9      	LD   R30,Y+
0003ff 91a9      	LD   R26,Y+
000400 9518      	RETI
                 ; .FEND
                 ;
                 ;// Write a character to the USART1 Transmitter buffer
                 ;#pragma used+
                 ;void putchar1(char c)
                 ; 0000 013B {
                 _putchar1:
                 ; .FSTART _putchar1
                 ; 0000 013C while (tx_counter1 == TX_BUFFER_SIZE1);
000401 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x37:
000402 91a0 092f 	LDS  R26,_tx_counter1
000404 34a0      	CPI  R26,LOW(0x40)
000405 f3e1      	BREQ _0x37
                 ; 0000 013D #asm("cli")
000406 94f8      	cli
                 ; 0000 013E if (tx_counter1 || ((UCSR1A & DATA_REGISTER_EMPTY)==0))
000407 91e0 092f 	LDS  R30,_tx_counter1
000409 30e0      	CPI  R30,0
00040a f421      	BRNE _0x3B
00040b 91e0 009b 	LDS  R30,155
00040d 72e0      	ANDI R30,LOW(0x20)
00040e f4c1      	BRNE _0x3A
                 _0x3B:
                 ; 0000 013F    {
                 ; 0000 0140    tx_buffer1[tx_wr_index1++]=c;
00040f 91e0 092d 	LDS  R30,_tx_wr_index1
000411 5fef      	SUBI R30,-LOW(1)
000412 93e0 092d 	STS  _tx_wr_index1,R30
000414 50e1      	SUBI R30,LOW(1)
000415 e0f0      	LDI  R31,0
000416 51e3      	SUBI R30,LOW(-_tx_buffer1)
000417 4ff7      	SBCI R31,HIGH(-_tx_buffer1)
000418 81a8      	LD   R26,Y
000419 83a0      	STD  Z+0,R26
                 ; 0000 0141 #if TX_BUFFER_SIZE1 != 256
                 ; 0000 0142    if (tx_wr_index1 == TX_BUFFER_SIZE1) tx_wr_index1=0;
00041a 91a0 092d 	LDS  R26,_tx_wr_index1
00041c 34a0      	CPI  R26,LOW(0x40)
00041d f419      	BRNE _0x3D
00041e e0e0      	LDI  R30,LOW(0)
00041f 93e0 092d 	STS  _tx_wr_index1,R30
                 ; 0000 0143 #endif
                 ; 0000 0144    ++tx_counter1;
                 _0x3D:
000421 91e0 092f 	LDS  R30,_tx_counter1
000423 5fef      	SUBI R30,-LOW(1)
000424 93e0 092f 	STS  _tx_counter1,R30
                 ; 0000 0145    }
                 ; 0000 0146 else
000426 c003      	RJMP _0x3E
                 _0x3A:
                 ; 0000 0147    UDR1=c;
000427 81e8      	LD   R30,Y
000428 93e0 009c 	STS  156,R30
                 ; 0000 0148 #asm("sei")
                 _0x3E:
00042a 9478      	sei
                 ; 0000 0149 }
00042b 940c 096e 	JMP  _0x216000D
                 ; .FEND
                 ;#pragma used-
                 ;
                 ;//============================================== NRF CODE ============================================================== ...
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;#define CE PORTA.3
                 ;#define CSN PORTA.2
                 ;#define SCK PORTA.4
                 ;#define MOSI PORTA.1
                 ;#define MISO PINA.5
                 ;#define IRQ PINA.0
                 ;
                 ;unsigned char P_Add, Code_tay_cam1 = 0xA1, Code_tay_cam2 = 0xA2, Code_tay_cam3 = 0xA3, Code_tay_cam4 = 0xA4;
                 
                 	.DSEG
                 ;#include <nrf_code.h>
                 
                 	.CSEG
                 _config:
                 ; .FSTART _config
                +
00042d e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00042e 958a     +DEC R24
00042f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000430 e0e0      	LDI  R30,LOW(0)
000431 93ea      	ST   -Y,R30
000432 e1af      	LDI  R26,LOW(31)
000433 d024      	RCALL _RF_Write_TX
000434 e0a2      	LDI  R26,LOW(2)
000435 e0b0      	LDI  R27,0
000436 940e 1261 	CALL _delay_ms
000438 e0e7      	LDI  R30,LOW(7)
000439 93ea      	ST   -Y,R30
00043a e7ae      	LDI  R26,LOW(126)
00043b d01c      	RCALL _RF_Write_TX
00043c e1ed      	LDI  R30,LOW(29)
00043d 93ea      	ST   -Y,R30
00043e e0a4      	LDI  R26,LOW(4)
00043f d018      	RCALL _RF_Write_TX
000440 e0e5      	LDI  R30,LOW(5)
000441 93ea      	ST   -Y,R30
000442 e0a2      	LDI  R26,LOW(2)
000443 d014      	RCALL _RF_Write_TX
000444 9508      	RET
                 ; .FEND
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
000445 93aa      	ST   -Y,R26
000446 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
000447 e010      	LDI  R17,LOW(0)
                 _0x44:
000448 3018      	CPI  R17,8
000449 f450      	BRSH _0x45
00044a 81e9      	LDD  R30,Y+1
00044b 78e0      	ANDI R30,LOW(0x80)
00044c f411      	BRNE _0x46
00044d 98d9      	CBI  0x1B,1
00044e c001      	RJMP _0x47
                 _0x46:
00044f 9ad9      	SBI  0x1B,1
                 _0x47:
000450 940e 10ad 	CALL SUBOPT_0x2
000452 5f1f      	SUBI R17,-1
000453 cff4      	RJMP _0x44
                 _0x45:
000454 81e9      	LDD  R30,Y+1
000455 8118      	LDD  R17,Y+0
000456 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
000458 940e 10bf 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00045a dfea      	RCALL _SPI_RW_TX
00045b 93e0 095b 	STS  _result,R30
00045d 81a8      	LD   R26,Y
00045e dfe6      	RCALL _SPI_RW_TX
00045f 940e 10c5 	CALL SUBOPT_0x4
000461 91e0 095b 	LDS  R30,_result
000463 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 ;	Address -> Y+0
                 ;	Address -> Y+1
                 ;	Address2 -> Y+0
                 ;	command -> Y+0
                 ;	send -> Y+0
                 ;	send -> Y+0
                 _SPI_RW_RX:
                 ; .FSTART _SPI_RW_RX
000465 93aa      	ST   -Y,R26
000466 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
000467 e010      	LDI  R17,LOW(0)
                 _0x91:
000468 3018      	CPI  R17,8
000469 f450      	BRSH _0x92
00046a 81e9      	LDD  R30,Y+1
00046b 78e0      	ANDI R30,LOW(0x80)
00046c f411      	BRNE _0x93
00046d 98d9      	CBI  0x1B,1
00046e c001      	RJMP _0x94
                 _0x93:
00046f 9ad9      	SBI  0x1B,1
                 _0x94:
000470 940e 10ad 	CALL SUBOPT_0x2
000472 5f1f      	SUBI R17,-1
000473 cff4      	RJMP _0x91
                 _0x92:
000474 81e9      	LDD  R30,Y+1
000475 8118      	LDD  R17,Y+0
000476 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 _SPI_Read_RX:
                 ; .FSTART _SPI_Read_RX
000478 931a      	ST   -Y,R17
000479 930a      	ST   -Y,R16
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
00047a e010      	LDI  R17,0
00047b e000      	LDI  R16,LOW(0)
                 _0x9A:
00047c 3008      	CPI  R16,8
00047d f478      	BRSH _0x9B
                +
00047e e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00047f 958a     +DEC R24
000480 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000481 0f11      	LSL  R17
000482 9adc      	SBI  0x1B,4
                +
000483 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000484 958a     +DEC R24
000485 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000486 e0e0      	LDI  R30,0
000487 99cd      	SBIC 0x19,5
000488 e0e1      	LDI  R30,1
000489 2b1e      	OR   R17,R30
00048a 98dc      	CBI  0x1B,4
00048b 5f0f      	SUBI R16,-1
00048c cfef      	RJMP _0x9A
                 _0x9B:
00048d 2fe1      	MOV  R30,R17
00048e 9109      	LD   R16,Y+
00048f 9119      	LD   R17,Y+
000490 9508      	RET
                 ; .FEND
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
000491 9adb      	SBI  0x1B,3
                +
000492 e788     +LDI R24 , LOW ( 1400 )
000493 e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
000494 9701     +SBIW R24 , 1
000495 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
000496 98db      	CBI  0x1B,3
000497 9ada      	SBI  0x1B,2
000498 9508      	RET
                 ; .FEND
                 _RF_Write_RX:
                 ; .FSTART _RF_Write_RX
000499 940e 10bf 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00049b 940e 10ca 	CALL SUBOPT_0x5
00049d 940e 10c5 	CALL SUBOPT_0x4
00049f 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 _RF_Write2_RX:
                 ; .FSTART _RF_Write2_RX
0004a1 940e 10bf 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
0004a3 940e 10ca 	CALL SUBOPT_0x5
0004a5 81a8      	LD   R26,Y
0004a6 940e 10ca 	CALL SUBOPT_0x5
0004a8 81a8      	LD   R26,Y
0004a9 940e 10ca 	CALL SUBOPT_0x5
0004ab 940e 10c5 	CALL SUBOPT_0x4
0004ad 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 _RF_Write3_RX:
                 ; .FSTART _RF_Write3_RX
0004af 940e 10bf 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
0004b1 940e 10cf 	CALL SUBOPT_0x6
0004b3 940e 10cf 	CALL SUBOPT_0x6
0004b5 940e 10cf 	CALL SUBOPT_0x6
0004b7 940e 10cf 	CALL SUBOPT_0x6
0004b9 940e 10ca 	CALL SUBOPT_0x5
0004bb 940e 10c5 	CALL SUBOPT_0x4
0004bd 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 _RF_Command_RX:
                 ; .FSTART _RF_Command_RX
0004bf 93aa      	ST   -Y,R26
                 ;	command -> Y+0
0004c0 98da      	CBI  0x1B,2
0004c1 81a8      	LD   R26,Y
0004c2 dfa2      	RCALL _SPI_RW_RX
0004c3 940e 10c5 	CALL SUBOPT_0x4
0004c5 940c 096e 	JMP  _0x216000D
                 ; .FEND
                 _RF_Write_Address_RX:
                 ; .FSTART _RF_Write_Address_RX
0004c7 93aa      	ST   -Y,R26
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
0004c8 98da      	CBI  0x1B,2
0004c9 e0e3      	LDI  R30,LOW(3)
0004ca 93ea      	ST   -Y,R30
0004cb e0a3      	LDI  R26,LOW(3)
0004cc dfcc      	RCALL _RF_Write_RX
0004cd 940e 10c5 	CALL SUBOPT_0x4
0004cf 98da      	CBI  0x1B,2
0004d0 e0ea      	LDI  R30,LOW(10)
0004d1 93ea      	ST   -Y,R30
0004d2 81ac      	LDD  R26,Y+4
0004d3 dfcd      	RCALL _RF_Write2_RX
0004d4 e1e0      	LDI  R30,LOW(16)
0004d5 93ea      	ST   -Y,R30
0004d6 81ac      	LDD  R26,Y+4
0004d7 dfc9      	RCALL _RF_Write2_RX
0004d8 e0eb      	LDI  R30,LOW(11)
0004d9 93ea      	ST   -Y,R30
0004da 81ab      	LDD  R26,Y+3
0004db 940e 10d4 	CALL SUBOPT_0x7
0004dd 81ab      	LDD  R26,Y+3
0004de dfd0      	RCALL _RF_Write3_RX
0004df e0ec      	LDI  R30,LOW(12)
0004e0 93ea      	ST   -Y,R30
0004e1 81aa      	LDD  R26,Y+2
0004e2 940e 10d4 	CALL SUBOPT_0x7
0004e4 81aa      	LDD  R26,Y+2
0004e5 dfc9      	RCALL _RF_Write3_RX
0004e6 e0ed      	LDI  R30,LOW(13)
0004e7 93ea      	ST   -Y,R30
0004e8 81a9      	LDD  R26,Y+1
0004e9 940e 10d4 	CALL SUBOPT_0x7
0004eb 81a9      	LDD  R26,Y+1
0004ec dfc2      	RCALL _RF_Write3_RX
0004ed 940c 098c 	JMP  _0x216000C
                 ; .FEND
                 ;	Address1 -> Y+0
                 _RF_Mode_RX:
                 ; .FSTART _RF_Mode_RX
0004ef e0e0      	LDI  R30,LOW(0)
0004f0 93ea      	ST   -Y,R30
0004f1 e1af      	LDI  R26,LOW(31)
0004f2 dfa6      	RCALL _RF_Write_RX
0004f3 9adb      	SBI  0x1B,3
0004f4 9508      	RET
                 ; .FEND
                 _RF_Config_RX:
                 ; .FSTART _RF_Config_RX
0004f5 e1ec      	LDI  R30,LOW(28)
0004f6 940e 10d9 	CALL SUBOPT_0x8
0004f8 91e0 0931 	LDS  R30,_Code_tay_cam1
0004fa 93ea      	ST   -Y,R30
0004fb 91e0 0932 	LDS  R30,_Code_tay_cam2
0004fd 93ea      	ST   -Y,R30
0004fe 91e0 0933 	LDS  R30,_Code_tay_cam3
000500 93ea      	ST   -Y,R30
000501 91a0 0934 	LDS  R26,_Code_tay_cam4
000503 dfc3      	RCALL _RF_Write_Address_RX
000504 e0e2      	LDI  R30,LOW(2)
000505 940e 10d9 	CALL SUBOPT_0x8
000507 e0e1      	LDI  R30,LOW(1)
000508 940e 10d9 	CALL SUBOPT_0x8
00050a 9508      	RET
                 ; .FEND
                 _RF_Read_RX_3:
                 ; .FSTART _RF_Read_RX_3
00050b 98db      	CBI  0x1B,3
00050c 940e 10c5 	CALL SUBOPT_0x4
00050e 98da      	CBI  0x1B,2
00050f e6a1      	LDI  R26,LOW(97)
000510 df54      	RCALL _SPI_RW_RX
                +
000511 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000512 958a     +DEC R24
000513 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000514 df63      	RCALL _SPI_Read_RX
000515 e0f0      	LDI  R31,0
000516 93e0 0935 	STS  _station_receive,R30
000518 93f0 0936 	STS  _station_receive+1,R31
00051a df5d      	RCALL _SPI_Read_RX
                +
00051b e3a7     +LDI R26 , LOW ( _station_receive + ( 2 ) )
00051c e0b9     +LDI R27 , HIGH ( _station_receive + ( 2 ) )
                 	__POINTW2MN _station_receive,2
00051d 940e 10dd 	CALL SUBOPT_0x9
                +
00051f e3a9     +LDI R26 , LOW ( _station_receive + ( 4 ) )
000520 e0b9     +LDI R27 , HIGH ( _station_receive + ( 4 ) )
                 	__POINTW2MN _station_receive,4
000521 940e 10dd 	CALL SUBOPT_0x9
                +
000523 e3ab     +LDI R26 , LOW ( _station_receive + ( 6 ) )
000524 e0b9     +LDI R27 , HIGH ( _station_receive + ( 6 ) )
                 	__POINTW2MN _station_receive,6
000525 940e 10dd 	CALL SUBOPT_0x9
                +
000527 e3ad     +LDI R26 , LOW ( _station_receive + ( 8 ) )
000528 e0b9     +LDI R27 , HIGH ( _station_receive + ( 8 ) )
                 	__POINTW2MN _station_receive,8
000529 940e 10dd 	CALL SUBOPT_0x9
                +
00052b e3af     +LDI R26 , LOW ( _station_receive + ( 10 ) )
00052c e0b9     +LDI R27 , HIGH ( _station_receive + ( 10 ) )
                 	__POINTW2MN _station_receive,10
00052d e0f0      	LDI  R31,0
00052e 93ed      	ST   X+,R30
00052f 93fc      	ST   X,R31
000530 9ada      	SBI  0x1B,2
000531 9adb      	SBI  0x1B,3
000532 e0e7      	LDI  R30,LOW(7)
000533 93ea      	ST   -Y,R30
000534 e7ae      	LDI  R26,LOW(126)
000535 df63      	RCALL _RF_Write_RX
000536 eea2      	LDI  R26,LOW(226)
000537 df87      	RCALL _RF_Command_RX
000538 9508      	RET
                 ; .FEND
                 ;
                 ;#include <stdlib.h>
                 ;
                 ;int count;
                 ;long dem;
                 ;bool flag;
                 ;
                 ;void print_border(){
                 ; 0000 0160 void print_border(){
                 _print_border:
                 ; .FSTART _print_border
                 ; 0000 0161     glcd_line(48,0, 48, 15);
000539 e3e0      	LDI  R30,LOW(48)
00053a 93ea      	ST   -Y,R30
00053b e0e0      	LDI  R30,LOW(0)
00053c 940e 10e2 	CALL SUBOPT_0xA
                 ; 0000 0162     glcd_line(0, 15, 48, 15);
00053e e0ef      	LDI  R30,LOW(15)
00053f 940e 10e2 	CALL SUBOPT_0xA
                 ; 0000 0163 
                 ; 0000 0164     glcd_line(0,0,84,0);
000541 e0e0      	LDI  R30,LOW(0)
000542 93ea      	ST   -Y,R30
000543 e5e4      	LDI  R30,LOW(84)
000544 93ea      	ST   -Y,R30
000545 e0a0      	LDI  R26,LOW(0)
000546 940e 0d1a 	CALL _glcd_line
                 ; 0000 0165     glcd_line(84,0, 84, 48);
000548 e5e4      	LDI  R30,LOW(84)
000549 93ea      	ST   -Y,R30
00054a e0e0      	LDI  R30,LOW(0)
00054b 940e 10eb 	CALL SUBOPT_0xB
                 ; 0000 0166     glcd_line(0, 48, 84, 48);
00054d e3e0      	LDI  R30,LOW(48)
00054e 940e 10eb 	CALL SUBOPT_0xB
                 ; 0000 0167     glcd_line(0, 0, 0, 48);
000550 e0e0      	LDI  R30,LOW(0)
000551 93ea      	ST   -Y,R30
000552 93ea      	ST   -Y,R30
000553 e3a0      	LDI  R26,LOW(48)
000554 940e 0d1a 	CALL _glcd_line
                 ; 0000 0168     glcd_moveto(3,3);
000556 e0e3      	LDI  R30,LOW(3)
000557 93ea      	ST   -Y,R30
000558 e0a3      	LDI  R26,LOW(3)
000559 940e 0d0d 	CALL _glcd_moveto
                 ; 0000 0169     glcd_outtext("Node: ");
                +
00055b e0a0     +LDI R26 , LOW ( _0xE2 + ( 0 ) )
00055c e0b5     +LDI R27 , HIGH ( _0xE2 + ( 0 ) )
                 	__POINTW2MN _0xE2,0
00055d 940e 10f4 	CALL SUBOPT_0xC
                 ; 0000 016A 
                 ; 0000 016B     glcd_moveto(4, 18);
00055f e1a2      	LDI  R26,LOW(18)
000560 940e 0d0d 	CALL _glcd_moveto
                 ; 0000 016C     glcd_outtext("Temp: ");
                +
000562 e0a7     +LDI R26 , LOW ( _0xE2 + ( 7 ) )
000563 e0b5     +LDI R27 , HIGH ( _0xE2 + ( 7 ) )
                 	__POINTW2MN _0xE2,7
000564 940e 10f4 	CALL SUBOPT_0xC
                 ; 0000 016D     glcd_moveto(4, 28);
000566 e1ac      	LDI  R26,LOW(28)
000567 940e 0d0d 	CALL _glcd_moveto
                 ; 0000 016E     glcd_outtext("Humid: ");
                +
000569 e0ae     +LDI R26 , LOW ( _0xE2 + ( 14 ) )
00056a e0b5     +LDI R27 , HIGH ( _0xE2 + ( 14 ) )
                 	__POINTW2MN _0xE2,14
00056b 940e 10f4 	CALL SUBOPT_0xC
                 ; 0000 016F     glcd_moveto(4, 37);
00056d e2a5      	LDI  R26,LOW(37)
00056e 940e 0d0d 	CALL _glcd_moveto
                 ; 0000 0170     glcd_outtext("Water: ");
                +
000570 e1a6     +LDI R26 , LOW ( _0xE2 + ( 22 ) )
000571 e0b5     +LDI R27 , HIGH ( _0xE2 + ( 22 ) )
                 	__POINTW2MN _0xE2,22
000572 940e 0ce1 	CALL _glcd_outtext
                 ; 0000 0171     glcd_moveto(67, 28);
000574 e4e3      	LDI  R30,LOW(67)
000575 93ea      	ST   -Y,R30
000576 e1ac      	LDI  R26,LOW(28)
000577 940e 0d0d 	CALL _glcd_moveto
                 ; 0000 0172     glcd_putchar(37);
000579 e2a5      	LDI  R26,LOW(37)
00057a 940e 0c7f 	CALL _glcd_putchar
                 ; 0000 0173     glcd_moveto(67, 37);
00057c e4e3      	LDI  R30,LOW(67)
00057d 93ea      	ST   -Y,R30
00057e e2a5      	LDI  R26,LOW(37)
00057f 940e 0d0d 	CALL _glcd_moveto
                 ; 0000 0174     glcd_outtext("mm");
                +
000581 e1ae     +LDI R26 , LOW ( _0xE2 + ( 30 ) )
000582 e0b5     +LDI R27 , HIGH ( _0xE2 + ( 30 ) )
                 	__POINTW2MN _0xE2,30
000583 940e 0ce1 	CALL _glcd_outtext
                 ; 0000 0175 }
000585 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xE2:
000500           	.BYTE 0x21
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0179 {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000586 936a      	ST   -Y,R22
000587 937a      	ST   -Y,R23
000588 938a      	ST   -Y,R24
000589 939a      	ST   -Y,R25
00058a 93aa      	ST   -Y,R26
00058b 93ba      	ST   -Y,R27
00058c 93ea      	ST   -Y,R30
00058d 93fa      	ST   -Y,R31
00058e b7ef      	IN   R30,SREG
00058f 93ea      	ST   -Y,R30
                 ; 0000 017A // Reinitialize Timer 0 value
                 ; 0000 017B TCNT0=0x83;
000590 e8e3      	LDI  R30,LOW(131)
000591 bfe2      	OUT  0x32,R30
                 ; 0000 017C if(flag == true)
000592 91a0 0962 	LDS  R26,_flag
000594 30a1      	CPI  R26,LOW(0x1)
000595 f451      	BRNE _0xE3
                 ; 0000 017D     dem++;
000596 e5ae      	LDI  R26,LOW(_dem)
000597 e0b9      	LDI  R27,HIGH(_dem)
000598 940e 1294 	CALL __GETD1P_INC
                +
00059a 5fef     +SUBI R30 , LOW ( - 1 )
00059b 4fff     +SBCI R31 , HIGH ( - 1 )
00059c 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00059d 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00059e 940e 1299 	CALL __PUTDP1_DEC
                 ; 0000 017E if(dem == 10000){
                 _0xE3:
0005a0 91a0 095e 	LDS  R26,_dem
0005a2 91b0 095f 	LDS  R27,_dem+1
0005a4 9180 0960 	LDS  R24,_dem+2
0005a6 9190 0961 	LDS  R25,_dem+3
                +
0005a8 31a0     +CPI R26 , LOW ( 0x2710 )
0005a9 e2e7     +LDI R30 , HIGH ( 0x2710 )
0005aa 07be     +CPC R27 , R30
0005ab e0e0     +LDI R30 , BYTE3 ( 0x2710 )
0005ac 078e     +CPC R24 , R30
0005ad e0e0     +LDI R30 , BYTE4 ( 0x2710 )
0005ae 079e     +CPC R25 , R30
                 	__CPD2N 0x2710
0005af f4b1      	BRNE _0xE4
                 ; 0000 017F     flag = false;
0005b0 e0e0      	LDI  R30,LOW(0)
0005b1 93e0 0962 	STS  _flag,R30
                 ; 0000 0180     count++;
0005b3 940e 10f9 	CALL SUBOPT_0xD
                 ; 0000 0181     dem = 0;
0005b5 e0e0      	LDI  R30,LOW(0)
0005b6 93e0 095e 	STS  _dem,R30
0005b8 93e0 095f 	STS  _dem+1,R30
0005ba 93e0 0960 	STS  _dem+2,R30
0005bc 93e0 0961 	STS  _dem+3,R30
                 ; 0000 0182     if(count == 5)
0005be 91a0 095c 	LDS  R26,_count
0005c0 91b0 095d 	LDS  R27,_count+1
0005c2 9715      	SBIW R26,5
0005c3 f411      	BRNE _0xE5
                 ; 0000 0183         count = 1;
0005c4 940e 1101 	CALL SUBOPT_0xE
                 ; 0000 0184 }
                 _0xE5:
                 ; 0000 0185 
                 ; 0000 0186 }
                 _0xE4:
0005c6 91e9      	LD   R30,Y+
0005c7 bfef      	OUT  SREG,R30
0005c8 91f9      	LD   R31,Y+
0005c9 91e9      	LD   R30,Y+
0005ca 91b9      	LD   R27,Y+
0005cb 91a9      	LD   R26,Y+
0005cc 9199      	LD   R25,Y+
0005cd 9189      	LD   R24,Y+
0005ce 9179      	LD   R23,Y+
0005cf 9169      	LD   R22,Y+
0005d0 9518      	RETI
                 ; .FEND
                 ;//====================================================================================================================== ...
                 ;
                 ;
                 ;//========================================================= WIFI ======================================================= ...
                 ;
                 ;void del_string(unsigned char *s) {
                 ; 0000 018C void del_string(unsigned char *s) {
                 _del_string:
                 ; .FSTART _del_string
                 ; 0000 018D     while (*s) {
0005d1 93ba      	ST   -Y,R27
0005d2 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0xE6:
0005d3 81a8      	LD   R26,Y
0005d4 81b9      	LDD  R27,Y+1
0005d5 91ec      	LD   R30,X
0005d6 30e0      	CPI  R30,0
0005d7 f041      	BREQ _0xE8
                 ; 0000 018E         *s = '\0';
0005d8 e0e0      	LDI  R30,LOW(0)
0005d9 93ec      	ST   X,R30
                 ; 0000 018F         s++;
0005da 81e8      	LD   R30,Y
0005db 81f9      	LDD  R31,Y+1
0005dc 9631      	ADIW R30,1
0005dd 83e8      	ST   Y,R30
0005de 83f9      	STD  Y+1,R31
                 ; 0000 0190     }
0005df cff3      	RJMP _0xE6
                 _0xE8:
                 ; 0000 0191 }
0005e0 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 ;
                 ;void put_string(unsigned char *s) {
                 ; 0000 0193 void put_string(unsigned char *s) {
                 _put_string:
                 ; .FSTART _put_string
                 ; 0000 0194     while (*s) {
0005e2 93ba      	ST   -Y,R27
0005e3 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0xE9:
0005e4 81a8      	LD   R26,Y
0005e5 81b9      	LDD  R27,Y+1
0005e6 91ec      	LD   R30,X
0005e7 30e0      	CPI  R30,0
0005e8 f061      	BREQ _0xEB
                 ; 0000 0195         putchar1(*s);
0005e9 91ac      	LD   R26,X
0005ea de16      	RCALL _putchar1
                 ; 0000 0196         delay_ms(50);
0005eb e3a2      	LDI  R26,LOW(50)
0005ec e0b0      	LDI  R27,0
0005ed 940e 1261 	CALL _delay_ms
                 ; 0000 0197         s++;
0005ef 81e8      	LD   R30,Y
0005f0 81f9      	LDD  R31,Y+1
0005f1 9631      	ADIW R30,1
0005f2 83e8      	ST   Y,R30
0005f3 83f9      	STD  Y+1,R31
                 ; 0000 0198     }
0005f4 cfef      	RJMP _0xE9
                 _0xEB:
                 ; 0000 0199     // putchar1('\n');
                 ; 0000 019A 
                 ; 0000 019B }
0005f5 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 ;
                 ;void refresh(int time_ms) {
                 ; 0000 019D void refresh(int time_ms) {
                 _refresh:
                 ; .FSTART _refresh
                 ; 0000 019E 
                 ; 0000 019F 
                 ; 0000 01A0     glcd_clear();
0005f7 93ba      	ST   -Y,R27
0005f8 93aa      	ST   -Y,R26
                 ;	time_ms -> Y+0
0005f9 940e 1108 	CALL SUBOPT_0xF
                 ; 0000 01A1     glcd_moveto(0,0);
                 ; 0000 01A2 
                 ; 0000 01A3     glcd_outtext(buff);
0005fb 940e 110f 	CALL SUBOPT_0x10
                 ; 0000 01A4 
                 ; 0000 01A5     del_string(buff);
0005fd e4aa      	LDI  R26,LOW(_buff)
0005fe e0b6      	LDI  R27,HIGH(_buff)
0005ff dfd1      	RCALL _del_string
                 ; 0000 01A6 
                 ; 0000 01A7     i = 0;
000600 2444      	CLR  R4
000601 2455      	CLR  R5
                 ; 0000 01A8 
                 ; 0000 01A9     delay_ms(time_ms);
000602 81a8      	LD   R26,Y
000603 81b9      	LDD  R27,Y+1
000604 940e 1261 	CALL _delay_ms
                 ; 0000 01AA 
                 ; 0000 01AB }
000606 940c 08db 	JMP  _0x216000E
                 ; .FEND
                 ;
                 ;bool wait_until(unsigned char *keyword, int time_out_s) {
                 ; 0000 01AD _Bool wait_until(unsigned char *keyword, int time_out_s) {
                 _wait_until:
                 ; .FSTART _wait_until
                 ; 0000 01AE     /*     deu biet cai temp2 de lam gi nhung khong co thi no khong chay trong 1 so truong hop @@
                 ; 0000 01AF         Vi du nhap vao "Hell" thi no se tach thua ra them 2 char. Co the do vi tri o nho. Cha biet @@*/
                 ; 0000 01B0     char temp[20], temp2[20];
                 ; 0000 01B1     int i = 0, time_start, time_temp;
                 ; 0000 01B2 
                 ; 0000 01B3     del_string(temp);
000608 93ba      	ST   -Y,R27
000609 93aa      	ST   -Y,R26
00060a 97a8      	SBIW R28,40
00060b 940e 12c8 	CALL __SAVELOCR6
                 ;	*keyword -> Y+48
                 ;	time_out_s -> Y+46
                 ;	temp -> Y+26
                 ;	temp2 -> Y+6
                 ;	i -> R16,R17
                 ;	time_start -> R18,R19
                 ;	time_temp -> R20,R21
                +
00060d e000     +LDI R16 , LOW ( 0 )
00060e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00060f 01de      	MOVW R26,R28
000610 965a      	ADIW R26,26
000611 dfbf      	RCALL _del_string
                 ; 0000 01B4 
                 ; 0000 01B5     while (*keyword) {
                 _0xEC:
000612 a9a8      	LDD  R26,Y+48
000613 a9b9      	LDD  R27,Y+48+1
000614 91ec      	LD   R30,X
000615 30e0      	CPI  R30,0
000616 f101      	BREQ _0xEE
                 ; 0000 01B6         temp[i] = *keyword;
000617 01f8      	MOVW R30,R16
000618 01de      	MOVW R26,R28
000619 965a      	ADIW R26,26
00061a 0fea      	ADD  R30,R26
00061b 1ffb      	ADC  R31,R27
00061c 010f      	MOVW R0,R30
00061d a9a8      	LDD  R26,Y+48
00061e a9b9      	LDD  R27,Y+48+1
00061f 91ec      	LD   R30,X
000620 01d0      	MOVW R26,R0
000621 93ec      	ST   X,R30
                 ; 0000 01B7         temp2[i] = temp[i];
000622 01f8      	MOVW R30,R16
000623 01de      	MOVW R26,R28
000624 9616      	ADIW R26,6
000625 0fea      	ADD  R30,R26
000626 1ffb      	ADC  R31,R27
000627 010f      	MOVW R0,R30
000628 01de      	MOVW R26,R28
000629 965a      	ADIW R26,26
00062a 0fa0      	ADD  R26,R16
00062b 1fb1      	ADC  R27,R17
00062c 91ec      	LD   R30,X
00062d 01d0      	MOVW R26,R0
00062e 93ec      	ST   X,R30
                 ; 0000 01B8         keyword++;
00062f a9e8      	LDD  R30,Y+48
000630 a9f9      	LDD  R31,Y+48+1
000631 9631      	ADIW R30,1
000632 abe8      	STD  Y+48,R30
000633 abf9      	STD  Y+48+1,R31
                 ; 0000 01B9         i++;
                +
000634 5f0f     +SUBI R16 , LOW ( - 1 )
000635 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 01BA     }
000636 cfdb      	RJMP _0xEC
                 _0xEE:
                 ; 0000 01BB 
                 ; 0000 01BC     time_start = time_s;
                +
000637 9120 0822+LDS R18 , 0 + ( _time_s )
000639 9130 0823+LDS R19 , 0 + ( _time_s ) + 1
                 	__GETWRMN 18,19,0,_time_s
                 ; 0000 01BD 
                 ; 0000 01BE     while (1) {
                 _0xEF:
                 ; 0000 01BF         if (time_s < time_start) {
00063b 91a0 0822 	LDS  R26,_time_s
00063d 91b0 0823 	LDS  R27,_time_s+1
00063f 17a2      	CP   R26,R18
000640 07b3      	CPC  R27,R19
000641 f45c      	BRGE _0xF2
                 ; 0000 01C0             time_temp = time_s + 60;
000642 91e0 0822 	LDS  R30,_time_s
000644 91f0 0823 	LDS  R31,_time_s+1
000646 96fc      	ADIW R30,60
000647 01af      	MOVW R20,R30
                 ; 0000 01C1             if (time_temp - time_start > time_out_s) {
000648 01da      	MOVW R26,R20
000649 940e 1113 	CALL SUBOPT_0x11
00064b f11c      	BRLT _0x2160011
                 ; 0000 01C2                 //glcd_outtext("Timed out\r\n");
                 ; 0000 01C3                 return false;
                 ; 0000 01C4                 //break;
                 ; 0000 01C5             }
                 ; 0000 01C6         } else {
00064c c007      	RJMP _0xF4
                 _0xF2:
                 ; 0000 01C7             if (time_s - time_start > time_out_s) {
00064d 91a0 0822 	LDS  R26,_time_s
00064f 91b0 0823 	LDS  R27,_time_s+1
000651 940e 1113 	CALL SUBOPT_0x11
000653 f0dc      	BRLT _0x2160011
                 ; 0000 01C8                 //glcd_outtext("Timed out\r\n");
                 ; 0000 01C9                 return false;
                 ; 0000 01CA                 //break;
                 ; 0000 01CB             }
                 ; 0000 01CC         }
                 _0xF4:
                 ; 0000 01CD 
                 ; 0000 01CE         if ((strstr(buff, temp)) || (strstr(buff, temp2))) {
000654 940e 111a 	CALL SUBOPT_0x12
000656 01de      	MOVW R26,R28
000657 965c      	ADIW R26,28
000658 940e 101a 	CALL _strstr
00065a 9730      	SBIW R30,0
00065b f441      	BRNE _0xF7
00065c 940e 111a 	CALL SUBOPT_0x12
00065e 01de      	MOVW R26,R28
00065f 9618      	ADIW R26,8
000660 940e 101a 	CALL _strstr
000662 9730      	SBIW R30,0
000663 f011      	BREQ _0xF6
                 _0xF7:
                 ; 0000 01CF             return true;
000664 e0e1      	LDI  R30,LOW(1)
000665 c00a      	RJMP _0x2160012
                 ; 0000 01D0             //break;
                 ; 0000 01D1         }
                 ; 0000 01D2         if (strstr(buff, "ERROR")) {
                 _0xF6:
000666 940e 111a 	CALL SUBOPT_0x12
                +
000668 e2a1     +LDI R26 , LOW ( _0xFA + ( 0 ) )
000669 e0b5     +LDI R27 , HIGH ( _0xFA + ( 0 ) )
                 	__POINTW2MN _0xFA,0
00066a 940e 101a 	CALL _strstr
00066c 9730      	SBIW R30,0
00066d f409      	BRNE _0x2160011
                 ; 0000 01D3             /*glcd_outtext("Error found, attempting to continue..\r\n");
                 ; 0000 01D4             delay_ms(3000);
                 ; 0000 01D5             glcd_clear();
                 ; 0000 01D6             glcd_moveto(0,0);*/
                 ; 0000 01D7             return false;
                 ; 0000 01D8             //break;
                 ; 0000 01D9             //nen lam them ve cai nay nua
                 ; 0000 01DA         }
                 ; 0000 01DB     }
00066e cfcc      	RJMP _0xEF
                 ; 0000 01DC     return false;
                 _0x2160011:
00066f e0e0      	LDI  R30,LOW(0)
                 _0x2160012:
000670 940e 12cf 	CALL __LOADLOCR6
000672 96e2      	ADIW R28,50
000673 9508      	RET
                 ; 0000 01DD }
                 ; .FEND
                 
                 	.DSEG
                 _0xFA:
000521           	.BYTE 0x6
                 ;
                 ;bool wifi_connect(){
                 ; 0000 01DF _Bool wifi_connect(){
                 
                 	.CSEG
                 _wifi_connect:
                 ; .FSTART _wifi_connect
                 ; 0000 01E0     put_string("AT+CWMODE=1\r\n");
                +
000674 e2a7     +LDI R26 , LOW ( _0xFB + ( 0 ) )
000675 e0b5     +LDI R27 , HIGH ( _0xFB + ( 0 ) )
                 	__POINTW2MN _0xFB,0
000676 df6b      	RCALL _put_string
                 ; 0000 01E1     if(!wait_until("OK", 2)){
                +
000677 e3e5     +LDI R30 , LOW ( _0xFB + ( 14 ) )
000678 e0f5     +LDI R31 , HIGH ( _0xFB + ( 14 ) )
                 	__POINTW1MN _0xFB,14
000679 940e 111f 	CALL SUBOPT_0x13
00067b 30e0      	CPI  R30,0
00067c f429      	BRNE _0xFC
                 ; 0000 01E2         glcd_clear();
00067d 940e 1108 	CALL SUBOPT_0xF
                 ; 0000 01E3         glcd_moveto(0,0);
                 ; 0000 01E4         glcd_outtext("config fail");
                +
00067f e3a8     +LDI R26 , LOW ( _0xFB + ( 17 ) )
000680 e0b5     +LDI R27 , HIGH ( _0xFB + ( 17 ) )
                 	__POINTW2MN _0xFB,17
000681 c012      	RJMP _0x2160010
                 ; 0000 01E5         return false;
                 ; 0000 01E6     }
                 ; 0000 01E7     refresh(0);
                 _0xFC:
000682 940e 1125 	CALL SUBOPT_0x14
                 ; 0000 01E8 
                 ; 0000 01E9     put_string("AT+CWJAP=\"Thay_Thao_deo_giai\",\"chinhxac\"\r\n");
                +
000684 e4a4     +LDI R26 , LOW ( _0xFB + ( 29 ) )
000685 e0b5     +LDI R27 , HIGH ( _0xFB + ( 29 ) )
                 	__POINTW2MN _0xFB,29
000686 df5b      	RCALL _put_string
                 ; 0000 01EA     if(!wait_until("OK", 10)){
                +
000687 e6ef     +LDI R30 , LOW ( _0xFB + ( 72 ) )
000688 e0f5     +LDI R31 , HIGH ( _0xFB + ( 72 ) )
                 	__POINTW1MN _0xFB,72
000689 93fa      	ST   -Y,R31
00068a 93ea      	ST   -Y,R30
00068b e0aa      	LDI  R26,LOW(10)
00068c e0b0      	LDI  R27,0
00068d df7a      	RCALL _wait_until
00068e 30e0      	CPI  R30,0
00068f f441      	BRNE _0xFD
                 ; 0000 01EB         glcd_clear();
000690 940e 1108 	CALL SUBOPT_0xF
                 ; 0000 01EC         glcd_moveto(0,0);
                 ; 0000 01ED         glcd_outtext("connect fail");
                +
000692 e7a2     +LDI R26 , LOW ( _0xFB + ( 75 ) )
000693 e0b5     +LDI R27 , HIGH ( _0xFB + ( 75 ) )
                 	__POINTW2MN _0xFB,75
                 _0x2160010:
000694 940e 0ce1 	CALL _glcd_outtext
                 ; 0000 01EE         return false;
000696 e0e0      	LDI  R30,LOW(0)
000697 9508      	RET
                 ; 0000 01EF     }
                 ; 0000 01F0     glcd_clear();
                 _0xFD:
000698 940e 1108 	CALL SUBOPT_0xF
                 ; 0000 01F1     glcd_moveto(0,0);
                 ; 0000 01F2     glcd_outtext("connect wifi success");
                +
00069a e7af     +LDI R26 , LOW ( _0xFB + ( 88 ) )
00069b e0b5     +LDI R27 , HIGH ( _0xFB + ( 88 ) )
                 	__POINTW2MN _0xFB,88
00069c 940e 0ce1 	CALL _glcd_outtext
                 ; 0000 01F3     delay_ms(1000);
00069e 940e 1129 	CALL SUBOPT_0x15
                 ; 0000 01F4     refresh(0);
0006a0 940e 1125 	CALL SUBOPT_0x14
                 ; 0000 01F5     return true;
0006a2 e0e1      	LDI  R30,LOW(1)
0006a3 9508      	RET
                 ; 0000 01F6 }
                 ; .FEND
                 
                 	.DSEG
                 _0xFB:
000527           	.BYTE 0x6D
                 ;
                 ;void read_and_send(unsigned char *s){
                 ; 0000 01F8 void read_and_send(unsigned char *s){
                 
                 	.CSEG
                 _read_and_send:
                 ; .FSTART _read_and_send
                 ; 0000 01F9     // Thay nhung ham respones_read bang ham wait_until
                 ; 0000 01FA     char api_key[20], cmd[] = "GET /update?key=", temp[20], temp2[20];
                 ; 0000 01FB     int length = 0, i = 0;
                 ; 0000 01FC 
                 ; 0000 01FD 	while (*s) {
0006a4 93ba      	ST   -Y,R27
0006a5 93aa      	ST   -Y,R26
0006a6 97ef      	SBIW R28,63
0006a7 972e      	SBIW R28,14
0006a8 e181      	LDI  R24,17
0006a9 e2a8      	LDI  R26,LOW(40)
0006aa e0b0      	LDI  R27,HIGH(40)
0006ab eae2      	LDI  R30,LOW(_0xFE*2)
0006ac e0f2      	LDI  R31,HIGH(_0xFE*2)
0006ad 940e 12d6 	CALL __INITLOCB
0006af 940e 12ca 	CALL __SAVELOCR4
                 ;	*s -> Y+81
                 ;	api_key -> Y+61
                 ;	cmd -> Y+44
                 ;	temp -> Y+24
                 ;	temp2 -> Y+4
                 ;	length -> R16,R17
                 ;	i -> R18,R19
                +
0006b1 e000     +LDI R16 , LOW ( 0 )
0006b2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0006b3 e020     +LDI R18 , LOW ( 0 )
0006b4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xFF:
0006b5 940e 112d 	CALL SUBOPT_0x16
0006b7 30e0      	CPI  R30,0
0006b8 f0f9      	BREQ _0x101
                 ; 0000 01FE         temp2[i] = *s;
0006b9 01f9      	MOVW R30,R18
0006ba 01de      	MOVW R26,R28
0006bb 9614      	ADIW R26,4
0006bc 0fea      	ADD  R30,R26
0006bd 1ffb      	ADC  R31,R27
0006be 01bf      	MOVW R22,R30
0006bf 940e 112d 	CALL SUBOPT_0x16
0006c1 01db      	MOVW R26,R22
0006c2 93ec      	ST   X,R30
                 ; 0000 01FF 		api_key[i] = temp2[i];
0006c3 01f9      	MOVW R30,R18
0006c4 01de      	MOVW R26,R28
0006c5 96dd      	ADIW R26,61
0006c6 0fea      	ADD  R30,R26
0006c7 1ffb      	ADC  R31,R27
0006c8 010f      	MOVW R0,R30
0006c9 01de      	MOVW R26,R28
0006ca 9614      	ADIW R26,4
0006cb 0fa2      	ADD  R26,R18
0006cc 1fb3      	ADC  R27,R19
0006cd 91ec      	LD   R30,X
0006ce 01d0      	MOVW R26,R0
0006cf 93ec      	ST   X,R30
                 ; 0000 0200         s++;
0006d0 01de      	MOVW R26,R28
0006d1 5aaf      	SUBI R26,LOW(-(81))
0006d2 4fbf      	SBCI R27,HIGH(-(81))
0006d3 940e 1135 	CALL SUBOPT_0x17
                 ; 0000 0201         i++;
                +
0006d5 5f2f     +SUBI R18 , LOW ( - 1 )
0006d6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0202     }
0006d7 cfdd      	RJMP _0xFF
                 _0x101:
                 ; 0000 0203 
                 ; 0000 0204 	put_string("AT+CIPMUX=1");
                +
0006d8 e9a4     +LDI R26 , LOW ( _0x102 + ( 0 ) )
0006d9 e0b5     +LDI R27 , HIGH ( _0x102 + ( 0 ) )
                 	__POINTW2MN _0x102,0
0006da 940e 113b 	CALL SUBOPT_0x18
                 ; 0000 0205 	delay_ms(300);
                 ; 0000 0206 	put_string("\r\n");
                +
0006dc eaa0     +LDI R26 , LOW ( _0x102 + ( 12 ) )
0006dd e0b5     +LDI R27 , HIGH ( _0x102 + ( 12 ) )
                 	__POINTW2MN _0x102,12
0006de df03      	RCALL _put_string
                 ; 0000 0207     wait_until("OK", 2);
                +
0006df eae3     +LDI R30 , LOW ( _0x102 + ( 15 ) )
0006e0 e0f5     +LDI R31 , HIGH ( _0x102 + ( 15 ) )
                 	__POINTW1MN _0x102,15
0006e1 940e 111f 	CALL SUBOPT_0x13
                 ; 0000 0208     refresh(0);
0006e3 940e 1125 	CALL SUBOPT_0x14
                 ; 0000 0209 
                 ; 0000 020A     put_string("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80");
                +
0006e5 eaa6     +LDI R26 , LOW ( _0x102 + ( 18 ) )
0006e6 e0b5     +LDI R27 , HIGH ( _0x102 + ( 18 ) )
                 	__POINTW2MN _0x102,18
0006e7 940e 113b 	CALL SUBOPT_0x18
                 ; 0000 020B 	delay_ms(300);
                 ; 0000 020C 	put_string("\r\n");
                +
0006e9 eda2     +LDI R26 , LOW ( _0x102 + ( 62 ) )
0006ea e0b5     +LDI R27 , HIGH ( _0x102 + ( 62 ) )
                 	__POINTW2MN _0x102,62
0006eb def6      	RCALL _put_string
                 ; 0000 020D     wait_until("OK", 20);
                +
0006ec ede5     +LDI R30 , LOW ( _0x102 + ( 65 ) )
0006ed e0f5     +LDI R31 , HIGH ( _0x102 + ( 65 ) )
                 	__POINTW1MN _0x102,65
0006ee 93fa      	ST   -Y,R31
0006ef 93ea      	ST   -Y,R30
0006f0 e1a4      	LDI  R26,LOW(20)
0006f1 e0b0      	LDI  R27,0
0006f2 df15      	RCALL _wait_until
                 ; 0000 020E 	refresh(2000);
0006f3 eda0      	LDI  R26,LOW(2000)
0006f4 e0b7      	LDI  R27,HIGH(2000)
0006f5 df01      	RCALL _refresh
                 ; 0000 020F 
                 ; 0000 0210 	glcd_clear();
0006f6 940e 1108 	CALL SUBOPT_0xF
                 ; 0000 0211 	glcd_moveto(0,0);
                 ; 0000 0212 	// glcd_outtext("Server connected");
                 ; 0000 0213 
                 ; 0000 0214     strcat(cmd, temp2);
0006f8 940e 1141 	CALL SUBOPT_0x19
0006fa 01de      	MOVW R26,R28
0006fb 9616      	ADIW R26,6
0006fc 940e 1146 	CALL SUBOPT_0x1A
                 ; 0000 0215     strcat(cmd, "&field1=");
                +
0006fe eda8     +LDI R26 , LOW ( _0x102 + ( 68 ) )
0006ff e0b5     +LDI R27 , HIGH ( _0x102 + ( 68 ) )
                 	__POINTW2MN _0x102,68
000700 940e 0ff0 	CALL _strcat
                 ; 0000 0216 
                 ; 0000 0217     // itoa(station_receive.temp, cmd);
                 ; 0000 0218 
                 ; 0000 0219     itoa(station_receive.temp, temp);
                +
000702 91e0 093b+LDS R30 , _station_receive + ( 6 )
000704 91f0 093c+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
000706 940e 1149 	CALL SUBOPT_0x1B
                 ; 0000 021A 	strcat(cmd, temp);
000708 01de      	MOVW R26,R28
000709 965a      	ADIW R26,26
00070a 940e 1146 	CALL SUBOPT_0x1A
                 ; 0000 021B 
                 ; 0000 021C     strcat(cmd, "&field2=");
                +
00070c eea1     +LDI R26 , LOW ( _0x102 + ( 77 ) )
00070d e0b5     +LDI R27 , HIGH ( _0x102 + ( 77 ) )
                 	__POINTW2MN _0x102,77
00070e 940e 0ff0 	CALL _strcat
                 ; 0000 021D     itoa(station_receive.humi, temp);
                +
000710 91e0 0939+LDS R30 , _station_receive + ( 4 )
000712 91f0 093a+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
000714 940e 1149 	CALL SUBOPT_0x1B
                 ; 0000 021E     //itoa(200, temp);
                 ; 0000 021F 	strcat(cmd, temp);
000716 01de      	MOVW R26,R28
000717 965a      	ADIW R26,26
000718 940e 1146 	CALL SUBOPT_0x1A
                 ; 0000 0220 
                 ; 0000 0221     strcat(cmd, "&field3=");
                +
00071a eeaa     +LDI R26 , LOW ( _0x102 + ( 86 ) )
00071b e0b5     +LDI R27 , HIGH ( _0x102 + ( 86 ) )
                 	__POINTW2MN _0x102,86
00071c 940e 0ff0 	CALL _strcat
                 ; 0000 0222     itoa(station_receive.water, temp);
                +
00071e 91e0 093f+LDS R30 , _station_receive + ( 10 )
000720 91f0 0940+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
000722 940e 1149 	CALL SUBOPT_0x1B
                 ; 0000 0223     //itoa(200, temp);
                 ; 0000 0224 	strcat(cmd, temp);
000724 01de      	MOVW R26,R28
000725 965a      	ADIW R26,26
000726 940e 0ff0 	CALL _strcat
                 ; 0000 0225 
                 ; 0000 0226 	length = strlen(cmd);
000728 01de      	MOVW R26,R28
000729 969c      	ADIW R26,44
00072a 940e 1001 	CALL _strlen
00072c 018f      	MOVW R16,R30
                 ; 0000 0227 	length += 2;
                +
00072d 5f0e     +SUBI R16 , LOW ( - 2 )
00072e 4f1f     +SBCI R17 , HIGH ( - 2 )
                 	__ADDWRN 16,17,2
                 ; 0000 0228 
                 ; 0000 0229 	itoa(length, temp);
00072f 931a      	ST   -Y,R17
000730 930a      	ST   -Y,R16
000731 01de      	MOVW R26,R28
000732 965a      	ADIW R26,26
000733 940e 0fb2 	CALL _itoa
                 ; 0000 022A 
                 ; 0000 022B 	del_string(buff);
000735 e4aa      	LDI  R26,LOW(_buff)
000736 e0b6      	LDI  R27,HIGH(_buff)
000737 de99      	RCALL _del_string
                 ; 0000 022C 
                 ; 0000 022D     put_string("AT+CIPSEND=0,");
                +
000738 efa3     +LDI R26 , LOW ( _0x102 + ( 95 ) )
000739 e0b5     +LDI R27 , HIGH ( _0x102 + ( 95 ) )
                 	__POINTW2MN _0x102,95
00073a dea7      	RCALL _put_string
                 ; 0000 022E     put_string(temp);
00073b 01de      	MOVW R26,R28
00073c 9658      	ADIW R26,24
00073d dea4      	RCALL _put_string
                 ; 0000 022F 	delay_ms(1000);
00073e 940e 1129 	CALL SUBOPT_0x15
                 ; 0000 0230     put_string("\r\n");
                +
000740 e0a1     +LDI R26 , LOW ( _0x102 + ( 109 ) )
000741 e0b6     +LDI R27 , HIGH ( _0x102 + ( 109 ) )
                 	__POINTW2MN _0x102,109
000742 de9f      	RCALL _put_string
                 ; 0000 0231 
                 ; 0000 0232     wait_until("> ", 5);
                +
000743 e0e4     +LDI R30 , LOW ( _0x102 + ( 112 ) )
000744 e0f6     +LDI R31 , HIGH ( _0x102 + ( 112 ) )
                 	__POINTW1MN _0x102,112
000745 93fa      	ST   -Y,R31
000746 93ea      	ST   -Y,R30
000747 e0a5      	LDI  R26,LOW(5)
000748 e0b0      	LDI  R27,0
000749 debe      	RCALL _wait_until
                 ; 0000 0233 
                 ; 0000 0234 	glcd_clear();
00074a 940e 1108 	CALL SUBOPT_0xF
                 ; 0000 0235 	glcd_moveto(0,0);
                 ; 0000 0236 	glcd_outtext("Sending");
                +
00074c e0a7     +LDI R26 , LOW ( _0x102 + ( 115 ) )
00074d e0b6     +LDI R27 , HIGH ( _0x102 + ( 115 ) )
                 	__POINTW2MN _0x102,115
00074e 940e 0ce1 	CALL _glcd_outtext
                 ; 0000 0237 
                 ; 0000 0238     put_string(cmd);
000750 01de      	MOVW R26,R28
000751 969c      	ADIW R26,44
000752 de8f      	RCALL _put_string
                 ; 0000 0239 	put_string("\r\n");
                +
000753 e0af     +LDI R26 , LOW ( _0x102 + ( 123 ) )
000754 e0b6     +LDI R27 , HIGH ( _0x102 + ( 123 ) )
                 	__POINTW2MN _0x102,123
000755 de8c      	RCALL _put_string
                 ; 0000 023A     delay_ms(1000);
000756 940e 1129 	CALL SUBOPT_0x15
                 ; 0000 023B     putchar(0x1A);
000758 e1aa      	LDI  R26,LOW(26)
000759 dc31      	RCALL _putchar
                 ; 0000 023C 
                 ; 0000 023D 	refresh(0);
00075a 940e 1125 	CALL SUBOPT_0x14
                 ; 0000 023E 
                 ; 0000 023F 	glcd_outtext("Done");
                +
00075c e1a2     +LDI R26 , LOW ( _0x102 + ( 126 ) )
00075d e0b6     +LDI R27 , HIGH ( _0x102 + ( 126 ) )
                 	__POINTW2MN _0x102,126
00075e 940e 0ce1 	CALL _glcd_outtext
                 ; 0000 0240 }
000760 940e 12d1 	CALL __LOADLOCR4
000762 96ef      	ADIW R28,63
000763 9664      	ADIW R28,20
000764 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x102:
000594           	.BYTE 0x83
                 ;//====================================================================================================================== ...
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0245 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0246 // Declare your local variables here
                 ; 0000 0247 // Variable used to store graphic display
                 ; 0000 0248 // controller initialization data
                 ; 0000 0249 GLCDINIT_t glcd_init_data;
                 ; 0000 024A 
                 ; 0000 024B // Input/Output Ports initialization
                 ; 0000 024C // Port A initialization
                 ; 0000 024D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 024E DDRA=(0<<DDA7) | (1<<DDA6) | (0<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (0<<DDA0);
000765 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000766 e5ee      	LDI  R30,LOW(94)
000767 bbea      	OUT  0x1A,R30
                 ; 0000 024F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0250 PORTA=(0<<PORTA7) | (0<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
000768 e3ef      	LDI  R30,LOW(63)
000769 bbeb      	OUT  0x1B,R30
                 ; 0000 0251 
                 ; 0000 0252 // Port B initialization
                 ; 0000 0253 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0254 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00076a e0e0      	LDI  R30,LOW(0)
00076b bbe7      	OUT  0x17,R30
                 ; 0000 0255 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0256 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00076c bbe8      	OUT  0x18,R30
                 ; 0000 0257 
                 ; 0000 0258 // Port C initialization
                 ; 0000 0259 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 025A DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00076d bbe4      	OUT  0x14,R30
                 ; 0000 025B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 025C PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00076e bbe5      	OUT  0x15,R30
                 ; 0000 025D 
                 ; 0000 025E // Port D initialization
                 ; 0000 025F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0260 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00076f bbe1      	OUT  0x11,R30
                 ; 0000 0261 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0262 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000770 bbe2      	OUT  0x12,R30
                 ; 0000 0263 
                 ; 0000 0264 // Port E initialization
                 ; 0000 0265 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0266 DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
000771 b9e2      	OUT  0x2,R30
                 ; 0000 0267 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0268 PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
000772 b9e3      	OUT  0x3,R30
                 ; 0000 0269 
                 ; 0000 026A // Port F initialization
                 ; 0000 026B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 026C DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
000773 93e0 0061 	STS  97,R30
                 ; 0000 026D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 026E PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
000775 93e0 0062 	STS  98,R30
                 ; 0000 026F 
                 ; 0000 0270 // Port G initialization
                 ; 0000 0271 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0272 DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
000777 93e0 0064 	STS  100,R30
                 ; 0000 0273 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0274 PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
000779 93e0 0065 	STS  101,R30
                 ; 0000 0275 
                 ; 0000 0276 // Timer/Counter 0 initialization
                 ; 0000 0277 // Clock source: System Clock
                 ; 0000 0278 // Clock value: 250.000 kHz
                 ; 0000 0279 // Mode: Normal top=0xFF
                 ; 0000 027A // OC0 output: Disconnected
                 ; 0000 027B // Timer Period: 0.5 ms
                 ; 0000 027C ASSR=0<<AS0;
00077b bfe0      	OUT  0x30,R30
                 ; 0000 027D TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
00077c e0e3      	LDI  R30,LOW(3)
00077d bfe3      	OUT  0x33,R30
                 ; 0000 027E TCNT0=0x83;
00077e e8e3      	LDI  R30,LOW(131)
00077f bfe2      	OUT  0x32,R30
                 ; 0000 027F OCR0=0x00;
000780 e0e0      	LDI  R30,LOW(0)
000781 bfe1      	OUT  0x31,R30
                 ; 0000 0280 
                 ; 0000 0281 // Timer/Counter 1 initialization
                 ; 0000 0282 // Clock source: System Clock
                 ; 0000 0283 // Clock value: Timer1 Stopped
                 ; 0000 0284 // Mode: Normal top=0xFFFF
                 ; 0000 0285 // OC1A output: Disconnected
                 ; 0000 0286 // OC1B output: Disconnected
                 ; 0000 0287 // OC1C output: Disconnected
                 ; 0000 0288 // Noise Canceler: Off
                 ; 0000 0289 // Input Capture on Falling Edge
                 ; 0000 028A // Timer1 Overflow Interrupt: Off
                 ; 0000 028B // Input Capture Interrupt: Off
                 ; 0000 028C // Compare A Match Interrupt: Off
                 ; 0000 028D // Compare B Match Interrupt: Off
                 ; 0000 028E // Compare C Match Interrupt: Off
                 ; 0000 028F TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
000782 bdef      	OUT  0x2F,R30
                 ; 0000 0290 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000783 bdee      	OUT  0x2E,R30
                 ; 0000 0291 TCNT1H=0x00;
000784 bded      	OUT  0x2D,R30
                 ; 0000 0292 TCNT1L=0x00;
000785 bdec      	OUT  0x2C,R30
                 ; 0000 0293 ICR1H=0x00;
000786 bde7      	OUT  0x27,R30
                 ; 0000 0294 ICR1L=0x00;
000787 bde6      	OUT  0x26,R30
                 ; 0000 0295 OCR1AH=0x00;
000788 bdeb      	OUT  0x2B,R30
                 ; 0000 0296 OCR1AL=0x00;
000789 bdea      	OUT  0x2A,R30
                 ; 0000 0297 OCR1BH=0x00;
00078a bde9      	OUT  0x29,R30
                 ; 0000 0298 OCR1BL=0x00;
00078b bde8      	OUT  0x28,R30
                 ; 0000 0299 OCR1CH=0x00;
00078c 93e0 0079 	STS  121,R30
                 ; 0000 029A OCR1CL=0x00;
00078e 93e0 0078 	STS  120,R30
                 ; 0000 029B 
                 ; 0000 029C // Timer/Counter 2 initialization
                 ; 0000 029D // Clock source: System Clock
                 ; 0000 029E // Clock value: Timer2 Stopped
                 ; 0000 029F // Mode: Normal top=0xFF
                 ; 0000 02A0 // OC2 output: Disconnected
                 ; 0000 02A1 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000790 bde5      	OUT  0x25,R30
                 ; 0000 02A2 TCNT2=0x00;
000791 bde4      	OUT  0x24,R30
                 ; 0000 02A3 OCR2=0x00;
000792 bde3      	OUT  0x23,R30
                 ; 0000 02A4 
                 ; 0000 02A5 // Timer/Counter 3 initialization
                 ; 0000 02A6 // Clock source: System Clock
                 ; 0000 02A7 // Clock value: Timer3 Stopped
                 ; 0000 02A8 // Mode: Normal top=0xFFFF
                 ; 0000 02A9 // OC3A output: Disconnected
                 ; 0000 02AA // OC3B output: Disconnected
                 ; 0000 02AB // OC3C output: Disconnected
                 ; 0000 02AC // Noise Canceler: Off
                 ; 0000 02AD // Input Capture on Falling Edge
                 ; 0000 02AE // Timer3 Overflow Interrupt: Off
                 ; 0000 02AF // Input Capture Interrupt: Off
                 ; 0000 02B0 // Compare A Match Interrupt: Off
                 ; 0000 02B1 // Compare B Match Interrupt: Off
                 ; 0000 02B2 // Compare C Match Interrupt: Off
                 ; 0000 02B3 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
000793 93e0 008b 	STS  139,R30
                 ; 0000 02B4 TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
000795 93e0 008a 	STS  138,R30
                 ; 0000 02B5 TCNT3H=0x00;
000797 93e0 0089 	STS  137,R30
                 ; 0000 02B6 TCNT3L=0x00;
000799 93e0 0088 	STS  136,R30
                 ; 0000 02B7 ICR3H=0x00;
00079b 93e0 0081 	STS  129,R30
                 ; 0000 02B8 ICR3L=0x00;
00079d 93e0 0080 	STS  128,R30
                 ; 0000 02B9 OCR3AH=0x00;
00079f 93e0 0087 	STS  135,R30
                 ; 0000 02BA OCR3AL=0x00;
0007a1 93e0 0086 	STS  134,R30
                 ; 0000 02BB OCR3BH=0x00;
0007a3 93e0 0085 	STS  133,R30
                 ; 0000 02BC OCR3BL=0x00;
0007a5 93e0 0084 	STS  132,R30
                 ; 0000 02BD OCR3CH=0x00;
0007a7 93e0 0083 	STS  131,R30
                 ; 0000 02BE OCR3CL=0x00;
0007a9 93e0 0082 	STS  130,R30
                 ; 0000 02BF 
                 ; 0000 02C0 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 02C1 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0007ab e0e1      	LDI  R30,LOW(1)
0007ac bfe7      	OUT  0x37,R30
                 ; 0000 02C2 ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0007ad e0e0      	LDI  R30,LOW(0)
0007ae 93e0 007d 	STS  125,R30
                 ; 0000 02C3 
                 ; 0000 02C4 // External Interrupt(s) initialization
                 ; 0000 02C5 // INT0: Off
                 ; 0000 02C6 // INT1: Off
                 ; 0000 02C7 // INT2: Off
                 ; 0000 02C8 // INT3: Off
                 ; 0000 02C9 // INT4: Off
                 ; 0000 02CA // INT5: Off
                 ; 0000 02CB // INT6: Off
                 ; 0000 02CC // INT7: Off
                 ; 0000 02CD EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0007b0 93e0 006a 	STS  106,R30
                 ; 0000 02CE EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
0007b2 bfea      	OUT  0x3A,R30
                 ; 0000 02CF EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
0007b3 bfe9      	OUT  0x39,R30
                 ; 0000 02D0 
                 ; 0000 02D1 // USART0 initialization
                 ; 0000 02D2 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 02D3 // USART0 Receiver: On
                 ; 0000 02D4 // USART0 Transmitter: On
                 ; 0000 02D5 // USART0 Mode: Asynchronous
                 ; 0000 02D6 // USART0 Baud Rate: 9600
                 ; 0000 02D7 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0007b4 b9eb      	OUT  0xB,R30
                 ; 0000 02D8 UCSR0B=(1<<RXCIE0) | (1<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0007b5 ede8      	LDI  R30,LOW(216)
0007b6 b9ea      	OUT  0xA,R30
                 ; 0000 02D9 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0007b7 e0e6      	LDI  R30,LOW(6)
0007b8 93e0 0095 	STS  149,R30
                 ; 0000 02DA UBRR0H=0x00;
0007ba e0e0      	LDI  R30,LOW(0)
0007bb 93e0 0090 	STS  144,R30
                 ; 0000 02DB UBRR0L=0x33;
0007bd e3e3      	LDI  R30,LOW(51)
0007be b9e9      	OUT  0x9,R30
                 ; 0000 02DC 
                 ; 0000 02DD // USART1 initialization
                 ; 0000 02DE // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 02DF // USART1 Receiver: On
                 ; 0000 02E0 // USART1 Transmitter: On
                 ; 0000 02E1 // USART1 Mode: Asynchronous
                 ; 0000 02E2 // USART1 Baud Rate: 9600
                 ; 0000 02E3 UCSR1A=(0<<RXC1) | (0<<TXC1) | (0<<UDRE1) | (0<<FE1) | (0<<DOR1) | (0<<UPE1) | (0<<U2X1) | (0<<MPCM1);
0007bf e0e0      	LDI  R30,LOW(0)
0007c0 93e0 009b 	STS  155,R30
                 ; 0000 02E4 UCSR1B=(1<<RXCIE1) | (1<<TXCIE1) | (0<<UDRIE1) | (1<<RXEN1) | (1<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0007c2 ede8      	LDI  R30,LOW(216)
0007c3 93e0 009a 	STS  154,R30
                 ; 0000 02E5 UCSR1C=(0<<UMSEL1) | (0<<UPM11) | (0<<UPM10) | (0<<USBS1) | (1<<UCSZ11) | (1<<UCSZ10) | (0<<UCPOL1);
0007c5 e0e6      	LDI  R30,LOW(6)
0007c6 93e0 009d 	STS  157,R30
                 ; 0000 02E6 UBRR1H=0x00;
0007c8 e0e0      	LDI  R30,LOW(0)
0007c9 93e0 0098 	STS  152,R30
                 ; 0000 02E7 UBRR1L=0x33;
0007cb e3e3      	LDI  R30,LOW(51)
0007cc 93e0 0099 	STS  153,R30
                 ; 0000 02E8 
                 ; 0000 02E9 // Analog Comparator initialization
                 ; 0000 02EA // Analog Comparator: Off
                 ; 0000 02EB // The Analog Comparator's positive input is
                 ; 0000 02EC // connected to the AIN0 pin
                 ; 0000 02ED // The Analog Comparator's negative input is
                 ; 0000 02EE // connected to the AIN1 pin
                 ; 0000 02EF ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0007ce e8e0      	LDI  R30,LOW(128)
0007cf b9e8      	OUT  0x8,R30
                 ; 0000 02F0 SFIOR=(0<<ACME);
0007d0 e0e0      	LDI  R30,LOW(0)
0007d1 bde0      	OUT  0x20,R30
                 ; 0000 02F1 
                 ; 0000 02F2 // ADC initialization
                 ; 0000 02F3 // ADC disabled
                 ; 0000 02F4 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0007d2 b9e6      	OUT  0x6,R30
                 ; 0000 02F5 
                 ; 0000 02F6 // SPI initialization
                 ; 0000 02F7 // SPI disabled
                 ; 0000 02F8 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0007d3 b9ed      	OUT  0xD,R30
                 ; 0000 02F9 
                 ; 0000 02FA // TWI initialization
                 ; 0000 02FB // TWI disabled
                 ; 0000 02FC TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0007d4 93e0 0074 	STS  116,R30
                 ; 0000 02FD 
                 ; 0000 02FE // Bit-Banged I2C Bus initialization
                 ; 0000 02FF // I2C Port: PORTD
                 ; 0000 0300 // I2C SDA bit: 1
                 ; 0000 0301 // I2C SCL bit: 0
                 ; 0000 0302 // Bit Rate: 100 kHz
                 ; 0000 0303 // Note: I2C settings are specified in the
                 ; 0000 0304 // Project|Configure|C Compiler|Libraries|I2C menu.
                 ; 0000 0305 i2c_init();
0007d6 940e 1210 	CALL _i2c_init
                 ; 0000 0306 
                 ; 0000 0307 // DS1307 Real Time Clock initialization
                 ; 0000 0308 // Square wave output on pin SQW/OUT: On
                 ; 0000 0309 // Square wave frequency: 32768Hz
                 ; 0000 030A rtc_init(3,1,0);
0007d8 e0e3      	LDI  R30,LOW(3)
0007d9 93ea      	ST   -Y,R30
0007da e0e1      	LDI  R30,LOW(1)
0007db 93ea      	ST   -Y,R30
0007dc e0a0      	LDI  R26,LOW(0)
0007dd d08d      	RCALL _rtc_init
                 ; 0000 030B 
                 ; 0000 030C // Graphic Display Controller initialization
                 ; 0000 030D // The PCD8544 connections are specified in the
                 ; 0000 030E // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 030F // SDIN - PORTC Bit 7
                 ; 0000 0310 // SCLK - PORTA Bit 7
                 ; 0000 0311 // D /C - PORTC Bit 6
                 ; 0000 0312 // /SCE - PORTC Bit 5
                 ; 0000 0313 // /RES - PORTC Bit 4
                 ; 0000 0314 
                 ; 0000 0315 // Specify the current font for displaying text
                 ; 0000 0316 glcd_init_data.font=font5x7;
0007de e8ec      	LDI  R30,LOW(_font5x7*2)
0007df e0f0      	LDI  R31,HIGH(_font5x7*2)
0007e0 83e8      	ST   Y,R30
0007e1 83f9      	STD  Y+1,R31
                 ; 0000 0317 // No function is used for reading
                 ; 0000 0318 // image data from external memory
                 ; 0000 0319 glcd_init_data.readxmem=NULL;
0007e2 e0e0      	LDI  R30,LOW(0)
0007e3 83ea      	STD  Y+2,R30
0007e4 83eb      	STD  Y+2+1,R30
                 ; 0000 031A // No function is used for writing
                 ; 0000 031B // image data to external memory
                 ; 0000 031C glcd_init_data.writexmem=NULL;
0007e5 83ec      	STD  Y+4,R30
0007e6 83ed      	STD  Y+4+1,R30
                 ; 0000 031D // Set the LCD temperature coefficient
                 ; 0000 031E glcd_init_data.temp_coef=80;
0007e7 81ee      	LDD  R30,Y+6
0007e8 7fec      	ANDI R30,LOW(0xFC)
0007e9 83ee      	STD  Y+6,R30
                 ; 0000 031F // Set the LCD bias
                 ; 0000 0320 glcd_init_data.bias=3;
0007ea 7ee3      	ANDI R30,LOW(0xE3)
0007eb 60ec      	ORI  R30,LOW(0xC)
0007ec 83ee      	STD  Y+6,R30
                 ; 0000 0321 // Set the LCD contrast control voltage VLCD
                 ; 0000 0322 glcd_init_data.vlcd=56;
0007ed 81ef      	LDD  R30,Y+7
0007ee 78e0      	ANDI R30,LOW(0x80)
0007ef 63e8      	ORI  R30,LOW(0x38)
0007f0 83ef      	STD  Y+7,R30
                 ; 0000 0323 
                 ; 0000 0324 glcd_init(&glcd_init_data);
0007f1 01de      	MOVW R26,R28
0007f2 d0f4      	RCALL _glcd_init
                 ; 0000 0325 
                 ; 0000 0326 // Global enable interrupts
                 ; 0000 0327 #asm("sei")
0007f3 9478      	sei
                 ; 0000 0328 glcd_moveto(0,0);
0007f4 e0e0      	LDI  R30,LOW(0)
0007f5 93ea      	ST   -Y,R30
0007f6 e0a0      	LDI  R26,LOW(0)
0007f7 940e 0d0d 	CALL _glcd_moveto
                 ; 0000 0329 glcd_outtext("aaaa");
                +
0007f9 e1a7     +LDI R26 , LOW ( _0x103 + ( 0 ) )
0007fa e0b6     +LDI R27 , HIGH ( _0x103 + ( 0 ) )
                 	__POINTW2MN _0x103,0
0007fb 940e 0ce1 	CALL _glcd_outtext
                 ; 0000 032A while(!wifi_connect());
                 _0x104:
0007fd de76      	RCALL _wifi_connect
0007fe 30e0      	CPI  R30,0
0007ff f3e9      	BREQ _0x104
                 ; 0000 032B 
                 ; 0000 032C RF_Init_RX();
000800 dc90      	RCALL _RF_Init_RX
                 ; 0000 032D config();
000801 dc2b      	RCALL _config
                 ; 0000 032E RF_Config_RX();
000802 dcf2      	RCALL _RF_Config_RX
                 ; 0000 032F count = 1;
000803 940e 1101 	CALL SUBOPT_0xE
                 ; 0000 0330 
                 ; 0000 0331 while (1){
                 _0x107:
                 ; 0000 0332     RF_Mode_RX();
000805 dce9      	RCALL _RF_Mode_RX
                 ; 0000 0333 
                 ; 0000 0334     if(IRQ == 0){
000806 99c8      	SBIC 0x19,0
000807 c061      	RJMP _0x10A
                 ; 0000 0335         RF_Read_RX_3();
000808 dd02      	RCALL _RF_Read_RX_3
                 ; 0000 0336 
                 ; 0000 0337 
                 ; 0000 0338 
                 ; 0000 0339         if(station_receive.flag == count){
000809 91e0 095c 	LDS  R30,_count
00080b 91f0 095d 	LDS  R31,_count+1
00080d 91a0 0935 	LDS  R26,_station_receive
00080f 91b0 0936 	LDS  R27,_station_receive+1
000811 17ea      	CP   R30,R26
000812 07fb      	CPC  R31,R27
000813 f009      	BREQ PC+2
000814 c054      	RJMP _0x10B
                 ; 0000 033A             print_border();
000815 dd23      	RCALL _print_border
                 ; 0000 033B             glcd_moveto(40, 3);
000816 e2e8      	LDI  R30,LOW(40)
000817 93ea      	ST   -Y,R30
000818 e0a3      	LDI  R26,LOW(3)
000819 940e 0d0d 	CALL _glcd_moveto
                 ; 0000 033C             itoa(station_receive.flag, buff);
00081b 91e0 0935 	LDS  R30,_station_receive
00081d 91f0 0936 	LDS  R31,_station_receive+1
00081f 93fa      	ST   -Y,R31
000820 93ea      	ST   -Y,R30
000821 e4aa      	LDI  R26,LOW(_buff)
000822 e0b6      	LDI  R27,HIGH(_buff)
000823 940e 0fb2 	CALL _itoa
                 ; 0000 033D             glcd_outtext(buff);
000825 940e 110f 	CALL SUBOPT_0x10
                 ; 0000 033E             glcd_moveto(46, 18);
000827 e2ee      	LDI  R30,LOW(46)
000828 93ea      	ST   -Y,R30
000829 e1a2      	LDI  R26,LOW(18)
00082a 940e 1150 	CALL SUBOPT_0x1C
                 ; 0000 033F             sprintf(buff, "%d ", station_receive.temp);
                +
00082c ebeb     +LDI R30 , LOW ( 2 * _0x0 + ( 263 ) )
00082d e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 263 ) )
                 	__POINTW1FN _0x0,263
00082e 93fa      	ST   -Y,R31
00082f 93ea      	ST   -Y,R30
                +
000830 91e0 093b+LDS R30 , _station_receive + ( 6 )
000832 91f0 093c+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
000834 940e 1153 	CALL SUBOPT_0x1D
                 ; 0000 0340             glcd_outtext(buff);
                 ; 0000 0341             glcd_moveto(46, 28);
000836 e2ee      	LDI  R30,LOW(46)
000837 93ea      	ST   -Y,R30
000838 e1ac      	LDI  R26,LOW(28)
000839 940e 1150 	CALL SUBOPT_0x1C
                 ; 0000 0342             sprintf(buff, "%d ", station_receive.humi);
                +
00083b ebeb     +LDI R30 , LOW ( 2 * _0x0 + ( 263 ) )
00083c e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 263 ) )
                 	__POINTW1FN _0x0,263
00083d 93fa      	ST   -Y,R31
00083e 93ea      	ST   -Y,R30
                +
00083f 91e0 0939+LDS R30 , _station_receive + ( 4 )
000841 91f0 093a+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
000843 940e 1153 	CALL SUBOPT_0x1D
                 ; 0000 0343             glcd_outtext(buff);
                 ; 0000 0344             glcd_moveto(46, 37);
000845 e2ee      	LDI  R30,LOW(46)
000846 93ea      	ST   -Y,R30
000847 e2a5      	LDI  R26,LOW(37)
000848 940e 1150 	CALL SUBOPT_0x1C
                 ; 0000 0345             sprintf(buff, "%d  ", station_receive.water);
                +
00084a ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 267 ) )
00084b e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 267 ) )
                 	__POINTW1FN _0x0,267
00084c 93fa      	ST   -Y,R31
00084d 93ea      	ST   -Y,R30
                +
00084e 91e0 093f+LDS R30 , _station_receive + ( 10 )
000850 91f0 0940+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
000852 940e 1153 	CALL SUBOPT_0x1D
                 ; 0000 0346             glcd_outtext(buff);
                 ; 0000 0347             read_and_send("6ZF1YB8AXISBSA2P");
                +
000854 e1ac     +LDI R26 , LOW ( _0x103 + ( 5 ) )
000855 e0b6     +LDI R27 , HIGH ( _0x103 + ( 5 ) )
                 	__POINTW2MN _0x103,5
000856 de4d      	RCALL _read_and_send
                 ; 0000 0348             delay_ms(100);
000857 e6a4      	LDI  R26,LOW(100)
000858 e0b0      	LDI  R27,0
000859 940e 1261 	CALL _delay_ms
                 ; 0000 0349             glcd_clear();
00085b d114      	RCALL _glcd_clear
                 ; 0000 034A 			count++;
00085c 940e 10f9 	CALL SUBOPT_0xD
                 ; 0000 034B 			if(count == 5)
00085e 91a0 095c 	LDS  R26,_count
000860 91b0 095d 	LDS  R27,_count+1
000862 9715      	SBIW R26,5
000863 f411      	BRNE _0x10C
                 ; 0000 034C                 count = 1;
000864 940e 1101 	CALL SUBOPT_0xE
                 ; 0000 034D             flag = true;
                 _0x10C:
000866 e0e1      	LDI  R30,LOW(1)
000867 93e0 0962 	STS  _flag,R30
                 ; 0000 034E 
                 ; 0000 034F         }
                 ; 0000 0350     }
                 _0x10B:
                 ; 0000 0351 }
                 _0x10A:
000869 cf9b      	RJMP _0x107
                 ; 0000 0352 
                 ; 0000 0353 }
                 _0x10D:
00086a cfff      	RJMP _0x10D
                 ; .FEND
                 
                 	.DSEG
                 _0x103:
000617           	.BYTE 0x16
                 ;
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
00086b 93aa      	ST   -Y,R26
00086c 81ea      	LDD  R30,Y+2
00086d 70e3      	ANDI R30,LOW(0x3)
00086e 83ea      	STD  Y+2,R30
00086f 81e9      	LDD  R30,Y+1
000870 30e0      	CPI  R30,0
000871 f019      	BREQ _0x2000003
000872 81ea      	LDD  R30,Y+2
000873 61e0      	ORI  R30,0x10
000874 83ea      	STD  Y+2,R30
                 _0x2000003:
000875 81e8      	LD   R30,Y
000876 30e0      	CPI  R30,0
000877 f019      	BREQ _0x2000004
000878 81ea      	LDD  R30,Y+2
000879 68e0      	ORI  R30,0x80
00087a 83ea      	STD  Y+2,R30
                 _0x2000004:
00087b 940e 1215 	CALL _i2c_start
00087d eda0      	LDI  R26,LOW(208)
00087e 940e 1249 	CALL _i2c_write
000880 e0a7      	LDI  R26,LOW(7)
000881 940e 1249 	CALL _i2c_write
000883 81aa      	LDD  R26,Y+2
000884 940e 1249 	CALL _i2c_write
000886 940e 1224 	CALL _i2c_stop
000888 c037      	RJMP _0x216000F
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G101:
                 ; .FSTART _pcd8544_delay_G101
000889 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G101:
                 ; .FSTART _pcd8544_wrbus_G101
00088a 93aa      	ST   -Y,R26
00088b 931a      	ST   -Y,R17
00088c 98ad      	CBI  0x15,5
00088d e018      	LDI  R17,LOW(8)
                 _0x2020004:
00088e dffa      	RCALL _pcd8544_delay_G101
00088f 81e9      	LDD  R30,Y+1
000890 78e0      	ANDI R30,LOW(0x80)
000891 f011      	BREQ _0x2020006
000892 9aaf      	SBI  0x15,7
000893 c001      	RJMP _0x2020007
                 _0x2020006:
000894 98af      	CBI  0x15,7
                 _0x2020007:
000895 81e9      	LDD  R30,Y+1
000896 0fee      	LSL  R30
000897 83e9      	STD  Y+1,R30
000898 dff0      	RCALL _pcd8544_delay_G101
000899 9adf      	SBI  0x1B,7
00089a dfee      	RCALL _pcd8544_delay_G101
00089b 98df      	CBI  0x1B,7
00089c 5011      	SUBI R17,LOW(1)
00089d f781      	BRNE _0x2020004
00089e 9aad      	SBI  0x15,5
00089f 8118      	LDD  R17,Y+0
0008a0 c03a      	RJMP _0x216000E
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
0008a1 93aa      	ST   -Y,R26
0008a2 98ae      	CBI  0x15,6
0008a3 81a8      	LD   R26,Y
0008a4 dfe5      	RCALL _pcd8544_wrbus_G101
0008a5 c0c8      	RJMP _0x216000D
                 ; .FEND
                 _pcd8544_wrdata_G101:
                 ; .FSTART _pcd8544_wrdata_G101
0008a6 93aa      	ST   -Y,R26
0008a7 9aae      	SBI  0x15,6
0008a8 81a8      	LD   R26,Y
0008a9 dfe0      	RCALL _pcd8544_wrbus_G101
0008aa c0c3      	RJMP _0x216000D
                 ; .FEND
                 _pcd8544_setaddr_G101:
                 ; .FSTART _pcd8544_setaddr_G101
0008ab 93aa      	ST   -Y,R26
0008ac 931a      	ST   -Y,R17
0008ad 81e9      	LDD  R30,Y+1
0008ae 95e6      	LSR  R30
0008af 95e6      	LSR  R30
0008b0 95e6      	LSR  R30
0008b1 2f1e      	MOV  R17,R30
0008b2 e5e4      	LDI  R30,LOW(84)
0008b3 9fe1      	MUL  R30,R17
0008b4 01f0      	MOVW R30,R0
0008b5 01df      	MOVW R26,R30
0008b6 81ea      	LDD  R30,Y+2
0008b7 e0f0      	LDI  R31,0
0008b8 0fea      	ADD  R30,R26
0008b9 1ffb      	ADC  R31,R27
0008ba 93e0 0963 	STS  _gfx_addr_G101,R30
0008bc 93f0 0964 	STS  _gfx_addr_G101+1,R31
0008be 2fe1      	MOV  R30,R17
0008bf 8118      	LDD  R17,Y+0
                 _0x216000F:
0008c0 9623      	ADIW R28,3
0008c1 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
0008c2 93aa      	ST   -Y,R26
0008c3 81e9      	LDD  R30,Y+1
0008c4 68e0      	ORI  R30,0x80
0008c5 2fae      	MOV  R26,R30
0008c6 dfda      	RCALL _pcd8544_wrcmd
0008c7 81e9      	LDD  R30,Y+1
0008c8 93ea      	ST   -Y,R30
0008c9 81a9      	LDD  R26,Y+1
0008ca dfe0      	RCALL _pcd8544_setaddr_G101
0008cb 64e0      	ORI  R30,0x40
0008cc 2fae      	MOV  R26,R30
0008cd dfd3      	RCALL _pcd8544_wrcmd
0008ce c00c      	RJMP _0x216000E
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
0008cf 93aa      	ST   -Y,R26
0008d0 81e9      	LDD  R30,Y+1
0008d1 93ea      	ST   -Y,R30
0008d2 81a9      	LDD  R26,Y+1
0008d3 dfee      	RCALL _pcd8544_gotoxy
0008d4 91e0 0963 	LDS  R30,_gfx_addr_G101
0008d6 91f0 0964 	LDS  R31,_gfx_addr_G101+1
0008d8 59eb      	SUBI R30,LOW(-_gfx_buffer_G101)
0008d9 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G101)
0008da 81e0      	LD   R30,Z
                 _0x216000E:
0008db 9622      	ADIW R28,2
0008dc 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
0008dd 93aa      	ST   -Y,R26
0008de 940e 115c 	CALL SUBOPT_0x1E
0008e0 9731      	SBIW R30,1
0008e1 59eb      	SUBI R30,LOW(-_gfx_buffer_G101)
0008e2 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G101)
0008e3 81a8      	LD   R26,Y
0008e4 83a0      	STD  Z+0,R26
0008e5 dfc0      	RCALL _pcd8544_wrdata_G101
0008e6 c087      	RJMP _0x216000D
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0008e7 93ba      	ST   -Y,R27
0008e8 93aa      	ST   -Y,R26
0008e9 940e 12ca 	CALL __SAVELOCR4
0008eb 9aa5      	SBI  0x14,5
0008ec 9aad      	SBI  0x15,5
0008ed 9ad7      	SBI  0x1A,7
0008ee 98df      	CBI  0x1B,7
0008ef 9aa7      	SBI  0x14,7
0008f0 9aa6      	SBI  0x14,6
0008f1 9aa4      	SBI  0x14,4
0008f2 98ac      	CBI  0x15,4
0008f3 e0aa      	LDI  R26,LOW(10)
0008f4 e0b0      	LDI  R27,0
0008f5 940e 1261 	CALL _delay_ms
0008f7 9aac      	SBI  0x15,4
0008f8 81ec      	LDD  R30,Y+4
0008f9 81fd      	LDD  R31,Y+4+1
0008fa 9730      	SBIW R30,0
0008fb f121      	BREQ _0x2020008
0008fc 81e6      	LDD  R30,Z+6
0008fd 70e3      	ANDI R30,LOW(0x3)
0008fe 2f1e      	MOV  R17,R30
0008ff 81ec      	LDD  R30,Y+4
000900 81fd      	LDD  R31,Y+4+1
000901 81e6      	LDD  R30,Z+6
000902 95e6      	LSR  R30
000903 95e6      	LSR  R30
000904 70e7      	ANDI R30,LOW(0x7)
000905 2f0e      	MOV  R16,R30
000906 81ec      	LDD  R30,Y+4
000907 81fd      	LDD  R31,Y+4+1
000908 81e7      	LDD  R30,Z+7
000909 77ef      	ANDI R30,0x7F
00090a 2f3e      	MOV  R19,R30
00090b 81ac      	LDD  R26,Y+4
00090c 81bd      	LDD  R27,Y+4+1
00090d 940e 1290 	CALL __GETW1P
                +
00090f 93e0 0631+STS _glcd_state + ( 4 ) , R30
000911 93f0 0632+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000913 9612      	ADIW R26,2
000914 940e 1290 	CALL __GETW1P
                +
000916 93e0 0646+STS _glcd_state + ( 25 ) , R30
000918 93f0 0647+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
00091a 81ac      	LDD  R26,Y+4
00091b 81bd      	LDD  R27,Y+4+1
00091c 9614      	ADIW R26,4
00091d 940e 1290 	CALL __GETW1P
00091f c00d      	RJMP _0x20200A0
                 _0x2020008:
000920 e010      	LDI  R17,LOW(0)
000921 e003      	LDI  R16,LOW(3)
000922 e332      	LDI  R19,LOW(50)
000923 e0e0      	LDI  R30,LOW(0)
000924 e0f0      	LDI  R31,HIGH(0)
                +
000925 93e0 0631+STS _glcd_state + ( 4 ) , R30
000927 93f0 0632+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
000929 93e0 0646+STS _glcd_state + ( 25 ) , R30
00092b 93f0 0647+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20200A0:
                +
00092d 93e0 0648+STS _glcd_state + ( 27 ) , R30
00092f 93f0 0649+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000931 e2a1      	LDI  R26,LOW(33)
000932 df6e      	RCALL _pcd8544_wrcmd
000933 2fe1      	MOV  R30,R17
000934 60e4      	ORI  R30,4
000935 2fae      	MOV  R26,R30
000936 df6a      	RCALL _pcd8544_wrcmd
000937 2fe0      	MOV  R30,R16
000938 61e0      	ORI  R30,0x10
000939 2fae      	MOV  R26,R30
00093a df66      	RCALL _pcd8544_wrcmd
00093b 2fe3      	MOV  R30,R19
00093c 68e0      	ORI  R30,0x80
00093d 2fae      	MOV  R26,R30
00093e df62      	RCALL _pcd8544_wrcmd
00093f e2a0      	LDI  R26,LOW(32)
000940 df60      	RCALL _pcd8544_wrcmd
000941 e0a1      	LDI  R26,LOW(1)
000942 d022      	RCALL _glcd_display
000943 e0e1      	LDI  R30,LOW(1)
000944 93e0 062d 	STS  _glcd_state,R30
000946 e0e0      	LDI  R30,LOW(0)
                +
000947 93e0 062e+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000949 e0e1      	LDI  R30,LOW(1)
                +
00094a 93e0 0633+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
00094c 93e0 0634+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
00094e 93e0 0635+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000950 efef      	LDI  R30,LOW(255)
                +
000951 93e0 0636+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
000953 e0e1      	LDI  R30,LOW(1)
                +
000954 93e0 063d+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000956 e3ee     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000957 e0f6     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000958 93fa      	ST   -Y,R31
000959 93ea      	ST   -Y,R30
00095a efef      	LDI  R30,LOW(255)
00095b 93ea      	ST   -Y,R30
00095c e0a8      	LDI  R26,LOW(8)
00095d e0b0      	LDI  R27,0
00095e 940e 0fe0 	CALL _memset
000960 d00f      	RCALL _glcd_clear
000961 e0e1      	LDI  R30,LOW(1)
000962 940e 12d1 	CALL __LOADLOCR4
000964 c083      	RJMP _0x216000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
000965 93aa      	ST   -Y,R26
000966 81e8      	LD   R30,Y
000967 30e0      	CPI  R30,0
000968 f011      	BREQ _0x202000A
000969 e0ec      	LDI  R30,LOW(12)
00096a c001      	RJMP _0x202000B
                 _0x202000A:
00096b e0e8      	LDI  R30,LOW(8)
                 _0x202000B:
00096c 2fae      	MOV  R26,R30
00096d df33      	RCALL _pcd8544_wrcmd
                 _0x216000D:
00096e 9621      	ADIW R28,1
00096f 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000970 940e 12ca 	CALL __SAVELOCR4
000972 e030      	LDI  R19,0
                +
000973 91e0 062e+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000975 30e0      	CPI  R30,0
000976 f009      	BREQ _0x202000D
000977 ef3f      	LDI  R19,LOW(255)
                 _0x202000D:
000978 e0e0      	LDI  R30,LOW(0)
000979 93ea      	ST   -Y,R30
00097a e0a0      	LDI  R26,LOW(0)
00097b df46      	RCALL _pcd8544_gotoxy
                +
00097c ef08     +LDI R16 , LOW ( 504 )
00097d e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x202000E:
00097e 01f8      	MOVW R30,R16
                +
00097f 5001     +SUBI R16 , LOW ( 1 )
000980 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000981 9730      	SBIW R30,0
000982 f019      	BREQ _0x2020010
000983 2fa3      	MOV  R26,R19
000984 df58      	RCALL _pcd8544_wrbyte
000985 cff8      	RJMP _0x202000E
                 _0x2020010:
000986 e0e0      	LDI  R30,LOW(0)
000987 93ea      	ST   -Y,R30
000988 e0a0      	LDI  R26,LOW(0)
000989 d383      	RCALL _glcd_moveto
00098a 940e 12d1 	CALL __LOADLOCR4
                 _0x216000C:
00098c 9624      	ADIW R28,4
00098d 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
00098e 93aa      	ST   -Y,R26
00098f 931a      	ST   -Y,R17
000990 930a      	ST   -Y,R16
000991 81ac      	LDD  R26,Y+4
000992 35a4      	CPI  R26,LOW(0x54)
000993 f418      	BRSH _0x2020012
000994 81ab      	LDD  R26,Y+3
000995 33a0      	CPI  R26,LOW(0x30)
000996 f008      	BRLO _0x2020011
                 _0x2020012:
000997 c015      	RJMP _0x216000B
                 _0x2020011:
000998 81ec      	LDD  R30,Y+4
000999 93ea      	ST   -Y,R30
00099a 81ac      	LDD  R26,Y+4
00099b df33      	RCALL _pcd8544_rdbyte
00099c 2f1e      	MOV  R17,R30
00099d 81eb      	LDD  R30,Y+3
00099e 70e7      	ANDI R30,LOW(0x7)
00099f e0a1      	LDI  R26,LOW(1)
0009a0 940e 1273 	CALL __LSLB12
0009a2 2f0e      	MOV  R16,R30
0009a3 81ea      	LDD  R30,Y+2
0009a4 30e0      	CPI  R30,0
0009a5 f011      	BREQ _0x2020014
0009a6 2b10      	OR   R17,R16
0009a7 c003      	RJMP _0x2020015
                 _0x2020014:
0009a8 2fe0      	MOV  R30,R16
0009a9 95e0      	COM  R30
0009aa 231e      	AND  R17,R30
                 _0x2020015:
0009ab 2fa1      	MOV  R26,R17
0009ac df30      	RCALL _pcd8544_wrbyte
                 _0x216000B:
0009ad 8119      	LDD  R17,Y+1
0009ae 8108      	LDD  R16,Y+0
0009af 9625      	ADIW R28,5
0009b0 9508      	RET
                 ; .FEND
                 _pcd8544_wrmasked_G101:
                 ; .FSTART _pcd8544_wrmasked_G101
0009b1 93aa      	ST   -Y,R26
0009b2 931a      	ST   -Y,R17
0009b3 81ed      	LDD  R30,Y+5
0009b4 93ea      	ST   -Y,R30
0009b5 81ad      	LDD  R26,Y+5
0009b6 df18      	RCALL _pcd8544_rdbyte
0009b7 2f1e      	MOV  R17,R30
0009b8 81e9      	LDD  R30,Y+1
0009b9 30e7      	CPI  R30,LOW(0x7)
0009ba f011      	BREQ _0x2020020
0009bb 30e8      	CPI  R30,LOW(0x8)
0009bc f439      	BRNE _0x2020021
                 _0x2020020:
0009bd 81eb      	LDD  R30,Y+3
0009be 93ea      	ST   -Y,R30
0009bf 81aa      	LDD  R26,Y+2
0009c0 940e 103b 	CALL _glcd_mappixcolor1bit
0009c2 83eb      	STD  Y+3,R30
0009c3 c008      	RJMP _0x2020022
                 _0x2020021:
0009c4 30e3      	CPI  R30,LOW(0x3)
0009c5 f421      	BRNE _0x2020024
0009c6 81eb      	LDD  R30,Y+3
0009c7 95e0      	COM  R30
0009c8 83eb      	STD  Y+3,R30
0009c9 c002      	RJMP _0x2020025
                 _0x2020024:
0009ca 30e0      	CPI  R30,0
0009cb f421      	BRNE _0x2020026
                 _0x2020025:
                 _0x2020022:
0009cc 81ea      	LDD  R30,Y+2
0009cd 95e0      	COM  R30
0009ce 231e      	AND  R17,R30
0009cf c002      	RJMP _0x2020027
                 _0x2020026:
0009d0 30e2      	CPI  R30,LOW(0x2)
0009d1 f429      	BRNE _0x2020028
                 _0x2020027:
0009d2 81ea      	LDD  R30,Y+2
0009d3 81ab      	LDD  R26,Y+3
0009d4 23ea      	AND  R30,R26
0009d5 2b1e      	OR   R17,R30
0009d6 c00e      	RJMP _0x202001E
                 _0x2020028:
0009d7 30e1      	CPI  R30,LOW(0x1)
0009d8 f429      	BRNE _0x2020029
0009d9 81ea      	LDD  R30,Y+2
0009da 81ab      	LDD  R26,Y+3
0009db 23ea      	AND  R30,R26
0009dc 271e      	EOR  R17,R30
0009dd c007      	RJMP _0x202001E
                 _0x2020029:
0009de 30e4      	CPI  R30,LOW(0x4)
0009df f429      	BRNE _0x202001E
0009e0 81ea      	LDD  R30,Y+2
0009e1 95e0      	COM  R30
0009e2 81ab      	LDD  R26,Y+3
0009e3 2bea      	OR   R30,R26
0009e4 231e      	AND  R17,R30
                 _0x202001E:
0009e5 2fa1      	MOV  R26,R17
0009e6 def6      	RCALL _pcd8544_wrbyte
0009e7 8118      	LDD  R17,Y+0
                 _0x216000A:
0009e8 9626      	ADIW R28,6
0009e9 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0009ea 93aa      	ST   -Y,R26
0009eb 9723      	SBIW R28,3
0009ec 940e 12c8 	CALL __SAVELOCR6
0009ee 89a8      	LDD  R26,Y+16
0009ef 35a4      	CPI  R26,LOW(0x54)
0009f0 f448      	BRSH _0x202002C
0009f1 85af      	LDD  R26,Y+15
0009f2 33a0      	CPI  R26,LOW(0x30)
0009f3 f430      	BRSH _0x202002C
0009f4 85ae      	LDD  R26,Y+14
0009f5 30a0      	CPI  R26,LOW(0x0)
0009f6 f019      	BREQ _0x202002C
0009f7 85ad      	LDD  R26,Y+13
0009f8 30a0      	CPI  R26,LOW(0x0)
0009f9 f409      	BRNE _0x202002B
                 _0x202002C:
0009fa c1d5      	RJMP _0x2160009
                 _0x202002B:
0009fb 85ee      	LDD  R30,Y+14
0009fc 87e8      	STD  Y+8,R30
0009fd 89a8      	LDD  R26,Y+16
0009fe 27bb      	CLR  R27
0009ff 85ee      	LDD  R30,Y+14
000a00 e0f0      	LDI  R31,0
000a01 0fae      	ADD  R26,R30
000a02 1fbf      	ADC  R27,R31
000a03 35a5      	CPI  R26,LOW(0x55)
000a04 e0e0      	LDI  R30,HIGH(0x55)
000a05 07be      	CPC  R27,R30
000a06 f020      	BRLO _0x202002E
000a07 89a8      	LDD  R26,Y+16
000a08 e5e4      	LDI  R30,LOW(84)
000a09 1bea      	SUB  R30,R26
000a0a 87ee      	STD  Y+14,R30
                 _0x202002E:
000a0b 852d      	LDD  R18,Y+13
000a0c 85af      	LDD  R26,Y+15
000a0d 27bb      	CLR  R27
000a0e 85ed      	LDD  R30,Y+13
000a0f e0f0      	LDI  R31,0
000a10 0fae      	ADD  R26,R30
000a11 1fbf      	ADC  R27,R31
000a12 97d1      	SBIW R26,49
000a13 f020      	BRLO _0x202002F
000a14 85af      	LDD  R26,Y+15
000a15 e3e0      	LDI  R30,LOW(48)
000a16 1bea      	SUB  R30,R26
000a17 87ed      	STD  Y+13,R30
                 _0x202002F:
000a18 85a9      	LDD  R26,Y+9
000a19 30a6      	CPI  R26,LOW(0x6)
000a1a f009      	BREQ PC+2
000a1b c05b      	RJMP _0x2020030
000a1c 85ec      	LDD  R30,Y+12
000a1d 30e1      	CPI  R30,LOW(0x1)
000a1e f409      	BRNE _0x2020034
000a1f c1b0      	RJMP _0x2160009
                 _0x2020034:
000a20 30e3      	CPI  R30,LOW(0x3)
000a21 f439      	BRNE _0x2020037
                +
000a22 91e0 0648+LDS R30 , _glcd_state + ( 27 )
000a24 91f0 0649+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000a26 9730      	SBIW R30,0
000a27 f409      	BRNE _0x2020036
000a28 c1a7      	RJMP _0x2160009
                 _0x2020036:
                 _0x2020037:
000a29 8508      	LDD  R16,Y+8
000a2a 85ed      	LDD  R30,Y+13
000a2b 95e6      	LSR  R30
000a2c 95e6      	LSR  R30
000a2d 95e6      	LSR  R30
000a2e 2f3e      	MOV  R19,R30
000a2f 2fe2      	MOV  R30,R18
000a30 70e7      	ANDI R30,LOW(0x7)
000a31 f419      	BRNE _0x2020039
000a32 85ad      	LDD  R26,Y+13
000a33 172a      	CP   R18,R26
000a34 f0e9      	BREQ _0x2020038
                 _0x2020039:
000a35 2fa0      	MOV  R26,R16
000a36 27bb      	CLR  R27
000a37 2fe3      	MOV  R30,R19
000a38 e0f0      	LDI  R31,0
000a39 940e 1288 	CALL __MULW12U
000a3b 85aa      	LDD  R26,Y+10
000a3c 85bb      	LDD  R27,Y+10+1
000a3d 940e 115f 	CALL SUBOPT_0x1F
000a3f 9526      	LSR  R18
000a40 9526      	LSR  R18
000a41 9526      	LSR  R18
000a42 2f53      	MOV  R21,R19
                 _0x202003B:
000a43 935f      	PUSH R21
000a44 5f5f      	SUBI R21,-1
000a45 2fe2      	MOV  R30,R18
000a46 91af      	POP  R26
000a47 17ea      	CP   R30,R26
000a48 f048      	BRLO _0x202003D
000a49 2f10      	MOV  R17,R16
                 _0x202003E:
000a4a 2fe1      	MOV  R30,R17
000a4b 5011      	SUBI R17,1
000a4c 30e0      	CPI  R30,0
000a4d f019      	BREQ _0x2020040
000a4e 940e 1164 	CALL SUBOPT_0x20
000a50 cff9      	RJMP _0x202003E
                 _0x2020040:
000a51 cff1      	RJMP _0x202003B
                 _0x202003D:
                 _0x2020038:
000a52 85ae      	LDD  R26,Y+14
000a53 170a      	CP   R16,R26
000a54 f111      	BREQ _0x2020041
000a55 85ee      	LDD  R30,Y+14
000a56 85aa      	LDD  R26,Y+10
000a57 85bb      	LDD  R27,Y+10+1
000a58 e0f0      	LDI  R31,0
000a59 940e 115f 	CALL SUBOPT_0x1F
000a5b 85ed      	LDD  R30,Y+13
000a5c 70e7      	ANDI R30,LOW(0x7)
000a5d f009      	BREQ _0x2020042
000a5e 5f3f      	SUBI R19,-LOW(1)
                 _0x2020042:
000a5f e020      	LDI  R18,LOW(0)
                 _0x2020043:
000a60 932f      	PUSH R18
000a61 5f2f      	SUBI R18,-1
000a62 2fe3      	MOV  R30,R19
000a63 91af      	POP  R26
000a64 17ae      	CP   R26,R30
000a65 f488      	BRSH _0x2020045
000a66 851e      	LDD  R17,Y+14
                 _0x2020046:
000a67 931f      	PUSH R17
000a68 5f1f      	SUBI R17,-1
000a69 2fe0      	MOV  R30,R16
000a6a 91af      	POP  R26
000a6b 17ae      	CP   R26,R30
000a6c f418      	BRSH _0x2020048
000a6d 940e 1164 	CALL SUBOPT_0x20
000a6f cff7      	RJMP _0x2020046
                 _0x2020048:
000a70 85ee      	LDD  R30,Y+14
000a71 81ae      	LDD  R26,Y+6
000a72 81bf      	LDD  R27,Y+6+1
000a73 e0f0      	LDI  R31,0
000a74 940e 115f 	CALL SUBOPT_0x1F
000a76 cfe9      	RJMP _0x2020043
                 _0x2020045:
                 _0x2020041:
                 _0x2020030:
000a77 85ef      	LDD  R30,Y+15
000a78 70e7      	ANDI R30,LOW(0x7)
000a79 2f3e      	MOV  R19,R30
                 _0x2020049:
000a7a 85ed      	LDD  R30,Y+13
000a7b 30e0      	CPI  R30,0
000a7c f409      	BRNE PC+2
000a7d c152      	RJMP _0x202004B
000a7e 85ea      	LDD  R30,Y+10
000a7f 85fb      	LDD  R31,Y+10+1
000a80 83ee      	STD  Y+6,R30
000a81 83ff      	STD  Y+6+1,R31
000a82 e010      	LDI  R17,LOW(0)
000a83 8908      	LDD  R16,Y+16
000a84 3030      	CPI  R19,0
000a85 f009      	BREQ PC+2
000a86 c066      	RJMP _0x202004C
000a87 85ad      	LDD  R26,Y+13
000a88 30a8      	CPI  R26,LOW(0x8)
000a89 f408      	BRSH PC+2
000a8a c05d      	RJMP _0x202004D
000a8b 85e9      	LDD  R30,Y+9
000a8c 30e0      	CPI  R30,0
000a8d f011      	BREQ _0x2020052
000a8e 30e3      	CPI  R30,LOW(0x3)
000a8f f409      	BRNE _0x2020053
                 _0x2020052:
000a90 c002      	RJMP _0x2020054
                 _0x2020053:
000a91 30e7      	CPI  R30,LOW(0x7)
000a92 f409      	BRNE _0x2020055
                 _0x2020054:
000a93 c002      	RJMP _0x2020056
                 _0x2020055:
000a94 30e8      	CPI  R30,LOW(0x8)
000a95 f409      	BRNE _0x2020057
                 _0x2020056:
000a96 c002      	RJMP _0x2020058
                 _0x2020057:
000a97 30e9      	CPI  R30,LOW(0x9)
000a98 f409      	BRNE _0x2020059
                 _0x2020058:
000a99 c002      	RJMP _0x202005A
                 _0x2020059:
000a9a 30ea      	CPI  R30,LOW(0xA)
000a9b f421      	BRNE _0x202005B
                 _0x202005A:
000a9c 930a      	ST   -Y,R16
000a9d 89a8      	LDD  R26,Y+16
000a9e de23      	RCALL _pcd8544_gotoxy
000a9f c004      	RJMP _0x2020050
                 _0x202005B:
000aa0 30e6      	CPI  R30,LOW(0x6)
000aa1 f411      	BRNE _0x2020050
000aa2 940e 1171 	CALL SUBOPT_0x21
                 _0x2020050:
                 _0x202005D:
000aa4 931f      	PUSH R17
000aa5 5f1f      	SUBI R17,-1
000aa6 85ee      	LDD  R30,Y+14
000aa7 91af      	POP  R26
000aa8 17ae      	CP   R26,R30
000aa9 f5b8      	BRSH _0x202005F
000aaa 85a9      	LDD  R26,Y+9
000aab 30a6      	CPI  R26,LOW(0x6)
000aac f469      	BRNE _0x2020060
000aad 940e 1175 	CALL SUBOPT_0x22
000aaf 93fa      	ST   -Y,R31
000ab0 93ea      	ST   -Y,R30
000ab1 940e 115c 	CALL SUBOPT_0x1E
000ab3 9731      	SBIW R30,1
000ab4 59eb      	SUBI R30,LOW(-_gfx_buffer_G101)
000ab5 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G101)
000ab6 81a0      	LD   R26,Z
000ab7 940e 1082 	CALL _glcd_writemem
000ab9 c026      	RJMP _0x2020061
                 _0x2020060:
000aba 85e9      	LDD  R30,Y+9
000abb 30e9      	CPI  R30,LOW(0x9)
000abc f411      	BRNE _0x2020065
000abd e050      	LDI  R21,LOW(0)
000abe c00e      	RJMP _0x2020066
                 _0x2020065:
000abf 30ea      	CPI  R30,LOW(0xA)
000ac0 f411      	BRNE _0x2020064
000ac1 ef5f      	LDI  R21,LOW(255)
000ac2 c00a      	RJMP _0x2020066
                 _0x2020064:
000ac3 940e 1175 	CALL SUBOPT_0x22
000ac5 940e 117e 	CALL SUBOPT_0x23
000ac7 2f5e      	MOV  R21,R30
000ac8 85e9      	LDD  R30,Y+9
000ac9 30e7      	CPI  R30,LOW(0x7)
000aca f011      	BREQ _0x202006D
000acb 30e8      	CPI  R30,LOW(0x8)
000acc f421      	BRNE _0x202006E
                 _0x202006D:
                 _0x2020066:
000acd 940e 1184 	CALL SUBOPT_0x24
000acf 2f5e      	MOV  R21,R30
000ad0 c006      	RJMP _0x202006F
                 _0x202006E:
000ad1 30e3      	CPI  R30,LOW(0x3)
000ad2 f411      	BRNE _0x2020071
000ad3 9550      	COM  R21
000ad4 c002      	RJMP _0x2020072
                 _0x2020071:
000ad5 30e0      	CPI  R30,0
000ad6 f419      	BRNE _0x2020074
                 _0x2020072:
                 _0x202006F:
000ad7 2fa5      	MOV  R26,R21
000ad8 ddcd      	RCALL _pcd8544_wrdata_G101
000ad9 c006      	RJMP _0x202006B
                 _0x2020074:
000ada 940e 1188 	CALL SUBOPT_0x25
000adc efef      	LDI  R30,LOW(255)
000add 93ea      	ST   -Y,R30
000ade 85ad      	LDD  R26,Y+13
000adf ded1      	RCALL _pcd8544_wrmasked_G101
                 _0x202006B:
                 _0x2020061:
000ae0 cfc3      	RJMP _0x202005D
                 _0x202005F:
000ae1 85ef      	LDD  R30,Y+15
000ae2 5fe8      	SUBI R30,-LOW(8)
000ae3 87ef      	STD  Y+15,R30
000ae4 85ed      	LDD  R30,Y+13
000ae5 50e8      	SUBI R30,LOW(8)
000ae6 87ed      	STD  Y+13,R30
000ae7 c0df      	RJMP _0x2020075
                 _0x202004D:
000ae8 855d      	LDD  R21,Y+13
000ae9 e020      	LDI  R18,LOW(0)
000aea e0e0      	LDI  R30,LOW(0)
000aeb 87ed      	STD  Y+13,R30
000aec c081      	RJMP _0x2020076
                 _0x202004C:
000aed 2fe3      	MOV  R30,R19
000aee 85ad      	LDD  R26,Y+13
000aef 0fae      	ADD  R26,R30
000af0 30a9      	CPI  R26,LOW(0x9)
000af1 f420      	BRSH _0x2020077
000af2 852d      	LDD  R18,Y+13
000af3 e0e0      	LDI  R30,LOW(0)
000af4 87ed      	STD  Y+13,R30
000af5 c003      	RJMP _0x2020078
                 _0x2020077:
000af6 e0e8      	LDI  R30,LOW(8)
000af7 1be3      	SUB  R30,R19
000af8 2f2e      	MOV  R18,R30
                 _0x2020078:
000af9 933a      	ST   -Y,R19
000afa 2fa2      	MOV  R26,R18
000afb 940e 1030 	CALL _glcd_getmask
000afd 2f4e      	MOV  R20,R30
000afe 85e9      	LDD  R30,Y+9
000aff 30e6      	CPI  R30,LOW(0x6)
000b00 f529      	BRNE _0x202007C
000b01 940e 1171 	CALL SUBOPT_0x21
                 _0x202007D:
000b03 931f      	PUSH R17
000b04 5f1f      	SUBI R17,-1
000b05 85ee      	LDD  R30,Y+14
000b06 91af      	POP  R26
000b07 17ae      	CP   R26,R30
000b08 f4e0      	BRSH _0x202007F
000b09 940e 115c 	CALL SUBOPT_0x1E
000b0b 9731      	SBIW R30,1
000b0c 59eb      	SUBI R30,LOW(-_gfx_buffer_G101)
000b0d 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G101)
000b0e 81e0      	LD   R30,Z
000b0f 23e4      	AND  R30,R20
000b10 2fae      	MOV  R26,R30
000b11 2fe3      	MOV  R30,R19
000b12 940e 127b 	CALL __LSRB12
000b14 940e 118e 	CALL SUBOPT_0x26
000b16 2fe3      	MOV  R30,R19
000b17 2fa4      	MOV  R26,R20
000b18 940e 127b 	CALL __LSRB12
000b1a 95e0      	COM  R30
000b1b 21e1      	AND  R30,R1
000b1c 2b5e      	OR   R21,R30
000b1d 940e 1175 	CALL SUBOPT_0x22
000b1f 93fa      	ST   -Y,R31
000b20 93ea      	ST   -Y,R30
000b21 2fa5      	MOV  R26,R21
000b22 940e 1082 	CALL _glcd_writemem
000b24 cfde      	RJMP _0x202007D
                 _0x202007F:
000b25 c02c      	RJMP _0x202007B
                 _0x202007C:
000b26 30e9      	CPI  R30,LOW(0x9)
000b27 f411      	BRNE _0x2020080
000b28 e050      	LDI  R21,LOW(0)
000b29 c003      	RJMP _0x2020081
                 _0x2020080:
000b2a 30ea      	CPI  R30,LOW(0xA)
000b2b f4a9      	BRNE _0x2020087
000b2c ef5f      	LDI  R21,LOW(255)
                 _0x2020081:
000b2d 940e 1184 	CALL SUBOPT_0x24
000b2f 2fae      	MOV  R26,R30
000b30 2fe3      	MOV  R30,R19
000b31 940e 1273 	CALL __LSLB12
000b33 2f5e      	MOV  R21,R30
                 _0x2020084:
000b34 931f      	PUSH R17
000b35 5f1f      	SUBI R17,-1
000b36 85ee      	LDD  R30,Y+14
000b37 91af      	POP  R26
000b38 17ae      	CP   R26,R30
000b39 f430      	BRSH _0x2020086
000b3a 940e 1188 	CALL SUBOPT_0x25
000b3c 934a      	ST   -Y,R20
000b3d e0a0      	LDI  R26,LOW(0)
000b3e de72      	RCALL _pcd8544_wrmasked_G101
000b3f cff4      	RJMP _0x2020084
                 _0x2020086:
000b40 c011      	RJMP _0x202007B
                 _0x2020087:
                 _0x2020088:
000b41 931f      	PUSH R17
000b42 5f1f      	SUBI R17,-1
000b43 85ee      	LDD  R30,Y+14
000b44 91af      	POP  R26
000b45 17ae      	CP   R26,R30
000b46 f458      	BRSH _0x202008A
000b47 940e 1199 	CALL SUBOPT_0x27
000b49 2fae      	MOV  R26,R30
000b4a 2fe3      	MOV  R30,R19
000b4b 940e 1273 	CALL __LSLB12
000b4d 93ea      	ST   -Y,R30
000b4e 934a      	ST   -Y,R20
000b4f 85ad      	LDD  R26,Y+13
000b50 de60      	RCALL _pcd8544_wrmasked_G101
000b51 cfef      	RJMP _0x2020088
                 _0x202008A:
                 _0x202007B:
000b52 85ed      	LDD  R30,Y+13
000b53 30e0      	CPI  R30,0
000b54 f409      	BRNE _0x202008B
000b55 c07a      	RJMP _0x202004B
                 _0x202008B:
000b56 85ad      	LDD  R26,Y+13
000b57 30a8      	CPI  R26,LOW(0x8)
000b58 f428      	BRSH _0x202008C
000b59 85ed      	LDD  R30,Y+13
000b5a 1be2      	SUB  R30,R18
000b5b 2f5e      	MOV  R21,R30
000b5c e0e0      	LDI  R30,LOW(0)
000b5d c003      	RJMP _0x20200A1
                 _0x202008C:
000b5e 2f53      	MOV  R21,R19
000b5f 85ed      	LDD  R30,Y+13
000b60 50e8      	SUBI R30,LOW(8)
                 _0x20200A1:
000b61 87ed      	STD  Y+13,R30
000b62 e010      	LDI  R17,LOW(0)
000b63 85ef      	LDD  R30,Y+15
000b64 5fe8      	SUBI R30,-LOW(8)
000b65 87ef      	STD  Y+15,R30
000b66 e0e8      	LDI  R30,LOW(8)
000b67 1be3      	SUB  R30,R19
000b68 2f2e      	MOV  R18,R30
000b69 8908      	LDD  R16,Y+16
000b6a 85ea      	LDD  R30,Y+10
000b6b 85fb      	LDD  R31,Y+10+1
000b6c 83ee      	STD  Y+6,R30
000b6d 83ff      	STD  Y+6+1,R31
                 _0x2020076:
000b6e 2fe5      	MOV  R30,R21
000b6f e0f0      	LDI  R31,0
000b70 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000b71 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000b72 9144      	LPM  R20,Z
000b73 85e9      	LDD  R30,Y+9
000b74 30e6      	CPI  R30,LOW(0x6)
000b75 f529      	BRNE _0x2020091
000b76 940e 1171 	CALL SUBOPT_0x21
                 _0x2020092:
000b78 931f      	PUSH R17
000b79 5f1f      	SUBI R17,-1
000b7a 85ee      	LDD  R30,Y+14
000b7b 91af      	POP  R26
000b7c 17ae      	CP   R26,R30
000b7d f4e0      	BRSH _0x2020094
000b7e 940e 115c 	CALL SUBOPT_0x1E
000b80 9731      	SBIW R30,1
000b81 59eb      	SUBI R30,LOW(-_gfx_buffer_G101)
000b82 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G101)
000b83 81e0      	LD   R30,Z
000b84 23e4      	AND  R30,R20
000b85 2fae      	MOV  R26,R30
000b86 2fe2      	MOV  R30,R18
000b87 940e 1273 	CALL __LSLB12
000b89 940e 118e 	CALL SUBOPT_0x26
000b8b 2fe2      	MOV  R30,R18
000b8c 2fa4      	MOV  R26,R20
000b8d 940e 1273 	CALL __LSLB12
000b8f 95e0      	COM  R30
000b90 21e1      	AND  R30,R1
000b91 2b5e      	OR   R21,R30
000b92 940e 1175 	CALL SUBOPT_0x22
000b94 93fa      	ST   -Y,R31
000b95 93ea      	ST   -Y,R30
000b96 2fa5      	MOV  R26,R21
000b97 940e 1082 	CALL _glcd_writemem
000b99 cfde      	RJMP _0x2020092
                 _0x2020094:
000b9a c02c      	RJMP _0x2020090
                 _0x2020091:
000b9b 30e9      	CPI  R30,LOW(0x9)
000b9c f411      	BRNE _0x2020095
000b9d e050      	LDI  R21,LOW(0)
000b9e c003      	RJMP _0x2020096
                 _0x2020095:
000b9f 30ea      	CPI  R30,LOW(0xA)
000ba0 f4a9      	BRNE _0x202009C
000ba1 ef5f      	LDI  R21,LOW(255)
                 _0x2020096:
000ba2 940e 1184 	CALL SUBOPT_0x24
000ba4 2fae      	MOV  R26,R30
000ba5 2fe2      	MOV  R30,R18
000ba6 940e 127b 	CALL __LSRB12
000ba8 2f5e      	MOV  R21,R30
                 _0x2020099:
000ba9 931f      	PUSH R17
000baa 5f1f      	SUBI R17,-1
000bab 85ee      	LDD  R30,Y+14
000bac 91af      	POP  R26
000bad 17ae      	CP   R26,R30
000bae f430      	BRSH _0x202009B
000baf 940e 1188 	CALL SUBOPT_0x25
000bb1 934a      	ST   -Y,R20
000bb2 e0a0      	LDI  R26,LOW(0)
000bb3 ddfd      	RCALL _pcd8544_wrmasked_G101
000bb4 cff4      	RJMP _0x2020099
                 _0x202009B:
000bb5 c011      	RJMP _0x2020090
                 _0x202009C:
                 _0x202009D:
000bb6 931f      	PUSH R17
000bb7 5f1f      	SUBI R17,-1
000bb8 85ee      	LDD  R30,Y+14
000bb9 91af      	POP  R26
000bba 17ae      	CP   R26,R30
000bbb f458      	BRSH _0x202009F
000bbc 940e 1199 	CALL SUBOPT_0x27
000bbe 2fae      	MOV  R26,R30
000bbf 2fe2      	MOV  R30,R18
000bc0 940e 127b 	CALL __LSRB12
000bc2 93ea      	ST   -Y,R30
000bc3 934a      	ST   -Y,R20
000bc4 85ad      	LDD  R26,Y+13
000bc5 ddeb      	RCALL _pcd8544_wrmasked_G101
000bc6 cfef      	RJMP _0x202009D
                 _0x202009F:
                 _0x2020090:
                 _0x2020075:
000bc7 85e8      	LDD  R30,Y+8
000bc8 85aa      	LDD  R26,Y+10
000bc9 85bb      	LDD  R27,Y+10+1
000bca e0f0      	LDI  R31,0
000bcb 0fea      	ADD  R30,R26
000bcc 1ffb      	ADC  R31,R27
000bcd 87ea      	STD  Y+10,R30
000bce 87fb      	STD  Y+10+1,R31
000bcf ceaa      	RJMP _0x2020049
                 _0x202004B:
                 _0x2160009:
000bd0 940e 12cf 	CALL __LOADLOCR6
000bd2 9661      	ADIW R28,17
000bd3 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000bd4 940e 11a6 	CALL SUBOPT_0x28
000bd6 f024      	BRLT _0x2040003
000bd7 e0e0      	LDI  R30,LOW(0)
000bd8 e0f0      	LDI  R31,HIGH(0)
000bd9 940c 1039 	JMP  _0x2160003
                 _0x2040003:
000bdb 81a8      	LD   R26,Y
000bdc 81b9      	LDD  R27,Y+1
000bdd 35a4      	CPI  R26,LOW(0x54)
000bde e0e0      	LDI  R30,HIGH(0x54)
000bdf 07be      	CPC  R27,R30
000be0 f024      	BRLT _0x2040004
000be1 e5e3      	LDI  R30,LOW(83)
000be2 e0f0      	LDI  R31,HIGH(83)
000be3 940c 1039 	JMP  _0x2160003
                 _0x2040004:
000be5 81e8      	LD   R30,Y
000be6 81f9      	LDD  R31,Y+1
000be7 940c 1039 	JMP  _0x2160003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000be9 940e 11a6 	CALL SUBOPT_0x28
000beb f024      	BRLT _0x2040005
000bec e0e0      	LDI  R30,LOW(0)
000bed e0f0      	LDI  R31,HIGH(0)
000bee 940c 1039 	JMP  _0x2160003
                 _0x2040005:
000bf0 81a8      	LD   R26,Y
000bf1 81b9      	LDD  R27,Y+1
000bf2 97d0      	SBIW R26,48
000bf3 f024      	BRLT _0x2040006
000bf4 e2ef      	LDI  R30,LOW(47)
000bf5 e0f0      	LDI  R31,HIGH(47)
000bf6 940c 1039 	JMP  _0x2160003
                 _0x2040006:
000bf8 81e8      	LD   R30,Y
000bf9 81f9      	LDD  R31,Y+1
000bfa 940c 1039 	JMP  _0x2160003
                 ; .FEND
                 _glcd_getcharw_G102:
                 ; .FSTART _glcd_getcharw_G102
000bfc 93ba      	ST   -Y,R27
000bfd 93aa      	ST   -Y,R26
000bfe 9723      	SBIW R28,3
000bff 940e 11ad 	CALL SUBOPT_0x29
000c01 018f      	MOVW R16,R30
000c02 2e00      	MOV  R0,R16
000c03 2a01      	OR   R0,R17
000c04 f419      	BRNE _0x204000B
000c05 e0e0      	LDI  R30,LOW(0)
000c06 e0f0      	LDI  R31,HIGH(0)
000c07 c05f      	RJMP _0x2160008
                 _0x204000B:
000c08 940e 11b4 	CALL SUBOPT_0x2A
000c0a 820f      	STD  Y+7,R0
000c0b 940e 11b4 	CALL SUBOPT_0x2A
000c0d 820e      	STD  Y+6,R0
000c0e 940e 11b4 	CALL SUBOPT_0x2A
000c10 8608      	STD  Y+8,R0
000c11 85eb      	LDD  R30,Y+11
000c12 85a8      	LDD  R26,Y+8
000c13 17ea      	CP   R30,R26
000c14 f418      	BRSH _0x204000C
000c15 e0e0      	LDI  R30,LOW(0)
000c16 e0f0      	LDI  R31,HIGH(0)
000c17 c04f      	RJMP _0x2160008
                 _0x204000C:
000c18 01f8      	MOVW R30,R16
                +
000c19 5f0f     +SUBI R16 , LOW ( - 1 )
000c1a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000c1b 9154      	LPM  R21,Z
000c1c 85a8      	LDD  R26,Y+8
000c1d 27bb      	CLR  R27
000c1e 27ee      	CLR  R30
000c1f 0fa5      	ADD  R26,R21
000c20 1fbe      	ADC  R27,R30
000c21 85eb      	LDD  R30,Y+11
000c22 e0f0      	LDI  R31,0
000c23 17ea      	CP   R30,R26
000c24 07fb      	CPC  R31,R27
000c25 f018      	BRLO _0x204000D
000c26 e0e0      	LDI  R30,LOW(0)
000c27 e0f0      	LDI  R31,HIGH(0)
000c28 c03e      	RJMP _0x2160008
                 _0x204000D:
000c29 81ee      	LDD  R30,Y+6
000c2a 95e6      	LSR  R30
000c2b 95e6      	LSR  R30
000c2c 95e6      	LSR  R30
000c2d 2f4e      	MOV  R20,R30
000c2e 81ee      	LDD  R30,Y+6
000c2f 70e7      	ANDI R30,LOW(0x7)
000c30 f009      	BREQ _0x204000E
000c31 5f4f      	SUBI R20,-LOW(1)
                 _0x204000E:
000c32 81ef      	LDD  R30,Y+7
000c33 30e0      	CPI  R30,0
000c34 f0a1      	BREQ _0x204000F
000c35 85a9      	LDD  R26,Y+9
000c36 85ba      	LDD  R27,Y+9+1
000c37 93ec      	ST   X,R30
000c38 85a8      	LDD  R26,Y+8
000c39 85eb      	LDD  R30,Y+11
000c3a 1bea      	SUB  R30,R26
000c3b e0f0      	LDI  R31,0
000c3c 01df      	MOVW R26,R30
000c3d 81ef      	LDD  R30,Y+7
000c3e e0f0      	LDI  R31,0
000c3f 940e 1288 	CALL __MULW12U
000c41 01df      	MOVW R26,R30
000c42 2fe4      	MOV  R30,R20
000c43 e0f0      	LDI  R31,0
000c44 940e 1288 	CALL __MULW12U
000c46 0fe0      	ADD  R30,R16
000c47 1ff1      	ADC  R31,R17
000c48 c01e      	RJMP _0x2160008
                 _0x204000F:
000c49 0198      	MOVW R18,R16
000c4a 2fe5      	MOV  R30,R21
000c4b e0f0      	LDI  R31,0
                +
000c4c 0f0e     +ADD R16 , R30
000c4d 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2040010:
000c4e 85a8      	LDD  R26,Y+8
000c4f 5faf      	SUBI R26,-LOW(1)
000c50 87a8      	STD  Y+8,R26
000c51 50a1      	SUBI R26,LOW(1)
000c52 85eb      	LDD  R30,Y+11
000c53 17ae      	CP   R26,R30
000c54 f460      	BRSH _0x2040012
000c55 01f9      	MOVW R30,R18
                +
000c56 5f2f     +SUBI R18 , LOW ( - 1 )
000c57 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000c58 91a4      	LPM  R26,Z
000c59 e0b0      	LDI  R27,0
000c5a 2fe4      	MOV  R30,R20
000c5b e0f0      	LDI  R31,0
000c5c 940e 1288 	CALL __MULW12U
                +
000c5e 0f0e     +ADD R16 , R30
000c5f 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000c60 cfed      	RJMP _0x2040010
                 _0x2040012:
000c61 01f9      	MOVW R30,R18
000c62 91e4      	LPM  R30,Z
000c63 85a9      	LDD  R26,Y+9
000c64 85ba      	LDD  R27,Y+9+1
000c65 93ec      	ST   X,R30
000c66 01f8      	MOVW R30,R16
                 _0x2160008:
000c67 940e 12cf 	CALL __LOADLOCR6
000c69 962c      	ADIW R28,12
000c6a 9508      	RET
                 ; .FEND
                 _glcd_new_line_G102:
                 ; .FSTART _glcd_new_line_G102
000c6b e0e0      	LDI  R30,LOW(0)
                +
000c6c 93e0 062f+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000c6e 91a0 0630+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c70 27bb      	CLR  R27
000c71 940e 11b9 	CALL SUBOPT_0x2B
000c73 e0f0      	LDI  R31,0
000c74 0fae      	ADD  R26,R30
000c75 1fbf      	ADC  R27,R31
                +
000c76 91e0 0634+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c78 e0f0      	LDI  R31,0
000c79 0fae      	ADD  R26,R30
000c7a 1fbf      	ADC  R27,R31
000c7b df6d      	RCALL _glcd_clipy
                +
000c7c 93e0 0630+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000c7e 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000c7f 93aa      	ST   -Y,R26
000c80 9721      	SBIW R28,1
000c81 940e 11ad 	CALL SUBOPT_0x29
000c83 9730      	SBIW R30,0
000c84 f409      	BRNE PC+2
000c85 c055      	RJMP _0x204001F
000c86 81af      	LDD  R26,Y+7
000c87 30aa      	CPI  R26,LOW(0xA)
000c88 f409      	BRNE _0x2040020
000c89 c04f      	RJMP _0x2040021
                 _0x2040020:
000c8a 81ef      	LDD  R30,Y+7
000c8b 93ea      	ST   -Y,R30
000c8c 01de      	MOVW R26,R28
000c8d 9617      	ADIW R26,7
000c8e df6d      	RCALL _glcd_getcharw_G102
000c8f 01af      	MOVW R20,R30
000c90 9730      	SBIW R30,0
000c91 f409      	BRNE _0x2040022
000c92 c04a      	RJMP _0x2160007
                 _0x2040022:
                +
000c93 91e0 0633+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c95 81ae      	LDD  R26,Y+6
000c96 0fea      	ADD  R30,R26
000c97 2f3e      	MOV  R19,R30
                +
000c98 91a0 062f+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000c9a 27bb      	CLR  R27
000c9b e0f0      	LDI  R31,0
000c9c 0fea      	ADD  R30,R26
000c9d 1ffb      	ADC  R31,R27
000c9e 018f      	MOVW R16,R30
                +
000c9f 3505     +CPI R16 , LOW ( 85 )
000ca0 e0e0     +LDI R30 , HIGH ( 85 )
000ca1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000ca2 f018      	BRLO _0x2040023
000ca3 2f03      	MOV  R16,R19
000ca4 2711      	CLR  R17
000ca5 dfc5      	RCALL _glcd_new_line_G102
                 _0x2040023:
                +
000ca6 91e0 062f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000ca8 93ea      	ST   -Y,R30
                +
000ca9 91e0 0630+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000cab 93ea      	ST   -Y,R30
000cac 85e8      	LDD  R30,Y+8
000cad 93ea      	ST   -Y,R30
000cae 940e 11b9 	CALL SUBOPT_0x2B
000cb0 93ea      	ST   -Y,R30
000cb1 e0e1      	LDI  R30,LOW(1)
000cb2 93ea      	ST   -Y,R30
000cb3 935a      	ST   -Y,R21
000cb4 934a      	ST   -Y,R20
000cb5 e0a7      	LDI  R26,LOW(7)
000cb6 dd33      	RCALL _glcd_block
                +
000cb7 91e0 062f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000cb9 81ae      	LDD  R26,Y+6
000cba 0fea      	ADD  R30,R26
000cbb 93ea      	ST   -Y,R30
                +
000cbc 91e0 0630+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000cbe 93ea      	ST   -Y,R30
                +
000cbf 91e0 0633+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000cc1 93ea      	ST   -Y,R30
000cc2 940e 11b9 	CALL SUBOPT_0x2B
000cc4 940e 11c0 	CALL SUBOPT_0x2C
                +
000cc6 91e0 062f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000cc8 93ea      	ST   -Y,R30
                +
000cc9 91a0 0630+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000ccb 940e 11b9 	CALL SUBOPT_0x2B
000ccd 0fea      	ADD  R30,R26
000cce 93ea      	ST   -Y,R30
000ccf 933a      	ST   -Y,R19
                +
000cd0 91e0 0634+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000cd2 940e 11c0 	CALL SUBOPT_0x2C
000cd4 e5e4      	LDI  R30,LOW(84)
000cd5 e0f0      	LDI  R31,HIGH(84)
000cd6 17e0      	CP   R30,R16
000cd7 07f1      	CPC  R31,R17
000cd8 f411      	BRNE _0x2040024
                 _0x2040021:
000cd9 df91      	RCALL _glcd_new_line_G102
000cda c002      	RJMP _0x2160007
                 _0x2040024:
                 _0x204001F:
                +
000cdb 9300 062f+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2160007:
000cdd 940e 12cf 	CALL __LOADLOCR6
000cdf 9628      	ADIW R28,8
000ce0 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
000ce1 93ba      	ST   -Y,R27
000ce2 93aa      	ST   -Y,R26
000ce3 931a      	ST   -Y,R17
                 _0x204002E:
000ce4 81a9      	LDD  R26,Y+1
000ce5 81ba      	LDD  R27,Y+1+1
000ce6 91ed      	LD   R30,X+
000ce7 83a9      	STD  Y+1,R26
000ce8 83ba      	STD  Y+1+1,R27
000ce9 2f1e      	MOV  R17,R30
000cea 30e0      	CPI  R30,0
000ceb f019      	BREQ _0x2040030
000cec 2fa1      	MOV  R26,R17
000ced df91      	RCALL _glcd_putchar
000cee cff5      	RJMP _0x204002E
                 _0x2040030:
000cef 8118      	LDD  R17,Y+0
000cf0 940c 1080 	JMP  _0x2160002
                 ; .FEND
                 _glcd_putpixelm_G102:
                 ; .FSTART _glcd_putpixelm_G102
000cf2 93aa      	ST   -Y,R26
000cf3 81ea      	LDD  R30,Y+2
000cf4 93ea      	ST   -Y,R30
000cf5 81ea      	LDD  R30,Y+2
000cf6 93ea      	ST   -Y,R30
                +
000cf7 91e0 0636+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000cf9 81aa      	LDD  R26,Y+2
000cfa 23ea      	AND  R30,R26
000cfb f019      	BREQ _0x204003E
000cfc 91e0 062d 	LDS  R30,_glcd_state
000cfe c002      	RJMP _0x204003F
                 _0x204003E:
                +
000cff 91e0 062e+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x204003F:
000d01 2fae      	MOV  R26,R30
000d02 dc8b      	RCALL _glcd_putpixel
000d03 81e8      	LD   R30,Y
000d04 0fee      	LSL  R30
000d05 83e8      	ST   Y,R30
000d06 30e0      	CPI  R30,0
000d07 f411      	BRNE _0x2040041
000d08 e0e1      	LDI  R30,LOW(1)
000d09 83e8      	ST   Y,R30
                 _0x2040041:
000d0a 81e8      	LD   R30,Y
000d0b 940c 1080 	JMP  _0x2160002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000d0d 93aa      	ST   -Y,R26
000d0e 81a9      	LDD  R26,Y+1
000d0f 27bb      	CLR  R27
000d10 dec3      	RCALL _glcd_clipx
                +
000d11 93e0 062f+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000d13 81a8      	LD   R26,Y
000d14 27bb      	CLR  R27
000d15 ded3      	RCALL _glcd_clipy
                +
000d16 93e0 0630+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000d18 940c 1039 	JMP  _0x2160003
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000d1a 93aa      	ST   -Y,R26
000d1b 972b      	SBIW R28,11
000d1c 940e 12c8 	CALL __SAVELOCR6
000d1e 89ac      	LDD  R26,Y+20
000d1f 27bb      	CLR  R27
000d20 deb3      	RCALL _glcd_clipx
000d21 8bec      	STD  Y+20,R30
000d22 89aa      	LDD  R26,Y+18
000d23 27bb      	CLR  R27
000d24 deaf      	RCALL _glcd_clipx
000d25 8bea      	STD  Y+18,R30
000d26 89ab      	LDD  R26,Y+19
000d27 27bb      	CLR  R27
000d28 dec0      	RCALL _glcd_clipy
000d29 8beb      	STD  Y+19,R30
000d2a 89a9      	LDD  R26,Y+17
000d2b 27bb      	CLR  R27
000d2c debc      	RCALL _glcd_clipy
000d2d 8be9      	STD  Y+17,R30
000d2e 89ea      	LDD  R30,Y+18
                +
000d2f 93e0 062f+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000d31 89e9      	LDD  R30,Y+17
                +
000d32 93e0 0630+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000d34 e0e1      	LDI  R30,LOW(1)
000d35 87e8      	STD  Y+8,R30
000d36 89e9      	LDD  R30,Y+17
000d37 89ab      	LDD  R26,Y+19
000d38 17ea      	CP   R30,R26
000d39 f571      	BRNE _0x2040042
000d3a 891c      	LDD  R17,Y+20
000d3b 89aa      	LDD  R26,Y+18
000d3c 171a      	CP   R17,R26
000d3d f431      	BRNE _0x2040043
000d3e 931a      	ST   -Y,R17
000d3f 89ec      	LDD  R30,Y+20
000d40 93ea      	ST   -Y,R30
000d41 e0a1      	LDI  R26,LOW(1)
000d42 dfaf      	RCALL _glcd_putpixelm_G102
000d43 c0c8      	RJMP _0x2160006
                 _0x2040043:
000d44 89aa      	LDD  R26,Y+18
000d45 171a      	CP   R17,R26
000d46 f430      	BRSH _0x2040044
000d47 89ea      	LDD  R30,Y+18
000d48 1be1      	SUB  R30,R17
000d49 2f0e      	MOV  R16,R30
                +
000d4a e041     +LDI R20 , LOW ( 1 )
000d4b e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000d4c c006      	RJMP _0x2040045
                 _0x2040044:
000d4d 89aa      	LDD  R26,Y+18
000d4e 2fe1      	MOV  R30,R17
000d4f 1bea      	SUB  R30,R26
000d50 2f0e      	MOV  R16,R30
                +
000d51 ef4f     +LDI R20 , LOW ( - 1 )
000d52 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2040045:
                 _0x2040047:
000d53 893b      	LDD  R19,Y+19
000d54 e0e0      	LDI  R30,LOW(0)
000d55 83ee      	STD  Y+6,R30
                 _0x2040049:
000d56 940e 11ca 	CALL SUBOPT_0x2D
000d58 f438      	BRSH _0x204004B
000d59 931a      	ST   -Y,R17
000d5a 933a      	ST   -Y,R19
000d5b 9533      	INC  R19
000d5c 85aa      	LDD  R26,Y+10
000d5d df94      	RCALL _glcd_putpixelm_G102
000d5e 83ef      	STD  Y+7,R30
000d5f cff6      	RJMP _0x2040049
                 _0x204004B:
000d60 81ef      	LDD  R30,Y+7
000d61 87e8      	STD  Y+8,R30
000d62 0f14      	ADD  R17,R20
000d63 2fe0      	MOV  R30,R16
000d64 5001      	SUBI R16,1
000d65 30e0      	CPI  R30,0
000d66 f761      	BRNE _0x2040047
000d67 c0a4      	RJMP _0x204004C
                 _0x2040042:
000d68 89ea      	LDD  R30,Y+18
000d69 89ac      	LDD  R26,Y+20
000d6a 17ea      	CP   R30,R26
000d6b f539      	BRNE _0x204004D
000d6c 893b      	LDD  R19,Y+19
000d6d 89a9      	LDD  R26,Y+17
000d6e 173a      	CP   R19,R26
000d6f f430      	BRSH _0x204004E
000d70 89e9      	LDD  R30,Y+17
000d71 1be3      	SUB  R30,R19
000d72 2f2e      	MOV  R18,R30
000d73 e0e1      	LDI  R30,LOW(1)
000d74 e0f0      	LDI  R31,HIGH(1)
000d75 c006      	RJMP _0x204011B
                 _0x204004E:
000d76 89a9      	LDD  R26,Y+17
000d77 2fe3      	MOV  R30,R19
000d78 1bea      	SUB  R30,R26
000d79 2f2e      	MOV  R18,R30
000d7a efef      	LDI  R30,LOW(65535)
000d7b efff      	LDI  R31,HIGH(65535)
                 _0x204011B:
000d7c 87ed      	STD  Y+13,R30
000d7d 87fe      	STD  Y+13+1,R31
                 _0x2040051:
000d7e 891c      	LDD  R17,Y+20
000d7f e0e0      	LDI  R30,LOW(0)
000d80 83ee      	STD  Y+6,R30
                 _0x2040053:
000d81 940e 11ca 	CALL SUBOPT_0x2D
000d83 f430      	BRSH _0x2040055
000d84 931a      	ST   -Y,R17
000d85 9513      	INC  R17
000d86 940e 11d2 	CALL SUBOPT_0x2E
000d88 83ef      	STD  Y+7,R30
000d89 cff7      	RJMP _0x2040053
                 _0x2040055:
000d8a 81ef      	LDD  R30,Y+7
000d8b 87e8      	STD  Y+8,R30
000d8c 85ed      	LDD  R30,Y+13
000d8d 0f3e      	ADD  R19,R30
000d8e 2fe2      	MOV  R30,R18
000d8f 5021      	SUBI R18,1
000d90 30e0      	CPI  R30,0
000d91 f761      	BRNE _0x2040051
000d92 c079      	RJMP _0x2040056
                 _0x204004D:
000d93 e0e0      	LDI  R30,LOW(0)
000d94 83ee      	STD  Y+6,R30
                 _0x2040057:
000d95 940e 11ca 	CALL SUBOPT_0x2D
000d97 f008      	BRLO PC+2
000d98 c073      	RJMP _0x2040059
000d99 891c      	LDD  R17,Y+20
000d9a 893b      	LDD  R19,Y+19
000d9b e0e1      	LDI  R30,LOW(1)
000d9c 2f2e      	MOV  R18,R30
000d9d 2f0e      	MOV  R16,R30
000d9e 89aa      	LDD  R26,Y+18
000d9f 27bb      	CLR  R27
000da0 89ec      	LDD  R30,Y+20
000da1 e0f0      	LDI  R31,0
000da2 1bae      	SUB  R26,R30
000da3 0bbf      	SBC  R27,R31
000da4 01ad      	MOVW R20,R26
000da5 2355      	TST  R21
000da6 f42a      	BRPL _0x204005A
000da7 ef0f      	LDI  R16,LOW(255)
000da8 01fa      	MOVW R30,R20
000da9 940e 126f 	CALL __ANEGW1
000dab 01af      	MOVW R20,R30
                 _0x204005A:
000dac 01fa      	MOVW R30,R20
000dad 0fee      	LSL  R30
000dae 1fff      	ROL  R31
000daf 87ef      	STD  Y+15,R30
000db0 8bf8      	STD  Y+15+1,R31
000db1 89a9      	LDD  R26,Y+17
000db2 27bb      	CLR  R27
000db3 89eb      	LDD  R30,Y+19
000db4 e0f0      	LDI  R31,0
000db5 1bae      	SUB  R26,R30
000db6 0bbf      	SBC  R27,R31
000db7 87ad      	STD  Y+13,R26
000db8 87be      	STD  Y+13+1,R27
000db9 85ae      	LDD  R26,Y+14
000dba 23aa      	TST  R26
000dbb f43a      	BRPL _0x204005B
000dbc ef2f      	LDI  R18,LOW(255)
000dbd 85ed      	LDD  R30,Y+13
000dbe 85fe      	LDD  R31,Y+13+1
000dbf 940e 126f 	CALL __ANEGW1
000dc1 87ed      	STD  Y+13,R30
000dc2 87fe      	STD  Y+13+1,R31
                 _0x204005B:
000dc3 85ed      	LDD  R30,Y+13
000dc4 85fe      	LDD  R31,Y+13+1
000dc5 0fee      	LSL  R30
000dc6 1fff      	ROL  R31
000dc7 87eb      	STD  Y+11,R30
000dc8 87fc      	STD  Y+11+1,R31
000dc9 931a      	ST   -Y,R17
000dca 933a      	ST   -Y,R19
000dcb e0a1      	LDI  R26,LOW(1)
000dcc df25      	RCALL _glcd_putpixelm_G102
000dcd 87e8      	STD  Y+8,R30
000dce e0e0      	LDI  R30,LOW(0)
000dcf 87e9      	STD  Y+9,R30
000dd0 87ea      	STD  Y+9+1,R30
000dd1 85ad      	LDD  R26,Y+13
000dd2 85be      	LDD  R27,Y+13+1
000dd3 174a      	CP   R20,R26
000dd4 075b      	CPC  R21,R27
000dd5 f0bc      	BRLT _0x204005C
                 _0x204005E:
000dd6 0f10      	ADD  R17,R16
000dd7 85eb      	LDD  R30,Y+11
000dd8 85fc      	LDD  R31,Y+11+1
000dd9 940e 11d6 	CALL SUBOPT_0x2F
000ddb 85a9      	LDD  R26,Y+9
000ddc 85ba      	LDD  R27,Y+9+1
000ddd 174a      	CP   R20,R26
000dde 075b      	CPC  R21,R27
000ddf f42c      	BRGE _0x2040060
000de0 0f32      	ADD  R19,R18
000de1 85af      	LDD  R26,Y+15
000de2 89b8      	LDD  R27,Y+15+1
000de3 940e 11dd 	CALL SUBOPT_0x30
                 _0x2040060:
000de5 931a      	ST   -Y,R17
000de6 940e 11d2 	CALL SUBOPT_0x2E
000de8 87e8      	STD  Y+8,R30
000de9 89ea      	LDD  R30,Y+18
000dea 17e1      	CP   R30,R17
000deb f751      	BRNE _0x204005E
000dec c018      	RJMP _0x2040061
                 _0x204005C:
                 _0x2040063:
000ded 0f32      	ADD  R19,R18
000dee 85ef      	LDD  R30,Y+15
000def 89f8      	LDD  R31,Y+15+1
000df0 940e 11d6 	CALL SUBOPT_0x2F
000df2 85ed      	LDD  R30,Y+13
000df3 85fe      	LDD  R31,Y+13+1
000df4 85a9      	LDD  R26,Y+9
000df5 85ba      	LDD  R27,Y+9+1
000df6 17ea      	CP   R30,R26
000df7 07fb      	CPC  R31,R27
000df8 f42c      	BRGE _0x2040065
000df9 0f10      	ADD  R17,R16
000dfa 85ab      	LDD  R26,Y+11
000dfb 85bc      	LDD  R27,Y+11+1
000dfc 940e 11dd 	CALL SUBOPT_0x30
                 _0x2040065:
000dfe 931a      	ST   -Y,R17
000dff 940e 11d2 	CALL SUBOPT_0x2E
000e01 87e8      	STD  Y+8,R30
000e02 89e9      	LDD  R30,Y+17
000e03 17e3      	CP   R30,R19
000e04 f741      	BRNE _0x2040063
                 _0x2040061:
000e05 89eb      	LDD  R30,Y+19
000e06 5fef      	SUBI R30,-LOW(1)
000e07 8beb      	STD  Y+19,R30
000e08 89e9      	LDD  R30,Y+17
000e09 5fef      	SUBI R30,-LOW(1)
000e0a 8be9      	STD  Y+17,R30
000e0b cf89      	RJMP _0x2040057
                 _0x2040059:
                 _0x2040056:
                 _0x204004C:
                 _0x2160006:
000e0c 940e 12cf 	CALL __LOADLOCR6
000e0e 9665      	ADIW R28,21
000e0f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G104:
                 ; .FSTART _put_buff_G104
000e10 93ba      	ST   -Y,R27
000e11 93aa      	ST   -Y,R26
000e12 931a      	ST   -Y,R17
000e13 930a      	ST   -Y,R16
000e14 81aa      	LDD  R26,Y+2
000e15 81bb      	LDD  R27,Y+2+1
000e16 9612      	ADIW R26,2
000e17 940e 1290 	CALL __GETW1P
000e19 9730      	SBIW R30,0
000e1a f129      	BREQ _0x2080010
000e1b 81aa      	LDD  R26,Y+2
000e1c 81bb      	LDD  R27,Y+2+1
000e1d 9614      	ADIW R26,4
000e1e 940e 1290 	CALL __GETW1P
000e20 018f      	MOVW R16,R30
000e21 9730      	SBIW R30,0
000e22 f061      	BREQ _0x2080012
                +
000e23 3002     +CPI R16 , LOW ( 2 )
000e24 e0e0     +LDI R30 , HIGH ( 2 )
000e25 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000e26 f080      	BRLO _0x2080013
000e27 01f8      	MOVW R30,R16
000e28 9731      	SBIW R30,1
000e29 018f      	MOVW R16,R30
                +
000e2a 81aa     +LDD R26 , Y + 2
000e2b 81bb     +LDD R27 , Y + 2 + 1
000e2c 9614     +ADIW R26 , 4
000e2d 93ed     +ST X + , R30
000e2e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2080012:
000e2f 81aa      	LDD  R26,Y+2
000e30 81bb      	LDD  R27,Y+2+1
000e31 9612      	ADIW R26,2
000e32 940e 1135 	CALL SUBOPT_0x17
000e34 9731      	SBIW R30,1
000e35 81ac      	LDD  R26,Y+4
000e36 83a0      	STD  Z+0,R26
                 _0x2080013:
000e37 81aa      	LDD  R26,Y+2
000e38 81bb      	LDD  R27,Y+2+1
000e39 940e 1290 	CALL __GETW1P
000e3b 23ff      	TST  R31
000e3c f012      	BRMI _0x2080014
000e3d 940e 1135 	CALL SUBOPT_0x17
                 _0x2080014:
000e3f c006      	RJMP _0x2080015
                 _0x2080010:
000e40 81aa      	LDD  R26,Y+2
000e41 81bb      	LDD  R27,Y+2+1
000e42 efef      	LDI  R30,LOW(65535)
000e43 efff      	LDI  R31,HIGH(65535)
000e44 93ed      	ST   X+,R30
000e45 93fc      	ST   X,R31
                 _0x2080015:
000e46 8119      	LDD  R17,Y+1
000e47 8108      	LDD  R16,Y+0
000e48 940c 0fee 	JMP  _0x2160004
                 ; .FEND
                 __print_G104:
                 ; .FSTART __print_G104
000e4a 93ba      	ST   -Y,R27
000e4b 93aa      	ST   -Y,R26
000e4c 9726      	SBIW R28,6
000e4d 940e 12c8 	CALL __SAVELOCR6
000e4f e010      	LDI  R17,0
000e50 85ac      	LDD  R26,Y+12
000e51 85bd      	LDD  R27,Y+12+1
000e52 e0e0      	LDI  R30,LOW(0)
000e53 e0f0      	LDI  R31,HIGH(0)
000e54 93ed      	ST   X+,R30
000e55 93fc      	ST   X,R31
                 _0x2080016:
000e56 89ea      	LDD  R30,Y+18
000e57 89fb      	LDD  R31,Y+18+1
000e58 9631      	ADIW R30,1
000e59 8bea      	STD  Y+18,R30
000e5a 8bfb      	STD  Y+18+1,R31
000e5b 9731      	SBIW R30,1
000e5c 91e4      	LPM  R30,Z
000e5d 2f2e      	MOV  R18,R30
000e5e 30e0      	CPI  R30,0
000e5f f409      	BRNE PC+2
000e60 c115      	RJMP _0x2080018
000e61 2fe1      	MOV  R30,R17
000e62 30e0      	CPI  R30,0
000e63 f439      	BRNE _0x208001C
000e64 3225      	CPI  R18,37
000e65 f411      	BRNE _0x208001D
000e66 e011      	LDI  R17,LOW(1)
000e67 c002      	RJMP _0x208001E
                 _0x208001D:
000e68 940e 11e4 	CALL SUBOPT_0x31
                 _0x208001E:
000e6a c10a      	RJMP _0x208001B
                 _0x208001C:
000e6b 30e1      	CPI  R30,LOW(0x1)
000e6c f4a9      	BRNE _0x208001F
000e6d 3225      	CPI  R18,37
000e6e f419      	BRNE _0x2080020
000e6f 940e 11e4 	CALL SUBOPT_0x31
000e71 c102      	RJMP _0x20800CC
                 _0x2080020:
000e72 e012      	LDI  R17,LOW(2)
000e73 e040      	LDI  R20,LOW(0)
000e74 e000      	LDI  R16,LOW(0)
000e75 322d      	CPI  R18,45
000e76 f411      	BRNE _0x2080021
000e77 e001      	LDI  R16,LOW(1)
000e78 c0fc      	RJMP _0x208001B
                 _0x2080021:
000e79 322b      	CPI  R18,43
000e7a f411      	BRNE _0x2080022
000e7b e24b      	LDI  R20,LOW(43)
000e7c c0f8      	RJMP _0x208001B
                 _0x2080022:
000e7d 3220      	CPI  R18,32
000e7e f411      	BRNE _0x2080023
000e7f e240      	LDI  R20,LOW(32)
000e80 c0f4      	RJMP _0x208001B
                 _0x2080023:
000e81 c002      	RJMP _0x2080024
                 _0x208001F:
000e82 30e2      	CPI  R30,LOW(0x2)
000e83 f439      	BRNE _0x2080025
                 _0x2080024:
000e84 e050      	LDI  R21,LOW(0)
000e85 e013      	LDI  R17,LOW(3)
000e86 3320      	CPI  R18,48
000e87 f411      	BRNE _0x2080026
000e88 6800      	ORI  R16,LOW(128)
000e89 c0eb      	RJMP _0x208001B
                 _0x2080026:
000e8a c003      	RJMP _0x2080027
                 _0x2080025:
000e8b 30e3      	CPI  R30,LOW(0x3)
000e8c f009      	BREQ PC+2
000e8d c0e7      	RJMP _0x208001B
                 _0x2080027:
000e8e 3320      	CPI  R18,48
000e8f f010      	BRLO _0x208002A
000e90 332a      	CPI  R18,58
000e91 f008      	BRLO _0x208002B
                 _0x208002A:
000e92 c007      	RJMP _0x2080029
                 _0x208002B:
000e93 e0aa      	LDI  R26,LOW(10)
000e94 9f5a      	MUL  R21,R26
000e95 2d50      	MOV  R21,R0
000e96 2fe2      	MOV  R30,R18
000e97 53e0      	SUBI R30,LOW(48)
000e98 0f5e      	ADD  R21,R30
000e99 c0db      	RJMP _0x208001B
                 _0x2080029:
000e9a 2fe2      	MOV  R30,R18
000e9b 36e3      	CPI  R30,LOW(0x63)
000e9c f449      	BRNE _0x208002F
000e9d 940e 11eb 	CALL SUBOPT_0x32
000e9f 89e8      	LDD  R30,Y+16
000ea0 89f9      	LDD  R31,Y+16+1
000ea1 81a4      	LDD  R26,Z+4
000ea2 93aa      	ST   -Y,R26
000ea3 940e 11f1 	CALL SUBOPT_0x33
000ea5 c0ce      	RJMP _0x2080030
                 _0x208002F:
000ea6 37e3      	CPI  R30,LOW(0x73)
000ea7 f441      	BRNE _0x2080032
000ea8 940e 11eb 	CALL SUBOPT_0x32
000eaa 940e 11f7 	CALL SUBOPT_0x34
000eac 940e 1001 	CALL _strlen
000eae 2f1e      	MOV  R17,R30
000eaf c00a      	RJMP _0x2080033
                 _0x2080032:
000eb0 37e0      	CPI  R30,LOW(0x70)
000eb1 f461      	BRNE _0x2080035
000eb2 940e 11eb 	CALL SUBOPT_0x32
000eb4 940e 11f7 	CALL SUBOPT_0x34
000eb6 940e 100d 	CALL _strlenf
000eb8 2f1e      	MOV  R17,R30
000eb9 6008      	ORI  R16,LOW(8)
                 _0x2080033:
000eba 6002      	ORI  R16,LOW(2)
000ebb 770f      	ANDI R16,LOW(127)
000ebc e030      	LDI  R19,LOW(0)
000ebd c034      	RJMP _0x2080036
                 _0x2080035:
000ebe 36e4      	CPI  R30,LOW(0x64)
000ebf f011      	BREQ _0x2080039
000ec0 36e9      	CPI  R30,LOW(0x69)
000ec1 f411      	BRNE _0x208003A
                 _0x2080039:
000ec2 6004      	ORI  R16,LOW(4)
000ec3 c002      	RJMP _0x208003B
                 _0x208003A:
000ec4 37e5      	CPI  R30,LOW(0x75)
000ec5 f431      	BRNE _0x208003C
                 _0x208003B:
000ec6 e7ea      	LDI  R30,LOW(_tbl10_G104*2)
000ec7 e0f2      	LDI  R31,HIGH(_tbl10_G104*2)
000ec8 83ee      	STD  Y+6,R30
000ec9 83ff      	STD  Y+6+1,R31
000eca e015      	LDI  R17,LOW(5)
000ecb c00c      	RJMP _0x208003D
                 _0x208003C:
000ecc 35e8      	CPI  R30,LOW(0x58)
000ecd f411      	BRNE _0x208003F
000ece 6008      	ORI  R16,LOW(8)
000ecf c003      	RJMP _0x2080040
                 _0x208003F:
000ed0 37e8      	CPI  R30,LOW(0x78)
000ed1 f009      	BREQ PC+2
000ed2 c0a1      	RJMP _0x2080071
                 _0x2080040:
000ed3 e8e4      	LDI  R30,LOW(_tbl16_G104*2)
000ed4 e0f2      	LDI  R31,HIGH(_tbl16_G104*2)
000ed5 83ee      	STD  Y+6,R30
000ed6 83ff      	STD  Y+6+1,R31
000ed7 e014      	LDI  R17,LOW(4)
                 _0x208003D:
000ed8 ff02      	SBRS R16,2
000ed9 c014      	RJMP _0x2080042
000eda 940e 11eb 	CALL SUBOPT_0x32
000edc 940e 1201 	CALL SUBOPT_0x35
000ede 85ab      	LDD  R26,Y+11
000edf 23aa      	TST  R26
000ee0 f43a      	BRPL _0x2080043
000ee1 85ea      	LDD  R30,Y+10
000ee2 85fb      	LDD  R31,Y+10+1
000ee3 940e 126f 	CALL __ANEGW1
000ee5 87ea      	STD  Y+10,R30
000ee6 87fb      	STD  Y+10+1,R31
000ee7 e24d      	LDI  R20,LOW(45)
                 _0x2080043:
000ee8 3040      	CPI  R20,0
000ee9 f011      	BREQ _0x2080044
000eea 5f1f      	SUBI R17,-LOW(1)
000eeb c001      	RJMP _0x2080045
                 _0x2080044:
000eec 7f0b      	ANDI R16,LOW(251)
                 _0x2080045:
000eed c004      	RJMP _0x2080046
                 _0x2080042:
000eee 940e 11eb 	CALL SUBOPT_0x32
000ef0 940e 1201 	CALL SUBOPT_0x35
                 _0x2080046:
                 _0x2080036:
000ef2 fd00      	SBRC R16,0
000ef3 c011      	RJMP _0x2080047
                 _0x2080048:
000ef4 1715      	CP   R17,R21
000ef5 f478      	BRSH _0x208004A
000ef6 ff07      	SBRS R16,7
000ef7 c008      	RJMP _0x208004B
000ef8 ff02      	SBRS R16,2
000ef9 c004      	RJMP _0x208004C
000efa 7f0b      	ANDI R16,LOW(251)
000efb 2f24      	MOV  R18,R20
000efc 5011      	SUBI R17,LOW(1)
000efd c001      	RJMP _0x208004D
                 _0x208004C:
000efe e320      	LDI  R18,LOW(48)
                 _0x208004D:
000eff c001      	RJMP _0x208004E
                 _0x208004B:
000f00 e220      	LDI  R18,LOW(32)
                 _0x208004E:
000f01 940e 11e4 	CALL SUBOPT_0x31
000f03 5051      	SUBI R21,LOW(1)
000f04 cfef      	RJMP _0x2080048
                 _0x208004A:
                 _0x2080047:
000f05 2f31      	MOV  R19,R17
000f06 ff01      	SBRS R16,1
000f07 c017      	RJMP _0x208004F
                 _0x2080050:
000f08 3030      	CPI  R19,0
000f09 f0a1      	BREQ _0x2080052
000f0a ff03      	SBRS R16,3
000f0b c006      	RJMP _0x2080053
000f0c 81ee      	LDD  R30,Y+6
000f0d 81ff      	LDD  R31,Y+6+1
000f0e 9125      	LPM  R18,Z+
000f0f 83ee      	STD  Y+6,R30
000f10 83ff      	STD  Y+6+1,R31
000f11 c005      	RJMP _0x2080054
                 _0x2080053:
000f12 81ae      	LDD  R26,Y+6
000f13 81bf      	LDD  R27,Y+6+1
000f14 912d      	LD   R18,X+
000f15 83ae      	STD  Y+6,R26
000f16 83bf      	STD  Y+6+1,R27
                 _0x2080054:
000f17 940e 11e4 	CALL SUBOPT_0x31
000f19 3050      	CPI  R21,0
000f1a f009      	BREQ _0x2080055
000f1b 5051      	SUBI R21,LOW(1)
                 _0x2080055:
000f1c 5031      	SUBI R19,LOW(1)
000f1d cfea      	RJMP _0x2080050
                 _0x2080052:
000f1e c04b      	RJMP _0x2080056
                 _0x208004F:
                 _0x2080058:
000f1f e320      	LDI  R18,LOW(48)
000f20 81ee      	LDD  R30,Y+6
000f21 81ff      	LDD  R31,Y+6+1
000f22 940e 129e 	CALL __GETW1PF
000f24 87e8      	STD  Y+8,R30
000f25 87f9      	STD  Y+8+1,R31
000f26 81ee      	LDD  R30,Y+6
000f27 81ff      	LDD  R31,Y+6+1
000f28 9632      	ADIW R30,2
000f29 83ee      	STD  Y+6,R30
000f2a 83ff      	STD  Y+6+1,R31
                 _0x208005A:
000f2b 85e8      	LDD  R30,Y+8
000f2c 85f9      	LDD  R31,Y+8+1
000f2d 85aa      	LDD  R26,Y+10
000f2e 85bb      	LDD  R27,Y+10+1
000f2f 17ae      	CP   R26,R30
000f30 07bf      	CPC  R27,R31
000f31 f050      	BRLO _0x208005C
000f32 5f2f      	SUBI R18,-LOW(1)
000f33 85a8      	LDD  R26,Y+8
000f34 85b9      	LDD  R27,Y+8+1
000f35 85ea      	LDD  R30,Y+10
000f36 85fb      	LDD  R31,Y+10+1
000f37 1bea      	SUB  R30,R26
000f38 0bfb      	SBC  R31,R27
000f39 87ea      	STD  Y+10,R30
000f3a 87fb      	STD  Y+10+1,R31
000f3b cfef      	RJMP _0x208005A
                 _0x208005C:
000f3c 332a      	CPI  R18,58
000f3d f028      	BRLO _0x208005D
000f3e ff03      	SBRS R16,3
000f3f c002      	RJMP _0x208005E
000f40 5f29      	SUBI R18,-LOW(7)
000f41 c001      	RJMP _0x208005F
                 _0x208005E:
000f42 5d29      	SUBI R18,-LOW(39)
                 _0x208005F:
                 _0x208005D:
000f43 fd04      	SBRC R16,4
000f44 c01a      	RJMP _0x2080061
000f45 3321      	CPI  R18,49
000f46 f420      	BRSH _0x2080063
000f47 85a8      	LDD  R26,Y+8
000f48 85b9      	LDD  R27,Y+8+1
000f49 9711      	SBIW R26,1
000f4a f409      	BRNE _0x2080062
                 _0x2080063:
000f4b c009      	RJMP _0x20800CD
                 _0x2080062:
000f4c 1753      	CP   R21,R19
000f4d f010      	BRLO _0x2080067
000f4e ff00      	SBRS R16,0
000f4f c001      	RJMP _0x2080068
                 _0x2080067:
000f50 c013      	RJMP _0x2080066
                 _0x2080068:
000f51 e220      	LDI  R18,LOW(32)
000f52 ff07      	SBRS R16,7
000f53 c00b      	RJMP _0x2080069
000f54 e320      	LDI  R18,LOW(48)
                 _0x20800CD:
000f55 6100      	ORI  R16,LOW(16)
000f56 ff02      	SBRS R16,2
000f57 c007      	RJMP _0x208006A
000f58 7f0b      	ANDI R16,LOW(251)
000f59 934a      	ST   -Y,R20
000f5a 940e 11f1 	CALL SUBOPT_0x33
000f5c 3050      	CPI  R21,0
000f5d f009      	BREQ _0x208006B
000f5e 5051      	SUBI R21,LOW(1)
                 _0x208006B:
                 _0x208006A:
                 _0x2080069:
                 _0x2080061:
000f5f 940e 11e4 	CALL SUBOPT_0x31
000f61 3050      	CPI  R21,0
000f62 f009      	BREQ _0x208006C
000f63 5051      	SUBI R21,LOW(1)
                 _0x208006C:
                 _0x2080066:
000f64 5031      	SUBI R19,LOW(1)
000f65 85a8      	LDD  R26,Y+8
000f66 85b9      	LDD  R27,Y+8+1
000f67 9712      	SBIW R26,2
000f68 f008      	BRLO _0x2080059
000f69 cfb5      	RJMP _0x2080058
                 _0x2080059:
                 _0x2080056:
000f6a ff00      	SBRS R16,0
000f6b c008      	RJMP _0x208006D
                 _0x208006E:
000f6c 3050      	CPI  R21,0
000f6d f031      	BREQ _0x2080070
000f6e 5051      	SUBI R21,LOW(1)
000f6f e2e0      	LDI  R30,LOW(32)
000f70 93ea      	ST   -Y,R30
000f71 940e 11f1 	CALL SUBOPT_0x33
000f73 cff8      	RJMP _0x208006E
                 _0x2080070:
                 _0x208006D:
                 _0x2080071:
                 _0x2080030:
                 _0x20800CC:
000f74 e010      	LDI  R17,LOW(0)
                 _0x208001B:
000f75 cee0      	RJMP _0x2080016
                 _0x2080018:
000f76 85ac      	LDD  R26,Y+12
000f77 85bd      	LDD  R27,Y+12+1
000f78 940e 1290 	CALL __GETW1P
000f7a 940e 12cf 	CALL __LOADLOCR6
000f7c 9664      	ADIW R28,20
000f7d 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000f7e 92ff      	PUSH R15
000f7f 2ef8      	MOV  R15,R24
000f80 9726      	SBIW R28,6
000f81 940e 12ca 	CALL __SAVELOCR4
000f83 940e 1209 	CALL SUBOPT_0x36
000f85 9730      	SBIW R30,0
000f86 f419      	BRNE _0x2080072
000f87 efef      	LDI  R30,LOW(65535)
000f88 efff      	LDI  R31,HIGH(65535)
000f89 c023      	RJMP _0x2160005
                 _0x2080072:
000f8a 01de      	MOVW R26,R28
000f8b 9616      	ADIW R26,6
000f8c 940e 126b 	CALL __ADDW2R15
000f8e 018d      	MOVW R16,R26
000f8f 940e 1209 	CALL SUBOPT_0x36
000f91 83ee      	STD  Y+6,R30
000f92 83ff      	STD  Y+6+1,R31
000f93 e0e0      	LDI  R30,LOW(0)
000f94 87e8      	STD  Y+8,R30
000f95 87e9      	STD  Y+8+1,R30
000f96 01de      	MOVW R26,R28
000f97 961a      	ADIW R26,10
000f98 940e 126b 	CALL __ADDW2R15
000f9a 940e 1290 	CALL __GETW1P
000f9c 93fa      	ST   -Y,R31
000f9d 93ea      	ST   -Y,R30
000f9e 931a      	ST   -Y,R17
000f9f 930a      	ST   -Y,R16
000fa0 e1e0      	LDI  R30,LOW(_put_buff_G104)
000fa1 e0fe      	LDI  R31,HIGH(_put_buff_G104)
000fa2 93fa      	ST   -Y,R31
000fa3 93ea      	ST   -Y,R30
000fa4 01de      	MOVW R26,R28
000fa5 961a      	ADIW R26,10
000fa6 dea3      	RCALL __print_G104
000fa7 019f      	MOVW R18,R30
000fa8 81ae      	LDD  R26,Y+6
000fa9 81bf      	LDD  R27,Y+6+1
000faa e0e0      	LDI  R30,LOW(0)
000fab 93ec      	ST   X,R30
000fac 01f9      	MOVW R30,R18
                 _0x2160005:
000fad 940e 12d1 	CALL __LOADLOCR4
000faf 962a      	ADIW R28,10
000fb0 90ff      	POP  R15
000fb1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
000fb2 93ba      	ST   -Y,R27
000fb3 93aa      	ST   -Y,R26
000fb4 91a9          ld   r26,y+
000fb5 91b9          ld   r27,y+
000fb6 91e9          ld   r30,y+
000fb7 91f9          ld   r31,y+
000fb8 9630          adiw r30,0
000fb9 f42a          brpl __itoa0
000fba 95e0          com  r30
000fbb 95f0          com  r31
000fbc 9631          adiw r30,1
000fbd e26d          ldi  r22,'-'
000fbe 936d          st   x+,r22
                 __itoa0:
000fbf 94e8          clt
000fc0 e180          ldi  r24,low(10000)
000fc1 e297          ldi  r25,high(10000)
000fc2 d00d          rcall __itoa1
000fc3 ee88          ldi  r24,low(1000)
000fc4 e093          ldi  r25,high(1000)
000fc5 d00a          rcall __itoa1
000fc6 e684          ldi  r24,100
000fc7 2799          clr  r25
000fc8 d007          rcall __itoa1
000fc9 e08a          ldi  r24,10
000fca d005          rcall __itoa1
000fcb 2f6e          mov  r22,r30
000fcc d010          rcall __itoa5
000fcd 2766          clr  r22
000fce 936c          st   x,r22
000fcf 9508          ret
                 
                 __itoa1:
000fd0 2766          clr	 r22
                 __itoa2:
000fd1 17e8          cp   r30,r24
000fd2 07f9          cpc  r31,r25
000fd3 f020          brlo __itoa3
000fd4 9563          inc  r22
000fd5 1be8          sub  r30,r24
000fd6 0bf9          sbc  r31,r25
000fd7 f7c9          brne __itoa2
                 __itoa3:
000fd8 2366          tst  r22
000fd9 f411          brne __itoa4
000fda f016          brts __itoa5
000fdb 9508          ret
                 __itoa4:
000fdc 9468          set
                 __itoa5:
000fdd 5d60          subi r22,-0x30
000fde 936d          st   x+,r22
000fdf 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000fe0 93ba      	ST   -Y,R27
000fe1 93aa      	ST   -Y,R26
000fe2 81b9          ldd  r27,y+1
000fe3 81a8          ld   r26,y
000fe4 9610          adiw r26,0
000fe5 f031          breq memset1
000fe6 81fc          ldd  r31,y+4
000fe7 81eb          ldd  r30,y+3
000fe8 816a          ldd  r22,y+2
                 memset0:
000fe9 9361          st   z+,r22
000fea 9711          sbiw r26,1
000feb f7e9          brne memset0
                 memset1:
000fec 81eb          ldd  r30,y+3
000fed 81fc          ldd  r31,y+4
                 _0x2160004:
000fee 9625      	ADIW R28,5
000fef 9508      	RET
                 ; .FEND
                 _strcat:
                 ; .FSTART _strcat
000ff0 93ba      	ST   -Y,R27
000ff1 93aa      	ST   -Y,R26
000ff2 91e9          ld   r30,y+
000ff3 91f9          ld   r31,y+
000ff4 91a9          ld   r26,y+
000ff5 91b9          ld   r27,y+
000ff6 01cd          movw r24,r26
                 strcat0:
000ff7 916d          ld   r22,x+
000ff8 2366          tst  r22
000ff9 f7e9          brne strcat0
000ffa 9711          sbiw r26,1
                 strcat1:
000ffb 9161          ld   r22,z+
000ffc 936d          st   x+,r22
000ffd 2366          tst  r22
000ffe f7e1          brne strcat1
000fff 01fc          movw r30,r24
001000 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
001001 93ba      	ST   -Y,R27
001002 93aa      	ST   -Y,R26
001003 91a9          ld   r26,y+
001004 91b9          ld   r27,y+
001005 27ee          clr  r30
001006 27ff          clr  r31
                 strlen0:
001007 916d          ld   r22,x+
001008 2366          tst  r22
001009 f011          breq strlen1
00100a 9631          adiw r30,1
00100b cffb          rjmp strlen0
                 strlen1:
00100c 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00100d 93ba      	ST   -Y,R27
00100e 93aa      	ST   -Y,R26
00100f 27aa          clr  r26
001010 27bb          clr  r27
001011 91e9          ld   r30,y+
001012 91f9          ld   r31,y+
                 strlenf0:
001013 9005      	lpm  r0,z+
001014 2000          tst  r0
001015 f011          breq strlenf1
001016 9611          adiw r26,1
001017 cffb          rjmp strlenf0
                 strlenf1:
001018 01fd          movw r30,r26
001019 9508          ret
                 ; .FEND
                 _strstr:
                 ; .FSTART _strstr
00101a 93ba      	ST   -Y,R27
00101b 93aa      	ST   -Y,R26
00101c 81aa          ldd  r26,y+2
00101d 81bb          ldd  r27,y+3
00101e 01cd          movw r24,r26
                 strstr0:
00101f 81e8          ld   r30,y
001020 81f9          ldd  r31,y+1
                 strstr1:
001021 9171          ld   r23,z+
001022 2377          tst  r23
001023 f411          brne strstr2
001024 01fc          movw r30,r24
001025 c009          rjmp strstr3
                 strstr2:
001026 916d          ld   r22,x+
001027 1767          cp   r22,r23
001028 f3c1          breq strstr1
001029 9601          adiw r24,1
00102a 01dc          movw r26,r24
00102b 2366          tst  r22
00102c f791          brne strstr0
00102d 27ee          clr  r30
00102e 27ff          clr  r31
                 strstr3:
00102f c06f      	RJMP _0x2160001
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
001030 93aa      	ST   -Y,R26
001031 81e8      	LD   R30,Y
001032 e0f0      	LDI  R31,0
001033 59e0      	SUBI R30,LOW(-__glcd_mask*2)
001034 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
001035 91a4      	LPM  R26,Z
001036 81e9      	LDD  R30,Y+1
001037 940e 1273 	CALL __LSLB12
                 _0x2160003:
001039 9622      	ADIW R28,2
00103a 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
00103b 93aa      	ST   -Y,R26
00103c 931a      	ST   -Y,R17
00103d 81e9      	LDD  R30,Y+1
00103e 30e7      	CPI  R30,LOW(0x7)
00103f f011      	BREQ _0x2100007
001040 30ea      	CPI  R30,LOW(0xA)
001041 f419      	BRNE _0x2100008
                 _0x2100007:
001042 9110 062d 	LDS  R17,_glcd_state
001044 c009      	RJMP _0x2100009
                 _0x2100008:
001045 30e9      	CPI  R30,LOW(0x9)
001046 f419      	BRNE _0x210000B
                +
001047 9110 062e+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
001049 c004      	RJMP _0x2100009
                 _0x210000B:
00104a 30e8      	CPI  R30,LOW(0x8)
00104b f4a1      	BRNE _0x2100005
                +
00104c 9110 063d+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
00104e 91e0 062e+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
001050 30e0      	CPI  R30,0
001051 f049      	BREQ _0x210000E
001052 3010      	CPI  R17,0
001053 f019      	BREQ _0x210000F
001054 efef      	LDI  R30,LOW(255)
001055 8118      	LDD  R17,Y+0
001056 c029      	RJMP _0x2160002
                 _0x210000F:
001057 81ea      	LDD  R30,Y+2
001058 95e0      	COM  R30
001059 8118      	LDD  R17,Y+0
00105a c025      	RJMP _0x2160002
                 _0x210000E:
00105b 3010      	CPI  R17,0
00105c f419      	BRNE _0x2100011
00105d e0e0      	LDI  R30,LOW(0)
00105e 8118      	LDD  R17,Y+0
00105f c020      	RJMP _0x2160002
                 _0x2100011:
                 _0x2100005:
001060 81ea      	LDD  R30,Y+2
001061 8118      	LDD  R17,Y+0
001062 c01d      	RJMP _0x2160002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
001063 93ba      	ST   -Y,R27
001064 93aa      	ST   -Y,R26
001065 81ea      	LDD  R30,Y+2
001066 30e1      	CPI  R30,LOW(0x1)
001067 f421      	BRNE _0x2100015
001068 81e8      	LD   R30,Y
001069 81f9      	LDD  R31,Y+1
00106a 91e4      	LPM  R30,Z
00106b c014      	RJMP _0x2160002
                 _0x2100015:
00106c 30e2      	CPI  R30,LOW(0x2)
00106d f429      	BRNE _0x2100016
00106e 81a8      	LD   R26,Y
00106f 81b9      	LDD  R27,Y+1
001070 940e 12a7 	CALL __EEPROMRDB
001072 c00d      	RJMP _0x2160002
                 _0x2100016:
001073 30e3      	CPI  R30,LOW(0x3)
001074 f441      	BRNE _0x2100018
001075 81a8      	LD   R26,Y
001076 81b9      	LDD  R27,Y+1
                +
001077 91e0 0646+LDS R30 , _glcd_state + ( 25 )
001079 91f0 0647+LDS R31 , _glcd_state + ( 25 ) + 1
00107b 9509     +ICALL
                 	__CALL1MN _glcd_state,25
00107c c003      	RJMP _0x2160002
                 _0x2100018:
00107d 81a8      	LD   R26,Y
00107e 81b9      	LDD  R27,Y+1
00107f 91ec      	LD   R30,X
                 _0x2160002:
001080 9623      	ADIW R28,3
001081 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
001082 93aa      	ST   -Y,R26
001083 81eb      	LDD  R30,Y+3
001084 30e0      	CPI  R30,0
001085 f429      	BRNE _0x210001C
001086 81e8      	LD   R30,Y
001087 81a9      	LDD  R26,Y+1
001088 81ba      	LDD  R27,Y+1+1
001089 93ec      	ST   X,R30
00108a c014      	RJMP _0x210001B
                 _0x210001C:
00108b 30e2      	CPI  R30,LOW(0x2)
00108c f431      	BRNE _0x210001D
00108d 81e8      	LD   R30,Y
00108e 81a9      	LDD  R26,Y+1
00108f 81ba      	LDD  R27,Y+1+1
001090 940e 12b3 	CALL __EEPROMWRB
001092 c00c      	RJMP _0x210001B
                 _0x210001D:
001093 30e3      	CPI  R30,LOW(0x3)
001094 f451      	BRNE _0x210001B
001095 81e9      	LDD  R30,Y+1
001096 81fa      	LDD  R31,Y+1+1
001097 93fa      	ST   -Y,R31
001098 93ea      	ST   -Y,R30
001099 81aa      	LDD  R26,Y+2
                +
00109a 91e0 0648+LDS R30 , _glcd_state + ( 27 )
00109c 91f0 0649+LDS R31 , _glcd_state + ( 27 ) + 1
00109e 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
                 _0x2160001:
00109f 9624      	ADIW R28,4
0010a0 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
00062d           	.BYTE 0x1D
                 _buff:
00064a           	.BYTE 0x1CC
                 _gprs_command:
000816           	.BYTE 0x6
                 _entry_id:
00081c           	.BYTE 0x4
                 _stop:
000820           	.BYTE 0x1
                 _send_ok:
000821           	.BYTE 0x1
                 _time_s:
000822           	.BYTE 0x2
                 _rx_buffer0:
000824           	.BYTE 0x40
                 _rx_wr_index0:
000864           	.BYTE 0x1
                 _rx_rd_index0:
000865           	.BYTE 0x1
                 _rx_counter0:
000866           	.BYTE 0x1
                 _tx_buffer0:
000867           	.BYTE 0x40
                 _tx_wr_index0:
0008a7           	.BYTE 0x1
                 _tx_rd_index0:
0008a8           	.BYTE 0x1
                 _tx_counter0:
0008a9           	.BYTE 0x1
                 _rx_buffer1:
0008aa           	.BYTE 0x40
                 _rx_wr_index1:
0008ea           	.BYTE 0x1
                 _rx_rd_index1:
0008eb           	.BYTE 0x1
                 _rx_counter1:
0008ec           	.BYTE 0x1
                 _tx_buffer1:
0008ed           	.BYTE 0x40
                 _tx_wr_index1:
00092d           	.BYTE 0x1
                 _tx_rd_index1:
00092e           	.BYTE 0x1
                 _tx_counter1:
00092f           	.BYTE 0x1
                 _P_Add:
000930           	.BYTE 0x1
                 _Code_tay_cam1:
000931           	.BYTE 0x1
                 _Code_tay_cam2:
000932           	.BYTE 0x1
                 _Code_tay_cam3:
000933           	.BYTE 0x1
                 _Code_tay_cam4:
000934           	.BYTE 0x1
                 _station_receive:
000935           	.BYTE 0xC
                 _tay_cam_receive:
000941           	.BYTE 0x8
                 _data_receive:
000949           	.BYTE 0x12
                 _result:
00095b           	.BYTE 0x1
                 _count:
00095c           	.BYTE 0x2
                 _dem:
00095e           	.BYTE 0x4
                 _flag:
000962           	.BYTE 0x1
                 _gfx_addr_G101:
000963           	.BYTE 0x2
                 _gfx_buffer_G101:
000965           	.BYTE 0x1F8
                 __seed_G105:
000b5d           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0010a1 e4aa      	LDI  R26,LOW(_buff)
0010a2 e0b6      	LDI  R27,HIGH(_buff)
0010a3 0da4      	ADD  R26,R4
0010a4 1db5      	ADC  R27,R5
0010a5 91ac      	LD   R26,X
0010a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0010a7 93aa      	ST   -Y,R26
0010a8 93ea      	ST   -Y,R30
0010a9 93fa      	ST   -Y,R31
0010aa b7ef      	IN   R30,SREG
0010ab 93ea      	ST   -Y,R30
0010ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
                +
0010ad e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0010ae 958a     +DEC R24
0010af f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0010b0 81e9      	LDD  R30,Y+1
0010b1 0fee      	LSL  R30
0010b2 83e9      	STD  Y+1,R30
0010b3 9adc      	SBI  0x1B,4
                +
0010b4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0010b5 958a     +DEC R24
0010b6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0010b7 e0e0      	LDI  R30,0
0010b8 99cd      	SBIC 0x19,5
0010b9 e0e1      	LDI  R30,1
0010ba 81a9      	LDD  R26,Y+1
0010bb 2bea      	OR   R30,R26
0010bc 83e9      	STD  Y+1,R30
0010bd 98dc      	CBI  0x1B,4
0010be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
0010bf 93aa      	ST   -Y,R26
0010c0 98da      	CBI  0x1B,2
0010c1 81e9      	LDD  R30,Y+1
0010c2 62e0      	ORI  R30,0x20
0010c3 2fae      	MOV  R26,R30
0010c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
0010c5 9ada      	SBI  0x1B,2
                +
0010c6 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0010c7 958a     +DEC R24
0010c8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0010c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
0010ca 940e 0465 	CALL _SPI_RW_RX
0010cc 81a8      	LD   R26,Y
0010cd 940c 0465 	JMP  _SPI_RW_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
0010cf 940e 0465 	CALL _SPI_RW_RX
0010d1 91a0 0932 	LDS  R26,_Code_tay_cam2
0010d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0010d4 940e 04af 	CALL _RF_Write3_RX
0010d6 e1e0      	LDI  R30,LOW(16)
0010d7 93ea      	ST   -Y,R30
0010d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0010d9 93ea      	ST   -Y,R30
0010da e0af      	LDI  R26,LOW(15)
0010db 940c 0499 	JMP  _RF_Write_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
0010dd e0f0      	LDI  R31,0
0010de 93ed      	ST   X+,R30
0010df 93fc      	ST   X,R31
0010e0 940c 0478 	JMP  _SPI_Read_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
0010e2 93ea      	ST   -Y,R30
0010e3 e3e0      	LDI  R30,LOW(48)
0010e4 93ea      	ST   -Y,R30
0010e5 e0af      	LDI  R26,LOW(15)
0010e6 940e 0d1a 	CALL _glcd_line
0010e8 e0e0      	LDI  R30,LOW(0)
0010e9 93ea      	ST   -Y,R30
0010ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
0010eb 93ea      	ST   -Y,R30
0010ec e5e4      	LDI  R30,LOW(84)
0010ed 93ea      	ST   -Y,R30
0010ee e3a0      	LDI  R26,LOW(48)
0010ef 940e 0d1a 	CALL _glcd_line
0010f1 e0e0      	LDI  R30,LOW(0)
0010f2 93ea      	ST   -Y,R30
0010f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0010f4 940e 0ce1 	CALL _glcd_outtext
0010f6 e0e4      	LDI  R30,LOW(4)
0010f7 93ea      	ST   -Y,R30
0010f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
0010f9 e5ac      	LDI  R26,LOW(_count)
0010fa e0b9      	LDI  R27,HIGH(_count)
0010fb 91ed      	LD   R30,X+
0010fc 91fd      	LD   R31,X+
0010fd 9631      	ADIW R30,1
0010fe 93fe      	ST   -X,R31
0010ff 93ee      	ST   -X,R30
001100 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
001101 e0e1      	LDI  R30,LOW(1)
001102 e0f0      	LDI  R31,HIGH(1)
001103 93e0 095c 	STS  _count,R30
001105 93f0 095d 	STS  _count+1,R31
001107 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xF:
001108 940e 0970 	CALL _glcd_clear
00110a e0e0      	LDI  R30,LOW(0)
00110b 93ea      	ST   -Y,R30
00110c e0a0      	LDI  R26,LOW(0)
00110d 940c 0d0d 	JMP  _glcd_moveto
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
00110f e4aa      	LDI  R26,LOW(_buff)
001110 e0b6      	LDI  R27,HIGH(_buff)
001111 940c 0ce1 	JMP  _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
001113 1ba2      	SUB  R26,R18
001114 0bb3      	SBC  R27,R19
001115 a5ee      	LDD  R30,Y+46
001116 a5ff      	LDD  R31,Y+46+1
001117 17ea      	CP   R30,R26
001118 07fb      	CPC  R31,R27
001119 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12:
00111a e4ea      	LDI  R30,LOW(_buff)
00111b e0f6      	LDI  R31,HIGH(_buff)
00111c 93fa      	ST   -Y,R31
00111d 93ea      	ST   -Y,R30
00111e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
00111f 93fa      	ST   -Y,R31
001120 93ea      	ST   -Y,R30
001121 e0a2      	LDI  R26,LOW(2)
001122 e0b0      	LDI  R27,0
001123 940c 0608 	JMP  _wait_until
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
001125 e0a0      	LDI  R26,LOW(0)
001126 e0b0      	LDI  R27,0
001127 940c 05f7 	JMP  _refresh
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
001129 eea8      	LDI  R26,LOW(1000)
00112a e0b3      	LDI  R27,HIGH(1000)
00112b 940c 1261 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
                +
00112d 01de     +MOVW R26 , R28
00112e 5aaf     +SUBI R26 , LOW ( - 81 )
00112f 4fbf     +SBCI R27 , HIGH ( - 81 )
001130 900d     +LD R0 , X +
001131 91bc     +LD R27 , X
001132 2da0     +MOV R26 , R0
                 	__GETW2SX 81
001133 91ec      	LD   R30,X
001134 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x17:
001135 91ed      	LD   R30,X+
001136 91fd      	LD   R31,X+
001137 9631      	ADIW R30,1
001138 93fe      	ST   -X,R31
001139 93ee      	ST   -X,R30
00113a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
00113b 940e 05e2 	CALL _put_string
00113d e2ac      	LDI  R26,LOW(300)
00113e e0b1      	LDI  R27,HIGH(300)
00113f 940c 1261 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
001141 01fe      	MOVW R30,R28
001142 96bc      	ADIW R30,44
001143 93fa      	ST   -Y,R31
001144 93ea      	ST   -Y,R30
001145 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
001146 940e 0ff0 	CALL _strcat
001148 cff8      	RJMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
001149 93fa      	ST   -Y,R31
00114a 93ea      	ST   -Y,R30
00114b 01de      	MOVW R26,R28
00114c 965a      	ADIW R26,26
00114d 940e 0fb2 	CALL _itoa
00114f cff1      	RJMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
001150 940e 0d0d 	CALL _glcd_moveto
001152 cfc7      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1D:
001153 940e 1283 	CALL __CWD1
001155 940e 12a2 	CALL __PUTPARD1
001157 e084      	LDI  R24,4
001158 940e 0f7e 	CALL _sprintf
00115a 9628      	ADIW R28,8
00115b cfb3      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
00115c e6a3      	LDI  R26,LOW(_gfx_addr_G101)
00115d e0b9      	LDI  R27,HIGH(_gfx_addr_G101)
00115e cfd6      	RJMP SUBOPT_0x17
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
00115f 0fea      	ADD  R30,R26
001160 1ffb      	ADC  R31,R27
001161 83ee      	STD  Y+6,R30
001162 83ff      	STD  Y+6+1,R31
001163 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x20:
001164 85ec      	LDD  R30,Y+12
001165 93ea      	ST   -Y,R30
001166 81ef      	LDD  R30,Y+7
001167 85f8      	LDD  R31,Y+7+1
001168 9631      	ADIW R30,1
001169 83ef      	STD  Y+7,R30
00116a 87f8      	STD  Y+7+1,R31
00116b 9731      	SBIW R30,1
00116c 93fa      	ST   -Y,R31
00116d 93ea      	ST   -Y,R30
00116e e0a0      	LDI  R26,LOW(0)
00116f 940c 1082 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
001171 930a      	ST   -Y,R16
001172 89a8      	LDD  R26,Y+16
001173 940c 08ab 	JMP  _pcd8544_setaddr_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x22:
001175 85ec      	LDD  R30,Y+12
001176 93ea      	ST   -Y,R30
001177 81ef      	LDD  R30,Y+7
001178 85f8      	LDD  R31,Y+7+1
001179 9631      	ADIW R30,1
00117a 83ef      	STD  Y+7,R30
00117b 87f8      	STD  Y+7+1,R31
00117c 9731      	SBIW R30,1
00117d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
00117e 2766      	CLR  R22
00117f 2777      	CLR  R23
001180 01df      	MOVW R26,R30
001181 01cb      	MOVW R24,R22
001182 940c 1063 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
001184 935a      	ST   -Y,R21
001185 85aa      	LDD  R26,Y+10
001186 940c 103b 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
001188 930a      	ST   -Y,R16
001189 9503      	INC  R16
00118a 89e8      	LDD  R30,Y+16
00118b 93ea      	ST   -Y,R30
00118c 935a      	ST   -Y,R21
00118d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
00118e 2f5e      	MOV  R21,R30
00118f 85ec      	LDD  R30,Y+12
001190 93ea      	ST   -Y,R30
001191 81af      	LDD  R26,Y+7
001192 85b8      	LDD  R27,Y+7+1
001193 2788      	CLR  R24
001194 2799      	CLR  R25
001195 940e 1063 	CALL _glcd_readmem
001197 2e1e      	MOV  R1,R30
001198 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
001199 930a      	ST   -Y,R16
00119a 9503      	INC  R16
00119b 89e8      	LDD  R30,Y+16
00119c 93ea      	ST   -Y,R30
00119d 85ee      	LDD  R30,Y+14
00119e 93ea      	ST   -Y,R30
00119f 85e9      	LDD  R30,Y+9
0011a0 85fa      	LDD  R31,Y+9+1
0011a1 9631      	ADIW R30,1
0011a2 87e9      	STD  Y+9,R30
0011a3 87fa      	STD  Y+9+1,R31
0011a4 9731      	SBIW R30,1
0011a5 cfd8      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
0011a6 93ba      	ST   -Y,R27
0011a7 93aa      	ST   -Y,R26
0011a8 81a8      	LD   R26,Y
0011a9 81b9      	LDD  R27,Y+1
0011aa 940e 12c4 	CALL __CPW02
0011ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0011ad 940e 12c8 	CALL __SAVELOCR6
                +
0011af 91e0 0631+LDS R30 , _glcd_state + ( 4 )
0011b1 91f0 0632+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0011b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0011b4 01f8      	MOVW R30,R16
                +
0011b5 5f0f     +SUBI R16 , LOW ( - 1 )
0011b6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0011b7 9004      	LPM  R0,Z
0011b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
                +
0011b9 91e0 0631+LDS R30 , _glcd_state + ( 4 )
0011bb 91f0 0632+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0011bd 9631      	ADIW R30,1
0011be 91e4      	LPM  R30,Z
0011bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2C:
0011c0 93ea      	ST   -Y,R30
0011c1 e0e0      	LDI  R30,LOW(0)
0011c2 93ea      	ST   -Y,R30
0011c3 e0e0      	LDI  R30,LOW(0)
0011c4 e0f0      	LDI  R31,HIGH(0)
0011c5 93fa      	ST   -Y,R31
0011c6 93ea      	ST   -Y,R30
0011c7 e0a9      	LDI  R26,LOW(9)
0011c8 940c 09ea 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2D:
0011ca 81ae      	LDD  R26,Y+6
0011cb 5faf      	SUBI R26,-LOW(1)
0011cc 83ae      	STD  Y+6,R26
0011cd 50a1      	SUBI R26,LOW(1)
                +
0011ce 91e0 0635+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0011d0 17ae      	CP   R26,R30
0011d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
0011d2 933a      	ST   -Y,R19
0011d3 85aa      	LDD  R26,Y+10
0011d4 940c 0cf2 	JMP  _glcd_putpixelm_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
0011d6 85a9      	LDD  R26,Y+9
0011d7 85ba      	LDD  R27,Y+9+1
0011d8 0fea      	ADD  R30,R26
0011d9 1ffb      	ADC  R31,R27
0011da 87e9      	STD  Y+9,R30
0011db 87fa      	STD  Y+9+1,R31
0011dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
0011dd 85e9      	LDD  R30,Y+9
0011de 85fa      	LDD  R31,Y+9+1
0011df 1bea      	SUB  R30,R26
0011e0 0bfb      	SBC  R31,R27
0011e1 87e9      	STD  Y+9,R30
0011e2 87fa      	STD  Y+9+1,R31
0011e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x31:
0011e4 932a      	ST   -Y,R18
0011e5 85ad      	LDD  R26,Y+13
0011e6 85be      	LDD  R27,Y+13+1
0011e7 85ef      	LDD  R30,Y+15
0011e8 89f8      	LDD  R31,Y+15+1
0011e9 9509      	ICALL
0011ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x32:
0011eb 89e8      	LDD  R30,Y+16
0011ec 89f9      	LDD  R31,Y+16+1
0011ed 9734      	SBIW R30,4
0011ee 8be8      	STD  Y+16,R30
0011ef 8bf9      	STD  Y+16+1,R31
0011f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
0011f1 85ad      	LDD  R26,Y+13
0011f2 85be      	LDD  R27,Y+13+1
0011f3 85ef      	LDD  R30,Y+15
0011f4 89f8      	LDD  R31,Y+15+1
0011f5 9509      	ICALL
0011f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x34:
0011f7 89a8      	LDD  R26,Y+16
0011f8 89b9      	LDD  R27,Y+16+1
0011f9 9614      	ADIW R26,4
0011fa 940e 1290 	CALL __GETW1P
0011fc 83ee      	STD  Y+6,R30
0011fd 83ff      	STD  Y+6+1,R31
0011fe 81ae      	LDD  R26,Y+6
0011ff 81bf      	LDD  R27,Y+6+1
001200 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x35:
001201 89a8      	LDD  R26,Y+16
001202 89b9      	LDD  R27,Y+16+1
001203 9614      	ADIW R26,4
001204 940e 1290 	CALL __GETW1P
001206 87ea      	STD  Y+10,R30
001207 87fb      	STD  Y+10+1,R31
001208 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36:
001209 01de      	MOVW R26,R28
00120a 961c      	ADIW R26,12
00120b 940e 126b 	CALL __ADDW2R15
00120d 940e 1290 	CALL __GETW1P
00120f 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=1
                 	.equ __scl_bit=0
                 	.equ __i2c_port=0x12 ;PORTD
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
001210 9890      	cbi  __i2c_port,__scl_bit
001211 9891      	cbi  __i2c_port,__sda_bit
001212 9a88      	sbi  __i2c_dir,__scl_bit
001213 9889      	cbi  __i2c_dir,__sda_bit
001214 c015      	rjmp __i2c_delay2
                 _i2c_start:
001215 9889      	cbi  __i2c_dir,__sda_bit
001216 9888      	cbi  __i2c_dir,__scl_bit
001217 27ee      	clr  r30
001218 0000      	nop
001219 9b81      	sbis __i2c_pin,__sda_bit
00121a 9508      	ret
00121b 9b80      	sbis __i2c_pin,__scl_bit
00121c 9508      	ret
00121d d004      	rcall __i2c_delay1
00121e 9a89      	sbi  __i2c_dir,__sda_bit
00121f d002      	rcall __i2c_delay1
001220 9a88      	sbi  __i2c_dir,__scl_bit
001221 e0e1      	ldi  r30,1
                 __i2c_delay1:
001222 e06d      	ldi  r22,13
001223 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
001224 9a89      	sbi  __i2c_dir,__sda_bit
001225 9a88      	sbi  __i2c_dir,__scl_bit
001226 d003      	rcall __i2c_delay2
001227 9888      	cbi  __i2c_dir,__scl_bit
001228 dff9      	rcall __i2c_delay1
001229 9889      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00122a e16b      	ldi  r22,27
                 __i2c_delay2l:
00122b 956a      	dec  r22
00122c f7f1      	brne __i2c_delay2l
00122d 9508      	ret
                 _i2c_read:
00122e e078      	ldi  r23,8
                 __i2c_read0:
00122f 9888      	cbi  __i2c_dir,__scl_bit
001230 dff1      	rcall __i2c_delay1
                 __i2c_read3:
001231 9b80      	sbis __i2c_pin,__scl_bit
001232 cffe      	rjmp __i2c_read3
001233 dfee      	rcall __i2c_delay1
001234 9488      	clc
001235 9981      	sbic __i2c_pin,__sda_bit
001236 9408      	sec
001237 9a88      	sbi  __i2c_dir,__scl_bit
001238 dff1      	rcall __i2c_delay2
001239 1fee      	rol  r30
00123a 957a      	dec  r23
00123b f799      	brne __i2c_read0
00123c 2f7a      	mov  r23,r26
00123d 2377      	tst  r23
00123e f411      	brne __i2c_read1
00123f 9889      	cbi  __i2c_dir,__sda_bit
001240 c001      	rjmp __i2c_read2
                 __i2c_read1:
001241 9a89      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
001242 dfdf      	rcall __i2c_delay1
001243 9888      	cbi  __i2c_dir,__scl_bit
001244 dfe5      	rcall __i2c_delay2
001245 9a88      	sbi  __i2c_dir,__scl_bit
001246 dfdb      	rcall __i2c_delay1
001247 9889      	cbi  __i2c_dir,__sda_bit
001248 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
001249 e078      	ldi  r23,8
                 __i2c_write0:
00124a 0faa      	lsl  r26
00124b f410      	brcc __i2c_write1
00124c 9889      	cbi  __i2c_dir,__sda_bit
00124d c001      	rjmp __i2c_write2
                 __i2c_write1:
00124e 9a89      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00124f dfda      	rcall __i2c_delay2
001250 9888      	cbi  __i2c_dir,__scl_bit
001251 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
001252 9b80      	sbis __i2c_pin,__scl_bit
001253 cffe      	rjmp __i2c_write3
001254 dfcd      	rcall __i2c_delay1
001255 9a88      	sbi  __i2c_dir,__scl_bit
001256 957a      	dec  r23
001257 f791      	brne __i2c_write0
001258 9889      	cbi  __i2c_dir,__sda_bit
001259 dfc8      	rcall __i2c_delay1
00125a 9888      	cbi  __i2c_dir,__scl_bit
00125b dfce      	rcall __i2c_delay2
00125c e0e1      	ldi  r30,1
00125d 9981      	sbic __i2c_pin,__sda_bit
00125e 27ee      	clr  r30
00125f 9a88      	sbi  __i2c_dir,__scl_bit
001260 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
001261 9610      	adiw r26,0
001262 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001263 ed80     +LDI R24 , LOW ( 0x7D0 )
001264 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
001265 9701     +SBIW R24 , 1
001266 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001267 95a8      	wdr
001268 9711      	sbiw r26,1
001269 f7c9      	brne __delay_ms0
                 __delay_ms1:
00126a 9508      	ret
                 
                 __ADDW2R15:
00126b 2400      	CLR  R0
00126c 0daf      	ADD  R26,R15
00126d 1db0      	ADC  R27,R0
00126e 9508      	RET
                 
                 __ANEGW1:
00126f 95f1      	NEG  R31
001270 95e1      	NEG  R30
001271 40f0      	SBCI R31,0
001272 9508      	RET
                 
                 __LSLB12:
001273 23ee      	TST  R30
001274 2e0e      	MOV  R0,R30
001275 2fea      	MOV  R30,R26
001276 f019      	BREQ __LSLB12R
                 __LSLB12L:
001277 0fee      	LSL  R30
001278 940a      	DEC  R0
001279 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00127a 9508      	RET
                 
                 __LSRB12:
00127b 23ee      	TST  R30
00127c 2e0e      	MOV  R0,R30
00127d 2fea      	MOV  R30,R26
00127e f019      	BREQ __LSRB12R
                 __LSRB12L:
00127f 95e6      	LSR  R30
001280 940a      	DEC  R0
001281 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
001282 9508      	RET
                 
                 __CWD1:
001283 2f6f      	MOV  R22,R31
001284 0f66      	ADD  R22,R22
001285 0b66      	SBC  R22,R22
001286 2f76      	MOV  R23,R22
001287 9508      	RET
                 
                 __MULW12U:
001288 9ffa      	MUL  R31,R26
001289 2df0      	MOV  R31,R0
00128a 9feb      	MUL  R30,R27
00128b 0df0      	ADD  R31,R0
00128c 9fea      	MUL  R30,R26
00128d 2de0      	MOV  R30,R0
00128e 0df1      	ADD  R31,R1
00128f 9508      	RET
                 
                 __GETW1P:
001290 91ed      	LD   R30,X+
001291 91fc      	LD   R31,X
001292 9711      	SBIW R26,1
001293 9508      	RET
                 
                 __GETD1P_INC:
001294 91ed      	LD   R30,X+
001295 91fd      	LD   R31,X+
001296 916d      	LD   R22,X+
001297 917d      	LD   R23,X+
001298 9508      	RET
                 
                 __PUTDP1_DEC:
001299 937e      	ST   -X,R23
00129a 936e      	ST   -X,R22
00129b 93fe      	ST   -X,R31
00129c 93ee      	ST   -X,R30
00129d 9508      	RET
                 
                 __GETW1PF:
00129e 9005      	LPM  R0,Z+
00129f 91f4      	LPM  R31,Z
0012a0 2de0      	MOV  R30,R0
0012a1 9508      	RET
                 
                 __PUTPARD1:
0012a2 937a      	ST   -Y,R23
0012a3 936a      	ST   -Y,R22
0012a4 93fa      	ST   -Y,R31
0012a5 93ea      	ST   -Y,R30
0012a6 9508      	RET
                 
                 __EEPROMRDB:
0012a7 99e1      	SBIC EECR,EEWE
0012a8 cffe      	RJMP __EEPROMRDB
0012a9 93ff      	PUSH R31
0012aa b7ff      	IN   R31,SREG
0012ab 94f8      	CLI
0012ac bbae      	OUT  EEARL,R26
0012ad bbbf      	OUT  EEARH,R27
0012ae 9ae0      	SBI  EECR,EERE
0012af b3ed      	IN   R30,EEDR
0012b0 bfff      	OUT  SREG,R31
0012b1 91ff      	POP  R31
0012b2 9508      	RET
                 
                 __EEPROMWRB:
0012b3 9be1      	SBIS EECR,EEWE
0012b4 c002      	RJMP __EEPROMWRB1
0012b5 95a8      	WDR
0012b6 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0012b7 b79f      	IN   R25,SREG
0012b8 94f8      	CLI
0012b9 bbae      	OUT  EEARL,R26
0012ba bbbf      	OUT  EEARH,R27
0012bb 9ae0      	SBI  EECR,EERE
0012bc b38d      	IN   R24,EEDR
0012bd 17e8      	CP   R30,R24
0012be f019      	BREQ __EEPROMWRB0
0012bf bbed      	OUT  EEDR,R30
0012c0 9ae2      	SBI  EECR,EEMWE
0012c1 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0012c2 bf9f      	OUT  SREG,R25
0012c3 9508      	RET
                 
                 __CPW02:
0012c4 2400      	CLR  R0
0012c5 160a      	CP   R0,R26
0012c6 060b      	CPC  R0,R27
0012c7 9508      	RET
                 
                 __SAVELOCR6:
0012c8 935a      	ST   -Y,R21
                 __SAVELOCR5:
0012c9 934a      	ST   -Y,R20
                 __SAVELOCR4:
0012ca 933a      	ST   -Y,R19
                 __SAVELOCR3:
0012cb 932a      	ST   -Y,R18
                 __SAVELOCR2:
0012cc 931a      	ST   -Y,R17
0012cd 930a      	ST   -Y,R16
0012ce 9508      	RET
                 
                 __LOADLOCR6:
0012cf 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0012d0 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0012d1 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0012d2 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0012d3 8119      	LDD  R17,Y+1
0012d4 8108      	LD   R16,Y
0012d5 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0012d6 0fac      	ADD  R26,R28
0012d7 1fbd      	ADC  R27,R29
                 __INITLOC0:
0012d8 9005      	LPM  R0,Z+
0012d9 920d      	ST   X+,R0
0012da 958a      	DEC  R24
0012db f7e1      	BRNE __INITLOC0
0012dc 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  45 r1 :   7 r2 :   2 r3 :   0 r4 :  14 r5 :   4 r6 :   0 r7 :   0 
r8 :  16 r9 :   4 r10:  10 r11:   4 r12:   1 r13:   1 r14:   0 r15:   4 
r16: 104 r17: 139 r18:  69 r19:  57 r20:  36 r21:  52 r22:  43 r23:  17 
r24:  50 r25:  16 r26: 590 r27: 204 r28:  60 r29:   2 r30:1208 r31: 269 
x  :  67 y  : 799 z  :  50 
Registers used: 31 out of 35 (88.6%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  39 
adiw  :  77 and   :  10 andi  :  22 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  59 
brge  :   5 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   7 brmi  :   1 brne  : 135 brpl  :   4 brsh  :  26 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 282 
cbi   :  32 cbr   :   0 clc   :   1 clh   :   0 cli   :   5 cln   :   0 
clr   :  45 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :  10 
cp    :  39 cpc   :  20 cpi   : 141 cpse  :   0 dec   :  14 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   9 inc   :   5 jmp   :  74 ld    : 120 ldd   : 362 
ldi   : 471 lds   :  99 lpm   :  31 lsl   :   8 lsr   :  15 mov   : 112 
movw  : 107 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   1 
or    :   8 ori   :  16 out   :  56 pop   :  12 push  :  12 rcall : 118 
ret   :  90 reti  :   3 rjmp  : 188 rol   :   3 ror   :   0 sbc   :   9 
sbci  :  39 sbi   :  36 sbic  :   7 sbis  :   5 sbiw  :  55 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   1 seh   :   0 sei   :   3 sen   :   0 
ser   :   0 ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 298 std   : 115 sts   :  90 sub   :  18 subi  :  97 
swap  :   0 tst   :  14 wdr   :   2 
Instructions used: 72 out of 117 (61.5%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0025ba   8580   1078   9658  131072   7.4%
[.dseg] 0x000100 0x000b61      0   1633   1633    4096  39.9%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 19 warnings
