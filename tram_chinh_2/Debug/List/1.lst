
AVRASM ver. 2.1.30  D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm Sun Sep 10 11:31:37 2017

D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1090): warning: Register r5 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1091): warning: Register r4 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1092): warning: Register r7 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1093): warning: Register r6 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1094): warning: Register r9 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1095): warning: Register r10 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1096): warning: Register r11 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1097): warning: Register r8 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1098): warning: Register r12 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1099): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _P_Add=R5
                 	.DEF _Code_tay_cam1=R4
                 	.DEF _Code_tay_cam2=R7
                 	.DEF _Code_tay_cam3=R6
                 	.DEF _Code_tay_cam4=R9
                 	.DEF _count=R10
                 	.DEF _count_msb=R11
                 	.DEF _flag=R8
                 	.DEF _dem=R12
                 	.DEF _dem_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0280 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0323 	JMP  _timer2_ovf_isr
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0347 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 02c1 	JMP  _usart0_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 02ff 	JMP  _usart0_tx_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G105:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G105:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000146 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000147 00a1
000148 a2a3      	.DB  0xA1,0x0,0xA3,0xA2
000149 a400
00014a 0000      	.DB  0x0,0xA4,0x0,0x0
00014b 0000      	.DB  0x0,0x0
                 
                 _0x4:
00014c 0500
00014d 0501
00014e 0512
00014f 0523      	.DB  LOW(_0x3),HIGH(_0x3),LOW(_0x3+1),HIGH(_0x3+1),LOW(_0x3+18),HIGH(_0x3+18),LOW(_0x3+35),HIGH(_0x3+35)
000150 0534      	.DB  LOW(_0x3+52),HIGH(_0x3+52)
                 _0x0:
000151 3400
000152 375a
000153 4741
000154 4636      	.DB  0x0,0x34,0x5A,0x37,0x41,0x47,0x36,0x46
000155 4553
000156 3442
000157 5848
000158 5534      	.DB  0x53,0x45,0x42,0x34,0x48,0x58,0x34,0x55
000159 0058
00015a 5a4d
00015b 3053
00015c 4f56      	.DB  0x58,0x0,0x4D,0x5A,0x53,0x30,0x56,0x4F
00015d 4e4a
00015e 5750
00015f 4b4d
000160 4549      	.DB  0x4A,0x4E,0x50,0x57,0x4D,0x4B,0x49,0x45
000161 3736
000162 5000
000163 3053
000164 3332      	.DB  0x36,0x37,0x0,0x50,0x53,0x30,0x32,0x33
000165 3752
000166 3754
000167 564d
000168 4255      	.DB  0x52,0x37,0x54,0x37,0x4D,0x56,0x55,0x42
000169 4553
00016a 0057
00016b 3643
00016c 5631      	.DB  0x53,0x45,0x57,0x0,0x43,0x36,0x31,0x56
00016d 304c
00016e 365a
00016f 4449
000170 364b      	.DB  0x4C,0x30,0x5A,0x36,0x49,0x44,0x4B,0x36
000171 3957
000172 4752
000173 4500
000174 5252      	.DB  0x57,0x39,0x52,0x47,0x0,0x45,0x52,0x52
000175 524f
000176 4700
000177 5445
000178 2f20      	.DB  0x4F,0x52,0x0,0x47,0x45,0x54,0x20,0x2F
000179 7075
00017a 6164
00017b 6574
00017c 6b3f      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x3F,0x6B
00017d 7965
00017e 003d
00017f 5441
000180 432b      	.DB  0x65,0x79,0x3D,0x0,0x41,0x54,0x2B,0x43
000181 5049
000182 4f4d
000183 4544
000184 303d      	.DB  0x49,0x50,0x4D,0x4F,0x44,0x45,0x3D,0x30
000185 0d00
000186 000a
000187 4b4f
000188 4100      	.DB  0x0,0xD,0xA,0x0,0x4F,0x4B,0x0,0x41
000189 2b54
00018a 4943
00018b 4d50
00018c 5855      	.DB  0x54,0x2B,0x43,0x49,0x50,0x4D,0x55,0x58
00018d 313d
00018e 4100
00018f 2b54
000190 4943      	.DB  0x3D,0x31,0x0,0x41,0x54,0x2B,0x43,0x49
000191 5350
000192 4154
000193 5452
000194 303d      	.DB  0x50,0x53,0x54,0x41,0x52,0x54,0x3D,0x30
000195 222c
000196 4354
000197 2250
000198 222c      	.DB  0x2C,0x22,0x54,0x43,0x50,0x22,0x2C,0x22
000199 7061
00019a 2e69
00019b 6874
00019c 6e69      	.DB  0x61,0x70,0x69,0x2E,0x74,0x68,0x69,0x6E
00019d 7367
00019e 6570
00019f 6b61
0001a0 632e      	.DB  0x67,0x73,0x70,0x65,0x61,0x6B,0x2E,0x63
0001a1 6d6f
0001a2 2c22
0001a3 3038
0001a4 5300      	.DB  0x6F,0x6D,0x22,0x2C,0x38,0x30,0x0,0x53
0001a5 7265
0001a6 6576
0001a7 2072
0001a8 6f63      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x63,0x6F
0001a9 6e6e
0001aa 6365
0001ab 6574
0001ac 0064      	.DB  0x6E,0x6E,0x65,0x63,0x74,0x65,0x64,0x0
0001ad 6626
0001ae 6569
0001af 646c
0001b0 3d31      	.DB  0x26,0x66,0x69,0x65,0x6C,0x64,0x31,0x3D
0001b1 2600
0001b2 6966
0001b3 6c65
0001b4 3264      	.DB  0x0,0x26,0x66,0x69,0x65,0x6C,0x64,0x32
0001b5 003d
0001b6 6626
0001b7 6569
0001b8 646c      	.DB  0x3D,0x0,0x26,0x66,0x69,0x65,0x6C,0x64
0001b9 3d33
0001ba 4100
0001bb 2b54
0001bc 4943      	.DB  0x33,0x3D,0x0,0x41,0x54,0x2B,0x43,0x49
0001bd 5350
0001be 4e45
0001bf 3d44
0001c0 2c30      	.DB  0x50,0x53,0x45,0x4E,0x44,0x3D,0x30,0x2C
0001c1 3e00
0001c2 0020
0001c3 6552
0001c4 6563      	.DB  0x0,0x3E,0x20,0x0,0x52,0x65,0x63,0x65
0001c5 7669
0001c6 0065
0001c7 6f4e
0001c8 6564      	.DB  0x69,0x76,0x65,0x0,0x4E,0x6F,0x64,0x65
0001c9 203a
0001ca 5400
0001cb 6d65
0001cc 3a70      	.DB  0x3A,0x20,0x0,0x54,0x65,0x6D,0x70,0x3A
0001cd 0020
0001ce 7548
0001cf 696d
0001d0 3a64      	.DB  0x20,0x0,0x48,0x75,0x6D,0x69,0x64,0x3A
0001d1 0020
0001d2 6157
0001d3 6574
0001d4 3a72      	.DB  0x20,0x0,0x57,0x61,0x74,0x65,0x72,0x3A
0001d5 0020
0001d6 6d6d
0001d7 4100
0001d8 0d54      	.DB  0x20,0x0,0x6D,0x6D,0x0,0x41,0x54,0xD
0001d9 000a
0001da 5441
0001db 432b
0001dc 4d57      	.DB  0xA,0x0,0x41,0x54,0x2B,0x43,0x57,0x4D
0001dd 444f
0001de 3d45
0001df 0d31
0001e0 000a      	.DB  0x4F,0x44,0x45,0x3D,0x31,0xD,0xA,0x0
0001e1 5441
0001e2 432b
0001e3 4a57
0001e4 5041      	.DB  0x41,0x54,0x2B,0x43,0x57,0x4A,0x41,0x50
0001e5 223d
0001e6 6854
0001e7 7961
0001e8 545f      	.DB  0x3D,0x22,0x54,0x68,0x61,0x79,0x5F,0x54
0001e9 6168
0001ea 5f6f
0001eb 6564
0001ec 5f6f      	.DB  0x68,0x61,0x6F,0x5F,0x64,0x65,0x6F,0x5F
0001ed 6967
0001ee 6961
0001ef 2c22
0001f0 6322      	.DB  0x67,0x69,0x61,0x69,0x22,0x2C,0x22,0x63
0001f1 6968
0001f2 686e
0001f3 6178
0001f4 2263      	.DB  0x68,0x69,0x6E,0x68,0x78,0x61,0x63,0x22
0001f5 0a0d
0001f6 7300
0001f7 6174
0001f8 7472      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x72,0x74
0001f9 2500
0001fa 2064
0001fb 2500
0001fc 2064      	.DB  0x0,0x25,0x64,0x20,0x0,0x25,0x64,0x20
0001fd 0020      	.DB  0x20,0x0
                 _0x2020060:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1274): warning: .cseg .db misalignment - padding zero byte
0001fe 0001      	.DB  0x1
                 _0x2020000:
0001ff 4e2d
000200 4e41
000201 4900
000202 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1277): warning: .cseg .db misalignment - padding zero byte
000203 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000204 0001      	.DW  0x01
000205 0002      	.DW  0x02
000206 028c      	.DW  __REG_BIT_VARS*2
                 
000207 000a      	.DW  0x0A
000208 0004      	.DW  0x04
000209 028e      	.DW  __REG_VARS*2
                 
00020a 0001      	.DW  0x01
00020b 0500      	.DW  _0x3
00020c 02a2      	.DW  _0x0*2
                 
00020d 0011      	.DW  0x11
00020e 0501      	.DW  _0x3+1
00020f 02a3      	.DW  _0x0*2+1
                 
000210 0011      	.DW  0x11
000211 0512      	.DW  _0x3+18
000212 02b4      	.DW  _0x0*2+18
                 
000213 0011      	.DW  0x11
000214 0523      	.DW  _0x3+35
000215 02c5      	.DW  _0x0*2+35
                 
000216 0011      	.DW  0x11
000217 0534      	.DW  _0x3+52
000218 02d6      	.DW  _0x0*2+52
                 
000219 000a      	.DW  0x0A
00021a 0689      	.DW  _key
00021b 0298      	.DW  _0x4*2
                 
00021c 0006      	.DW  0x06
00021d 0545      	.DW  _0xCD
00021e 02e7      	.DW  _0x0*2+69
                 
00021f 0011      	.DW  0x11
000220 054b      	.DW  _0xCE
000221 02ed      	.DW  _0x0*2+75
                 
000222 000d      	.DW  0x0D
000223 055c      	.DW  _0xCE+17
000224 02fe      	.DW  _0x0*2+92
                 
000225 0003      	.DW  0x03
000226 0569      	.DW  _0xCE+30
000227 030b      	.DW  _0x0*2+105
                 
000228 0003      	.DW  0x03
000229 056c      	.DW  _0xCE+33
00022a 030e      	.DW  _0x0*2+108
                 
00022b 000c      	.DW  0x0C
00022c 056f      	.DW  _0xCE+36
00022d 0311      	.DW  _0x0*2+111
                 
00022e 0003      	.DW  0x03
00022f 057b      	.DW  _0xCE+48
000230 030b      	.DW  _0x0*2+105
                 
000231 0003      	.DW  0x03
000232 057e      	.DW  _0xCE+51
000233 030e      	.DW  _0x0*2+108
                 
000234 002c      	.DW  0x2C
000235 0581      	.DW  _0xCE+54
000236 031d      	.DW  _0x0*2+123
                 
000237 0003      	.DW  0x03
000238 05ad      	.DW  _0xCE+98
000239 030b      	.DW  _0x0*2+105
                 
00023a 0003      	.DW  0x03
00023b 05b0      	.DW  _0xCE+101
00023c 030e      	.DW  _0x0*2+108
                 
00023d 0011      	.DW  0x11
00023e 05b3      	.DW  _0xCE+104
00023f 0349      	.DW  _0x0*2+167
                 
000240 0009      	.DW  0x09
000241 05c4      	.DW  _0xCE+121
000242 035a      	.DW  _0x0*2+184
                 
000243 0009      	.DW  0x09
000244 05cd      	.DW  _0xCE+130
000245 0363      	.DW  _0x0*2+193
                 
000246 0009      	.DW  0x09
000247 05d6      	.DW  _0xCE+139
000248 036c      	.DW  _0x0*2+202
                 
000249 000e      	.DW  0x0E
00024a 05df      	.DW  _0xCE+148
00024b 0375      	.DW  _0x0*2+211
                 
00024c 0003      	.DW  0x03
00024d 05ed      	.DW  _0xCE+162
00024e 030b      	.DW  _0x0*2+105
                 
00024f 0003      	.DW  0x03
000250 05f0      	.DW  _0xCE+165
000251 0383      	.DW  _0x0*2+225
                 
000252 0003      	.DW  0x03
000253 05f3      	.DW  _0xCE+168
000254 030b      	.DW  _0x0*2+105
                 
000255 0008      	.DW  0x08
000256 05f6      	.DW  _0xCE+171
000257 0386      	.DW  _0x0*2+228
                 
000258 0007      	.DW  0x07
000259 05fe      	.DW  _0xD5
00025a 038e      	.DW  _0x0*2+236
                 
00025b 0007      	.DW  0x07
00025c 0605      	.DW  _0xD5+7
00025d 0395      	.DW  _0x0*2+243
                 
00025e 0008      	.DW  0x08
00025f 060c      	.DW  _0xD5+14
000260 039c      	.DW  _0x0*2+250
                 
000261 0008      	.DW  0x08
000262 0614      	.DW  _0xD5+22
000263 03a4      	.DW  _0x0*2+258
                 
000264 0003      	.DW  0x03
000265 061c      	.DW  _0xD5+30
000266 03ac      	.DW  _0x0*2+266
                 
000267 0005      	.DW  0x05
000268 061f      	.DW  _0xD6
000269 03af      	.DW  _0x0*2+269
                 
00026a 0003      	.DW  0x03
00026b 0624      	.DW  _0xD6+5
00026c 030e      	.DW  _0x0*2+108
                 
00026d 000e      	.DW  0x0E
00026e 0627      	.DW  _0xD6+8
00026f 03b4      	.DW  _0x0*2+274
                 
000270 0003      	.DW  0x03
000271 0635      	.DW  _0xD6+22
000272 030e      	.DW  _0x0*2+108
                 
000273 002b      	.DW  0x2B
000274 0638      	.DW  _0xD6+25
000275 03c2      	.DW  _0x0*2+288
                 
000276 0003      	.DW  0x03
000277 0663      	.DW  _0xD6+68
000278 030e      	.DW  _0x0*2+108
                 
000279 0006      	.DW  0x06
00027a 0666      	.DW  _0xD6+71
00027b 03ed      	.DW  _0x0*2+331
                 
00027c 0001      	.DW  0x01
00027d 0946      	.DW  __seed_G101
00027e 03fc      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00027f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000280 94f8      	CLI
000281 27ee      	CLR  R30
000282 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000283 e0f1      	LDI  R31,1
000284 bff5      	OUT  MCUCR,R31
000285 bfe5      	OUT  MCUCR,R30
000286 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000288 e08d      	LDI  R24,(14-2)+1
000289 e0a2      	LDI  R26,2
00028a 27bb      	CLR  R27
                 __CLEAR_REG:
00028b 93ed      	ST   X+,R30
00028c 958a      	DEC  R24
00028d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00028e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00028f e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000290 e0a0      	LDI  R26,LOW(__SRAM_START)
000291 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000292 93ed      	ST   X+,R30
000293 9701      	SBIW R24,1
000294 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000295 e0e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000296 e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000297 9185      	LPM  R24,Z+
000298 9195      	LPM  R25,Z+
000299 9700      	SBIW R24,0
00029a f061      	BREQ __GLOBAL_INI_END
00029b 91a5      	LPM  R26,Z+
00029c 91b5      	LPM  R27,Z+
00029d 9005      	LPM  R0,Z+
00029e 9015      	LPM  R1,Z+
00029f 01bf      	MOVW R22,R30
0002a0 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002a1 9005      	LPM  R0,Z+
0002a2 920d      	ST   X+,R0
0002a3 9701      	SBIW R24,1
0002a4 f7e1      	BRNE __GLOBAL_INI_LOOP
0002a5 01fb      	MOVW R30,R22
0002a6 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0002a7 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002a8 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002a9 bfed      	OUT  SPL,R30
0002aa e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002ab bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002ac e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002ad e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002ae 940c 0677 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;unsigned char P_Add;
                 ;unsigned char P_Add, Code_tay_cam1 = 0xA1, Code_tay_cam2 = 0xA2, Code_tay_cam3 = 0xA3, Code_tay_cam4 = 0xA4;
                 ;//unsigned char p=0,lan_bam=0;
                 ;int count;
                 ;bool flag;
                 ;unsigned char* key[] = {"", "4Z7AG6FSEB4HX4UX", "MZS0VOJNPWMKIE67", "PS023R7T7MVUBSEW", "C61VL0Z6IDK6W9RG"};
                 
                 	.DSEG
                 _0x3:
000500           	.BYTE 0x45
                 ;char cmd[250];
                 ;
                 ;unsigned int dem=0;
                 ;#define CE PORTA.3
                 ;#define CSN PORTA.2
                 ;#define SCK PORTA.4
                 ;#define MOSI PORTA.1
                 ;#define MISO PINA.5
                 ;#define IRQ PINA.0
                 ;
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE0)
                 ;#define RX_COMPLETE (1<<RXC0)
                 ;#define FRAMING_ERROR (1<<FE0)
                 ;#define PARITY_ERROR (1<<UPE0)
                 ;#define DATA_OVERRUN (1<<DOR0)
                 ;
                 ;// USART0 Receiver buffer
                 ;#define RX_BUFFER_SIZE0 64
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;#if RX_BUFFER_SIZE0 <= 256
                 ;unsigned char rx_wr_index0=0,rx_rd_index0=0;
                 ;#else
                 ;unsigned int rx_wr_index0=0,rx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE0 < 256
                 ;unsigned char rx_counter0=0;
                 ;#else
                 ;unsigned int rx_counter0=0;
                 ;#endif
                 ;
                 ;char buff[260];
                 ;int i = 0, time_s = 0;
                 ;long time_flow = 0;
                 ;
                 ;void del_string(unsigned char *s) {
                 ; 0000 0036 void del_string(unsigned char *s) {
                 
                 	.CSEG
                 _del_string:
                 ; .FSTART _del_string
                 ; 0000 0037     while (*s) {
0002b0 93ba      	ST   -Y,R27
0002b1 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0x5:
0002b2 81a8      	LD   R26,Y
0002b3 81b9      	LDD  R27,Y+1
0002b4 91ec      	LD   R30,X
0002b5 30e0      	CPI  R30,0
0002b6 f041      	BREQ _0x7
                 ; 0000 0038         *s = '\0';
0002b7 e0e0      	LDI  R30,LOW(0)
0002b8 93ec      	ST   X,R30
                 ; 0000 0039         s++;
0002b9 81e8      	LD   R30,Y
0002ba 81f9      	LDD  R31,Y+1
0002bb 9631      	ADIW R30,1
0002bc 83e8      	ST   Y,R30
0002bd 83f9      	STD  Y+1,R31
                 ; 0000 003A     }
0002be cff3      	RJMP _0x5
                 _0x7:
                 ; 0000 003B }
0002bf 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void) {
                 ; 0000 0041 interrupt [19] void usart0_rx_isr(void) {
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
0002c1 93aa      	ST   -Y,R26
0002c2 93ba      	ST   -Y,R27
0002c3 93ea      	ST   -Y,R30
0002c4 93fa      	ST   -Y,R31
0002c5 b7ef      	IN   R30,SREG
0002c6 93ea      	ST   -Y,R30
                 ; 0000 0042     char status,data;
                 ; 0000 0043     status=UCSR0A;
0002c7 931a      	ST   -Y,R17
0002c8 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0002c9 b11b      	IN   R17,11
                 ; 0000 0044     data=UDR0;
0002ca b10c      	IN   R16,12
                 ; 0000 0045     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0) {
0002cb 2fe1      	MOV  R30,R17
0002cc 71ec      	ANDI R30,LOW(0x1C)
0002cd f4e9      	BRNE _0x8
                 ; 0000 0046         rx_buffer0[rx_wr_index0++]=data;
0002ce 91e0 07cd 	LDS  R30,_rx_wr_index0
0002d0 5fef      	SUBI R30,-LOW(1)
0002d1 93e0 07cd 	STS  _rx_wr_index0,R30
0002d3 50e1      	SUBI R30,LOW(1)
0002d4 e0f0      	LDI  R31,0
0002d5 57e3      	SUBI R30,LOW(-_rx_buffer0)
0002d6 4ff8      	SBCI R31,HIGH(-_rx_buffer0)
0002d7 8300      	ST   Z,R16
                 ; 0000 0047 #if RX_BUFFER_SIZE0 == 256
                 ; 0000 0048         // special case for receiver buffer size=256
                 ; 0000 0049         if (++rx_counter0 == 0) rx_buffer_overflow0=1;
                 ; 0000 004A #else
                 ; 0000 004B         if (rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0=0;
0002d8 91a0 07cd 	LDS  R26,_rx_wr_index0
0002da 34a0      	CPI  R26,LOW(0x40)
0002db f419      	BRNE _0x9
0002dc e0e0      	LDI  R30,LOW(0)
0002dd 93e0 07cd 	STS  _rx_wr_index0,R30
                 ; 0000 004C         if (++rx_counter0 == RX_BUFFER_SIZE0) {
                 _0x9:
0002df 91a0 07cf 	LDS  R26,_rx_counter0
0002e1 5faf      	SUBI R26,-LOW(1)
0002e2 93a0 07cf 	STS  _rx_counter0,R26
0002e4 34a0      	CPI  R26,LOW(0x40)
0002e5 f429      	BRNE _0xA
                 ; 0000 004D             rx_counter0=0;
0002e6 e0e0      	LDI  R30,LOW(0)
0002e7 93e0 07cf 	STS  _rx_counter0,R30
                 ; 0000 004E             rx_buffer_overflow0=1;
0002e9 9468      	SET
0002ea f820      	BLD  R2,0
                 ; 0000 004F         }
                 ; 0000 0050 #endif
                 ; 0000 0051     }
                 _0xA:
                 ; 0000 0052     buff[i] = data;
                 _0x8:
0002eb 91e0 08d4 	LDS  R30,_i
0002ed 91f0 08d5 	LDS  R31,_i+1
0002ef 53e0      	SUBI R30,LOW(-_buff)
0002f0 4ff8      	SBCI R31,HIGH(-_buff)
0002f1 8300      	ST   Z,R16
                 ; 0000 0053     i++;
0002f2 eda4      	LDI  R26,LOW(_i)
0002f3 e0b8      	LDI  R27,HIGH(_i)
0002f4 940e 0fc7 	CALL SUBOPT_0x0
                 ; 0000 0054 }
0002f6 9109      	LD   R16,Y+
0002f7 9119      	LD   R17,Y+
0002f8 91e9      	LD   R30,Y+
0002f9 bfef      	OUT  SREG,R30
0002fa 91f9      	LD   R31,Y+
0002fb 91e9      	LD   R30,Y+
0002fc 91b9      	LD   R27,Y+
0002fd 91a9      	LD   R26,Y+
0002fe 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void) {
                 ; 0000 005A char getchar(void) {
                 ; 0000 005B     char data;
                 ; 0000 005C     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0000 005D     data=rx_buffer0[rx_rd_index0++];
                 ; 0000 005E #if RX_BUFFER_SIZE0 != 256
                 ; 0000 005F     if (rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0=0;
                 ; 0000 0060 #endif
                 ; 0000 0061 #asm("cli")
                 ; 0000 0062     --rx_counter0;
                 ; 0000 0063 #asm("sei")
                 ; 0000 0064     return data;
                 ; 0000 0065 }
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// USART0 Transmitter buffer
                 ;#define TX_BUFFER_SIZE0 64
                 ;char tx_buffer0[TX_BUFFER_SIZE0];
                 ;
                 ;#if TX_BUFFER_SIZE0 <= 256
                 ;unsigned char tx_wr_index0=0,tx_rd_index0=0;
                 ;#else
                 ;unsigned int tx_wr_index0=0,tx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if TX_BUFFER_SIZE0 < 256
                 ;unsigned char tx_counter0=0;
                 ;#else
                 ;unsigned int tx_counter0=0;
                 ;#endif
                 ;
                 ;// USART0 Transmitter interrupt service routine
                 ;interrupt [USART0_TXC] void usart0_tx_isr(void) {
                 ; 0000 007A interrupt [21] void usart0_tx_isr(void) {
                 _usart0_tx_isr:
                 ; .FSTART _usart0_tx_isr
0002ff 93aa      	ST   -Y,R26
000300 93ea      	ST   -Y,R30
000301 93fa      	ST   -Y,R31
000302 b7ef      	IN   R30,SREG
000303 93ea      	ST   -Y,R30
                 ; 0000 007B     if (tx_counter0) {
000304 91e0 091e 	LDS  R30,_tx_counter0
000306 30e0      	CPI  R30,0
000307 f0a9      	BREQ _0xF
                 ; 0000 007C         --tx_counter0;
000308 50e1      	SUBI R30,LOW(1)
000309 93e0 091e 	STS  _tx_counter0,R30
                 ; 0000 007D         UDR0=tx_buffer0[tx_rd_index0++];
00030b 91e0 091d 	LDS  R30,_tx_rd_index0
00030d 5fef      	SUBI R30,-LOW(1)
00030e 93e0 091d 	STS  _tx_rd_index0,R30
000310 50e1      	SUBI R30,LOW(1)
000311 e0f0      	LDI  R31,0
000312 52e4      	SUBI R30,LOW(-_tx_buffer0)
000313 4ff7      	SBCI R31,HIGH(-_tx_buffer0)
000314 81e0      	LD   R30,Z
000315 b9ec      	OUT  0xC,R30
                 ; 0000 007E #if TX_BUFFER_SIZE0 != 256
                 ; 0000 007F         if (tx_rd_index0 == TX_BUFFER_SIZE0) tx_rd_index0=0;
000316 91a0 091d 	LDS  R26,_tx_rd_index0
000318 34a0      	CPI  R26,LOW(0x40)
000319 f419      	BRNE _0x10
00031a e0e0      	LDI  R30,LOW(0)
00031b 93e0 091d 	STS  _tx_rd_index0,R30
                 ; 0000 0080 #endif
                 ; 0000 0081     }
                 _0x10:
                 ; 0000 0082 }
                 _0xF:
00031d 91e9      	LD   R30,Y+
00031e bfef      	OUT  SREG,R30
00031f 91f9      	LD   R31,Y+
000320 91e9      	LD   R30,Y+
000321 91a9      	LD   R26,Y+
000322 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0084 {
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
000323 93ea      	ST   -Y,R30
000324 93fa      	ST   -Y,R31
000325 b7ef      	IN   R30,SREG
000326 93ea      	ST   -Y,R30
                 ; 0000 0085 TCNT2=0xB2;    //10ms
000327 ebe2      	LDI  R30,LOW(178)
000328 bde4      	OUT  0x24,R30
                 ; 0000 0086 if(flag == true)
000329 e0e1      	LDI  R30,LOW(1)
00032a 15e8      	CP   R30,R8
00032b f419      	BRNE _0x11
                 ; 0000 0087     dem++;
00032c 01f6      	MOVW R30,R12
00032d 9631      	ADIW R30,1
00032e 016f      	MOVW R12,R30
                 ; 0000 0088 if(dem == 500){
                 _0x11:
00032f efe4      	LDI  R30,LOW(500)
000330 e0f1      	LDI  R31,HIGH(500)
000331 15ec      	CP   R30,R12
000332 05fd      	CPC  R31,R13
000333 f471      	BRNE _0x12
                 ; 0000 0089     flag = false;
000334 2488      	CLR  R8
                 ; 0000 008A     count++;
000335 01f5      	MOVW R30,R10
000336 9631      	ADIW R30,1
000337 015f      	MOVW R10,R30
                 ; 0000 008B     dem = 0;
000338 24cc      	CLR  R12
000339 24dd      	CLR  R13
                 ; 0000 008C     if(count == 5)
00033a e0e5      	LDI  R30,LOW(5)
00033b e0f0      	LDI  R31,HIGH(5)
00033c 15ea      	CP   R30,R10
00033d 05fb      	CPC  R31,R11
00033e f419      	BRNE _0x13
                 ; 0000 008D         count = 1;
00033f e0e1      	LDI  R30,LOW(1)
000340 e0f0      	LDI  R31,HIGH(1)
000341 015f      	MOVW R10,R30
                 ; 0000 008E }
                 _0x13:
                 ; 0000 008F }
                 _0x12:
000342 91e9      	LD   R30,Y+
000343 bfef      	OUT  SREG,R30
000344 91f9      	LD   R31,Y+
000345 91e9      	LD   R30,Y+
000346 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void) {
                 ; 0000 0090 interrupt [17] void timer0_ovf_isr(void) {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000347 936a      	ST   -Y,R22
000348 937a      	ST   -Y,R23
000349 938a      	ST   -Y,R24
00034a 939a      	ST   -Y,R25
00034b 93aa      	ST   -Y,R26
00034c 93ba      	ST   -Y,R27
00034d 93ea      	ST   -Y,R30
00034e 93fa      	ST   -Y,R31
00034f b7ef      	IN   R30,SREG
000350 93ea      	ST   -Y,R30
                 ; 0000 0091     //0.02 ms => 50k = 1s.
                 ; 0000 0092     TCNT0=0x60;
000351 e6e0      	LDI  R30,LOW(96)
000352 bfe2      	OUT  0x32,R30
                 ; 0000 0093     // Place your code here
                 ; 0000 0094     time_flow++;
000353 eda8      	LDI  R26,LOW(_time_flow)
000354 e0b8      	LDI  R27,HIGH(_time_flow)
000355 940e 114e 	CALL __GETD1P_INC
                +
000357 5fef     +SUBI R30 , LOW ( - 1 )
000358 4fff     +SBCI R31 , HIGH ( - 1 )
000359 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00035a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00035b 940e 1153 	CALL __PUTDP1_DEC
                 ; 0000 0095 
                 ; 0000 0096     if (time_flow == 50000) {
00035d 91a0 08d8 	LDS  R26,_time_flow
00035f 91b0 08d9 	LDS  R27,_time_flow+1
000361 9180 08da 	LDS  R24,_time_flow+2
000363 9190 08db 	LDS  R25,_time_flow+3
                +
000365 35a0     +CPI R26 , LOW ( 0xC350 )
000366 ece3     +LDI R30 , HIGH ( 0xC350 )
000367 07be     +CPC R27 , R30
000368 e0e0     +LDI R30 , BYTE3 ( 0xC350 )
000369 078e     +CPC R24 , R30
00036a e0e0     +LDI R30 , BYTE4 ( 0xC350 )
00036b 079e     +CPC R25 , R30
                 	__CPD2N 0xC350
00036c f469      	BRNE _0x14
                 ; 0000 0097         time_s++;
00036d eda6      	LDI  R26,LOW(_time_s)
00036e e0b8      	LDI  R27,HIGH(_time_s)
00036f 940e 0fc7 	CALL SUBOPT_0x0
                 ; 0000 0098         time_flow = 0;
000371 e0e0      	LDI  R30,LOW(0)
000372 93e0 08d8 	STS  _time_flow,R30
000374 93e0 08d9 	STS  _time_flow+1,R30
000376 93e0 08da 	STS  _time_flow+2,R30
000378 93e0 08db 	STS  _time_flow+3,R30
                 ; 0000 0099     }
                 ; 0000 009A }
                 _0x14:
00037a 91e9      	LD   R30,Y+
00037b bfef      	OUT  SREG,R30
00037c 91f9      	LD   R31,Y+
00037d 91e9      	LD   R30,Y+
00037e 91b9      	LD   R27,Y+
00037f 91a9      	LD   R26,Y+
000380 9199      	LD   R25,Y+
000381 9189      	LD   R24,Y+
000382 9179      	LD   R23,Y+
000383 9169      	LD   R22,Y+
000384 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Write a character to the USART0 Transmitter buffer
                 ;#define _ALTERNATE_PUTCHAR_
                 ;#pragma used+
                 ;void putchar(char c) {
                 ; 0000 00A0 void putchar(char c) {
                 _putchar:
                 ; .FSTART _putchar
                 ; 0000 00A1     while (tx_counter0 == TX_BUFFER_SIZE0);
000385 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x15:
000386 91a0 091e 	LDS  R26,_tx_counter0
000388 34a0      	CPI  R26,LOW(0x40)
000389 f3e1      	BREQ _0x15
                 ; 0000 00A2 #asm("cli")
00038a 94f8      	cli
                 ; 0000 00A3     if (tx_counter0 || ((UCSR0A & DATA_REGISTER_EMPTY)==0)) {
00038b 91e0 091e 	LDS  R30,_tx_counter0
00038d 30e0      	CPI  R30,0
00038e f411      	BRNE _0x19
00038f 995d      	SBIC 0xB,5
000390 c018      	RJMP _0x18
                 _0x19:
                 ; 0000 00A4         tx_buffer0[tx_wr_index0++]=c;
000391 91e0 091c 	LDS  R30,_tx_wr_index0
000393 5fef      	SUBI R30,-LOW(1)
000394 93e0 091c 	STS  _tx_wr_index0,R30
000396 50e1      	SUBI R30,LOW(1)
000397 e0f0      	LDI  R31,0
000398 52e4      	SUBI R30,LOW(-_tx_buffer0)
000399 4ff7      	SBCI R31,HIGH(-_tx_buffer0)
00039a 81a8      	LD   R26,Y
00039b 83a0      	STD  Z+0,R26
                 ; 0000 00A5 #if TX_BUFFER_SIZE0 != 256
                 ; 0000 00A6         if (tx_wr_index0 == TX_BUFFER_SIZE0) tx_wr_index0=0;
00039c 91a0 091c 	LDS  R26,_tx_wr_index0
00039e 34a0      	CPI  R26,LOW(0x40)
00039f f419      	BRNE _0x1B
0003a0 e0e0      	LDI  R30,LOW(0)
0003a1 93e0 091c 	STS  _tx_wr_index0,R30
                 ; 0000 00A7 #endif
                 ; 0000 00A8         ++tx_counter0;
                 _0x1B:
0003a3 91e0 091e 	LDS  R30,_tx_counter0
0003a5 5fef      	SUBI R30,-LOW(1)
0003a6 93e0 091e 	STS  _tx_counter0,R30
                 ; 0000 00A9     } else
0003a8 c002      	RJMP _0x1C
                 _0x18:
                 ; 0000 00AA         UDR0=c;
0003a9 81e8      	LD   R30,Y
0003aa b9ec      	OUT  0xC,R30
                 ; 0000 00AB #asm("sei")
                 _0x1C:
0003ab 9478      	sei
                 ; 0000 00AC }
0003ac 940c 0912 	JMP  _0x212000C
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;#include <nrf_code.h>
                 _config:
                 ; .FSTART _config
                +
0003ae e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0003af 958a     +DEC R24
0003b0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0003b1 e0e0      	LDI  R30,LOW(0)
0003b2 93ea      	ST   -Y,R30
0003b3 e1af      	LDI  R26,LOW(31)
0003b4 d024      	RCALL _RF_Write_TX
0003b5 e0a2      	LDI  R26,LOW(2)
0003b6 e0b0      	LDI  R27,0
0003b7 940e 111b 	CALL _delay_ms
0003b9 e0e7      	LDI  R30,LOW(7)
0003ba 93ea      	ST   -Y,R30
0003bb e7ae      	LDI  R26,LOW(126)
0003bc d01c      	RCALL _RF_Write_TX
0003bd e1ed      	LDI  R30,LOW(29)
0003be 93ea      	ST   -Y,R30
0003bf e0a4      	LDI  R26,LOW(4)
0003c0 d018      	RCALL _RF_Write_TX
0003c1 e0e5      	LDI  R30,LOW(5)
0003c2 93ea      	ST   -Y,R30
0003c3 e0a2      	LDI  R26,LOW(2)
0003c4 d014      	RCALL _RF_Write_TX
0003c5 9508      	RET
                 ; .FEND
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
0003c6 93aa      	ST   -Y,R26
0003c7 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003c8 e010      	LDI  R17,LOW(0)
                 _0x1E:
0003c9 3018      	CPI  R17,8
0003ca f450      	BRSH _0x1F
0003cb 81e9      	LDD  R30,Y+1
0003cc 78e0      	ANDI R30,LOW(0x80)
0003cd f411      	BRNE _0x20
0003ce 98d9      	CBI  0x1B,1
0003cf c001      	RJMP _0x21
                 _0x20:
0003d0 9ad9      	SBI  0x1B,1
                 _0x21:
0003d1 940e 0fcd 	CALL SUBOPT_0x1
0003d3 5f1f      	SUBI R17,-1
0003d4 cff4      	RJMP _0x1E
                 _0x1F:
0003d5 81e9      	LDD  R30,Y+1
0003d6 8118      	LDD  R17,Y+0
0003d7 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
0003d9 940e 0fdf 	CALL SUBOPT_0x2
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
0003db dfea      	RCALL _SPI_RW_TX
0003dc 93e0 0945 	STS  _result,R30
0003de 81a8      	LD   R26,Y
0003df dfe6      	RCALL _SPI_RW_TX
0003e0 940e 0fe5 	CALL SUBOPT_0x3
0003e2 91e0 0945 	LDS  R30,_result
0003e4 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 ;	Address -> Y+0
                 ;	Address -> Y+1
                 ;	Address2 -> Y+0
                 ;	command -> Y+0
                 ;	send -> Y+0
                 ;	send -> Y+0
                 _SPI_RW_RX:
                 ; .FSTART _SPI_RW_RX
0003e6 93aa      	ST   -Y,R26
0003e7 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003e8 e010      	LDI  R17,LOW(0)
                 _0x6B:
0003e9 3018      	CPI  R17,8
0003ea f450      	BRSH _0x6C
0003eb 81e9      	LDD  R30,Y+1
0003ec 78e0      	ANDI R30,LOW(0x80)
0003ed f411      	BRNE _0x6D
0003ee 98d9      	CBI  0x1B,1
0003ef c001      	RJMP _0x6E
                 _0x6D:
0003f0 9ad9      	SBI  0x1B,1
                 _0x6E:
0003f1 940e 0fcd 	CALL SUBOPT_0x1
0003f3 5f1f      	SUBI R17,-1
0003f4 cff4      	RJMP _0x6B
                 _0x6C:
0003f5 81e9      	LDD  R30,Y+1
0003f6 8118      	LDD  R17,Y+0
0003f7 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 _SPI_Read_RX:
                 ; .FSTART _SPI_Read_RX
0003f9 931a      	ST   -Y,R17
0003fa 930a      	ST   -Y,R16
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
0003fb e010      	LDI  R17,0
0003fc e000      	LDI  R16,LOW(0)
                 _0x74:
0003fd 3008      	CPI  R16,8
0003fe f478      	BRSH _0x75
                +
0003ff e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000400 958a     +DEC R24
000401 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000402 0f11      	LSL  R17
000403 9adc      	SBI  0x1B,4
                +
000404 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000405 958a     +DEC R24
000406 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000407 e0e0      	LDI  R30,0
000408 99cd      	SBIC 0x19,5
000409 e0e1      	LDI  R30,1
00040a 2b1e      	OR   R17,R30
00040b 98dc      	CBI  0x1B,4
00040c 5f0f      	SUBI R16,-1
00040d cfef      	RJMP _0x74
                 _0x75:
00040e 2fe1      	MOV  R30,R17
00040f 9109      	LD   R16,Y+
000410 9119      	LD   R17,Y+
000411 9508      	RET
                 ; .FEND
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
000412 9adb      	SBI  0x1B,3
                +
000413 e788     +LDI R24 , LOW ( 1400 )
000414 e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
000415 9701     +SBIW R24 , 1
000416 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
000417 98db      	CBI  0x1B,3
000418 9ada      	SBI  0x1B,2
000419 9508      	RET
                 ; .FEND
                 _RF_Write_RX:
                 ; .FSTART _RF_Write_RX
00041a 940e 0fdf 	CALL SUBOPT_0x2
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00041c 940e 0fea 	CALL SUBOPT_0x4
00041e 940e 0fe5 	CALL SUBOPT_0x3
000420 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write2_RX:
                 ; .FSTART _RF_Write2_RX
000422 940e 0fdf 	CALL SUBOPT_0x2
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000424 940e 0fea 	CALL SUBOPT_0x4
000426 81a8      	LD   R26,Y
000427 940e 0fea 	CALL SUBOPT_0x4
000429 81a8      	LD   R26,Y
00042a 940e 0fea 	CALL SUBOPT_0x4
00042c 940e 0fe5 	CALL SUBOPT_0x3
00042e 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write3_RX:
                 ; .FSTART _RF_Write3_RX
000430 940e 0fdf 	CALL SUBOPT_0x2
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000432 dfb3      	RCALL _SPI_RW_RX
000433 2da7      	MOV  R26,R7
000434 dfb1      	RCALL _SPI_RW_RX
000435 2da7      	MOV  R26,R7
000436 dfaf      	RCALL _SPI_RW_RX
000437 2da7      	MOV  R26,R7
000438 dfad      	RCALL _SPI_RW_RX
000439 2da7      	MOV  R26,R7
00043a 940e 0fea 	CALL SUBOPT_0x4
00043c 940e 0fe5 	CALL SUBOPT_0x3
00043e 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 _RF_Command_RX:
                 ; .FSTART _RF_Command_RX
000440 93aa      	ST   -Y,R26
                 ;	command -> Y+0
000441 98da      	CBI  0x1B,2
000442 81a8      	LD   R26,Y
000443 dfa2      	RCALL _SPI_RW_RX
000444 940e 0fe5 	CALL SUBOPT_0x3
000446 940c 0912 	JMP  _0x212000C
                 ; .FEND
                 _RF_Write_Address_RX:
                 ; .FSTART _RF_Write_Address_RX
000448 93aa      	ST   -Y,R26
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
000449 98da      	CBI  0x1B,2
00044a e0e3      	LDI  R30,LOW(3)
00044b 93ea      	ST   -Y,R30
00044c e0a3      	LDI  R26,LOW(3)
00044d dfcc      	RCALL _RF_Write_RX
00044e 940e 0fe5 	CALL SUBOPT_0x3
000450 98da      	CBI  0x1B,2
000451 e0ea      	LDI  R30,LOW(10)
000452 93ea      	ST   -Y,R30
000453 81ac      	LDD  R26,Y+4
000454 dfcd      	RCALL _RF_Write2_RX
000455 e1e0      	LDI  R30,LOW(16)
000456 93ea      	ST   -Y,R30
000457 81ac      	LDD  R26,Y+4
000458 dfc9      	RCALL _RF_Write2_RX
000459 e0eb      	LDI  R30,LOW(11)
00045a 93ea      	ST   -Y,R30
00045b 81ab      	LDD  R26,Y+3
00045c 940e 0fef 	CALL SUBOPT_0x5
00045e 81ab      	LDD  R26,Y+3
00045f dfd0      	RCALL _RF_Write3_RX
000460 e0ec      	LDI  R30,LOW(12)
000461 93ea      	ST   -Y,R30
000462 81aa      	LDD  R26,Y+2
000463 940e 0fef 	CALL SUBOPT_0x5
000465 81aa      	LDD  R26,Y+2
000466 dfc9      	RCALL _RF_Write3_RX
000467 e0ed      	LDI  R30,LOW(13)
000468 93ea      	ST   -Y,R30
000469 81a9      	LDD  R26,Y+1
00046a 940e 0fef 	CALL SUBOPT_0x5
00046c 81a9      	LDD  R26,Y+1
00046d dfc2      	RCALL _RF_Write3_RX
00046e 940c 0930 	JMP  _0x212000B
                 ; .FEND
                 ;	Address1 -> Y+0
                 _RF_Mode_RX:
                 ; .FSTART _RF_Mode_RX
000470 e0e0      	LDI  R30,LOW(0)
000471 93ea      	ST   -Y,R30
000472 e1af      	LDI  R26,LOW(31)
000473 dfa6      	RCALL _RF_Write_RX
000474 9adb      	SBI  0x1B,3
000475 9508      	RET
                 ; .FEND
                 _RF_Config_RX:
                 ; .FSTART _RF_Config_RX
000476 e1ec      	LDI  R30,LOW(28)
000477 940e 0ff4 	CALL SUBOPT_0x6
000479 924a      	ST   -Y,R4
00047a 927a      	ST   -Y,R7
00047b 926a      	ST   -Y,R6
00047c 2da9      	MOV  R26,R9
00047d dfca      	RCALL _RF_Write_Address_RX
00047e e0e2      	LDI  R30,LOW(2)
00047f 940e 0ff4 	CALL SUBOPT_0x6
000481 e0e1      	LDI  R30,LOW(1)
000482 940e 0ff4 	CALL SUBOPT_0x6
000484 9508      	RET
                 ; .FEND
                 _RF_Read_RX_3:
                 ; .FSTART _RF_Read_RX_3
000485 98db      	CBI  0x1B,3
000486 940e 0fe5 	CALL SUBOPT_0x3
000488 98da      	CBI  0x1B,2
000489 e6a1      	LDI  R26,LOW(97)
00048a df5b      	RCALL _SPI_RW_RX
                +
00048b e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00048c 958a     +DEC R24
00048d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
00048e df6a      	RCALL _SPI_Read_RX
00048f e0f0      	LDI  R31,0
000490 93e0 091f 	STS  _station_receive,R30
000492 93f0 0920 	STS  _station_receive+1,R31
000494 df64      	RCALL _SPI_Read_RX
                +
000495 e2a1     +LDI R26 , LOW ( _station_receive + ( 2 ) )
000496 e0b9     +LDI R27 , HIGH ( _station_receive + ( 2 ) )
                 	__POINTW2MN _station_receive,2
000497 940e 0ff8 	CALL SUBOPT_0x7
                +
000499 e2a3     +LDI R26 , LOW ( _station_receive + ( 4 ) )
00049a e0b9     +LDI R27 , HIGH ( _station_receive + ( 4 ) )
                 	__POINTW2MN _station_receive,4
00049b 940e 0ff8 	CALL SUBOPT_0x7
                +
00049d e2a5     +LDI R26 , LOW ( _station_receive + ( 6 ) )
00049e e0b9     +LDI R27 , HIGH ( _station_receive + ( 6 ) )
                 	__POINTW2MN _station_receive,6
00049f 940e 0ff8 	CALL SUBOPT_0x7
                +
0004a1 e2a7     +LDI R26 , LOW ( _station_receive + ( 8 ) )
0004a2 e0b9     +LDI R27 , HIGH ( _station_receive + ( 8 ) )
                 	__POINTW2MN _station_receive,8
0004a3 940e 0ff8 	CALL SUBOPT_0x7
                +
0004a5 e2a9     +LDI R26 , LOW ( _station_receive + ( 10 ) )
0004a6 e0b9     +LDI R27 , HIGH ( _station_receive + ( 10 ) )
                 	__POINTW2MN _station_receive,10
0004a7 e0f0      	LDI  R31,0
0004a8 93ed      	ST   X+,R30
0004a9 93fc      	ST   X,R31
0004aa 9ada      	SBI  0x1B,2
0004ab 9adb      	SBI  0x1B,3
0004ac e0e7      	LDI  R30,LOW(7)
0004ad 93ea      	ST   -Y,R30
0004ae e7ae      	LDI  R26,LOW(126)
0004af df6a      	RCALL _RF_Write_RX
0004b0 eea2      	LDI  R26,LOW(226)
0004b1 df8e      	RCALL _RF_Command_RX
0004b2 9508      	RET
                 ; .FEND
                 ;station_info data_send;
                 ;
                 ;void put_string (unsigned char *s) {
                 ; 0000 00B5 void put_string (unsigned char *s) {
                 _put_string:
                 ; .FSTART _put_string
                 ; 0000 00B6     while(*s) {
0004b3 93ba      	ST   -Y,R27
0004b4 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0xBC:
0004b5 81a8      	LD   R26,Y
0004b6 81b9      	LDD  R27,Y+1
0004b7 91ec      	LD   R30,X
0004b8 30e0      	CPI  R30,0
0004b9 f061      	BREQ _0xBE
                 ; 0000 00B7         putchar(*s);
0004ba 91ac      	LD   R26,X
0004bb dec9      	RCALL _putchar
                 ; 0000 00B8         delay_ms(50);
0004bc e3a2      	LDI  R26,LOW(50)
0004bd e0b0      	LDI  R27,0
0004be 940e 111b 	CALL _delay_ms
                 ; 0000 00B9         s++;
0004c0 81e8      	LD   R30,Y
0004c1 81f9      	LDD  R31,Y+1
0004c2 9631      	ADIW R30,1
0004c3 83e8      	ST   Y,R30
0004c4 83f9      	STD  Y+1,R31
                 ; 0000 00BA     }
0004c5 cfef      	RJMP _0xBC
                 _0xBE:
                 ; 0000 00BB }
0004c6 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;void refresh(int time_ms) {
                 ; 0000 00BD void refresh(int time_ms) {
                 _refresh:
                 ; .FSTART _refresh
                 ; 0000 00BE     delay_ms(time_ms);
0004c8 940e 0ffd 	CALL SUBOPT_0x8
                 ;	time_ms -> Y+0
0004ca 940e 111b 	CALL _delay_ms
                 ; 0000 00BF     glcd_clear();
0004cc 940e 1002 	CALL SUBOPT_0x9
                 ; 0000 00C0     glcd_moveto(0,0);
                 ; 0000 00C1     glcd_outtext(buff);
0004ce 940e 1009 	CALL SUBOPT_0xA
                 ; 0000 00C2     del_string(buff);
0004d0 eda0      	LDI  R26,LOW(_buff)
0004d1 e0b7      	LDI  R27,HIGH(_buff)
0004d2 dddd      	RCALL _del_string
                 ; 0000 00C3     i = 0;
0004d3 e0e0      	LDI  R30,LOW(0)
0004d4 93e0 08d4 	STS  _i,R30
0004d6 93e0 08d5 	STS  _i+1,R30
                 ; 0000 00C4 }
0004d8 940c 087f 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;bool wait_until(unsigned char *keyword, int time_out_s) {
                 ; 0000 00C6 _Bool wait_until(unsigned char *keyword, int time_out_s) {
                 _wait_until:
                 ; .FSTART _wait_until
                 ; 0000 00C7     /*     deu biet cai temp2 de lam gi nhung khong co thi no khong chay trong 1 so truong hop @@
                 ; 0000 00C8         Vi du nhap vao "Hell" thi no se tach thua ra them 2 char. Co the do vi tri o nho. Cha biet @@*/
                 ; 0000 00C9     char temp[20], temp2[20];
                 ; 0000 00CA     int i = 0, time_start, time_temp;
                 ; 0000 00CB 
                 ; 0000 00CC     del_string(temp);
0004da 93ba      	ST   -Y,R27
0004db 93aa      	ST   -Y,R26
0004dc 97a8      	SBIW R28,40
0004dd 940e 1182 	CALL __SAVELOCR6
                 ;	*keyword -> Y+48
                 ;	time_out_s -> Y+46
                 ;	temp -> Y+26
                 ;	temp2 -> Y+6
                 ;	i -> R16,R17
                 ;	time_start -> R18,R19
                 ;	time_temp -> R20,R21
                +
0004df e000     +LDI R16 , LOW ( 0 )
0004e0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0004e1 01de      	MOVW R26,R28
0004e2 965a      	ADIW R26,26
0004e3 ddcc      	RCALL _del_string
                 ; 0000 00CD 
                 ; 0000 00CE     while (*keyword) {
                 _0xBF:
0004e4 a9a8      	LDD  R26,Y+48
0004e5 a9b9      	LDD  R27,Y+48+1
0004e6 91ec      	LD   R30,X
0004e7 30e0      	CPI  R30,0
0004e8 f101      	BREQ _0xC1
                 ; 0000 00CF         temp[i] = *keyword;
0004e9 01f8      	MOVW R30,R16
0004ea 01de      	MOVW R26,R28
0004eb 965a      	ADIW R26,26
0004ec 0fea      	ADD  R30,R26
0004ed 1ffb      	ADC  R31,R27
0004ee 010f      	MOVW R0,R30
0004ef a9a8      	LDD  R26,Y+48
0004f0 a9b9      	LDD  R27,Y+48+1
0004f1 91ec      	LD   R30,X
0004f2 01d0      	MOVW R26,R0
0004f3 93ec      	ST   X,R30
                 ; 0000 00D0         temp2[i] = temp[i];
0004f4 01f8      	MOVW R30,R16
0004f5 01de      	MOVW R26,R28
0004f6 9616      	ADIW R26,6
0004f7 0fea      	ADD  R30,R26
0004f8 1ffb      	ADC  R31,R27
0004f9 010f      	MOVW R0,R30
0004fa 01de      	MOVW R26,R28
0004fb 965a      	ADIW R26,26
0004fc 0fa0      	ADD  R26,R16
0004fd 1fb1      	ADC  R27,R17
0004fe 91ec      	LD   R30,X
0004ff 01d0      	MOVW R26,R0
000500 93ec      	ST   X,R30
                 ; 0000 00D1         keyword++;
000501 a9e8      	LDD  R30,Y+48
000502 a9f9      	LDD  R31,Y+48+1
000503 9631      	ADIW R30,1
000504 abe8      	STD  Y+48,R30
000505 abf9      	STD  Y+48+1,R31
                 ; 0000 00D2         i++;
                +
000506 5f0f     +SUBI R16 , LOW ( - 1 )
000507 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 00D3     }
000508 cfdb      	RJMP _0xBF
                 _0xC1:
                 ; 0000 00D4 
                 ; 0000 00D5     time_start = time_s;
                +
000509 9120 08d6+LDS R18 , 0 + ( _time_s )
00050b 9130 08d7+LDS R19 , 0 + ( _time_s ) + 1
                 	__GETWRMN 18,19,0,_time_s
                 ; 0000 00D6 
                 ; 0000 00D7     while (1) {
                 _0xC2:
                 ; 0000 00D8         if (time_s < time_start) {
00050d 91a0 08d6 	LDS  R26,_time_s
00050f 91b0 08d7 	LDS  R27,_time_s+1
000511 17a2      	CP   R26,R18
000512 07b3      	CPC  R27,R19
000513 f45c      	BRGE _0xC5
                 ; 0000 00D9             time_temp = time_s + 60;
000514 91e0 08d6 	LDS  R30,_time_s
000516 91f0 08d7 	LDS  R31,_time_s+1
000518 96fc      	ADIW R30,60
000519 01af      	MOVW R20,R30
                 ; 0000 00DA             if (time_temp - time_start > time_out_s) {
00051a 01da      	MOVW R26,R20
00051b 940e 100d 	CALL SUBOPT_0xB
00051d f11c      	BRLT _0x212000F
                 ; 0000 00DB                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00DC                 return false;
                 ; 0000 00DD             }
                 ; 0000 00DE         } else {
00051e c007      	RJMP _0xC7
                 _0xC5:
                 ; 0000 00DF             if (time_s - time_start > time_out_s) {
00051f 91a0 08d6 	LDS  R26,_time_s
000521 91b0 08d7 	LDS  R27,_time_s+1
000523 940e 100d 	CALL SUBOPT_0xB
000525 f0dc      	BRLT _0x212000F
                 ; 0000 00E0                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00E1                 return false;
                 ; 0000 00E2             }
                 ; 0000 00E3         }
                 _0xC7:
                 ; 0000 00E4 
                 ; 0000 00E5         if ((strstr(buff, temp)) || (strstr(buff, temp2))) {
000526 940e 1014 	CALL SUBOPT_0xC
000528 01de      	MOVW R26,R28
000529 965c      	ADIW R26,28
00052a 940e 07e8 	CALL _strstr
00052c 9730      	SBIW R30,0
00052d f441      	BRNE _0xCA
00052e 940e 1014 	CALL SUBOPT_0xC
000530 01de      	MOVW R26,R28
000531 9618      	ADIW R26,8
000532 940e 07e8 	CALL _strstr
000534 9730      	SBIW R30,0
000535 f011      	BREQ _0xC9
                 _0xCA:
                 ; 0000 00E6             return true;
000536 e0e1      	LDI  R30,LOW(1)
000537 c00a      	RJMP _0x2120010
                 ; 0000 00E7         }
                 ; 0000 00E8         if (strstr(buff, "ERROR")) {
                 _0xC9:
000538 940e 1014 	CALL SUBOPT_0xC
                +
00053a e4a5     +LDI R26 , LOW ( _0xCD + ( 0 ) )
00053b e0b5     +LDI R27 , HIGH ( _0xCD + ( 0 ) )
                 	__POINTW2MN _0xCD,0
00053c 940e 07e8 	CALL _strstr
00053e 9730      	SBIW R30,0
00053f f409      	BRNE _0x212000F
                 ; 0000 00E9             /*glcd_outtext("Error found, attempting to continue..\r\n");
                 ; 0000 00EA             delay_ms(3000);
                 ; 0000 00EB             glcd_clear();
                 ; 0000 00EC             glcd_moveto(0,0);*/
                 ; 0000 00ED             return false;
                 ; 0000 00EE             //nen lam them ve cai nay nua
                 ; 0000 00EF         }
                 ; 0000 00F0     }
000540 cfcc      	RJMP _0xC2
                 ; 0000 00F1 	return false;
                 _0x212000F:
000541 e0e0      	LDI  R30,LOW(0)
                 _0x2120010:
000542 940e 1189 	CALL __LOADLOCR6
000544 96e2      	ADIW R28,50
000545 9508      	RET
                 ; 0000 00F2 }
                 ; .FEND
                 
                 	.DSEG
                 _0xCD:
000545           	.BYTE 0x6
                 ;
                 ;
                 ;bool read_and_send(unsigned char *s){
                 ; 0000 00F5 _Bool read_and_send(unsigned char *s){
                 
                 	.CSEG
                 _read_and_send:
                 ; .FSTART _read_and_send
                 ; 0000 00F6     // Thay nhung ham respones_read bang ham wait_until
                 ; 0000 00F7     char api_key[20], temp[20], temp2[20];
                 ; 0000 00F8     int length = 0, i = 0;
                 ; 0000 00F9     strcpy(cmd,"GET /update?key=");
000546 93ba      	ST   -Y,R27
000547 93aa      	ST   -Y,R26
000548 97ec      	SBIW R28,60
000549 940e 1184 	CALL __SAVELOCR4
                 ;	*s -> Y+64
                 ;	api_key -> Y+44
                 ;	temp -> Y+24
                 ;	temp2 -> Y+4
                 ;	length -> R16,R17
                 ;	i -> R18,R19
                +
00054b e000     +LDI R16 , LOW ( 0 )
00054c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00054d e020     +LDI R18 , LOW ( 0 )
00054e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00054f 940e 1019 	CALL SUBOPT_0xD
                +
000551 e4ab     +LDI R26 , LOW ( _0xCE + ( 0 ) )
000552 e0b5     +LDI R27 , HIGH ( _0xCE + ( 0 ) )
                 	__POINTW2MN _0xCE,0
000553 940e 07c2 	CALL _strcpy
                 ; 0000 00FA 
                 ; 0000 00FB     while (*s) {
                 _0xCF:
000555 940e 101e 	CALL SUBOPT_0xE
000557 30e0      	CPI  R30,0
000558 f0f9      	BREQ _0xD1
                 ; 0000 00FC         temp2[i] = *s;
000559 01f9      	MOVW R30,R18
00055a 01de      	MOVW R26,R28
00055b 9614      	ADIW R26,4
00055c 0fea      	ADD  R30,R26
00055d 1ffb      	ADC  R31,R27
00055e 01bf      	MOVW R22,R30
00055f 940e 101e 	CALL SUBOPT_0xE
000561 01db      	MOVW R26,R22
000562 93ec      	ST   X,R30
                 ; 0000 00FD         api_key[i] = temp2[i];
000563 01f9      	MOVW R30,R18
000564 01de      	MOVW R26,R28
000565 969c      	ADIW R26,44
000566 0fea      	ADD  R30,R26
000567 1ffb      	ADC  R31,R27
000568 010f      	MOVW R0,R30
000569 01de      	MOVW R26,R28
00056a 9614      	ADIW R26,4
00056b 0fa2      	ADD  R26,R18
00056c 1fb3      	ADC  R27,R19
00056d 91ec      	LD   R30,X
00056e 01d0      	MOVW R26,R0
00056f 93ec      	ST   X,R30
                 ; 0000 00FE         s++;
000570 01de      	MOVW R26,R28
000571 5ca0      	SUBI R26,LOW(-(64))
000572 4fbf      	SBCI R27,HIGH(-(64))
000573 940e 0fc7 	CALL SUBOPT_0x0
                 ; 0000 00FF         i++;
                +
000575 5f2f     +SUBI R18 , LOW ( - 1 )
000576 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0100     }
000577 cfdd      	RJMP _0xCF
                 _0xD1:
                 ; 0000 0101 
                 ; 0000 0102     put_string("AT+CIPMODE=0");
                +
000578 e5ac     +LDI R26 , LOW ( _0xCE + ( 17 ) )
000579 e0b5     +LDI R27 , HIGH ( _0xCE + ( 17 ) )
                 	__POINTW2MN _0xCE,17
00057a 940e 1026 	CALL SUBOPT_0xF
                 ; 0000 0103     delay_ms(300);
                 ; 0000 0104     put_string("\r\n");
                +
00057c e6a9     +LDI R26 , LOW ( _0xCE + ( 30 ) )
00057d e0b5     +LDI R27 , HIGH ( _0xCE + ( 30 ) )
                 	__POINTW2MN _0xCE,30
00057e df34      	RCALL _put_string
                 ; 0000 0105     wait_until("OK", 2);
                +
00057f e6ec     +LDI R30 , LOW ( _0xCE + ( 33 ) )
000580 e0f5     +LDI R31 , HIGH ( _0xCE + ( 33 ) )
                 	__POINTW1MN _0xCE,33
000581 940e 102c 	CALL SUBOPT_0x10
                 ; 0000 0106     refresh(0);
                 ; 0000 0107 
                 ; 0000 0108     put_string("AT+CIPMUX=1");
                +
000583 e6af     +LDI R26 , LOW ( _0xCE + ( 36 ) )
000584 e0b5     +LDI R27 , HIGH ( _0xCE + ( 36 ) )
                 	__POINTW2MN _0xCE,36
000585 940e 1026 	CALL SUBOPT_0xF
                 ; 0000 0109     delay_ms(300);
                 ; 0000 010A     put_string("\r\n");
                +
000587 e7ab     +LDI R26 , LOW ( _0xCE + ( 48 ) )
000588 e0b5     +LDI R27 , HIGH ( _0xCE + ( 48 ) )
                 	__POINTW2MN _0xCE,48
000589 df29      	RCALL _put_string
                 ; 0000 010B     wait_until("OK", 2);
                +
00058a e7ee     +LDI R30 , LOW ( _0xCE + ( 51 ) )
00058b e0f5     +LDI R31 , HIGH ( _0xCE + ( 51 ) )
                 	__POINTW1MN _0xCE,51
00058c 940e 102c 	CALL SUBOPT_0x10
                 ; 0000 010C     refresh(0);
                 ; 0000 010D 
                 ; 0000 010E 
                 ; 0000 010F 
                 ; 0000 0110     put_string("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80");
                +
00058e e8a1     +LDI R26 , LOW ( _0xCE + ( 54 ) )
00058f e0b5     +LDI R27 , HIGH ( _0xCE + ( 54 ) )
                 	__POINTW2MN _0xCE,54
000590 940e 1026 	CALL SUBOPT_0xF
                 ; 0000 0111     delay_ms(300);
                 ; 0000 0112     put_string("\r\n");
                +
000592 eaad     +LDI R26 , LOW ( _0xCE + ( 98 ) )
000593 e0b5     +LDI R27 , HIGH ( _0xCE + ( 98 ) )
                 	__POINTW2MN _0xCE,98
000594 df1e      	RCALL _put_string
                 ; 0000 0113     if(!wait_until("OK", 10))
                +
000595 ebe0     +LDI R30 , LOW ( _0xCE + ( 101 ) )
000596 e0f5     +LDI R31 , HIGH ( _0xCE + ( 101 ) )
                 	__POINTW1MN _0xCE,101
000597 940e 1036 	CALL SUBOPT_0x11
000599 30e0      	CPI  R30,0
00059a f411      	BRNE _0xD2
                 ; 0000 0114         return false;
00059b e0e0      	LDI  R30,LOW(0)
00059c c088      	RJMP _0x212000E
                 ; 0000 0115     refresh(2000);
                 _0xD2:
00059d eda0      	LDI  R26,LOW(2000)
00059e e0b7      	LDI  R27,HIGH(2000)
00059f df28      	RCALL _refresh
                 ; 0000 0116 
                 ; 0000 0117     glcd_clear();
0005a0 940e 1002 	CALL SUBOPT_0x9
                 ; 0000 0118     glcd_moveto(0,0);
                 ; 0000 0119     glcd_outtext("Server connected");
                +
0005a2 eba3     +LDI R26 , LOW ( _0xCE + ( 104 ) )
0005a3 e0b5     +LDI R27 , HIGH ( _0xCE + ( 104 ) )
                 	__POINTW2MN _0xCE,104
0005a4 940e 0c88 	CALL _glcd_outtext
                 ; 0000 011A 
                 ; 0000 011B     strcat(cmd, api_key);
0005a6 940e 1019 	CALL SUBOPT_0xD
0005a8 01de      	MOVW R26,R28
0005a9 969e      	ADIW R26,46
0005aa 940e 07b1 	CALL _strcat
                 ; 0000 011C     strcat(cmd, "&field1=");
0005ac 940e 1019 	CALL SUBOPT_0xD
                +
0005ae eca4     +LDI R26 , LOW ( _0xCE + ( 121 ) )
0005af e0b5     +LDI R27 , HIGH ( _0xCE + ( 121 ) )
                 	__POINTW2MN _0xCE,121
0005b0 940e 07b1 	CALL _strcat
                 ; 0000 011D     itoa(station_receive.temp, temp);
                +
0005b2 91e0 0925+LDS R30 , _station_receive + ( 6 )
0005b4 91f0 0926+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
0005b6 940e 103c 	CALL SUBOPT_0x12
                 ; 0000 011E     //itoa(200, temp);
                 ; 0000 011F     strcat(cmd, temp);
0005b8 940e 1043 	CALL SUBOPT_0x13
                 ; 0000 0120 
                 ; 0000 0121     length = strlen(temp);
0005ba 018f      	MOVW R16,R30
                 ; 0000 0122 
                 ; 0000 0123     strcat(cmd, "&field2=");
0005bb 940e 1019 	CALL SUBOPT_0xD
                +
0005bd ecad     +LDI R26 , LOW ( _0xCE + ( 130 ) )
0005be e0b5     +LDI R27 , HIGH ( _0xCE + ( 130 ) )
                 	__POINTW2MN _0xCE,130
0005bf 940e 07b1 	CALL _strcat
                 ; 0000 0124     itoa(station_receive.humi, temp);
                +
0005c1 91e0 0923+LDS R30 , _station_receive + ( 4 )
0005c3 91f0 0924+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
0005c5 940e 103c 	CALL SUBOPT_0x12
                 ; 0000 0125     //itoa(200, temp);
                 ; 0000 0126     strcat(cmd, temp);
0005c7 940e 1043 	CALL SUBOPT_0x13
                 ; 0000 0127 
                 ; 0000 0128     length += strlen(temp);
                +
0005c9 0f0e     +ADD R16 , R30
0005ca 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0129 
                 ; 0000 012A     strcat(cmd, "&field3=");
0005cb 940e 1019 	CALL SUBOPT_0xD
                +
0005cd eda6     +LDI R26 , LOW ( _0xCE + ( 139 ) )
0005ce e0b5     +LDI R27 , HIGH ( _0xCE + ( 139 ) )
                 	__POINTW2MN _0xCE,139
0005cf 940e 07b1 	CALL _strcat
                 ; 0000 012B     itoa(station_receive.water, temp);
                +
0005d1 91e0 0929+LDS R30 , _station_receive + ( 10 )
0005d3 91f0 092a+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
0005d5 940e 103c 	CALL SUBOPT_0x12
                 ; 0000 012C     //itoa(200, temp);
                 ; 0000 012D     strcat(cmd, temp);
0005d7 940e 1043 	CALL SUBOPT_0x13
                 ; 0000 012E 
                 ; 0000 012F     length += strlen(temp);
                +
0005d9 0f0e     +ADD R16 , R30
0005da 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0130 
                 ; 0000 0131     glcd_clear();
0005db 940e 1002 	CALL SUBOPT_0x9
                 ; 0000 0132     glcd_moveto(0,0);
                 ; 0000 0133     glcd_outtext(cmd);
0005dd e9a3      	LDI  R26,LOW(_cmd)
0005de e0b6      	LDI  R27,HIGH(_cmd)
0005df 940e 0c88 	CALL _glcd_outtext
                 ; 0000 0134 
                 ; 0000 0135     length += 58;//strlen(cmd);
                +
0005e1 5c06     +SUBI R16 , LOW ( - 58 )
0005e2 4f1f     +SBCI R17 , HIGH ( - 58 )
                 	__ADDWRN 16,17,58
                 ; 0000 0136     //length += 2;
                 ; 0000 0137 
                 ; 0000 0138     itoa(length, temp);
0005e3 931a      	ST   -Y,R17
0005e4 930a      	ST   -Y,R16
0005e5 01de      	MOVW R26,R28
0005e6 965a      	ADIW R26,26
0005e7 940e 07ff 	CALL _itoa
                 ; 0000 0139     glcd_moveto(0, 40);
0005e9 e0e0      	LDI  R30,LOW(0)
0005ea 93ea      	ST   -Y,R30
0005eb e2a8      	LDI  R26,LOW(40)
0005ec 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 013A     glcd_outtext(temp);
0005ee 01de      	MOVW R26,R28
0005ef 9658      	ADIW R26,24
0005f0 940e 0c88 	CALL _glcd_outtext
                 ; 0000 013B     delay_ms(1000);
0005f2 eea8      	LDI  R26,LOW(1000)
0005f3 e0b3      	LDI  R27,HIGH(1000)
0005f4 940e 111b 	CALL _delay_ms
                 ; 0000 013C 
                 ; 0000 013D 
                 ; 0000 013E 
                 ; 0000 013F     put_string("AT+CIPSEND=0,");
                +
0005f6 edaf     +LDI R26 , LOW ( _0xCE + ( 148 ) )
0005f7 e0b5     +LDI R27 , HIGH ( _0xCE + ( 148 ) )
                 	__POINTW2MN _0xCE,148
0005f8 940e 1026 	CALL SUBOPT_0xF
                 ; 0000 0140     delay_ms(300);
                 ; 0000 0141     put_string(temp);
0005fa 01de      	MOVW R26,R28
0005fb 9658      	ADIW R26,24
0005fc deb6      	RCALL _put_string
                 ; 0000 0142     delay_ms(1000);
0005fd eea8      	LDI  R26,LOW(1000)
0005fe e0b3      	LDI  R27,HIGH(1000)
0005ff 940e 111b 	CALL _delay_ms
                 ; 0000 0143     put_string("\r\n");
                +
000601 eead     +LDI R26 , LOW ( _0xCE + ( 162 ) )
000602 e0b5     +LDI R27 , HIGH ( _0xCE + ( 162 ) )
                 	__POINTW2MN _0xCE,162
000603 deaf      	RCALL _put_string
                 ; 0000 0144 
                 ; 0000 0145     if(!wait_until("> ", 5))
                +
000604 efe0     +LDI R30 , LOW ( _0xCE + ( 165 ) )
000605 e0f5     +LDI R31 , HIGH ( _0xCE + ( 165 ) )
                 	__POINTW1MN _0xCE,165
000606 93fa      	ST   -Y,R31
000607 93ea      	ST   -Y,R30
000608 e0a5      	LDI  R26,LOW(5)
000609 e0b0      	LDI  R27,0
00060a decf      	RCALL _wait_until
00060b 30e0      	CPI  R30,0
00060c f411      	BRNE _0xD3
                 ; 0000 0146         return false;
00060d e0e0      	LDI  R30,LOW(0)
00060e c016      	RJMP _0x212000E
                 ; 0000 0147 
                 ; 0000 0148     put_string(cmd);
                 _0xD3:
00060f e9a3      	LDI  R26,LOW(_cmd)
000610 e0b6      	LDI  R27,HIGH(_cmd)
000611 dea1      	RCALL _put_string
                 ; 0000 0149     delay_ms(200);
000612 eca8      	LDI  R26,LOW(200)
000613 e0b0      	LDI  R27,0
000614 940e 111b 	CALL _delay_ms
                 ; 0000 014A     put_string("\r\n");
                +
000616 efa3     +LDI R26 , LOW ( _0xCE + ( 168 ) )
000617 e0b5     +LDI R27 , HIGH ( _0xCE + ( 168 ) )
                 	__POINTW2MN _0xCE,168
000618 de9a      	RCALL _put_string
                 ; 0000 014B     if(!wait_until("Receive", 2))
                +
000619 efe6     +LDI R30 , LOW ( _0xCE + ( 171 ) )
00061a e0f5     +LDI R31 , HIGH ( _0xCE + ( 171 ) )
                 	__POINTW1MN _0xCE,171
00061b 93fa      	ST   -Y,R31
00061c 93ea      	ST   -Y,R30
00061d e0a2      	LDI  R26,LOW(2)
00061e e0b0      	LDI  R27,0
00061f deba      	RCALL _wait_until
000620 30e0      	CPI  R30,0
000621 f411      	BRNE _0xD4
                 ; 0000 014C         return false;
000622 e0e0      	LDI  R30,LOW(0)
000623 c001      	RJMP _0x212000E
                 ; 0000 014D 
                 ; 0000 014E     return true;
                 _0xD4:
000624 e0e1      	LDI  R30,LOW(1)
                 _0x212000E:
000625 940e 118b 	CALL __LOADLOCR4
000627 96ef      	ADIW R28,63
000628 9623      	ADIW R28,3
000629 9508      	RET
                 ; 0000 014F 
                 ; 0000 0150 }
                 ; .FEND
                 
                 	.DSEG
                 _0xCE:
00054b           	.BYTE 0xB3
                 ;
                 ;void print_border(){
                 ; 0000 0152 void print_border(){
                 
                 	.CSEG
                 _print_border:
                 ; .FSTART _print_border
                 ; 0000 0153     glcd_line(48,0, 48, 15);
00062a e3e0      	LDI  R30,LOW(48)
00062b 93ea      	ST   -Y,R30
00062c e0e0      	LDI  R30,LOW(0)
00062d 940e 104b 	CALL SUBOPT_0x14
                 ; 0000 0154     glcd_line(0, 15, 48, 15);
00062f e0ef      	LDI  R30,LOW(15)
000630 940e 104b 	CALL SUBOPT_0x14
                 ; 0000 0155 
                 ; 0000 0156     glcd_line(0,0,84,0);
000632 e0e0      	LDI  R30,LOW(0)
000633 93ea      	ST   -Y,R30
000634 e5e4      	LDI  R30,LOW(84)
000635 93ea      	ST   -Y,R30
000636 e0a0      	LDI  R26,LOW(0)
000637 940e 0cbe 	CALL _glcd_line
                 ; 0000 0157     glcd_line(84,0, 84, 48);
000639 e5e4      	LDI  R30,LOW(84)
00063a 93ea      	ST   -Y,R30
00063b e0e0      	LDI  R30,LOW(0)
00063c 940e 1054 	CALL SUBOPT_0x15
                 ; 0000 0158     glcd_line(0, 48, 84, 48);
00063e e3e0      	LDI  R30,LOW(48)
00063f 940e 1054 	CALL SUBOPT_0x15
                 ; 0000 0159     glcd_line(0, 0, 0, 48);
000641 e0e0      	LDI  R30,LOW(0)
000642 93ea      	ST   -Y,R30
000643 93ea      	ST   -Y,R30
000644 e3a0      	LDI  R26,LOW(48)
000645 940e 0cbe 	CALL _glcd_line
                 ; 0000 015A     glcd_moveto(3,3);
000647 e0e3      	LDI  R30,LOW(3)
000648 93ea      	ST   -Y,R30
000649 e0a3      	LDI  R26,LOW(3)
00064a 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 015B     glcd_outtext("Node: ");
                +
00064c efae     +LDI R26 , LOW ( _0xD5 + ( 0 ) )
00064d e0b5     +LDI R27 , HIGH ( _0xD5 + ( 0 ) )
                 	__POINTW2MN _0xD5,0
00064e 940e 105d 	CALL SUBOPT_0x16
                 ; 0000 015C 
                 ; 0000 015D     glcd_moveto(4, 18);
000650 e1a2      	LDI  R26,LOW(18)
000651 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 015E     glcd_outtext("Temp: ");
                +
000653 e0a5     +LDI R26 , LOW ( _0xD5 + ( 7 ) )
000654 e0b6     +LDI R27 , HIGH ( _0xD5 + ( 7 ) )
                 	__POINTW2MN _0xD5,7
000655 940e 105d 	CALL SUBOPT_0x16
                 ; 0000 015F     glcd_moveto(4, 28);
000657 e1ac      	LDI  R26,LOW(28)
000658 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 0160     glcd_outtext("Humid: ");
                +
00065a e0ac     +LDI R26 , LOW ( _0xD5 + ( 14 ) )
00065b e0b6     +LDI R27 , HIGH ( _0xD5 + ( 14 ) )
                 	__POINTW2MN _0xD5,14
00065c 940e 105d 	CALL SUBOPT_0x16
                 ; 0000 0161     glcd_moveto(4, 37);
00065e e2a5      	LDI  R26,LOW(37)
00065f 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 0162     glcd_outtext("Water: ");
                +
000661 e1a4     +LDI R26 , LOW ( _0xD5 + ( 22 ) )
000662 e0b6     +LDI R27 , HIGH ( _0xD5 + ( 22 ) )
                 	__POINTW2MN _0xD5,22
000663 940e 0c88 	CALL _glcd_outtext
                 ; 0000 0163     glcd_moveto(67, 28);
000665 e4e3      	LDI  R30,LOW(67)
000666 93ea      	ST   -Y,R30
000667 e1ac      	LDI  R26,LOW(28)
000668 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 0164     glcd_putchar(37);
00066a e2a5      	LDI  R26,LOW(37)
00066b 940e 0c26 	CALL _glcd_putchar
                 ; 0000 0165     glcd_moveto(67, 37);
00066d e4e3      	LDI  R30,LOW(67)
00066e 93ea      	ST   -Y,R30
00066f e2a5      	LDI  R26,LOW(37)
000670 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 0166     glcd_outtext("mm");
                +
000672 e1ac     +LDI R26 , LOW ( _0xD5 + ( 30 ) )
000673 e0b6     +LDI R27 , HIGH ( _0xD5 + ( 30 ) )
                 	__POINTW2MN _0xD5,30
000674 940e 0c88 	CALL _glcd_outtext
                 ; 0000 0167 }
000676 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xD5:
0005fe           	.BYTE 0x21
                 ;
                 ;
                 ;void main(void) {
                 ; 0000 016A void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 016B 
                 ; 0000 016C // Declare your local variables here
                 ; 0000 016D // Variable used to store graphic display
                 ; 0000 016E // controller initialization data
                 ; 0000 016F     GLCDINIT_t glcd_init_data;
                 ; 0000 0170 
                 ; 0000 0171 DDRA=(0<<DDA7) | (1<<DDA6) | (0<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (0<<DDA0);
000677 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000678 e5ee      	LDI  R30,LOW(94)
000679 bbea      	OUT  0x1A,R30
                 ; 0000 0172 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0173 PORTA=(0<<PORTA7) | (0<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
00067a e3ef      	LDI  R30,LOW(63)
00067b bbeb      	OUT  0x1B,R30
                 ; 0000 0174 // Port B initialization
                 ; 0000 0175 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0176     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00067c e0e8      	LDI  R30,LOW(8)
00067d bbe7      	OUT  0x17,R30
                 ; 0000 0177 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0178     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00067e e0e0      	LDI  R30,LOW(0)
00067f bbe8      	OUT  0x18,R30
                 ; 0000 0179 
                 ; 0000 017A // Port C initialization
                 ; 0000 017B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 017C     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000680 bbe4      	OUT  0x14,R30
                 ; 0000 017D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 017E     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (1<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000681 e0e8      	LDI  R30,LOW(8)
000682 bbe5      	OUT  0x15,R30
                 ; 0000 017F 
                 ; 0000 0180 // Port D initialization
                 ; 0000 0181 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0182     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000683 e0e0      	LDI  R30,LOW(0)
000684 bbe1      	OUT  0x11,R30
                 ; 0000 0183 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0184     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000685 bbe2      	OUT  0x12,R30
                 ; 0000 0185 
                 ; 0000 0186 // Port E initialization
                 ; 0000 0187 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0188     DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
000686 b9e2      	OUT  0x2,R30
                 ; 0000 0189 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 018A     PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
000687 b9e3      	OUT  0x3,R30
                 ; 0000 018B 
                 ; 0000 018C // Port F initialization
                 ; 0000 018D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 018E     DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
000688 93e0 0061 	STS  97,R30
                 ; 0000 018F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0190     PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
00068a 93e0 0062 	STS  98,R30
                 ; 0000 0191 
                 ; 0000 0192 // Port G initialization
                 ; 0000 0193 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0194     DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
00068c 93e0 0064 	STS  100,R30
                 ; 0000 0195 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0196     PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
00068e 93e0 0065 	STS  101,R30
                 ; 0000 0197 
                 ; 0000 0198 // Timer/Counter 0 initialization
                 ; 0000 0199 // Clock source: System Clock
                 ; 0000 019A // Clock value: 8000.000 kHz
                 ; 0000 019B // Mode: Normal top=0xFF
                 ; 0000 019C // OC0 output: Disconnected
                 ; 0000 019D // Timer Period: 0.02 ms
                 ; 0000 019E 
                 ; 0000 019F         ASSR=0<<AS0;
000690 bfe0      	OUT  0x30,R30
                 ; 0000 01A0         TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00);
000691 e0e1      	LDI  R30,LOW(1)
000692 bfe3      	OUT  0x33,R30
                 ; 0000 01A1         TCNT0=0x60;
000693 e6e0      	LDI  R30,LOW(96)
000694 bfe2      	OUT  0x32,R30
                 ; 0000 01A2         OCR0=0x00;
000695 e0e0      	LDI  R30,LOW(0)
000696 bfe1      	OUT  0x31,R30
                 ; 0000 01A3 
                 ; 0000 01A4 // Timer/Counter 1 initialization
                 ; 0000 01A5 // Clock source: System Clock
                 ; 0000 01A6 // Clock value: Timer1 Stopped
                 ; 0000 01A7 // Mode: Normal top=0xFFFF
                 ; 0000 01A8 // OC1A output: Disconnected
                 ; 0000 01A9 // OC1B output: Disconnected
                 ; 0000 01AA // OC1C output: Disconnected
                 ; 0000 01AB // Noise Canceler: Off
                 ; 0000 01AC // Input Capture on Falling Edge
                 ; 0000 01AD // Timer1 Overflow Interrupt: Off
                 ; 0000 01AE // Input Capture Interrupt: Off
                 ; 0000 01AF // Compare A Match Interrupt: Off
                 ; 0000 01B0 // Compare B Match Interrupt: Off
                 ; 0000 01B1 // Compare C Match Interrupt: Off
                 ; 0000 01B2     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
000697 bdef      	OUT  0x2F,R30
                 ; 0000 01B3     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000698 bdee      	OUT  0x2E,R30
                 ; 0000 01B4     TCNT1H=0x00;
000699 bded      	OUT  0x2D,R30
                 ; 0000 01B5     TCNT1L=0x00;
00069a bdec      	OUT  0x2C,R30
                 ; 0000 01B6     ICR1H=0x00;
00069b bde7      	OUT  0x27,R30
                 ; 0000 01B7     ICR1L=0x00;
00069c bde6      	OUT  0x26,R30
                 ; 0000 01B8     OCR1AH=0x00;
00069d bdeb      	OUT  0x2B,R30
                 ; 0000 01B9     OCR1AL=0x00;
00069e bdea      	OUT  0x2A,R30
                 ; 0000 01BA     OCR1BH=0x00;
00069f bde9      	OUT  0x29,R30
                 ; 0000 01BB     OCR1BL=0x00;
0006a0 bde8      	OUT  0x28,R30
                 ; 0000 01BC     OCR1CH=0x00;
0006a1 93e0 0079 	STS  121,R30
                 ; 0000 01BD     OCR1CL=0x00;
0006a3 93e0 0078 	STS  120,R30
                 ; 0000 01BE 
                 ; 0000 01BF // Timer/Counter 2 initialization
                 ; 0000 01C0 // Clock source: System Clock
                 ; 0000 01C1 // Clock value: 7.813 kHz
                 ; 0000 01C2 // Mode: Normal top=0xFF
                 ; 0000 01C3 // OC2 output: Disconnected
                 ; 0000 01C4 // Timer Period: 9.984 ms
                 ; 0000 01C5 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (1<<CS22) | (0<<CS21) | (1<<CS20);
0006a5 e0e5      	LDI  R30,LOW(5)
0006a6 bde5      	OUT  0x25,R30
                 ; 0000 01C6 TCNT2=0xB2;
0006a7 ebe2      	LDI  R30,LOW(178)
0006a8 bde4      	OUT  0x24,R30
                 ; 0000 01C7 OCR2=0x00;
0006a9 e0e0      	LDI  R30,LOW(0)
0006aa bde3      	OUT  0x23,R30
                 ; 0000 01C8 
                 ; 0000 01C9 // Timer/Counter 3 initialization
                 ; 0000 01CA // Clock source: System Clock
                 ; 0000 01CB // Clock value: Timer3 Stopped
                 ; 0000 01CC // Mode: Normal top=0xFFFF
                 ; 0000 01CD // OC3A output: Disconnected
                 ; 0000 01CE // OC3B output: Disconnected
                 ; 0000 01CF // OC3C output: Disconnected
                 ; 0000 01D0 // Noise Canceler: Off
                 ; 0000 01D1 // Input Capture on Falling Edge
                 ; 0000 01D2 // Timer3 Overflow Interrupt: Off
                 ; 0000 01D3 // Input Capture Interrupt: Off
                 ; 0000 01D4 // Compare A Match Interrupt: Off
                 ; 0000 01D5 // Compare B Match Interrupt: Off
                 ; 0000 01D6 // Compare C Match Interrupt: Off
                 ; 0000 01D7     TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
0006ab 93e0 008b 	STS  139,R30
                 ; 0000 01D8     TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
0006ad 93e0 008a 	STS  138,R30
                 ; 0000 01D9     TCNT3H=0x00;
0006af 93e0 0089 	STS  137,R30
                 ; 0000 01DA     TCNT3L=0x00;
0006b1 93e0 0088 	STS  136,R30
                 ; 0000 01DB     ICR3H=0x00;
0006b3 93e0 0081 	STS  129,R30
                 ; 0000 01DC     ICR3L=0x00;
0006b5 93e0 0080 	STS  128,R30
                 ; 0000 01DD     OCR3AH=0x00;
0006b7 93e0 0087 	STS  135,R30
                 ; 0000 01DE     OCR3AL=0x00;
0006b9 93e0 0086 	STS  134,R30
                 ; 0000 01DF     OCR3BH=0x00;
0006bb 93e0 0085 	STS  133,R30
                 ; 0000 01E0     OCR3BL=0x00;
0006bd 93e0 0084 	STS  132,R30
                 ; 0000 01E1     OCR3CH=0x00;
0006bf 93e0 0083 	STS  131,R30
                 ; 0000 01E2     OCR3CL=0x00;
0006c1 93e0 0082 	STS  130,R30
                 ; 0000 01E3 
                 ; 0000 01E4 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 01E5     TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0006c3 e4e1      	LDI  R30,LOW(65)
0006c4 bfe7      	OUT  0x37,R30
                 ; 0000 01E6     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0006c5 e0e0      	LDI  R30,LOW(0)
0006c6 93e0 007d 	STS  125,R30
                 ; 0000 01E7 
                 ; 0000 01E8 
                 ; 0000 01E9 // External Interrupt(s) initialization
                 ; 0000 01EA // INT0: Off
                 ; 0000 01EB // INT1: Off
                 ; 0000 01EC // INT2: Off
                 ; 0000 01ED // INT3: Off
                 ; 0000 01EE // INT4: Off
                 ; 0000 01EF // INT5: Off
                 ; 0000 01F0 // INT6: Off
                 ; 0000 01F1 // INT7: Off
                 ; 0000 01F2     EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0006c8 93e0 006a 	STS  106,R30
                 ; 0000 01F3     EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
0006ca bfea      	OUT  0x3A,R30
                 ; 0000 01F4     EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
0006cb bfe9      	OUT  0x39,R30
                 ; 0000 01F5 
                 ; 0000 01F6 // USART0 initialization
                 ; 0000 01F7 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 01F8 // USART0 Receiver: On
                 ; 0000 01F9 // USART0 Transmitter: On
                 ; 0000 01FA // USART0 Mode: Asynchronous
                 ; 0000 01FB // USART0 Baud Rate: 9600
                 ; 0000 01FC     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0006cc b9eb      	OUT  0xB,R30
                 ; 0000 01FD     UCSR0B=(1<<RXCIE0) | (1<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0006cd ede8      	LDI  R30,LOW(216)
0006ce b9ea      	OUT  0xA,R30
                 ; 0000 01FE     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0006cf e0e6      	LDI  R30,LOW(6)
0006d0 93e0 0095 	STS  149,R30
                 ; 0000 01FF     UBRR0H=0x00;
0006d2 e0e0      	LDI  R30,LOW(0)
0006d3 93e0 0090 	STS  144,R30
                 ; 0000 0200     UBRR0L=0x33;
0006d5 e3e3      	LDI  R30,LOW(51)
0006d6 b9e9      	OUT  0x9,R30
                 ; 0000 0201 
                 ; 0000 0202 // USART1 initialization
                 ; 0000 0203 // USART1 disabled
                 ; 0000 0204     UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0006d7 e0e0      	LDI  R30,LOW(0)
0006d8 93e0 009a 	STS  154,R30
                 ; 0000 0205 
                 ; 0000 0206 // Analog Comparator initialization
                 ; 0000 0207 // Analog Comparator: Off
                 ; 0000 0208 // The Analog Comparator's positive input is
                 ; 0000 0209 // connected to the AIN0 pin
                 ; 0000 020A // The Analog Comparator's negative input is
                 ; 0000 020B // connected to the AIN1 pin
                 ; 0000 020C     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0006da e8e0      	LDI  R30,LOW(128)
0006db b9e8      	OUT  0x8,R30
                 ; 0000 020D     SFIOR=(0<<ACME);
0006dc e0e0      	LDI  R30,LOW(0)
0006dd bde0      	OUT  0x20,R30
                 ; 0000 020E 
                 ; 0000 020F // ADC initialization
                 ; 0000 0210 // ADC disabled
                 ; 0000 0211     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0006de b9e6      	OUT  0x6,R30
                 ; 0000 0212 
                 ; 0000 0213 // SPI initialization
                 ; 0000 0214 // SPI disabled
                 ; 0000 0215     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0006df b9ed      	OUT  0xD,R30
                 ; 0000 0216 
                 ; 0000 0217 // TWI initialization
                 ; 0000 0218 // TWI disabled
                 ; 0000 0219     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0006e0 93e0 0074 	STS  116,R30
                 ; 0000 021A 
                 ; 0000 021B // Graphic Display Controller initialization
                 ; 0000 021C // The PCD8544 connections are specified in the
                 ; 0000 021D // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 021E // SDIN - PORTC Bit 7
                 ; 0000 021F // SCLK - PORTA Bit 7
                 ; 0000 0220 // D /C - PORTC Bit 6
                 ; 0000 0221 // /SCE - PORTC Bit 5
                 ; 0000 0222 // /RES - PORTC Bit 4
                 ; 0000 0223 
                 ; 0000 0224 // Specify the current font for displaying text
                 ; 0000 0225     glcd_init_data.font=font5x7;
0006e2 e8ec      	LDI  R30,LOW(_font5x7*2)
0006e3 e0f0      	LDI  R31,HIGH(_font5x7*2)
0006e4 83e8      	ST   Y,R30
0006e5 83f9      	STD  Y+1,R31
                 ; 0000 0226 // No function is used for reading
                 ; 0000 0227 // image data from external memory
                 ; 0000 0228     glcd_init_data.readxmem=NULL;
0006e6 e0e0      	LDI  R30,LOW(0)
0006e7 83ea      	STD  Y+2,R30
0006e8 83eb      	STD  Y+2+1,R30
                 ; 0000 0229 // No function is used for writing
                 ; 0000 022A // image data to external memory
                 ; 0000 022B     glcd_init_data.writexmem=NULL;
0006e9 83ec      	STD  Y+4,R30
0006ea 83ed      	STD  Y+4+1,R30
                 ; 0000 022C // Set the LCD temperature coefficient
                 ; 0000 022D     glcd_init_data.temp_coef=90;
0006eb 81ee      	LDD  R30,Y+6
0006ec 7fec      	ANDI R30,LOW(0xFC)
0006ed 60e2      	ORI  R30,2
0006ee 83ee      	STD  Y+6,R30
                 ; 0000 022E // Set the LCD bias
                 ; 0000 022F     glcd_init_data.bias=3;
0006ef 7ee3      	ANDI R30,LOW(0xE3)
0006f0 60ec      	ORI  R30,LOW(0xC)
0006f1 83ee      	STD  Y+6,R30
                 ; 0000 0230 // Set the LCD contrast control voltage VLCD
                 ; 0000 0231     glcd_init_data.vlcd=57;
0006f2 81ef      	LDD  R30,Y+7
0006f3 78e0      	ANDI R30,LOW(0x80)
0006f4 63e9      	ORI  R30,LOW(0x39)
0006f5 83ef      	STD  Y+7,R30
                 ; 0000 0232 
                 ; 0000 0233     glcd_init(&glcd_init_data);
0006f6 01de      	MOVW R26,R28
0006f7 940e 088b 	CALL _glcd_init
                 ; 0000 0234 
                 ; 0000 0235 // Global enable interrupts
                 ; 0000 0236 #asm("sei")
0006f9 9478      	sei
                 ; 0000 0237 
                 ; 0000 0238     put_string("AT\r\n");
                +
0006fa e1af     +LDI R26 , LOW ( _0xD6 + ( 0 ) )
0006fb e0b6     +LDI R27 , HIGH ( _0xD6 + ( 0 ) )
                 	__POINTW2MN _0xD6,0
0006fc ddb6      	RCALL _put_string
                 ; 0000 0239     wait_until("OK", 2);
                +
0006fd e2e4     +LDI R30 , LOW ( _0xD6 + ( 5 ) )
0006fe e0f6     +LDI R31 , HIGH ( _0xD6 + ( 5 ) )
                 	__POINTW1MN _0xD6,5
0006ff 940e 102c 	CALL SUBOPT_0x10
                 ; 0000 023A     refresh(0);
                 ; 0000 023B 
                 ; 0000 023C     put_string("AT+CWMODE=1\r\n");
                +
000701 e2a7     +LDI R26 , LOW ( _0xD6 + ( 8 ) )
000702 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 8 ) )
                 	__POINTW2MN _0xD6,8
000703 ddaf      	RCALL _put_string
                 ; 0000 023D     wait_until("OK", 2);
                +
000704 e3e5     +LDI R30 , LOW ( _0xD6 + ( 22 ) )
000705 e0f6     +LDI R31 , HIGH ( _0xD6 + ( 22 ) )
                 	__POINTW1MN _0xD6,22
000706 940e 102c 	CALL SUBOPT_0x10
                 ; 0000 023E     refresh(0);
                 ; 0000 023F 
                 ; 0000 0240     put_string("AT+CWJAP=\"Thay_Thao_deo_giai\",\"chinhxac\"\r\n");
                +
000708 e3a8     +LDI R26 , LOW ( _0xD6 + ( 25 ) )
000709 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 25 ) )
                 	__POINTW2MN _0xD6,25
00070a dda8      	RCALL _put_string
                 ; 0000 0241     wait_until("OK", 10);
                +
00070b e6e3     +LDI R30 , LOW ( _0xD6 + ( 68 ) )
00070c e0f6     +LDI R31 , HIGH ( _0xD6 + ( 68 ) )
                 	__POINTW1MN _0xD6,68
00070d 940e 1036 	CALL SUBOPT_0x11
                 ; 0000 0242     refresh(0);
00070f e0a0      	LDI  R26,LOW(0)
000710 e0b0      	LDI  R27,0
000711 ddb6      	RCALL _refresh
                 ; 0000 0243 
                 ; 0000 0244 
                 ; 0000 0245 //while(!read_and_send("6ZF1YB8AXISBSA2P"));
                 ; 0000 0246 delay_ms(3000);
000712 eba8      	LDI  R26,LOW(3000)
000713 e0bb      	LDI  R27,HIGH(3000)
000714 940e 111b 	CALL _delay_ms
                 ; 0000 0247 RF_Init_RX();
000716 dcfb      	RCALL _RF_Init_RX
                 ; 0000 0248 config();
000717 dc96      	RCALL _config
                 ; 0000 0249 RF_Config_RX();
000718 dd5d      	RCALL _RF_Config_RX
                 ; 0000 024A count = 1;
000719 e0e1      	LDI  R30,LOW(1)
00071a e0f0      	LDI  R31,HIGH(1)
00071b 015f      	MOVW R10,R30
                 ; 0000 024B 
                 ; 0000 024C glcd_moveto(10,10);
00071c e0ea      	LDI  R30,LOW(10)
00071d 93ea      	ST   -Y,R30
00071e e0aa      	LDI  R26,LOW(10)
00071f 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 024D glcd_clear();
000721 940e 0914 	CALL _glcd_clear
                 ; 0000 024E glcd_outtext("start");
                +
000723 e6a6     +LDI R26 , LOW ( _0xD6 + ( 71 ) )
000724 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 71 ) )
                 	__POINTW2MN _0xD6,71
000725 940e 0c88 	CALL _glcd_outtext
                 ; 0000 024F 
                 ; 0000 0250 while (1) {
                 _0xD7:
                 ; 0000 0251     RF_Mode_RX();
000727 dd48      	RCALL _RF_Mode_RX
                 ; 0000 0252 
                 ; 0000 0253     if(PINC.3 == 0){
000728 999b      	SBIC 0x13,3
000729 c007      	RJMP _0xDA
                 ; 0000 0254         delay_ms(500);
00072a efa4      	LDI  R26,LOW(500)
00072b e0b1      	LDI  R27,HIGH(500)
00072c 940e 111b 	CALL _delay_ms
                 ; 0000 0255         count++;
00072e 01f5      	MOVW R30,R10
00072f 9631      	ADIW R30,1
000730 015f      	MOVW R10,R30
                 ; 0000 0256     }
                 ; 0000 0257     if(IRQ == 0){
                 _0xDA:
000731 99c8      	SBIC 0x19,0
000732 c06c      	RJMP _0xDB
                 ; 0000 0258         RF_Read_RX_3();
000733 dd51      	RCALL _RF_Read_RX_3
                 ; 0000 0259 
                 ; 0000 025A         if(station_receive.flag == count){
000734 91a0 091f 	LDS  R26,_station_receive
000736 91b0 0920 	LDS  R27,_station_receive+1
000738 16aa      	CP   R10,R26
000739 06bb      	CPC  R11,R27
00073a f009      	BREQ PC+2
00073b c063      	RJMP _0xDC
                 ; 0000 025B             print_border();
00073c deed      	RCALL _print_border
                 ; 0000 025C             glcd_moveto(40, 3);
00073d e2e8      	LDI  R30,LOW(40)
00073e 93ea      	ST   -Y,R30
00073f e0a3      	LDI  R26,LOW(3)
000740 940e 0cb2 	CALL _glcd_moveto
                 ; 0000 025D             itoa(station_receive.flag, buff);
000742 91e0 091f 	LDS  R30,_station_receive
000744 91f0 0920 	LDS  R31,_station_receive+1
000746 93fa      	ST   -Y,R31
000747 93ea      	ST   -Y,R30
000748 eda0      	LDI  R26,LOW(_buff)
000749 e0b7      	LDI  R27,HIGH(_buff)
00074a 940e 07ff 	CALL _itoa
                 ; 0000 025E             glcd_outtext(buff);
00074c 940e 1009 	CALL SUBOPT_0xA
                 ; 0000 025F             glcd_moveto(46, 18);
00074e e2ee      	LDI  R30,LOW(46)
00074f 93ea      	ST   -Y,R30
000750 e1a2      	LDI  R26,LOW(18)
000751 940e 1062 	CALL SUBOPT_0x17
                 ; 0000 0260             sprintf(buff, "%d ", station_receive.temp);
                +
000753 efe3     +LDI R30 , LOW ( 2 * _0x0 + ( 337 ) )
000754 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 337 ) )
                 	__POINTW1FN _0x0,337
000755 93fa      	ST   -Y,R31
000756 93ea      	ST   -Y,R30
                +
000757 91e0 0925+LDS R30 , _station_receive + ( 6 )
000759 91f0 0926+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
00075b 940e 1065 	CALL SUBOPT_0x18
                 ; 0000 0261             glcd_outtext(buff);
                 ; 0000 0262             glcd_moveto(46, 28);
00075d e2ee      	LDI  R30,LOW(46)
00075e 93ea      	ST   -Y,R30
00075f e1ac      	LDI  R26,LOW(28)
000760 940e 1062 	CALL SUBOPT_0x17
                 ; 0000 0263             sprintf(buff, "%d ", station_receive.humi);
                +
000762 efe3     +LDI R30 , LOW ( 2 * _0x0 + ( 337 ) )
000763 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 337 ) )
                 	__POINTW1FN _0x0,337
000764 93fa      	ST   -Y,R31
000765 93ea      	ST   -Y,R30
                +
000766 91e0 0923+LDS R30 , _station_receive + ( 4 )
000768 91f0 0924+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
00076a 940e 1065 	CALL SUBOPT_0x18
                 ; 0000 0264             glcd_outtext(buff);
                 ; 0000 0265             glcd_moveto(46, 37);
00076c e2ee      	LDI  R30,LOW(46)
00076d 93ea      	ST   -Y,R30
00076e e2a5      	LDI  R26,LOW(37)
00076f 940e 1062 	CALL SUBOPT_0x17
                 ; 0000 0266             sprintf(buff, "%d  ", station_receive.water);
                +
000771 efe7     +LDI R30 , LOW ( 2 * _0x0 + ( 341 ) )
000772 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 341 ) )
                 	__POINTW1FN _0x0,341
000773 93fa      	ST   -Y,R31
000774 93ea      	ST   -Y,R30
                +
000775 91e0 0929+LDS R30 , _station_receive + ( 10 )
000777 91f0 092a+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
000779 940e 1065 	CALL SUBOPT_0x18
                 ; 0000 0267             glcd_outtext(buff);
                 ; 0000 0268             delay_ms(100);
00077b e6a4      	LDI  R26,LOW(100)
00077c e0b0      	LDI  R27,0
00077d 940e 111b 	CALL _delay_ms
                 ; 0000 0269             while(!read_and_send(key[count]));
                 _0xDD:
00077f 01f5      	MOVW R30,R10
000780 e8a9      	LDI  R26,LOW(_key)
000781 e0b6      	LDI  R27,HIGH(_key)
000782 0fee      	LSL  R30
000783 1fff      	ROL  R31
000784 0fae      	ADD  R26,R30
000785 1fbf      	ADC  R27,R31
000786 940e 114a 	CALL __GETW1P
000788 01df      	MOVW R26,R30
000789 ddbc      	RCALL _read_and_send
00078a 30e0      	CPI  R30,0
00078b f399      	BREQ _0xDD
                 ; 0000 026A             delay_ms(200);
00078c eca8      	LDI  R26,LOW(200)
00078d e0b0      	LDI  R27,0
00078e 940e 111b 	CALL _delay_ms
                 ; 0000 026B             glcd_clear();
000790 940e 0914 	CALL _glcd_clear
                 ; 0000 026C             count++;
000792 01f5      	MOVW R30,R10
000793 9631      	ADIW R30,1
000794 015f      	MOVW R10,R30
                 ; 0000 026D             if(count == 5)
000795 e0e5      	LDI  R30,LOW(5)
000796 e0f0      	LDI  R31,HIGH(5)
000797 15ea      	CP   R30,R10
000798 05fb      	CPC  R31,R11
000799 f419      	BRNE _0xE0
                 ; 0000 026E                 count = 1;
00079a e0e1      	LDI  R30,LOW(1)
00079b e0f0      	LDI  R31,HIGH(1)
00079c 015f      	MOVW R10,R30
                 ; 0000 026F             flag = true;
                 _0xE0:
00079d e0e1      	LDI  R30,LOW(1)
00079e 2e8e      	MOV  R8,R30
                 ; 0000 0270 
                 ; 0000 0271         }
                 ; 0000 0272     }
                 _0xDC:
                 ; 0000 0273     }
                 _0xDB:
00079f cf87      	RJMP _0xD7
                 ; 0000 0274 }
                 _0xE1:
0007a0 cfff      	RJMP _0xE1
                 ; .FEND
                 
                 	.DSEG
                 _0xD6:
00061f           	.BYTE 0x4D
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0007a1 93ba      	ST   -Y,R27
0007a2 93aa      	ST   -Y,R26
0007a3 81b9          ldd  r27,y+1
0007a4 81a8          ld   r26,y
0007a5 9610          adiw r26,0
0007a6 f031          breq memset1
0007a7 81fc          ldd  r31,y+4
0007a8 81eb          ldd  r30,y+3
0007a9 816a          ldd  r22,y+2
                 memset0:
0007aa 9361          st   z+,r22
0007ab 9711          sbiw r26,1
0007ac f7e9          brne memset0
                 memset1:
0007ad 81eb          ldd  r30,y+3
0007ae 81fc          ldd  r31,y+4
0007af 940c 0dec 	JMP  _0x2120005
                 ; .FEND
                 _strcat:
                 ; .FSTART _strcat
0007b1 93ba      	ST   -Y,R27
0007b2 93aa      	ST   -Y,R26
0007b3 91e9          ld   r30,y+
0007b4 91f9          ld   r31,y+
0007b5 91a9          ld   r26,y+
0007b6 91b9          ld   r27,y+
0007b7 01cd          movw r24,r26
                 strcat0:
0007b8 916d          ld   r22,x+
0007b9 2366          tst  r22
0007ba f7e9          brne strcat0
0007bb 9711          sbiw r26,1
                 strcat1:
0007bc 9161          ld   r22,z+
0007bd 936d          st   x+,r22
0007be 2366          tst  r22
0007bf f7e1          brne strcat1
0007c0 01fc          movw r30,r24
0007c1 9508          ret
                 ; .FEND
                 _strcpy:
                 ; .FSTART _strcpy
0007c2 93ba      	ST   -Y,R27
0007c3 93aa      	ST   -Y,R26
0007c4 91e9          ld   r30,y+
0007c5 91f9          ld   r31,y+
0007c6 91a9          ld   r26,y+
0007c7 91b9          ld   r27,y+
0007c8 01cd          movw r24,r26
                 strcpy0:
0007c9 9161          ld   r22,z+
0007ca 936d          st   x+,r22
0007cb 2366          tst  r22
0007cc f7e1          brne strcpy0
0007cd 01fc          movw r30,r24
0007ce 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0007cf 93ba      	ST   -Y,R27
0007d0 93aa      	ST   -Y,R26
0007d1 91a9          ld   r26,y+
0007d2 91b9          ld   r27,y+
0007d3 27ee          clr  r30
0007d4 27ff          clr  r31
                 strlen0:
0007d5 916d          ld   r22,x+
0007d6 2366          tst  r22
0007d7 f011          breq strlen1
0007d8 9631          adiw r30,1
0007d9 cffb          rjmp strlen0
                 strlen1:
0007da 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0007db 93ba      	ST   -Y,R27
0007dc 93aa      	ST   -Y,R26
0007dd 27aa          clr  r26
0007de 27bb          clr  r27
0007df 91e9          ld   r30,y+
0007e0 91f9          ld   r31,y+
                 strlenf0:
0007e1 9005      	lpm  r0,z+
0007e2 2000          tst  r0
0007e3 f011          breq strlenf1
0007e4 9611          adiw r26,1
0007e5 cffb          rjmp strlenf0
                 strlenf1:
0007e6 01fd          movw r30,r26
0007e7 9508          ret
                 ; .FEND
                 _strstr:
                 ; .FSTART _strstr
0007e8 93ba      	ST   -Y,R27
0007e9 93aa      	ST   -Y,R26
0007ea 81aa          ldd  r26,y+2
0007eb 81bb          ldd  r27,y+3
0007ec 01cd          movw r24,r26
                 strstr0:
0007ed 81e8          ld   r30,y
0007ee 81f9          ldd  r31,y+1
                 strstr1:
0007ef 9171          ld   r23,z+
0007f0 2377          tst  r23
0007f1 f411          brne strstr2
0007f2 01fc          movw r30,r24
0007f3 c009          rjmp strstr3
                 strstr2:
0007f4 916d          ld   r22,x+
0007f5 1767          cp   r22,r23
0007f6 f3c1          breq strstr1
0007f7 9601          adiw r24,1
0007f8 01dc          movw r26,r24
0007f9 2366          tst  r22
0007fa f791          brne strstr0
0007fb 27ee          clr  r30
0007fc 27ff          clr  r31
                 strstr3:
0007fd 940c 0930 	JMP  _0x212000B
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0007ff 93ba      	ST   -Y,R27
000800 93aa      	ST   -Y,R26
000801 91a9          ld   r26,y+
000802 91b9          ld   r27,y+
000803 91e9          ld   r30,y+
000804 91f9          ld   r31,y+
000805 9630          adiw r30,0
000806 f42a          brpl __itoa0
000807 95e0          com  r30
000808 95f0          com  r31
000809 9631          adiw r30,1
00080a e26d          ldi  r22,'-'
00080b 936d          st   x+,r22
                 __itoa0:
00080c 94e8          clt
00080d e180          ldi  r24,low(10000)
00080e e297          ldi  r25,high(10000)
00080f d00d          rcall __itoa1
000810 ee88          ldi  r24,low(1000)
000811 e093          ldi  r25,high(1000)
000812 d00a          rcall __itoa1
000813 e684          ldi  r24,100
000814 2799          clr  r25
000815 d007          rcall __itoa1
000816 e08a          ldi  r24,10
000817 d005          rcall __itoa1
000818 2f6e          mov  r22,r30
000819 d010          rcall __itoa5
00081a 2766          clr  r22
00081b 936c          st   x,r22
00081c 9508          ret
                 
                 __itoa1:
00081d 2766          clr	 r22
                 __itoa2:
00081e 17e8          cp   r30,r24
00081f 07f9          cpc  r31,r25
000820 f020          brlo __itoa3
000821 9563          inc  r22
000822 1be8          sub  r30,r24
000823 0bf9          sbc  r31,r25
000824 f7c9          brne __itoa2
                 __itoa3:
000825 2366          tst  r22
000826 f411          brne __itoa4
000827 f016          brts __itoa5
000828 9508          ret
                 __itoa4:
000829 9468          set
                 __itoa5:
00082a 5d60          subi r22,-0x30
00082b 936d          st   x+,r22
00082c 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
00082d 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
00082e 93aa      	ST   -Y,R26
00082f 931a      	ST   -Y,R17
000830 98ad      	CBI  0x15,5
000831 e018      	LDI  R17,LOW(8)
                 _0x2040004:
000832 dffa      	RCALL _pcd8544_delay_G102
000833 81e9      	LDD  R30,Y+1
000834 78e0      	ANDI R30,LOW(0x80)
000835 f011      	BREQ _0x2040006
000836 9aaf      	SBI  0x15,7
000837 c001      	RJMP _0x2040007
                 _0x2040006:
000838 98af      	CBI  0x15,7
                 _0x2040007:
000839 81e9      	LDD  R30,Y+1
00083a 0fee      	LSL  R30
00083b 83e9      	STD  Y+1,R30
00083c dff0      	RCALL _pcd8544_delay_G102
00083d 9adf      	SBI  0x1B,7
00083e dfee      	RCALL _pcd8544_delay_G102
00083f 98df      	CBI  0x1B,7
000840 5011      	SUBI R17,LOW(1)
000841 f781      	BRNE _0x2040004
000842 9aad      	SBI  0x15,5
000843 8118      	LDD  R17,Y+0
000844 c03a      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000845 93aa      	ST   -Y,R26
000846 98ae      	CBI  0x15,6
000847 81a8      	LD   R26,Y
000848 dfe5      	RCALL _pcd8544_wrbus_G102
000849 c0c8      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
00084a 93aa      	ST   -Y,R26
00084b 9aae      	SBI  0x15,6
00084c 81a8      	LD   R26,Y
00084d dfe0      	RCALL _pcd8544_wrbus_G102
00084e c0c3      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
00084f 93aa      	ST   -Y,R26
000850 931a      	ST   -Y,R17
000851 81e9      	LDD  R30,Y+1
000852 95e6      	LSR  R30
000853 95e6      	LSR  R30
000854 95e6      	LSR  R30
000855 2f1e      	MOV  R17,R30
000856 e5e4      	LDI  R30,LOW(84)
000857 9fe1      	MUL  R30,R17
000858 01f0      	MOVW R30,R0
000859 01df      	MOVW R26,R30
00085a 81ea      	LDD  R30,Y+2
00085b e0f0      	LDI  R31,0
00085c 0fea      	ADD  R30,R26
00085d 1ffb      	ADC  R31,R27
00085e 93e0 094a 	STS  _gfx_addr_G102,R30
000860 93f0 094b 	STS  _gfx_addr_G102+1,R31
000862 2fe1      	MOV  R30,R17
000863 8118      	LDD  R17,Y+0
000864 9623      	ADIW R28,3
000865 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000866 93aa      	ST   -Y,R26
000867 81e9      	LDD  R30,Y+1
000868 68e0      	ORI  R30,0x80
000869 2fae      	MOV  R26,R30
00086a dfda      	RCALL _pcd8544_wrcmd
00086b 81e9      	LDD  R30,Y+1
00086c 93ea      	ST   -Y,R30
00086d 81a9      	LDD  R26,Y+1
00086e dfe0      	RCALL _pcd8544_setaddr_G102
00086f 64e0      	ORI  R30,0x40
000870 2fae      	MOV  R26,R30
000871 dfd3      	RCALL _pcd8544_wrcmd
000872 c00c      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000873 93aa      	ST   -Y,R26
000874 81e9      	LDD  R30,Y+1
000875 93ea      	ST   -Y,R30
000876 81a9      	LDD  R26,Y+1
000877 dfee      	RCALL _pcd8544_gotoxy
000878 91e0 094a 	LDS  R30,_gfx_addr_G102
00087a 91f0 094b 	LDS  R31,_gfx_addr_G102+1
00087c 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
00087d 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
00087e 81e0      	LD   R30,Z
                 _0x212000D:
00087f 9622      	ADIW R28,2
000880 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000881 93aa      	ST   -Y,R26
000882 940e 106e 	CALL SUBOPT_0x19
000884 9731      	SBIW R30,1
000885 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
000886 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000887 81a8      	LD   R26,Y
000888 83a0      	STD  Z+0,R26
000889 dfc0      	RCALL _pcd8544_wrdata_G102
00088a c087      	RJMP _0x212000C
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
00088b 93ba      	ST   -Y,R27
00088c 93aa      	ST   -Y,R26
00088d 940e 1184 	CALL __SAVELOCR4
00088f 9aa5      	SBI  0x14,5
000890 9aad      	SBI  0x15,5
000891 9ad7      	SBI  0x1A,7
000892 98df      	CBI  0x1B,7
000893 9aa7      	SBI  0x14,7
000894 9aa6      	SBI  0x14,6
000895 9aa4      	SBI  0x14,4
000896 98ac      	CBI  0x15,4
000897 e0aa      	LDI  R26,LOW(10)
000898 e0b0      	LDI  R27,0
000899 940e 111b 	CALL _delay_ms
00089b 9aac      	SBI  0x15,4
00089c 81ec      	LDD  R30,Y+4
00089d 81fd      	LDD  R31,Y+4+1
00089e 9730      	SBIW R30,0
00089f f121      	BREQ _0x2040008
0008a0 81e6      	LDD  R30,Z+6
0008a1 70e3      	ANDI R30,LOW(0x3)
0008a2 2f1e      	MOV  R17,R30
0008a3 81ec      	LDD  R30,Y+4
0008a4 81fd      	LDD  R31,Y+4+1
0008a5 81e6      	LDD  R30,Z+6
0008a6 95e6      	LSR  R30
0008a7 95e6      	LSR  R30
0008a8 70e7      	ANDI R30,LOW(0x7)
0008a9 2f0e      	MOV  R16,R30
0008aa 81ec      	LDD  R30,Y+4
0008ab 81fd      	LDD  R31,Y+4+1
0008ac 81e7      	LDD  R30,Z+7
0008ad 77ef      	ANDI R30,0x7F
0008ae 2f3e      	MOV  R19,R30
0008af 81ac      	LDD  R26,Y+4
0008b0 81bd      	LDD  R27,Y+4+1
0008b1 940e 114a 	CALL __GETW1P
                +
0008b3 93e0 0670+STS _glcd_state + ( 4 ) , R30
0008b5 93f0 0671+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0008b7 9612      	ADIW R26,2
0008b8 940e 114a 	CALL __GETW1P
                +
0008ba 93e0 0685+STS _glcd_state + ( 25 ) , R30
0008bc 93f0 0686+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0008be 81ac      	LDD  R26,Y+4
0008bf 81bd      	LDD  R27,Y+4+1
0008c0 9614      	ADIW R26,4
0008c1 940e 114a 	CALL __GETW1P
0008c3 c00d      	RJMP _0x20400A0
                 _0x2040008:
0008c4 e010      	LDI  R17,LOW(0)
0008c5 e003      	LDI  R16,LOW(3)
0008c6 e332      	LDI  R19,LOW(50)
0008c7 e0e0      	LDI  R30,LOW(0)
0008c8 e0f0      	LDI  R31,HIGH(0)
                +
0008c9 93e0 0670+STS _glcd_state + ( 4 ) , R30
0008cb 93f0 0671+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0008cd 93e0 0685+STS _glcd_state + ( 25 ) , R30
0008cf 93f0 0686+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400A0:
                +
0008d1 93e0 0687+STS _glcd_state + ( 27 ) , R30
0008d3 93f0 0688+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0008d5 e2a1      	LDI  R26,LOW(33)
0008d6 df6e      	RCALL _pcd8544_wrcmd
0008d7 2fe1      	MOV  R30,R17
0008d8 60e4      	ORI  R30,4
0008d9 2fae      	MOV  R26,R30
0008da df6a      	RCALL _pcd8544_wrcmd
0008db 2fe0      	MOV  R30,R16
0008dc 61e0      	ORI  R30,0x10
0008dd 2fae      	MOV  R26,R30
0008de df66      	RCALL _pcd8544_wrcmd
0008df 2fe3      	MOV  R30,R19
0008e0 68e0      	ORI  R30,0x80
0008e1 2fae      	MOV  R26,R30
0008e2 df62      	RCALL _pcd8544_wrcmd
0008e3 e2a0      	LDI  R26,LOW(32)
0008e4 df60      	RCALL _pcd8544_wrcmd
0008e5 e0a1      	LDI  R26,LOW(1)
0008e6 d022      	RCALL _glcd_display
0008e7 e0e1      	LDI  R30,LOW(1)
0008e8 93e0 066c 	STS  _glcd_state,R30
0008ea e0e0      	LDI  R30,LOW(0)
                +
0008eb 93e0 066d+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0008ed e0e1      	LDI  R30,LOW(1)
                +
0008ee 93e0 0672+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0008f0 93e0 0673+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0008f2 93e0 0674+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0008f4 efef      	LDI  R30,LOW(255)
                +
0008f5 93e0 0675+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0008f7 e0e1      	LDI  R30,LOW(1)
                +
0008f8 93e0 067c+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0008fa e7ed     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0008fb e0f6     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0008fc 93fa      	ST   -Y,R31
0008fd 93ea      	ST   -Y,R30
0008fe efef      	LDI  R30,LOW(255)
0008ff 93ea      	ST   -Y,R30
000900 e0a8      	LDI  R26,LOW(8)
000901 e0b0      	LDI  R27,0
000902 940e 07a1 	CALL _memset
000904 d00f      	RCALL _glcd_clear
000905 e0e1      	LDI  R30,LOW(1)
000906 940e 118b 	CALL __LOADLOCR4
000908 c082      	RJMP _0x212000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
000909 93aa      	ST   -Y,R26
00090a 81e8      	LD   R30,Y
00090b 30e0      	CPI  R30,0
00090c f011      	BREQ _0x204000A
00090d e0ec      	LDI  R30,LOW(12)
00090e c001      	RJMP _0x204000B
                 _0x204000A:
00090f e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
000910 2fae      	MOV  R26,R30
000911 df33      	RCALL _pcd8544_wrcmd
                 _0x212000C:
000912 9621      	ADIW R28,1
000913 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000914 940e 1184 	CALL __SAVELOCR4
000916 e030      	LDI  R19,0
                +
000917 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000919 30e0      	CPI  R30,0
00091a f009      	BREQ _0x204000D
00091b ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
00091c e0e0      	LDI  R30,LOW(0)
00091d 93ea      	ST   -Y,R30
00091e e0a0      	LDI  R26,LOW(0)
00091f df46      	RCALL _pcd8544_gotoxy
                +
000920 ef08     +LDI R16 , LOW ( 504 )
000921 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
000922 01f8      	MOVW R30,R16
                +
000923 5001     +SUBI R16 , LOW ( 1 )
000924 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000925 9730      	SBIW R30,0
000926 f019      	BREQ _0x2040010
000927 2fa3      	MOV  R26,R19
000928 df58      	RCALL _pcd8544_wrbyte
000929 cff8      	RJMP _0x204000E
                 _0x2040010:
00092a e0e0      	LDI  R30,LOW(0)
00092b 93ea      	ST   -Y,R30
00092c e0a0      	LDI  R26,LOW(0)
00092d d384      	RCALL _glcd_moveto
00092e 940e 118b 	CALL __LOADLOCR4
                 _0x212000B:
000930 9624      	ADIW R28,4
000931 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000932 93aa      	ST   -Y,R26
000933 931a      	ST   -Y,R17
000934 930a      	ST   -Y,R16
000935 81ac      	LDD  R26,Y+4
000936 35a4      	CPI  R26,LOW(0x54)
000937 f418      	BRSH _0x2040012
000938 81ab      	LDD  R26,Y+3
000939 33a0      	CPI  R26,LOW(0x30)
00093a f010      	BRLO _0x2040011
                 _0x2040012:
00093b 940c 0dea 	JMP  _0x2120004
                 _0x2040011:
00093d 81ec      	LDD  R30,Y+4
00093e 93ea      	ST   -Y,R30
00093f 81ac      	LDD  R26,Y+4
000940 df32      	RCALL _pcd8544_rdbyte
000941 2f1e      	MOV  R17,R30
000942 81eb      	LDD  R30,Y+3
000943 70e7      	ANDI R30,LOW(0x7)
000944 e0a1      	LDI  R26,LOW(1)
000945 940e 112d 	CALL __LSLB12
000947 2f0e      	MOV  R16,R30
000948 81ea      	LDD  R30,Y+2
000949 30e0      	CPI  R30,0
00094a f011      	BREQ _0x2040014
00094b 2b10      	OR   R17,R16
00094c c003      	RJMP _0x2040015
                 _0x2040014:
00094d 2fe0      	MOV  R30,R16
00094e 95e0      	COM  R30
00094f 231e      	AND  R17,R30
                 _0x2040015:
000950 2fa1      	MOV  R26,R17
000951 df2f      	RCALL _pcd8544_wrbyte
000952 940c 0dea 	JMP  _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
000954 93aa      	ST   -Y,R26
000955 931a      	ST   -Y,R17
000956 81ed      	LDD  R30,Y+5
000957 93ea      	ST   -Y,R30
000958 81ad      	LDD  R26,Y+5
000959 df19      	RCALL _pcd8544_rdbyte
00095a 2f1e      	MOV  R17,R30
00095b 81e9      	LDD  R30,Y+1
00095c 30e7      	CPI  R30,LOW(0x7)
00095d f011      	BREQ _0x2040020
00095e 30e8      	CPI  R30,LOW(0x8)
00095f f439      	BRNE _0x2040021
                 _0x2040020:
000960 81eb      	LDD  R30,Y+3
000961 93ea      	ST   -Y,R30
000962 81aa      	LDD  R26,Y+2
000963 940e 0f61 	CALL _glcd_mappixcolor1bit
000965 83eb      	STD  Y+3,R30
000966 c008      	RJMP _0x2040022
                 _0x2040021:
000967 30e3      	CPI  R30,LOW(0x3)
000968 f421      	BRNE _0x2040024
000969 81eb      	LDD  R30,Y+3
00096a 95e0      	COM  R30
00096b 83eb      	STD  Y+3,R30
00096c c002      	RJMP _0x2040025
                 _0x2040024:
00096d 30e0      	CPI  R30,0
00096e f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
00096f 81ea      	LDD  R30,Y+2
000970 95e0      	COM  R30
000971 231e      	AND  R17,R30
000972 c002      	RJMP _0x2040027
                 _0x2040026:
000973 30e2      	CPI  R30,LOW(0x2)
000974 f429      	BRNE _0x2040028
                 _0x2040027:
000975 81ea      	LDD  R30,Y+2
000976 81ab      	LDD  R26,Y+3
000977 23ea      	AND  R30,R26
000978 2b1e      	OR   R17,R30
000979 c00e      	RJMP _0x204001E
                 _0x2040028:
00097a 30e1      	CPI  R30,LOW(0x1)
00097b f429      	BRNE _0x2040029
00097c 81ea      	LDD  R30,Y+2
00097d 81ab      	LDD  R26,Y+3
00097e 23ea      	AND  R30,R26
00097f 271e      	EOR  R17,R30
000980 c007      	RJMP _0x204001E
                 _0x2040029:
000981 30e4      	CPI  R30,LOW(0x4)
000982 f429      	BRNE _0x204001E
000983 81ea      	LDD  R30,Y+2
000984 95e0      	COM  R30
000985 81ab      	LDD  R26,Y+3
000986 2bea      	OR   R30,R26
000987 231e      	AND  R17,R30
                 _0x204001E:
000988 2fa1      	MOV  R26,R17
000989 def7      	RCALL _pcd8544_wrbyte
00098a 8118      	LDD  R17,Y+0
                 _0x212000A:
00098b 9626      	ADIW R28,6
00098c 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
00098d 93aa      	ST   -Y,R26
00098e 9723      	SBIW R28,3
00098f 940e 1182 	CALL __SAVELOCR6
000991 89a8      	LDD  R26,Y+16
000992 35a4      	CPI  R26,LOW(0x54)
000993 f448      	BRSH _0x204002C
000994 85af      	LDD  R26,Y+15
000995 33a0      	CPI  R26,LOW(0x30)
000996 f430      	BRSH _0x204002C
000997 85ae      	LDD  R26,Y+14
000998 30a0      	CPI  R26,LOW(0x0)
000999 f019      	BREQ _0x204002C
00099a 85ad      	LDD  R26,Y+13
00099b 30a0      	CPI  R26,LOW(0x0)
00099c f409      	BRNE _0x204002B
                 _0x204002C:
00099d c1d5      	RJMP _0x2120009
                 _0x204002B:
00099e 85ee      	LDD  R30,Y+14
00099f 87e8      	STD  Y+8,R30
0009a0 89a8      	LDD  R26,Y+16
0009a1 27bb      	CLR  R27
0009a2 85ee      	LDD  R30,Y+14
0009a3 e0f0      	LDI  R31,0
0009a4 0fae      	ADD  R26,R30
0009a5 1fbf      	ADC  R27,R31
0009a6 35a5      	CPI  R26,LOW(0x55)
0009a7 e0e0      	LDI  R30,HIGH(0x55)
0009a8 07be      	CPC  R27,R30
0009a9 f020      	BRLO _0x204002E
0009aa 89a8      	LDD  R26,Y+16
0009ab e5e4      	LDI  R30,LOW(84)
0009ac 1bea      	SUB  R30,R26
0009ad 87ee      	STD  Y+14,R30
                 _0x204002E:
0009ae 852d      	LDD  R18,Y+13
0009af 85af      	LDD  R26,Y+15
0009b0 27bb      	CLR  R27
0009b1 85ed      	LDD  R30,Y+13
0009b2 e0f0      	LDI  R31,0
0009b3 0fae      	ADD  R26,R30
0009b4 1fbf      	ADC  R27,R31
0009b5 97d1      	SBIW R26,49
0009b6 f020      	BRLO _0x204002F
0009b7 85af      	LDD  R26,Y+15
0009b8 e3e0      	LDI  R30,LOW(48)
0009b9 1bea      	SUB  R30,R26
0009ba 87ed      	STD  Y+13,R30
                 _0x204002F:
0009bb 85a9      	LDD  R26,Y+9
0009bc 30a6      	CPI  R26,LOW(0x6)
0009bd f009      	BREQ PC+2
0009be c05b      	RJMP _0x2040030
0009bf 85ec      	LDD  R30,Y+12
0009c0 30e1      	CPI  R30,LOW(0x1)
0009c1 f409      	BRNE _0x2040034
0009c2 c1b0      	RJMP _0x2120009
                 _0x2040034:
0009c3 30e3      	CPI  R30,LOW(0x3)
0009c4 f439      	BRNE _0x2040037
                +
0009c5 91e0 0687+LDS R30 , _glcd_state + ( 27 )
0009c7 91f0 0688+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0009c9 9730      	SBIW R30,0
0009ca f409      	BRNE _0x2040036
0009cb c1a7      	RJMP _0x2120009
                 _0x2040036:
                 _0x2040037:
0009cc 8508      	LDD  R16,Y+8
0009cd 85ed      	LDD  R30,Y+13
0009ce 95e6      	LSR  R30
0009cf 95e6      	LSR  R30
0009d0 95e6      	LSR  R30
0009d1 2f3e      	MOV  R19,R30
0009d2 2fe2      	MOV  R30,R18
0009d3 70e7      	ANDI R30,LOW(0x7)
0009d4 f419      	BRNE _0x2040039
0009d5 85ad      	LDD  R26,Y+13
0009d6 172a      	CP   R18,R26
0009d7 f0e9      	BREQ _0x2040038
                 _0x2040039:
0009d8 2fa0      	MOV  R26,R16
0009d9 27bb      	CLR  R27
0009da 2fe3      	MOV  R30,R19
0009db e0f0      	LDI  R31,0
0009dc 940e 1142 	CALL __MULW12U
0009de 85aa      	LDD  R26,Y+10
0009df 85bb      	LDD  R27,Y+10+1
0009e0 940e 1071 	CALL SUBOPT_0x1A
0009e2 9526      	LSR  R18
0009e3 9526      	LSR  R18
0009e4 9526      	LSR  R18
0009e5 2f53      	MOV  R21,R19
                 _0x204003B:
0009e6 935f      	PUSH R21
0009e7 5f5f      	SUBI R21,-1
0009e8 2fe2      	MOV  R30,R18
0009e9 91af      	POP  R26
0009ea 17ea      	CP   R30,R26
0009eb f048      	BRLO _0x204003D
0009ec 2f10      	MOV  R17,R16
                 _0x204003E:
0009ed 2fe1      	MOV  R30,R17
0009ee 5011      	SUBI R17,1
0009ef 30e0      	CPI  R30,0
0009f0 f019      	BREQ _0x2040040
0009f1 940e 1076 	CALL SUBOPT_0x1B
0009f3 cff9      	RJMP _0x204003E
                 _0x2040040:
0009f4 cff1      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0009f5 85ae      	LDD  R26,Y+14
0009f6 170a      	CP   R16,R26
0009f7 f111      	BREQ _0x2040041
0009f8 85ee      	LDD  R30,Y+14
0009f9 85aa      	LDD  R26,Y+10
0009fa 85bb      	LDD  R27,Y+10+1
0009fb e0f0      	LDI  R31,0
0009fc 940e 1071 	CALL SUBOPT_0x1A
0009fe 85ed      	LDD  R30,Y+13
0009ff 70e7      	ANDI R30,LOW(0x7)
000a00 f009      	BREQ _0x2040042
000a01 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
000a02 e020      	LDI  R18,LOW(0)
                 _0x2040043:
000a03 932f      	PUSH R18
000a04 5f2f      	SUBI R18,-1
000a05 2fe3      	MOV  R30,R19
000a06 91af      	POP  R26
000a07 17ae      	CP   R26,R30
000a08 f488      	BRSH _0x2040045
000a09 851e      	LDD  R17,Y+14
                 _0x2040046:
000a0a 931f      	PUSH R17
000a0b 5f1f      	SUBI R17,-1
000a0c 2fe0      	MOV  R30,R16
000a0d 91af      	POP  R26
000a0e 17ae      	CP   R26,R30
000a0f f418      	BRSH _0x2040048
000a10 940e 1076 	CALL SUBOPT_0x1B
000a12 cff7      	RJMP _0x2040046
                 _0x2040048:
000a13 85ee      	LDD  R30,Y+14
000a14 81ae      	LDD  R26,Y+6
000a15 81bf      	LDD  R27,Y+6+1
000a16 e0f0      	LDI  R31,0
000a17 940e 1071 	CALL SUBOPT_0x1A
000a19 cfe9      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
000a1a 85ef      	LDD  R30,Y+15
000a1b 70e7      	ANDI R30,LOW(0x7)
000a1c 2f3e      	MOV  R19,R30
                 _0x2040049:
000a1d 85ed      	LDD  R30,Y+13
000a1e 30e0      	CPI  R30,0
000a1f f409      	BRNE PC+2
000a20 c152      	RJMP _0x204004B
000a21 85ea      	LDD  R30,Y+10
000a22 85fb      	LDD  R31,Y+10+1
000a23 83ee      	STD  Y+6,R30
000a24 83ff      	STD  Y+6+1,R31
000a25 e010      	LDI  R17,LOW(0)
000a26 8908      	LDD  R16,Y+16
000a27 3030      	CPI  R19,0
000a28 f009      	BREQ PC+2
000a29 c066      	RJMP _0x204004C
000a2a 85ad      	LDD  R26,Y+13
000a2b 30a8      	CPI  R26,LOW(0x8)
000a2c f408      	BRSH PC+2
000a2d c05d      	RJMP _0x204004D
000a2e 85e9      	LDD  R30,Y+9
000a2f 30e0      	CPI  R30,0
000a30 f011      	BREQ _0x2040052
000a31 30e3      	CPI  R30,LOW(0x3)
000a32 f409      	BRNE _0x2040053
                 _0x2040052:
000a33 c002      	RJMP _0x2040054
                 _0x2040053:
000a34 30e7      	CPI  R30,LOW(0x7)
000a35 f409      	BRNE _0x2040055
                 _0x2040054:
000a36 c002      	RJMP _0x2040056
                 _0x2040055:
000a37 30e8      	CPI  R30,LOW(0x8)
000a38 f409      	BRNE _0x2040057
                 _0x2040056:
000a39 c002      	RJMP _0x2040058
                 _0x2040057:
000a3a 30e9      	CPI  R30,LOW(0x9)
000a3b f409      	BRNE _0x2040059
                 _0x2040058:
000a3c c002      	RJMP _0x204005A
                 _0x2040059:
000a3d 30ea      	CPI  R30,LOW(0xA)
000a3e f421      	BRNE _0x204005B
                 _0x204005A:
000a3f 930a      	ST   -Y,R16
000a40 89a8      	LDD  R26,Y+16
000a41 de24      	RCALL _pcd8544_gotoxy
000a42 c004      	RJMP _0x2040050
                 _0x204005B:
000a43 30e6      	CPI  R30,LOW(0x6)
000a44 f411      	BRNE _0x2040050
000a45 940e 1083 	CALL SUBOPT_0x1C
                 _0x2040050:
                 _0x204005D:
000a47 931f      	PUSH R17
000a48 5f1f      	SUBI R17,-1
000a49 85ee      	LDD  R30,Y+14
000a4a 91af      	POP  R26
000a4b 17ae      	CP   R26,R30
000a4c f5b8      	BRSH _0x204005F
000a4d 85a9      	LDD  R26,Y+9
000a4e 30a6      	CPI  R26,LOW(0x6)
000a4f f469      	BRNE _0x2040060
000a50 940e 1087 	CALL SUBOPT_0x1D
000a52 93fa      	ST   -Y,R31
000a53 93ea      	ST   -Y,R30
000a54 940e 106e 	CALL SUBOPT_0x19
000a56 9731      	SBIW R30,1
000a57 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
000a58 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000a59 81a0      	LD   R26,Z
000a5a 940e 0fa8 	CALL _glcd_writemem
000a5c c026      	RJMP _0x2040061
                 _0x2040060:
000a5d 85e9      	LDD  R30,Y+9
000a5e 30e9      	CPI  R30,LOW(0x9)
000a5f f411      	BRNE _0x2040065
000a60 e050      	LDI  R21,LOW(0)
000a61 c00e      	RJMP _0x2040066
                 _0x2040065:
000a62 30ea      	CPI  R30,LOW(0xA)
000a63 f411      	BRNE _0x2040064
000a64 ef5f      	LDI  R21,LOW(255)
000a65 c00a      	RJMP _0x2040066
                 _0x2040064:
000a66 940e 1087 	CALL SUBOPT_0x1D
000a68 940e 1090 	CALL SUBOPT_0x1E
000a6a 2f5e      	MOV  R21,R30
000a6b 85e9      	LDD  R30,Y+9
000a6c 30e7      	CPI  R30,LOW(0x7)
000a6d f011      	BREQ _0x204006D
000a6e 30e8      	CPI  R30,LOW(0x8)
000a6f f421      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
000a70 940e 1096 	CALL SUBOPT_0x1F
000a72 2f5e      	MOV  R21,R30
000a73 c006      	RJMP _0x204006F
                 _0x204006E:
000a74 30e3      	CPI  R30,LOW(0x3)
000a75 f411      	BRNE _0x2040071
000a76 9550      	COM  R21
000a77 c002      	RJMP _0x2040072
                 _0x2040071:
000a78 30e0      	CPI  R30,0
000a79 f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
000a7a 2fa5      	MOV  R26,R21
000a7b ddce      	RCALL _pcd8544_wrdata_G102
000a7c c006      	RJMP _0x204006B
                 _0x2040074:
000a7d 940e 109a 	CALL SUBOPT_0x20
000a7f efef      	LDI  R30,LOW(255)
000a80 93ea      	ST   -Y,R30
000a81 85ad      	LDD  R26,Y+13
000a82 ded1      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
000a83 cfc3      	RJMP _0x204005D
                 _0x204005F:
000a84 85ef      	LDD  R30,Y+15
000a85 5fe8      	SUBI R30,-LOW(8)
000a86 87ef      	STD  Y+15,R30
000a87 85ed      	LDD  R30,Y+13
000a88 50e8      	SUBI R30,LOW(8)
000a89 87ed      	STD  Y+13,R30
000a8a c0df      	RJMP _0x2040075
                 _0x204004D:
000a8b 855d      	LDD  R21,Y+13
000a8c e020      	LDI  R18,LOW(0)
000a8d e0e0      	LDI  R30,LOW(0)
000a8e 87ed      	STD  Y+13,R30
000a8f c081      	RJMP _0x2040076
                 _0x204004C:
000a90 2fe3      	MOV  R30,R19
000a91 85ad      	LDD  R26,Y+13
000a92 0fae      	ADD  R26,R30
000a93 30a9      	CPI  R26,LOW(0x9)
000a94 f420      	BRSH _0x2040077
000a95 852d      	LDD  R18,Y+13
000a96 e0e0      	LDI  R30,LOW(0)
000a97 87ed      	STD  Y+13,R30
000a98 c003      	RJMP _0x2040078
                 _0x2040077:
000a99 e0e8      	LDI  R30,LOW(8)
000a9a 1be3      	SUB  R30,R19
000a9b 2f2e      	MOV  R18,R30
                 _0x2040078:
000a9c 933a      	ST   -Y,R19
000a9d 2fa2      	MOV  R26,R18
000a9e 940e 0f56 	CALL _glcd_getmask
000aa0 2f4e      	MOV  R20,R30
000aa1 85e9      	LDD  R30,Y+9
000aa2 30e6      	CPI  R30,LOW(0x6)
000aa3 f529      	BRNE _0x204007C
000aa4 940e 1083 	CALL SUBOPT_0x1C
                 _0x204007D:
000aa6 931f      	PUSH R17
000aa7 5f1f      	SUBI R17,-1
000aa8 85ee      	LDD  R30,Y+14
000aa9 91af      	POP  R26
000aaa 17ae      	CP   R26,R30
000aab f4e0      	BRSH _0x204007F
000aac 940e 106e 	CALL SUBOPT_0x19
000aae 9731      	SBIW R30,1
000aaf 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
000ab0 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000ab1 81e0      	LD   R30,Z
000ab2 23e4      	AND  R30,R20
000ab3 2fae      	MOV  R26,R30
000ab4 2fe3      	MOV  R30,R19
000ab5 940e 1135 	CALL __LSRB12
000ab7 940e 10a0 	CALL SUBOPT_0x21
000ab9 2fe3      	MOV  R30,R19
000aba 2fa4      	MOV  R26,R20
000abb 940e 1135 	CALL __LSRB12
000abd 95e0      	COM  R30
000abe 21e1      	AND  R30,R1
000abf 2b5e      	OR   R21,R30
000ac0 940e 1087 	CALL SUBOPT_0x1D
000ac2 93fa      	ST   -Y,R31
000ac3 93ea      	ST   -Y,R30
000ac4 2fa5      	MOV  R26,R21
000ac5 940e 0fa8 	CALL _glcd_writemem
000ac7 cfde      	RJMP _0x204007D
                 _0x204007F:
000ac8 c02c      	RJMP _0x204007B
                 _0x204007C:
000ac9 30e9      	CPI  R30,LOW(0x9)
000aca f411      	BRNE _0x2040080
000acb e050      	LDI  R21,LOW(0)
000acc c003      	RJMP _0x2040081
                 _0x2040080:
000acd 30ea      	CPI  R30,LOW(0xA)
000ace f4a9      	BRNE _0x2040087
000acf ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
000ad0 940e 1096 	CALL SUBOPT_0x1F
000ad2 2fae      	MOV  R26,R30
000ad3 2fe3      	MOV  R30,R19
000ad4 940e 112d 	CALL __LSLB12
000ad6 2f5e      	MOV  R21,R30
                 _0x2040084:
000ad7 931f      	PUSH R17
000ad8 5f1f      	SUBI R17,-1
000ad9 85ee      	LDD  R30,Y+14
000ada 91af      	POP  R26
000adb 17ae      	CP   R26,R30
000adc f430      	BRSH _0x2040086
000add 940e 109a 	CALL SUBOPT_0x20
000adf 934a      	ST   -Y,R20
000ae0 e0a0      	LDI  R26,LOW(0)
000ae1 de72      	RCALL _pcd8544_wrmasked_G102
000ae2 cff4      	RJMP _0x2040084
                 _0x2040086:
000ae3 c011      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
000ae4 931f      	PUSH R17
000ae5 5f1f      	SUBI R17,-1
000ae6 85ee      	LDD  R30,Y+14
000ae7 91af      	POP  R26
000ae8 17ae      	CP   R26,R30
000ae9 f458      	BRSH _0x204008A
000aea 940e 10ab 	CALL SUBOPT_0x22
000aec 2fae      	MOV  R26,R30
000aed 2fe3      	MOV  R30,R19
000aee 940e 112d 	CALL __LSLB12
000af0 93ea      	ST   -Y,R30
000af1 934a      	ST   -Y,R20
000af2 85ad      	LDD  R26,Y+13
000af3 de60      	RCALL _pcd8544_wrmasked_G102
000af4 cfef      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
000af5 85ed      	LDD  R30,Y+13
000af6 30e0      	CPI  R30,0
000af7 f409      	BRNE _0x204008B
000af8 c07a      	RJMP _0x204004B
                 _0x204008B:
000af9 85ad      	LDD  R26,Y+13
000afa 30a8      	CPI  R26,LOW(0x8)
000afb f428      	BRSH _0x204008C
000afc 85ed      	LDD  R30,Y+13
000afd 1be2      	SUB  R30,R18
000afe 2f5e      	MOV  R21,R30
000aff e0e0      	LDI  R30,LOW(0)
000b00 c003      	RJMP _0x20400A1
                 _0x204008C:
000b01 2f53      	MOV  R21,R19
000b02 85ed      	LDD  R30,Y+13
000b03 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
000b04 87ed      	STD  Y+13,R30
000b05 e010      	LDI  R17,LOW(0)
000b06 85ef      	LDD  R30,Y+15
000b07 5fe8      	SUBI R30,-LOW(8)
000b08 87ef      	STD  Y+15,R30
000b09 e0e8      	LDI  R30,LOW(8)
000b0a 1be3      	SUB  R30,R19
000b0b 2f2e      	MOV  R18,R30
000b0c 8908      	LDD  R16,Y+16
000b0d 85ea      	LDD  R30,Y+10
000b0e 85fb      	LDD  R31,Y+10+1
000b0f 83ee      	STD  Y+6,R30
000b10 83ff      	STD  Y+6+1,R31
                 _0x2040076:
000b11 2fe5      	MOV  R30,R21
000b12 e0f0      	LDI  R31,0
000b13 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000b14 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000b15 9144      	LPM  R20,Z
000b16 85e9      	LDD  R30,Y+9
000b17 30e6      	CPI  R30,LOW(0x6)
000b18 f529      	BRNE _0x2040091
000b19 940e 1083 	CALL SUBOPT_0x1C
                 _0x2040092:
000b1b 931f      	PUSH R17
000b1c 5f1f      	SUBI R17,-1
000b1d 85ee      	LDD  R30,Y+14
000b1e 91af      	POP  R26
000b1f 17ae      	CP   R26,R30
000b20 f4e0      	BRSH _0x2040094
000b21 940e 106e 	CALL SUBOPT_0x19
000b23 9731      	SBIW R30,1
000b24 5be4      	SUBI R30,LOW(-_gfx_buffer_G102)
000b25 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000b26 81e0      	LD   R30,Z
000b27 23e4      	AND  R30,R20
000b28 2fae      	MOV  R26,R30
000b29 2fe2      	MOV  R30,R18
000b2a 940e 112d 	CALL __LSLB12
000b2c 940e 10a0 	CALL SUBOPT_0x21
000b2e 2fe2      	MOV  R30,R18
000b2f 2fa4      	MOV  R26,R20
000b30 940e 112d 	CALL __LSLB12
000b32 95e0      	COM  R30
000b33 21e1      	AND  R30,R1
000b34 2b5e      	OR   R21,R30
000b35 940e 1087 	CALL SUBOPT_0x1D
000b37 93fa      	ST   -Y,R31
000b38 93ea      	ST   -Y,R30
000b39 2fa5      	MOV  R26,R21
000b3a 940e 0fa8 	CALL _glcd_writemem
000b3c cfde      	RJMP _0x2040092
                 _0x2040094:
000b3d c02c      	RJMP _0x2040090
                 _0x2040091:
000b3e 30e9      	CPI  R30,LOW(0x9)
000b3f f411      	BRNE _0x2040095
000b40 e050      	LDI  R21,LOW(0)
000b41 c003      	RJMP _0x2040096
                 _0x2040095:
000b42 30ea      	CPI  R30,LOW(0xA)
000b43 f4a9      	BRNE _0x204009C
000b44 ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
000b45 940e 1096 	CALL SUBOPT_0x1F
000b47 2fae      	MOV  R26,R30
000b48 2fe2      	MOV  R30,R18
000b49 940e 1135 	CALL __LSRB12
000b4b 2f5e      	MOV  R21,R30
                 _0x2040099:
000b4c 931f      	PUSH R17
000b4d 5f1f      	SUBI R17,-1
000b4e 85ee      	LDD  R30,Y+14
000b4f 91af      	POP  R26
000b50 17ae      	CP   R26,R30
000b51 f430      	BRSH _0x204009B
000b52 940e 109a 	CALL SUBOPT_0x20
000b54 934a      	ST   -Y,R20
000b55 e0a0      	LDI  R26,LOW(0)
000b56 ddfd      	RCALL _pcd8544_wrmasked_G102
000b57 cff4      	RJMP _0x2040099
                 _0x204009B:
000b58 c011      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
000b59 931f      	PUSH R17
000b5a 5f1f      	SUBI R17,-1
000b5b 85ee      	LDD  R30,Y+14
000b5c 91af      	POP  R26
000b5d 17ae      	CP   R26,R30
000b5e f458      	BRSH _0x204009F
000b5f 940e 10ab 	CALL SUBOPT_0x22
000b61 2fae      	MOV  R26,R30
000b62 2fe2      	MOV  R30,R18
000b63 940e 1135 	CALL __LSRB12
000b65 93ea      	ST   -Y,R30
000b66 934a      	ST   -Y,R20
000b67 85ad      	LDD  R26,Y+13
000b68 ddeb      	RCALL _pcd8544_wrmasked_G102
000b69 cfef      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
000b6a 85e8      	LDD  R30,Y+8
000b6b 85aa      	LDD  R26,Y+10
000b6c 85bb      	LDD  R27,Y+10+1
000b6d e0f0      	LDI  R31,0
000b6e 0fea      	ADD  R30,R26
000b6f 1ffb      	ADC  R31,R27
000b70 87ea      	STD  Y+10,R30
000b71 87fb      	STD  Y+10+1,R31
000b72 ceaa      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120009:
000b73 940e 1189 	CALL __LOADLOCR6
000b75 9661      	ADIW R28,17
000b76 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000b77 940e 0ffd 	CALL SUBOPT_0x8
000b79 940e 117e 	CALL __CPW02
000b7b f024      	BRLT _0x2060003
000b7c e0e0      	LDI  R30,LOW(0)
000b7d e0f0      	LDI  R31,HIGH(0)
000b7e 940c 0f5f 	JMP  _0x2120002
                 _0x2060003:
000b80 81a8      	LD   R26,Y
000b81 81b9      	LDD  R27,Y+1
000b82 35a4      	CPI  R26,LOW(0x54)
000b83 e0e0      	LDI  R30,HIGH(0x54)
000b84 07be      	CPC  R27,R30
000b85 f024      	BRLT _0x2060004
000b86 e5e3      	LDI  R30,LOW(83)
000b87 e0f0      	LDI  R31,HIGH(83)
000b88 940c 0f5f 	JMP  _0x2120002
                 _0x2060004:
000b8a 81e8      	LD   R30,Y
000b8b 81f9      	LDD  R31,Y+1
000b8c 940c 0f5f 	JMP  _0x2120002
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000b8e 940e 0ffd 	CALL SUBOPT_0x8
000b90 940e 117e 	CALL __CPW02
000b92 f024      	BRLT _0x2060005
000b93 e0e0      	LDI  R30,LOW(0)
000b94 e0f0      	LDI  R31,HIGH(0)
000b95 940c 0f5f 	JMP  _0x2120002
                 _0x2060005:
000b97 81a8      	LD   R26,Y
000b98 81b9      	LDD  R27,Y+1
000b99 97d0      	SBIW R26,48
000b9a f024      	BRLT _0x2060006
000b9b e2ef      	LDI  R30,LOW(47)
000b9c e0f0      	LDI  R31,HIGH(47)
000b9d 940c 0f5f 	JMP  _0x2120002
                 _0x2060006:
000b9f 81e8      	LD   R30,Y
000ba0 81f9      	LDD  R31,Y+1
000ba1 940c 0f5f 	JMP  _0x2120002
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
000ba3 93ba      	ST   -Y,R27
000ba4 93aa      	ST   -Y,R26
000ba5 9723      	SBIW R28,3
000ba6 940e 10b8 	CALL SUBOPT_0x23
000ba8 018f      	MOVW R16,R30
000ba9 2e00      	MOV  R0,R16
000baa 2a01      	OR   R0,R17
000bab f419      	BRNE _0x206000B
000bac e0e0      	LDI  R30,LOW(0)
000bad e0f0      	LDI  R31,HIGH(0)
000bae c05f      	RJMP _0x2120008
                 _0x206000B:
000baf 940e 10bf 	CALL SUBOPT_0x24
000bb1 820f      	STD  Y+7,R0
000bb2 940e 10bf 	CALL SUBOPT_0x24
000bb4 820e      	STD  Y+6,R0
000bb5 940e 10bf 	CALL SUBOPT_0x24
000bb7 8608      	STD  Y+8,R0
000bb8 85eb      	LDD  R30,Y+11
000bb9 85a8      	LDD  R26,Y+8
000bba 17ea      	CP   R30,R26
000bbb f418      	BRSH _0x206000C
000bbc e0e0      	LDI  R30,LOW(0)
000bbd e0f0      	LDI  R31,HIGH(0)
000bbe c04f      	RJMP _0x2120008
                 _0x206000C:
000bbf 01f8      	MOVW R30,R16
                +
000bc0 5f0f     +SUBI R16 , LOW ( - 1 )
000bc1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000bc2 9154      	LPM  R21,Z
000bc3 85a8      	LDD  R26,Y+8
000bc4 27bb      	CLR  R27
000bc5 27ee      	CLR  R30
000bc6 0fa5      	ADD  R26,R21
000bc7 1fbe      	ADC  R27,R30
000bc8 85eb      	LDD  R30,Y+11
000bc9 e0f0      	LDI  R31,0
000bca 17ea      	CP   R30,R26
000bcb 07fb      	CPC  R31,R27
000bcc f018      	BRLO _0x206000D
000bcd e0e0      	LDI  R30,LOW(0)
000bce e0f0      	LDI  R31,HIGH(0)
000bcf c03e      	RJMP _0x2120008
                 _0x206000D:
000bd0 81ee      	LDD  R30,Y+6
000bd1 95e6      	LSR  R30
000bd2 95e6      	LSR  R30
000bd3 95e6      	LSR  R30
000bd4 2f4e      	MOV  R20,R30
000bd5 81ee      	LDD  R30,Y+6
000bd6 70e7      	ANDI R30,LOW(0x7)
000bd7 f009      	BREQ _0x206000E
000bd8 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
000bd9 81ef      	LDD  R30,Y+7
000bda 30e0      	CPI  R30,0
000bdb f0a1      	BREQ _0x206000F
000bdc 85a9      	LDD  R26,Y+9
000bdd 85ba      	LDD  R27,Y+9+1
000bde 93ec      	ST   X,R30
000bdf 85a8      	LDD  R26,Y+8
000be0 85eb      	LDD  R30,Y+11
000be1 1bea      	SUB  R30,R26
000be2 e0f0      	LDI  R31,0
000be3 01df      	MOVW R26,R30
000be4 81ef      	LDD  R30,Y+7
000be5 e0f0      	LDI  R31,0
000be6 940e 1142 	CALL __MULW12U
000be8 01df      	MOVW R26,R30
000be9 2fe4      	MOV  R30,R20
000bea e0f0      	LDI  R31,0
000beb 940e 1142 	CALL __MULW12U
000bed 0fe0      	ADD  R30,R16
000bee 1ff1      	ADC  R31,R17
000bef c01e      	RJMP _0x2120008
                 _0x206000F:
000bf0 0198      	MOVW R18,R16
000bf1 2fe5      	MOV  R30,R21
000bf2 e0f0      	LDI  R31,0
                +
000bf3 0f0e     +ADD R16 , R30
000bf4 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
000bf5 85a8      	LDD  R26,Y+8
000bf6 5faf      	SUBI R26,-LOW(1)
000bf7 87a8      	STD  Y+8,R26
000bf8 50a1      	SUBI R26,LOW(1)
000bf9 85eb      	LDD  R30,Y+11
000bfa 17ae      	CP   R26,R30
000bfb f460      	BRSH _0x2060012
000bfc 01f9      	MOVW R30,R18
                +
000bfd 5f2f     +SUBI R18 , LOW ( - 1 )
000bfe 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000bff 91a4      	LPM  R26,Z
000c00 e0b0      	LDI  R27,0
000c01 2fe4      	MOV  R30,R20
000c02 e0f0      	LDI  R31,0
000c03 940e 1142 	CALL __MULW12U
                +
000c05 0f0e     +ADD R16 , R30
000c06 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000c07 cfed      	RJMP _0x2060010
                 _0x2060012:
000c08 01f9      	MOVW R30,R18
000c09 91e4      	LPM  R30,Z
000c0a 85a9      	LDD  R26,Y+9
000c0b 85ba      	LDD  R27,Y+9+1
000c0c 93ec      	ST   X,R30
000c0d 01f8      	MOVW R30,R16
                 _0x2120008:
000c0e 940e 1189 	CALL __LOADLOCR6
000c10 962c      	ADIW R28,12
000c11 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
000c12 e0e0      	LDI  R30,LOW(0)
                +
000c13 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000c15 91a0 066f+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c17 27bb      	CLR  R27
000c18 940e 10c4 	CALL SUBOPT_0x25
000c1a e0f0      	LDI  R31,0
000c1b 0fae      	ADD  R26,R30
000c1c 1fbf      	ADC  R27,R31
                +
000c1d 91e0 0673+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c1f e0f0      	LDI  R31,0
000c20 0fae      	ADD  R26,R30
000c21 1fbf      	ADC  R27,R31
000c22 df6b      	RCALL _glcd_clipy
                +
000c23 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000c25 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000c26 93aa      	ST   -Y,R26
000c27 9721      	SBIW R28,1
000c28 940e 10b8 	CALL SUBOPT_0x23
000c2a 9730      	SBIW R30,0
000c2b f409      	BRNE PC+2
000c2c c055      	RJMP _0x206001F
000c2d 81af      	LDD  R26,Y+7
000c2e 30aa      	CPI  R26,LOW(0xA)
000c2f f409      	BRNE _0x2060020
000c30 c04f      	RJMP _0x2060021
                 _0x2060020:
000c31 81ef      	LDD  R30,Y+7
000c32 93ea      	ST   -Y,R30
000c33 01de      	MOVW R26,R28
000c34 9617      	ADIW R26,7
000c35 df6d      	RCALL _glcd_getcharw_G103
000c36 01af      	MOVW R20,R30
000c37 9730      	SBIW R30,0
000c38 f409      	BRNE _0x2060022
000c39 c04a      	RJMP _0x2120007
                 _0x2060022:
                +
000c3a 91e0 0672+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c3c 81ae      	LDD  R26,Y+6
000c3d 0fea      	ADD  R30,R26
000c3e 2f3e      	MOV  R19,R30
                +
000c3f 91a0 066e+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000c41 27bb      	CLR  R27
000c42 e0f0      	LDI  R31,0
000c43 0fea      	ADD  R30,R26
000c44 1ffb      	ADC  R31,R27
000c45 018f      	MOVW R16,R30
                +
000c46 3505     +CPI R16 , LOW ( 85 )
000c47 e0e0     +LDI R30 , HIGH ( 85 )
000c48 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000c49 f018      	BRLO _0x2060023
000c4a 2f03      	MOV  R16,R19
000c4b 2711      	CLR  R17
000c4c dfc5      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
000c4d 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c4f 93ea      	ST   -Y,R30
                +
000c50 91e0 066f+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c52 93ea      	ST   -Y,R30
000c53 85e8      	LDD  R30,Y+8
000c54 93ea      	ST   -Y,R30
000c55 940e 10c4 	CALL SUBOPT_0x25
000c57 93ea      	ST   -Y,R30
000c58 e0e1      	LDI  R30,LOW(1)
000c59 93ea      	ST   -Y,R30
000c5a 935a      	ST   -Y,R21
000c5b 934a      	ST   -Y,R20
000c5c e0a7      	LDI  R26,LOW(7)
000c5d dd2f      	RCALL _glcd_block
                +
000c5e 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c60 81ae      	LDD  R26,Y+6
000c61 0fea      	ADD  R30,R26
000c62 93ea      	ST   -Y,R30
                +
000c63 91e0 066f+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c65 93ea      	ST   -Y,R30
                +
000c66 91e0 0672+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c68 93ea      	ST   -Y,R30
000c69 940e 10c4 	CALL SUBOPT_0x25
000c6b 940e 10cb 	CALL SUBOPT_0x26
                +
000c6d 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c6f 93ea      	ST   -Y,R30
                +
000c70 91a0 066f+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c72 940e 10c4 	CALL SUBOPT_0x25
000c74 0fea      	ADD  R30,R26
000c75 93ea      	ST   -Y,R30
000c76 933a      	ST   -Y,R19
                +
000c77 91e0 0673+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c79 940e 10cb 	CALL SUBOPT_0x26
000c7b e5e4      	LDI  R30,LOW(84)
000c7c e0f0      	LDI  R31,HIGH(84)
000c7d 17e0      	CP   R30,R16
000c7e 07f1      	CPC  R31,R17
000c7f f411      	BRNE _0x2060024
                 _0x2060021:
000c80 df91      	RCALL _glcd_new_line_G103
000c81 c002      	RJMP _0x2120007
                 _0x2060024:
                 _0x206001F:
                +
000c82 9300 066e+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120007:
000c84 940e 1189 	CALL __LOADLOCR6
000c86 9628      	ADIW R28,8
000c87 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
000c88 93ba      	ST   -Y,R27
000c89 93aa      	ST   -Y,R26
000c8a 931a      	ST   -Y,R17
                 _0x206002E:
000c8b 81a9      	LDD  R26,Y+1
000c8c 81ba      	LDD  R27,Y+1+1
000c8d 91ed      	LD   R30,X+
000c8e 83a9      	STD  Y+1,R26
000c8f 83ba      	STD  Y+1+1,R27
000c90 2f1e      	MOV  R17,R30
000c91 30e0      	CPI  R30,0
000c92 f019      	BREQ _0x2060030
000c93 2fa1      	MOV  R26,R17
000c94 df91      	RCALL _glcd_putchar
000c95 cff5      	RJMP _0x206002E
                 _0x2060030:
000c96 8118      	LDD  R17,Y+0
000c97 c30e      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
000c98 93aa      	ST   -Y,R26
000c99 81ea      	LDD  R30,Y+2
000c9a 93ea      	ST   -Y,R30
000c9b 81ea      	LDD  R30,Y+2
000c9c 93ea      	ST   -Y,R30
                +
000c9d 91e0 0675+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000c9f 81aa      	LDD  R26,Y+2
000ca0 23ea      	AND  R30,R26
000ca1 f019      	BREQ _0x206003E
000ca2 91e0 066c 	LDS  R30,_glcd_state
000ca4 c002      	RJMP _0x206003F
                 _0x206003E:
                +
000ca5 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
000ca7 2fae      	MOV  R26,R30
000ca8 dc89      	RCALL _glcd_putpixel
000ca9 81e8      	LD   R30,Y
000caa 0fee      	LSL  R30
000cab 83e8      	ST   Y,R30
000cac 30e0      	CPI  R30,0
000cad f411      	BRNE _0x2060041
000cae e0e1      	LDI  R30,LOW(1)
000caf 83e8      	ST   Y,R30
                 _0x2060041:
000cb0 81e8      	LD   R30,Y
000cb1 c2f4      	RJMP _0x2120001
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000cb2 93aa      	ST   -Y,R26
000cb3 81a9      	LDD  R26,Y+1
000cb4 27bb      	CLR  R27
000cb5 dec1      	RCALL _glcd_clipx
                +
000cb6 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000cb8 81a8      	LD   R26,Y
000cb9 27bb      	CLR  R27
000cba ded3      	RCALL _glcd_clipy
                +
000cbb 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000cbd c2a1      	RJMP _0x2120002
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000cbe 93aa      	ST   -Y,R26
000cbf 972b      	SBIW R28,11
000cc0 940e 1182 	CALL __SAVELOCR6
000cc2 89ac      	LDD  R26,Y+20
000cc3 27bb      	CLR  R27
000cc4 deb2      	RCALL _glcd_clipx
000cc5 8bec      	STD  Y+20,R30
000cc6 89aa      	LDD  R26,Y+18
000cc7 27bb      	CLR  R27
000cc8 deae      	RCALL _glcd_clipx
000cc9 8bea      	STD  Y+18,R30
000cca 89ab      	LDD  R26,Y+19
000ccb 27bb      	CLR  R27
000ccc dec1      	RCALL _glcd_clipy
000ccd 8beb      	STD  Y+19,R30
000cce 89a9      	LDD  R26,Y+17
000ccf 27bb      	CLR  R27
000cd0 debd      	RCALL _glcd_clipy
000cd1 8be9      	STD  Y+17,R30
000cd2 89ea      	LDD  R30,Y+18
                +
000cd3 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000cd5 89e9      	LDD  R30,Y+17
                +
000cd6 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000cd8 e0e1      	LDI  R30,LOW(1)
000cd9 87e8      	STD  Y+8,R30
000cda 89e9      	LDD  R30,Y+17
000cdb 89ab      	LDD  R26,Y+19
000cdc 17ea      	CP   R30,R26
000cdd f571      	BRNE _0x2060042
000cde 891c      	LDD  R17,Y+20
000cdf 89aa      	LDD  R26,Y+18
000ce0 171a      	CP   R17,R26
000ce1 f431      	BRNE _0x2060043
000ce2 931a      	ST   -Y,R17
000ce3 89ec      	LDD  R30,Y+20
000ce4 93ea      	ST   -Y,R30
000ce5 e0a1      	LDI  R26,LOW(1)
000ce6 dfb1      	RCALL _glcd_putpixelm_G103
000ce7 c0c8      	RJMP _0x2120006
                 _0x2060043:
000ce8 89aa      	LDD  R26,Y+18
000ce9 171a      	CP   R17,R26
000cea f430      	BRSH _0x2060044
000ceb 89ea      	LDD  R30,Y+18
000cec 1be1      	SUB  R30,R17
000ced 2f0e      	MOV  R16,R30
                +
000cee e041     +LDI R20 , LOW ( 1 )
000cef e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000cf0 c006      	RJMP _0x2060045
                 _0x2060044:
000cf1 89aa      	LDD  R26,Y+18
000cf2 2fe1      	MOV  R30,R17
000cf3 1bea      	SUB  R30,R26
000cf4 2f0e      	MOV  R16,R30
                +
000cf5 ef4f     +LDI R20 , LOW ( - 1 )
000cf6 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
000cf7 893b      	LDD  R19,Y+19
000cf8 e0e0      	LDI  R30,LOW(0)
000cf9 83ee      	STD  Y+6,R30
                 _0x2060049:
000cfa 940e 10d5 	CALL SUBOPT_0x27
000cfc f438      	BRSH _0x206004B
000cfd 931a      	ST   -Y,R17
000cfe 933a      	ST   -Y,R19
000cff 9533      	INC  R19
000d00 85aa      	LDD  R26,Y+10
000d01 df96      	RCALL _glcd_putpixelm_G103
000d02 83ef      	STD  Y+7,R30
000d03 cff6      	RJMP _0x2060049
                 _0x206004B:
000d04 81ef      	LDD  R30,Y+7
000d05 87e8      	STD  Y+8,R30
000d06 0f14      	ADD  R17,R20
000d07 2fe0      	MOV  R30,R16
000d08 5001      	SUBI R16,1
000d09 30e0      	CPI  R30,0
000d0a f761      	BRNE _0x2060047
000d0b c0a4      	RJMP _0x206004C
                 _0x2060042:
000d0c 89ea      	LDD  R30,Y+18
000d0d 89ac      	LDD  R26,Y+20
000d0e 17ea      	CP   R30,R26
000d0f f539      	BRNE _0x206004D
000d10 893b      	LDD  R19,Y+19
000d11 89a9      	LDD  R26,Y+17
000d12 173a      	CP   R19,R26
000d13 f430      	BRSH _0x206004E
000d14 89e9      	LDD  R30,Y+17
000d15 1be3      	SUB  R30,R19
000d16 2f2e      	MOV  R18,R30
000d17 e0e1      	LDI  R30,LOW(1)
000d18 e0f0      	LDI  R31,HIGH(1)
000d19 c006      	RJMP _0x206011B
                 _0x206004E:
000d1a 89a9      	LDD  R26,Y+17
000d1b 2fe3      	MOV  R30,R19
000d1c 1bea      	SUB  R30,R26
000d1d 2f2e      	MOV  R18,R30
000d1e efef      	LDI  R30,LOW(65535)
000d1f efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
000d20 87ed      	STD  Y+13,R30
000d21 87fe      	STD  Y+13+1,R31
                 _0x2060051:
000d22 891c      	LDD  R17,Y+20
000d23 e0e0      	LDI  R30,LOW(0)
000d24 83ee      	STD  Y+6,R30
                 _0x2060053:
000d25 940e 10d5 	CALL SUBOPT_0x27
000d27 f430      	BRSH _0x2060055
000d28 931a      	ST   -Y,R17
000d29 9513      	INC  R17
000d2a 940e 10dd 	CALL SUBOPT_0x28
000d2c 83ef      	STD  Y+7,R30
000d2d cff7      	RJMP _0x2060053
                 _0x2060055:
000d2e 81ef      	LDD  R30,Y+7
000d2f 87e8      	STD  Y+8,R30
000d30 85ed      	LDD  R30,Y+13
000d31 0f3e      	ADD  R19,R30
000d32 2fe2      	MOV  R30,R18
000d33 5021      	SUBI R18,1
000d34 30e0      	CPI  R30,0
000d35 f761      	BRNE _0x2060051
000d36 c079      	RJMP _0x2060056
                 _0x206004D:
000d37 e0e0      	LDI  R30,LOW(0)
000d38 83ee      	STD  Y+6,R30
                 _0x2060057:
000d39 940e 10d5 	CALL SUBOPT_0x27
000d3b f008      	BRLO PC+2
000d3c c073      	RJMP _0x2060059
000d3d 891c      	LDD  R17,Y+20
000d3e 893b      	LDD  R19,Y+19
000d3f e0e1      	LDI  R30,LOW(1)
000d40 2f2e      	MOV  R18,R30
000d41 2f0e      	MOV  R16,R30
000d42 89aa      	LDD  R26,Y+18
000d43 27bb      	CLR  R27
000d44 89ec      	LDD  R30,Y+20
000d45 e0f0      	LDI  R31,0
000d46 1bae      	SUB  R26,R30
000d47 0bbf      	SBC  R27,R31
000d48 01ad      	MOVW R20,R26
000d49 2355      	TST  R21
000d4a f42a      	BRPL _0x206005A
000d4b ef0f      	LDI  R16,LOW(255)
000d4c 01fa      	MOVW R30,R20
000d4d 940e 1129 	CALL __ANEGW1
000d4f 01af      	MOVW R20,R30
                 _0x206005A:
000d50 01fa      	MOVW R30,R20
000d51 0fee      	LSL  R30
000d52 1fff      	ROL  R31
000d53 87ef      	STD  Y+15,R30
000d54 8bf8      	STD  Y+15+1,R31
000d55 89a9      	LDD  R26,Y+17
000d56 27bb      	CLR  R27
000d57 89eb      	LDD  R30,Y+19
000d58 e0f0      	LDI  R31,0
000d59 1bae      	SUB  R26,R30
000d5a 0bbf      	SBC  R27,R31
000d5b 87ad      	STD  Y+13,R26
000d5c 87be      	STD  Y+13+1,R27
000d5d 85ae      	LDD  R26,Y+14
000d5e 23aa      	TST  R26
000d5f f43a      	BRPL _0x206005B
000d60 ef2f      	LDI  R18,LOW(255)
000d61 85ed      	LDD  R30,Y+13
000d62 85fe      	LDD  R31,Y+13+1
000d63 940e 1129 	CALL __ANEGW1
000d65 87ed      	STD  Y+13,R30
000d66 87fe      	STD  Y+13+1,R31
                 _0x206005B:
000d67 85ed      	LDD  R30,Y+13
000d68 85fe      	LDD  R31,Y+13+1
000d69 0fee      	LSL  R30
000d6a 1fff      	ROL  R31
000d6b 87eb      	STD  Y+11,R30
000d6c 87fc      	STD  Y+11+1,R31
000d6d 931a      	ST   -Y,R17
000d6e 933a      	ST   -Y,R19
000d6f e0a1      	LDI  R26,LOW(1)
000d70 df27      	RCALL _glcd_putpixelm_G103
000d71 87e8      	STD  Y+8,R30
000d72 e0e0      	LDI  R30,LOW(0)
000d73 87e9      	STD  Y+9,R30
000d74 87ea      	STD  Y+9+1,R30
000d75 85ad      	LDD  R26,Y+13
000d76 85be      	LDD  R27,Y+13+1
000d77 174a      	CP   R20,R26
000d78 075b      	CPC  R21,R27
000d79 f0bc      	BRLT _0x206005C
                 _0x206005E:
000d7a 0f10      	ADD  R17,R16
000d7b 85eb      	LDD  R30,Y+11
000d7c 85fc      	LDD  R31,Y+11+1
000d7d 940e 10e1 	CALL SUBOPT_0x29
000d7f 85a9      	LDD  R26,Y+9
000d80 85ba      	LDD  R27,Y+9+1
000d81 174a      	CP   R20,R26
000d82 075b      	CPC  R21,R27
000d83 f42c      	BRGE _0x2060060
000d84 0f32      	ADD  R19,R18
000d85 85af      	LDD  R26,Y+15
000d86 89b8      	LDD  R27,Y+15+1
000d87 940e 10e8 	CALL SUBOPT_0x2A
                 _0x2060060:
000d89 931a      	ST   -Y,R17
000d8a 940e 10dd 	CALL SUBOPT_0x28
000d8c 87e8      	STD  Y+8,R30
000d8d 89ea      	LDD  R30,Y+18
000d8e 17e1      	CP   R30,R17
000d8f f751      	BRNE _0x206005E
000d90 c018      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
000d91 0f32      	ADD  R19,R18
000d92 85ef      	LDD  R30,Y+15
000d93 89f8      	LDD  R31,Y+15+1
000d94 940e 10e1 	CALL SUBOPT_0x29
000d96 85ed      	LDD  R30,Y+13
000d97 85fe      	LDD  R31,Y+13+1
000d98 85a9      	LDD  R26,Y+9
000d99 85ba      	LDD  R27,Y+9+1
000d9a 17ea      	CP   R30,R26
000d9b 07fb      	CPC  R31,R27
000d9c f42c      	BRGE _0x2060065
000d9d 0f10      	ADD  R17,R16
000d9e 85ab      	LDD  R26,Y+11
000d9f 85bc      	LDD  R27,Y+11+1
000da0 940e 10e8 	CALL SUBOPT_0x2A
                 _0x2060065:
000da2 931a      	ST   -Y,R17
000da3 940e 10dd 	CALL SUBOPT_0x28
000da5 87e8      	STD  Y+8,R30
000da6 89e9      	LDD  R30,Y+17
000da7 17e3      	CP   R30,R19
000da8 f741      	BRNE _0x2060063
                 _0x2060061:
000da9 89eb      	LDD  R30,Y+19
000daa 5fef      	SUBI R30,-LOW(1)
000dab 8beb      	STD  Y+19,R30
000dac 89e9      	LDD  R30,Y+17
000dad 5fef      	SUBI R30,-LOW(1)
000dae 8be9      	STD  Y+17,R30
000daf cf89      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120006:
000db0 940e 1189 	CALL __LOADLOCR6
000db2 9665      	ADIW R28,21
000db3 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G105:
                 ; .FSTART _put_buff_G105
000db4 93ba      	ST   -Y,R27
000db5 93aa      	ST   -Y,R26
000db6 931a      	ST   -Y,R17
000db7 930a      	ST   -Y,R16
000db8 81aa      	LDD  R26,Y+2
000db9 81bb      	LDD  R27,Y+2+1
000dba 9612      	ADIW R26,2
000dbb 940e 114a 	CALL __GETW1P
000dbd 9730      	SBIW R30,0
000dbe f129      	BREQ _0x20A0010
000dbf 81aa      	LDD  R26,Y+2
000dc0 81bb      	LDD  R27,Y+2+1
000dc1 9614      	ADIW R26,4
000dc2 940e 114a 	CALL __GETW1P
000dc4 018f      	MOVW R16,R30
000dc5 9730      	SBIW R30,0
000dc6 f061      	BREQ _0x20A0012
                +
000dc7 3002     +CPI R16 , LOW ( 2 )
000dc8 e0e0     +LDI R30 , HIGH ( 2 )
000dc9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000dca f080      	BRLO _0x20A0013
000dcb 01f8      	MOVW R30,R16
000dcc 9731      	SBIW R30,1
000dcd 018f      	MOVW R16,R30
                +
000dce 81aa     +LDD R26 , Y + 2
000dcf 81bb     +LDD R27 , Y + 2 + 1
000dd0 9614     +ADIW R26 , 4
000dd1 93ed     +ST X + , R30
000dd2 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x20A0012:
000dd3 81aa      	LDD  R26,Y+2
000dd4 81bb      	LDD  R27,Y+2+1
000dd5 9612      	ADIW R26,2
000dd6 940e 0fc7 	CALL SUBOPT_0x0
000dd8 9731      	SBIW R30,1
000dd9 81ac      	LDD  R26,Y+4
000dda 83a0      	STD  Z+0,R26
                 _0x20A0013:
000ddb 81aa      	LDD  R26,Y+2
000ddc 81bb      	LDD  R27,Y+2+1
000ddd 940e 114a 	CALL __GETW1P
000ddf 23ff      	TST  R31
000de0 f012      	BRMI _0x20A0014
000de1 940e 0fc7 	CALL SUBOPT_0x0
                 _0x20A0014:
000de3 c006      	RJMP _0x20A0015
                 _0x20A0010:
000de4 81aa      	LDD  R26,Y+2
000de5 81bb      	LDD  R27,Y+2+1
000de6 efef      	LDI  R30,LOW(65535)
000de7 efff      	LDI  R31,HIGH(65535)
000de8 93ed      	ST   X+,R30
000de9 93fc      	ST   X,R31
                 _0x20A0015:
                 _0x2120004:
000dea 8119      	LDD  R17,Y+1
000deb 8108      	LDD  R16,Y+0
                 _0x2120005:
000dec 9625      	ADIW R28,5
000ded 9508      	RET
                 ; .FEND
                 __print_G105:
                 ; .FSTART __print_G105
000dee 93ba      	ST   -Y,R27
000def 93aa      	ST   -Y,R26
000df0 9726      	SBIW R28,6
000df1 940e 1182 	CALL __SAVELOCR6
000df3 e010      	LDI  R17,0
000df4 85ac      	LDD  R26,Y+12
000df5 85bd      	LDD  R27,Y+12+1
000df6 e0e0      	LDI  R30,LOW(0)
000df7 e0f0      	LDI  R31,HIGH(0)
000df8 93ed      	ST   X+,R30
000df9 93fc      	ST   X,R31
                 _0x20A0016:
000dfa 89ea      	LDD  R30,Y+18
000dfb 89fb      	LDD  R31,Y+18+1
000dfc 9631      	ADIW R30,1
000dfd 8bea      	STD  Y+18,R30
000dfe 8bfb      	STD  Y+18+1,R31
000dff 9731      	SBIW R30,1
000e00 91e4      	LPM  R30,Z
000e01 2f2e      	MOV  R18,R30
000e02 30e0      	CPI  R30,0
000e03 f409      	BRNE PC+2
000e04 c115      	RJMP _0x20A0018
000e05 2fe1      	MOV  R30,R17
000e06 30e0      	CPI  R30,0
000e07 f439      	BRNE _0x20A001C
000e08 3225      	CPI  R18,37
000e09 f411      	BRNE _0x20A001D
000e0a e011      	LDI  R17,LOW(1)
000e0b c002      	RJMP _0x20A001E
                 _0x20A001D:
000e0c 940e 10ef 	CALL SUBOPT_0x2B
                 _0x20A001E:
000e0e c10a      	RJMP _0x20A001B
                 _0x20A001C:
000e0f 30e1      	CPI  R30,LOW(0x1)
000e10 f4a9      	BRNE _0x20A001F
000e11 3225      	CPI  R18,37
000e12 f419      	BRNE _0x20A0020
000e13 940e 10ef 	CALL SUBOPT_0x2B
000e15 c102      	RJMP _0x20A00CC
                 _0x20A0020:
000e16 e012      	LDI  R17,LOW(2)
000e17 e040      	LDI  R20,LOW(0)
000e18 e000      	LDI  R16,LOW(0)
000e19 322d      	CPI  R18,45
000e1a f411      	BRNE _0x20A0021
000e1b e001      	LDI  R16,LOW(1)
000e1c c0fc      	RJMP _0x20A001B
                 _0x20A0021:
000e1d 322b      	CPI  R18,43
000e1e f411      	BRNE _0x20A0022
000e1f e24b      	LDI  R20,LOW(43)
000e20 c0f8      	RJMP _0x20A001B
                 _0x20A0022:
000e21 3220      	CPI  R18,32
000e22 f411      	BRNE _0x20A0023
000e23 e240      	LDI  R20,LOW(32)
000e24 c0f4      	RJMP _0x20A001B
                 _0x20A0023:
000e25 c002      	RJMP _0x20A0024
                 _0x20A001F:
000e26 30e2      	CPI  R30,LOW(0x2)
000e27 f439      	BRNE _0x20A0025
                 _0x20A0024:
000e28 e050      	LDI  R21,LOW(0)
000e29 e013      	LDI  R17,LOW(3)
000e2a 3320      	CPI  R18,48
000e2b f411      	BRNE _0x20A0026
000e2c 6800      	ORI  R16,LOW(128)
000e2d c0eb      	RJMP _0x20A001B
                 _0x20A0026:
000e2e c003      	RJMP _0x20A0027
                 _0x20A0025:
000e2f 30e3      	CPI  R30,LOW(0x3)
000e30 f009      	BREQ PC+2
000e31 c0e7      	RJMP _0x20A001B
                 _0x20A0027:
000e32 3320      	CPI  R18,48
000e33 f010      	BRLO _0x20A002A
000e34 332a      	CPI  R18,58
000e35 f008      	BRLO _0x20A002B
                 _0x20A002A:
000e36 c007      	RJMP _0x20A0029
                 _0x20A002B:
000e37 e0aa      	LDI  R26,LOW(10)
000e38 9f5a      	MUL  R21,R26
000e39 2d50      	MOV  R21,R0
000e3a 2fe2      	MOV  R30,R18
000e3b 53e0      	SUBI R30,LOW(48)
000e3c 0f5e      	ADD  R21,R30
000e3d c0db      	RJMP _0x20A001B
                 _0x20A0029:
000e3e 2fe2      	MOV  R30,R18
000e3f 36e3      	CPI  R30,LOW(0x63)
000e40 f449      	BRNE _0x20A002F
000e41 940e 10f6 	CALL SUBOPT_0x2C
000e43 89e8      	LDD  R30,Y+16
000e44 89f9      	LDD  R31,Y+16+1
000e45 81a4      	LDD  R26,Z+4
000e46 93aa      	ST   -Y,R26
000e47 940e 10fc 	CALL SUBOPT_0x2D
000e49 c0ce      	RJMP _0x20A0030
                 _0x20A002F:
000e4a 37e3      	CPI  R30,LOW(0x73)
000e4b f441      	BRNE _0x20A0032
000e4c 940e 10f6 	CALL SUBOPT_0x2C
000e4e 940e 1102 	CALL SUBOPT_0x2E
000e50 940e 07cf 	CALL _strlen
000e52 2f1e      	MOV  R17,R30
000e53 c00a      	RJMP _0x20A0033
                 _0x20A0032:
000e54 37e0      	CPI  R30,LOW(0x70)
000e55 f461      	BRNE _0x20A0035
000e56 940e 10f6 	CALL SUBOPT_0x2C
000e58 940e 1102 	CALL SUBOPT_0x2E
000e5a 940e 07db 	CALL _strlenf
000e5c 2f1e      	MOV  R17,R30
000e5d 6008      	ORI  R16,LOW(8)
                 _0x20A0033:
000e5e 6002      	ORI  R16,LOW(2)
000e5f 770f      	ANDI R16,LOW(127)
000e60 e030      	LDI  R19,LOW(0)
000e61 c034      	RJMP _0x20A0036
                 _0x20A0035:
000e62 36e4      	CPI  R30,LOW(0x64)
000e63 f011      	BREQ _0x20A0039
000e64 36e9      	CPI  R30,LOW(0x69)
000e65 f411      	BRNE _0x20A003A
                 _0x20A0039:
000e66 6004      	ORI  R16,LOW(4)
000e67 c002      	RJMP _0x20A003B
                 _0x20A003A:
000e68 37e5      	CPI  R30,LOW(0x75)
000e69 f431      	BRNE _0x20A003C
                 _0x20A003B:
000e6a e7ea      	LDI  R30,LOW(_tbl10_G105*2)
000e6b e0f2      	LDI  R31,HIGH(_tbl10_G105*2)
000e6c 83ee      	STD  Y+6,R30
000e6d 83ff      	STD  Y+6+1,R31
000e6e e015      	LDI  R17,LOW(5)
000e6f c00c      	RJMP _0x20A003D
                 _0x20A003C:
000e70 35e8      	CPI  R30,LOW(0x58)
000e71 f411      	BRNE _0x20A003F
000e72 6008      	ORI  R16,LOW(8)
000e73 c003      	RJMP _0x20A0040
                 _0x20A003F:
000e74 37e8      	CPI  R30,LOW(0x78)
000e75 f009      	BREQ PC+2
000e76 c0a1      	RJMP _0x20A0071
                 _0x20A0040:
000e77 e8e4      	LDI  R30,LOW(_tbl16_G105*2)
000e78 e0f2      	LDI  R31,HIGH(_tbl16_G105*2)
000e79 83ee      	STD  Y+6,R30
000e7a 83ff      	STD  Y+6+1,R31
000e7b e014      	LDI  R17,LOW(4)
                 _0x20A003D:
000e7c ff02      	SBRS R16,2
000e7d c014      	RJMP _0x20A0042
000e7e 940e 10f6 	CALL SUBOPT_0x2C
000e80 940e 110c 	CALL SUBOPT_0x2F
000e82 85ab      	LDD  R26,Y+11
000e83 23aa      	TST  R26
000e84 f43a      	BRPL _0x20A0043
000e85 85ea      	LDD  R30,Y+10
000e86 85fb      	LDD  R31,Y+10+1
000e87 940e 1129 	CALL __ANEGW1
000e89 87ea      	STD  Y+10,R30
000e8a 87fb      	STD  Y+10+1,R31
000e8b e24d      	LDI  R20,LOW(45)
                 _0x20A0043:
000e8c 3040      	CPI  R20,0
000e8d f011      	BREQ _0x20A0044
000e8e 5f1f      	SUBI R17,-LOW(1)
000e8f c001      	RJMP _0x20A0045
                 _0x20A0044:
000e90 7f0b      	ANDI R16,LOW(251)
                 _0x20A0045:
000e91 c004      	RJMP _0x20A0046
                 _0x20A0042:
000e92 940e 10f6 	CALL SUBOPT_0x2C
000e94 940e 110c 	CALL SUBOPT_0x2F
                 _0x20A0046:
                 _0x20A0036:
000e96 fd00      	SBRC R16,0
000e97 c011      	RJMP _0x20A0047
                 _0x20A0048:
000e98 1715      	CP   R17,R21
000e99 f478      	BRSH _0x20A004A
000e9a ff07      	SBRS R16,7
000e9b c008      	RJMP _0x20A004B
000e9c ff02      	SBRS R16,2
000e9d c004      	RJMP _0x20A004C
000e9e 7f0b      	ANDI R16,LOW(251)
000e9f 2f24      	MOV  R18,R20
000ea0 5011      	SUBI R17,LOW(1)
000ea1 c001      	RJMP _0x20A004D
                 _0x20A004C:
000ea2 e320      	LDI  R18,LOW(48)
                 _0x20A004D:
000ea3 c001      	RJMP _0x20A004E
                 _0x20A004B:
000ea4 e220      	LDI  R18,LOW(32)
                 _0x20A004E:
000ea5 940e 10ef 	CALL SUBOPT_0x2B
000ea7 5051      	SUBI R21,LOW(1)
000ea8 cfef      	RJMP _0x20A0048
                 _0x20A004A:
                 _0x20A0047:
000ea9 2f31      	MOV  R19,R17
000eaa ff01      	SBRS R16,1
000eab c017      	RJMP _0x20A004F
                 _0x20A0050:
000eac 3030      	CPI  R19,0
000ead f0a1      	BREQ _0x20A0052
000eae ff03      	SBRS R16,3
000eaf c006      	RJMP _0x20A0053
000eb0 81ee      	LDD  R30,Y+6
000eb1 81ff      	LDD  R31,Y+6+1
000eb2 9125      	LPM  R18,Z+
000eb3 83ee      	STD  Y+6,R30
000eb4 83ff      	STD  Y+6+1,R31
000eb5 c005      	RJMP _0x20A0054
                 _0x20A0053:
000eb6 81ae      	LDD  R26,Y+6
000eb7 81bf      	LDD  R27,Y+6+1
000eb8 912d      	LD   R18,X+
000eb9 83ae      	STD  Y+6,R26
000eba 83bf      	STD  Y+6+1,R27
                 _0x20A0054:
000ebb 940e 10ef 	CALL SUBOPT_0x2B
000ebd 3050      	CPI  R21,0
000ebe f009      	BREQ _0x20A0055
000ebf 5051      	SUBI R21,LOW(1)
                 _0x20A0055:
000ec0 5031      	SUBI R19,LOW(1)
000ec1 cfea      	RJMP _0x20A0050
                 _0x20A0052:
000ec2 c04b      	RJMP _0x20A0056
                 _0x20A004F:
                 _0x20A0058:
000ec3 e320      	LDI  R18,LOW(48)
000ec4 81ee      	LDD  R30,Y+6
000ec5 81ff      	LDD  R31,Y+6+1
000ec6 940e 1158 	CALL __GETW1PF
000ec8 87e8      	STD  Y+8,R30
000ec9 87f9      	STD  Y+8+1,R31
000eca 81ee      	LDD  R30,Y+6
000ecb 81ff      	LDD  R31,Y+6+1
000ecc 9632      	ADIW R30,2
000ecd 83ee      	STD  Y+6,R30
000ece 83ff      	STD  Y+6+1,R31
                 _0x20A005A:
000ecf 85e8      	LDD  R30,Y+8
000ed0 85f9      	LDD  R31,Y+8+1
000ed1 85aa      	LDD  R26,Y+10
000ed2 85bb      	LDD  R27,Y+10+1
000ed3 17ae      	CP   R26,R30
000ed4 07bf      	CPC  R27,R31
000ed5 f050      	BRLO _0x20A005C
000ed6 5f2f      	SUBI R18,-LOW(1)
000ed7 85a8      	LDD  R26,Y+8
000ed8 85b9      	LDD  R27,Y+8+1
000ed9 85ea      	LDD  R30,Y+10
000eda 85fb      	LDD  R31,Y+10+1
000edb 1bea      	SUB  R30,R26
000edc 0bfb      	SBC  R31,R27
000edd 87ea      	STD  Y+10,R30
000ede 87fb      	STD  Y+10+1,R31
000edf cfef      	RJMP _0x20A005A
                 _0x20A005C:
000ee0 332a      	CPI  R18,58
000ee1 f028      	BRLO _0x20A005D
000ee2 ff03      	SBRS R16,3
000ee3 c002      	RJMP _0x20A005E
000ee4 5f29      	SUBI R18,-LOW(7)
000ee5 c001      	RJMP _0x20A005F
                 _0x20A005E:
000ee6 5d29      	SUBI R18,-LOW(39)
                 _0x20A005F:
                 _0x20A005D:
000ee7 fd04      	SBRC R16,4
000ee8 c01a      	RJMP _0x20A0061
000ee9 3321      	CPI  R18,49
000eea f420      	BRSH _0x20A0063
000eeb 85a8      	LDD  R26,Y+8
000eec 85b9      	LDD  R27,Y+8+1
000eed 9711      	SBIW R26,1
000eee f409      	BRNE _0x20A0062
                 _0x20A0063:
000eef c009      	RJMP _0x20A00CD
                 _0x20A0062:
000ef0 1753      	CP   R21,R19
000ef1 f010      	BRLO _0x20A0067
000ef2 ff00      	SBRS R16,0
000ef3 c001      	RJMP _0x20A0068
                 _0x20A0067:
000ef4 c013      	RJMP _0x20A0066
                 _0x20A0068:
000ef5 e220      	LDI  R18,LOW(32)
000ef6 ff07      	SBRS R16,7
000ef7 c00b      	RJMP _0x20A0069
000ef8 e320      	LDI  R18,LOW(48)
                 _0x20A00CD:
000ef9 6100      	ORI  R16,LOW(16)
000efa ff02      	SBRS R16,2
000efb c007      	RJMP _0x20A006A
000efc 7f0b      	ANDI R16,LOW(251)
000efd 934a      	ST   -Y,R20
000efe 940e 10fc 	CALL SUBOPT_0x2D
000f00 3050      	CPI  R21,0
000f01 f009      	BREQ _0x20A006B
000f02 5051      	SUBI R21,LOW(1)
                 _0x20A006B:
                 _0x20A006A:
                 _0x20A0069:
                 _0x20A0061:
000f03 940e 10ef 	CALL SUBOPT_0x2B
000f05 3050      	CPI  R21,0
000f06 f009      	BREQ _0x20A006C
000f07 5051      	SUBI R21,LOW(1)
                 _0x20A006C:
                 _0x20A0066:
000f08 5031      	SUBI R19,LOW(1)
000f09 85a8      	LDD  R26,Y+8
000f0a 85b9      	LDD  R27,Y+8+1
000f0b 9712      	SBIW R26,2
000f0c f008      	BRLO _0x20A0059
000f0d cfb5      	RJMP _0x20A0058
                 _0x20A0059:
                 _0x20A0056:
000f0e ff00      	SBRS R16,0
000f0f c008      	RJMP _0x20A006D
                 _0x20A006E:
000f10 3050      	CPI  R21,0
000f11 f031      	BREQ _0x20A0070
000f12 5051      	SUBI R21,LOW(1)
000f13 e2e0      	LDI  R30,LOW(32)
000f14 93ea      	ST   -Y,R30
000f15 940e 10fc 	CALL SUBOPT_0x2D
000f17 cff8      	RJMP _0x20A006E
                 _0x20A0070:
                 _0x20A006D:
                 _0x20A0071:
                 _0x20A0030:
                 _0x20A00CC:
000f18 e010      	LDI  R17,LOW(0)
                 _0x20A001B:
000f19 cee0      	RJMP _0x20A0016
                 _0x20A0018:
000f1a 85ac      	LDD  R26,Y+12
000f1b 85bd      	LDD  R27,Y+12+1
000f1c 940e 114a 	CALL __GETW1P
000f1e 940e 1189 	CALL __LOADLOCR6
000f20 9664      	ADIW R28,20
000f21 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000f22 92ff      	PUSH R15
000f23 2ef8      	MOV  R15,R24
000f24 9726      	SBIW R28,6
000f25 940e 1184 	CALL __SAVELOCR4
000f27 940e 1114 	CALL SUBOPT_0x30
000f29 9730      	SBIW R30,0
000f2a f419      	BRNE _0x20A0072
000f2b efef      	LDI  R30,LOW(65535)
000f2c efff      	LDI  R31,HIGH(65535)
000f2d c023      	RJMP _0x2120003
                 _0x20A0072:
000f2e 01de      	MOVW R26,R28
000f2f 9616      	ADIW R26,6
000f30 940e 1125 	CALL __ADDW2R15
000f32 018d      	MOVW R16,R26
000f33 940e 1114 	CALL SUBOPT_0x30
000f35 83ee      	STD  Y+6,R30
000f36 83ff      	STD  Y+6+1,R31
000f37 e0e0      	LDI  R30,LOW(0)
000f38 87e8      	STD  Y+8,R30
000f39 87e9      	STD  Y+8+1,R30
000f3a 01de      	MOVW R26,R28
000f3b 961a      	ADIW R26,10
000f3c 940e 1125 	CALL __ADDW2R15
000f3e 940e 114a 	CALL __GETW1P
000f40 93fa      	ST   -Y,R31
000f41 93ea      	ST   -Y,R30
000f42 931a      	ST   -Y,R17
000f43 930a      	ST   -Y,R16
000f44 ebe4      	LDI  R30,LOW(_put_buff_G105)
000f45 e0fd      	LDI  R31,HIGH(_put_buff_G105)
000f46 93fa      	ST   -Y,R31
000f47 93ea      	ST   -Y,R30
000f48 01de      	MOVW R26,R28
000f49 961a      	ADIW R26,10
000f4a dea3      	RCALL __print_G105
000f4b 019f      	MOVW R18,R30
000f4c 81ae      	LDD  R26,Y+6
000f4d 81bf      	LDD  R27,Y+6+1
000f4e e0e0      	LDI  R30,LOW(0)
000f4f 93ec      	ST   X,R30
000f50 01f9      	MOVW R30,R18
                 _0x2120003:
000f51 940e 118b 	CALL __LOADLOCR4
000f53 962a      	ADIW R28,10
000f54 90ff      	POP  R15
000f55 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000f56 93aa      	ST   -Y,R26
000f57 81e8      	LD   R30,Y
000f58 e0f0      	LDI  R31,0
000f59 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000f5a 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000f5b 91a4      	LPM  R26,Z
000f5c 81e9      	LDD  R30,Y+1
000f5d 940e 112d 	CALL __LSLB12
                 _0x2120002:
000f5f 9622      	ADIW R28,2
000f60 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000f61 93aa      	ST   -Y,R26
000f62 931a      	ST   -Y,R17
000f63 81e9      	LDD  R30,Y+1
000f64 30e7      	CPI  R30,LOW(0x7)
000f65 f011      	BREQ _0x2100007
000f66 30ea      	CPI  R30,LOW(0xA)
000f67 f419      	BRNE _0x2100008
                 _0x2100007:
000f68 9110 066c 	LDS  R17,_glcd_state
000f6a c009      	RJMP _0x2100009
                 _0x2100008:
000f6b 30e9      	CPI  R30,LOW(0x9)
000f6c f419      	BRNE _0x210000B
                +
000f6d 9110 066d+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000f6f c004      	RJMP _0x2100009
                 _0x210000B:
000f70 30e8      	CPI  R30,LOW(0x8)
000f71 f4a1      	BRNE _0x2100005
                +
000f72 9110 067c+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000f74 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000f76 30e0      	CPI  R30,0
000f77 f049      	BREQ _0x210000E
000f78 3010      	CPI  R17,0
000f79 f019      	BREQ _0x210000F
000f7a efef      	LDI  R30,LOW(255)
000f7b 8118      	LDD  R17,Y+0
000f7c c029      	RJMP _0x2120001
                 _0x210000F:
000f7d 81ea      	LDD  R30,Y+2
000f7e 95e0      	COM  R30
000f7f 8118      	LDD  R17,Y+0
000f80 c025      	RJMP _0x2120001
                 _0x210000E:
000f81 3010      	CPI  R17,0
000f82 f419      	BRNE _0x2100011
000f83 e0e0      	LDI  R30,LOW(0)
000f84 8118      	LDD  R17,Y+0
000f85 c020      	RJMP _0x2120001
                 _0x2100011:
                 _0x2100005:
000f86 81ea      	LDD  R30,Y+2
000f87 8118      	LDD  R17,Y+0
000f88 c01d      	RJMP _0x2120001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000f89 93ba      	ST   -Y,R27
000f8a 93aa      	ST   -Y,R26
000f8b 81ea      	LDD  R30,Y+2
000f8c 30e1      	CPI  R30,LOW(0x1)
000f8d f421      	BRNE _0x2100015
000f8e 81e8      	LD   R30,Y
000f8f 81f9      	LDD  R31,Y+1
000f90 91e4      	LPM  R30,Z
000f91 c014      	RJMP _0x2120001
                 _0x2100015:
000f92 30e2      	CPI  R30,LOW(0x2)
000f93 f429      	BRNE _0x2100016
000f94 81a8      	LD   R26,Y
000f95 81b9      	LDD  R27,Y+1
000f96 940e 1161 	CALL __EEPROMRDB
000f98 c00d      	RJMP _0x2120001
                 _0x2100016:
000f99 30e3      	CPI  R30,LOW(0x3)
000f9a f441      	BRNE _0x2100018
000f9b 81a8      	LD   R26,Y
000f9c 81b9      	LDD  R27,Y+1
                +
000f9d 91e0 0685+LDS R30 , _glcd_state + ( 25 )
000f9f 91f0 0686+LDS R31 , _glcd_state + ( 25 ) + 1
000fa1 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000fa2 c003      	RJMP _0x2120001
                 _0x2100018:
000fa3 81a8      	LD   R26,Y
000fa4 81b9      	LDD  R27,Y+1
000fa5 91ec      	LD   R30,X
                 _0x2120001:
000fa6 9623      	ADIW R28,3
000fa7 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000fa8 93aa      	ST   -Y,R26
000fa9 81eb      	LDD  R30,Y+3
000faa 30e0      	CPI  R30,0
000fab f429      	BRNE _0x210001C
000fac 81e8      	LD   R30,Y
000fad 81a9      	LDD  R26,Y+1
000fae 81ba      	LDD  R27,Y+1+1
000faf 93ec      	ST   X,R30
000fb0 c014      	RJMP _0x210001B
                 _0x210001C:
000fb1 30e2      	CPI  R30,LOW(0x2)
000fb2 f431      	BRNE _0x210001D
000fb3 81e8      	LD   R30,Y
000fb4 81a9      	LDD  R26,Y+1
000fb5 81ba      	LDD  R27,Y+1+1
000fb6 940e 116d 	CALL __EEPROMWRB
000fb8 c00c      	RJMP _0x210001B
                 _0x210001D:
000fb9 30e3      	CPI  R30,LOW(0x3)
000fba f451      	BRNE _0x210001B
000fbb 81e9      	LDD  R30,Y+1
000fbc 81fa      	LDD  R31,Y+1+1
000fbd 93fa      	ST   -Y,R31
000fbe 93ea      	ST   -Y,R30
000fbf 81aa      	LDD  R26,Y+2
                +
000fc0 91e0 0687+LDS R30 , _glcd_state + ( 27 )
000fc2 91f0 0688+LDS R31 , _glcd_state + ( 27 ) + 1
000fc4 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
000fc5 9624      	ADIW R28,4
000fc6 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
00066c           	.BYTE 0x1D
                 _key:
000689           	.BYTE 0xA
                 _cmd:
000693           	.BYTE 0xFA
                 _rx_buffer0:
00078d           	.BYTE 0x40
                 _rx_wr_index0:
0007cd           	.BYTE 0x1
                 _rx_rd_index0:
0007ce           	.BYTE 0x1
                 _rx_counter0:
0007cf           	.BYTE 0x1
                 _buff:
0007d0           	.BYTE 0x104
                 _i:
0008d4           	.BYTE 0x2
                 _time_s:
0008d6           	.BYTE 0x2
                 _time_flow:
0008d8           	.BYTE 0x4
                 _tx_buffer0:
0008dc           	.BYTE 0x40
                 _tx_wr_index0:
00091c           	.BYTE 0x1
                 _tx_rd_index0:
00091d           	.BYTE 0x1
                 _tx_counter0:
00091e           	.BYTE 0x1
                 _station_receive:
00091f           	.BYTE 0xC
                 _tay_cam_receive:
00092b           	.BYTE 0x8
                 _data_receive:
000933           	.BYTE 0x12
                 _result:
000945           	.BYTE 0x1
                 __seed_G101:
000946           	.BYTE 0x4
                 _gfx_addr_G102:
00094a           	.BYTE 0x2
                 _gfx_buffer_G102:
00094c           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
000fc7 91ed      	LD   R30,X+
000fc8 91fd      	LD   R31,X+
000fc9 9631      	ADIW R30,1
000fca 93fe      	ST   -X,R31
000fcb 93ee      	ST   -X,R30
000fcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1:
                +
000fcd e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fce 958a     +DEC R24
000fcf f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fd0 81e9      	LDD  R30,Y+1
000fd1 0fee      	LSL  R30
000fd2 83e9      	STD  Y+1,R30
000fd3 9adc      	SBI  0x1B,4
                +
000fd4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fd5 958a     +DEC R24
000fd6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fd7 e0e0      	LDI  R30,0
000fd8 99cd      	SBIC 0x19,5
000fd9 e0e1      	LDI  R30,1
000fda 81a9      	LDD  R26,Y+1
000fdb 2bea      	OR   R30,R26
000fdc 83e9      	STD  Y+1,R30
000fdd 98dc      	CBI  0x1B,4
000fde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
000fdf 93aa      	ST   -Y,R26
000fe0 98da      	CBI  0x1B,2
000fe1 81e9      	LDD  R30,Y+1
000fe2 62e0      	ORI  R30,0x20
000fe3 2fae      	MOV  R26,R30
000fe4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000fe5 9ada      	SBI  0x1B,2
                +
000fe6 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000fe7 958a     +DEC R24
000fe8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000fe9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000fea 940e 03e6 	CALL _SPI_RW_RX
000fec 81a8      	LD   R26,Y
000fed 940c 03e6 	JMP  _SPI_RW_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000fef 940e 0430 	CALL _RF_Write3_RX
000ff1 e1e0      	LDI  R30,LOW(16)
000ff2 93ea      	ST   -Y,R30
000ff3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000ff4 93ea      	ST   -Y,R30
000ff5 e0af      	LDI  R26,LOW(15)
000ff6 940c 041a 	JMP  _RF_Write_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
000ff8 e0f0      	LDI  R31,0
000ff9 93ed      	ST   X+,R30
000ffa 93fc      	ST   X,R31
000ffb 940c 03f9 	JMP  _SPI_Read_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000ffd 93ba      	ST   -Y,R27
000ffe 93aa      	ST   -Y,R26
000fff 81a8      	LD   R26,Y
001000 81b9      	LDD  R27,Y+1
001001 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
001002 940e 0914 	CALL _glcd_clear
001004 e0e0      	LDI  R30,LOW(0)
001005 93ea      	ST   -Y,R30
001006 e0a0      	LDI  R26,LOW(0)
001007 940c 0cb2 	JMP  _glcd_moveto
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
001009 eda0      	LDI  R26,LOW(_buff)
00100a e0b7      	LDI  R27,HIGH(_buff)
00100b 940c 0c88 	JMP  _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
00100d 1ba2      	SUB  R26,R18
00100e 0bb3      	SBC  R27,R19
00100f a5ee      	LDD  R30,Y+46
001010 a5ff      	LDD  R31,Y+46+1
001011 17ea      	CP   R30,R26
001012 07fb      	CPC  R31,R27
001013 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC:
001014 ede0      	LDI  R30,LOW(_buff)
001015 e0f7      	LDI  R31,HIGH(_buff)
001016 93fa      	ST   -Y,R31
001017 93ea      	ST   -Y,R30
001018 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD:
001019 e9e3      	LDI  R30,LOW(_cmd)
00101a e0f6      	LDI  R31,HIGH(_cmd)
00101b 93fa      	ST   -Y,R31
00101c 93ea      	ST   -Y,R30
00101d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
                +
00101e 01de     +MOVW R26 , R28
00101f 5ca0     +SUBI R26 , LOW ( - 64 )
001020 4fbf     +SBCI R27 , HIGH ( - 64 )
001021 900d     +LD R0 , X +
001022 91bc     +LD R27 , X
001023 2da0     +MOV R26 , R0
                 	__GETW2SX 64
001024 91ec      	LD   R30,X
001025 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
001026 940e 04b3 	CALL _put_string
001028 e2ac      	LDI  R26,LOW(300)
001029 e0b1      	LDI  R27,HIGH(300)
00102a 940c 111b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
00102c 93fa      	ST   -Y,R31
00102d 93ea      	ST   -Y,R30
00102e e0a2      	LDI  R26,LOW(2)
00102f e0b0      	LDI  R27,0
001030 940e 04da 	CALL _wait_until
001032 e0a0      	LDI  R26,LOW(0)
001033 e0b0      	LDI  R27,0
001034 940c 04c8 	JMP  _refresh
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
001036 93fa      	ST   -Y,R31
001037 93ea      	ST   -Y,R30
001038 e0aa      	LDI  R26,LOW(10)
001039 e0b0      	LDI  R27,0
00103a 940c 04da 	JMP  _wait_until
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
00103c 93fa      	ST   -Y,R31
00103d 93ea      	ST   -Y,R30
00103e 01de      	MOVW R26,R28
00103f 965a      	ADIW R26,26
001040 940e 07ff 	CALL _itoa
001042 cfd6      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
001043 01de      	MOVW R26,R28
001044 965a      	ADIW R26,26
001045 940e 07b1 	CALL _strcat
001047 01de      	MOVW R26,R28
001048 9658      	ADIW R26,24
001049 940c 07cf 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
00104b 93ea      	ST   -Y,R30
00104c e3e0      	LDI  R30,LOW(48)
00104d 93ea      	ST   -Y,R30
00104e e0af      	LDI  R26,LOW(15)
00104f 940e 0cbe 	CALL _glcd_line
001051 e0e0      	LDI  R30,LOW(0)
001052 93ea      	ST   -Y,R30
001053 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
001054 93ea      	ST   -Y,R30
001055 e5e4      	LDI  R30,LOW(84)
001056 93ea      	ST   -Y,R30
001057 e3a0      	LDI  R26,LOW(48)
001058 940e 0cbe 	CALL _glcd_line
00105a e0e0      	LDI  R30,LOW(0)
00105b 93ea      	ST   -Y,R30
00105c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
00105d 940e 0c88 	CALL _glcd_outtext
00105f e0e4      	LDI  R30,LOW(4)
001060 93ea      	ST   -Y,R30
001061 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
001062 940e 0cb2 	CALL _glcd_moveto
001064 cfaf      	RJMP SUBOPT_0xC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
001065 940e 113d 	CALL __CWD1
001067 940e 115c 	CALL __PUTPARD1
001069 e084      	LDI  R24,4
00106a 940e 0f22 	CALL _sprintf
00106c 9628      	ADIW R28,8
00106d cf9b      	RJMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
00106e e4aa      	LDI  R26,LOW(_gfx_addr_G102)
00106f e0b9      	LDI  R27,HIGH(_gfx_addr_G102)
001070 cf56      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
001071 0fea      	ADD  R30,R26
001072 1ffb      	ADC  R31,R27
001073 83ee      	STD  Y+6,R30
001074 83ff      	STD  Y+6+1,R31
001075 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1B:
001076 85ec      	LDD  R30,Y+12
001077 93ea      	ST   -Y,R30
001078 81ef      	LDD  R30,Y+7
001079 85f8      	LDD  R31,Y+7+1
00107a 9631      	ADIW R30,1
00107b 83ef      	STD  Y+7,R30
00107c 87f8      	STD  Y+7+1,R31
00107d 9731      	SBIW R30,1
00107e 93fa      	ST   -Y,R31
00107f 93ea      	ST   -Y,R30
001080 e0a0      	LDI  R26,LOW(0)
001081 940c 0fa8 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
001083 930a      	ST   -Y,R16
001084 89a8      	LDD  R26,Y+16
001085 940c 084f 	JMP  _pcd8544_setaddr_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D:
001087 85ec      	LDD  R30,Y+12
001088 93ea      	ST   -Y,R30
001089 81ef      	LDD  R30,Y+7
00108a 85f8      	LDD  R31,Y+7+1
00108b 9631      	ADIW R30,1
00108c 83ef      	STD  Y+7,R30
00108d 87f8      	STD  Y+7+1,R31
00108e 9731      	SBIW R30,1
00108f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
001090 2766      	CLR  R22
001091 2777      	CLR  R23
001092 01df      	MOVW R26,R30
001093 01cb      	MOVW R24,R22
001094 940c 0f89 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
001096 935a      	ST   -Y,R21
001097 85aa      	LDD  R26,Y+10
001098 940c 0f61 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
00109a 930a      	ST   -Y,R16
00109b 9503      	INC  R16
00109c 89e8      	LDD  R30,Y+16
00109d 93ea      	ST   -Y,R30
00109e 935a      	ST   -Y,R21
00109f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
0010a0 2f5e      	MOV  R21,R30
0010a1 85ec      	LDD  R30,Y+12
0010a2 93ea      	ST   -Y,R30
0010a3 81af      	LDD  R26,Y+7
0010a4 85b8      	LDD  R27,Y+7+1
0010a5 2788      	CLR  R24
0010a6 2799      	CLR  R25
0010a7 940e 0f89 	CALL _glcd_readmem
0010a9 2e1e      	MOV  R1,R30
0010aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22:
0010ab 930a      	ST   -Y,R16
0010ac 9503      	INC  R16
0010ad 89e8      	LDD  R30,Y+16
0010ae 93ea      	ST   -Y,R30
0010af 85ee      	LDD  R30,Y+14
0010b0 93ea      	ST   -Y,R30
0010b1 85e9      	LDD  R30,Y+9
0010b2 85fa      	LDD  R31,Y+9+1
0010b3 9631      	ADIW R30,1
0010b4 87e9      	STD  Y+9,R30
0010b5 87fa      	STD  Y+9+1,R31
0010b6 9731      	SBIW R30,1
0010b7 cfd8      	RJMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
0010b8 940e 1182 	CALL __SAVELOCR6
                +
0010ba 91e0 0670+LDS R30 , _glcd_state + ( 4 )
0010bc 91f0 0671+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
0010bf 01f8      	MOVW R30,R16
                +
0010c0 5f0f     +SUBI R16 , LOW ( - 1 )
0010c1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0010c2 9004      	LPM  R0,Z
0010c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
                +
0010c4 91e0 0670+LDS R30 , _glcd_state + ( 4 )
0010c6 91f0 0671+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010c8 9631      	ADIW R30,1
0010c9 91e4      	LPM  R30,Z
0010ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
0010cb 93ea      	ST   -Y,R30
0010cc e0e0      	LDI  R30,LOW(0)
0010cd 93ea      	ST   -Y,R30
0010ce e0e0      	LDI  R30,LOW(0)
0010cf e0f0      	LDI  R31,HIGH(0)
0010d0 93fa      	ST   -Y,R31
0010d1 93ea      	ST   -Y,R30
0010d2 e0a9      	LDI  R26,LOW(9)
0010d3 940c 098d 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x27:
0010d5 81ae      	LDD  R26,Y+6
0010d6 5faf      	SUBI R26,-LOW(1)
0010d7 83ae      	STD  Y+6,R26
0010d8 50a1      	SUBI R26,LOW(1)
                +
0010d9 91e0 0674+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0010db 17ae      	CP   R26,R30
0010dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
0010dd 933a      	ST   -Y,R19
0010de 85aa      	LDD  R26,Y+10
0010df 940c 0c98 	JMP  _glcd_putpixelm_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0010e1 85a9      	LDD  R26,Y+9
0010e2 85ba      	LDD  R27,Y+9+1
0010e3 0fea      	ADD  R30,R26
0010e4 1ffb      	ADC  R31,R27
0010e5 87e9      	STD  Y+9,R30
0010e6 87fa      	STD  Y+9+1,R31
0010e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0010e8 85e9      	LDD  R30,Y+9
0010e9 85fa      	LDD  R31,Y+9+1
0010ea 1bea      	SUB  R30,R26
0010eb 0bfb      	SBC  R31,R27
0010ec 87e9      	STD  Y+9,R30
0010ed 87fa      	STD  Y+9+1,R31
0010ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2B:
0010ef 932a      	ST   -Y,R18
0010f0 85ad      	LDD  R26,Y+13
0010f1 85be      	LDD  R27,Y+13+1
0010f2 85ef      	LDD  R30,Y+15
0010f3 89f8      	LDD  R31,Y+15+1
0010f4 9509      	ICALL
0010f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2C:
0010f6 89e8      	LDD  R30,Y+16
0010f7 89f9      	LDD  R31,Y+16+1
0010f8 9734      	SBIW R30,4
0010f9 8be8      	STD  Y+16,R30
0010fa 8bf9      	STD  Y+16+1,R31
0010fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
0010fc 85ad      	LDD  R26,Y+13
0010fd 85be      	LDD  R27,Y+13+1
0010fe 85ef      	LDD  R30,Y+15
0010ff 89f8      	LDD  R31,Y+15+1
001100 9509      	ICALL
001101 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E:
001102 89a8      	LDD  R26,Y+16
001103 89b9      	LDD  R27,Y+16+1
001104 9614      	ADIW R26,4
001105 940e 114a 	CALL __GETW1P
001107 83ee      	STD  Y+6,R30
001108 83ff      	STD  Y+6+1,R31
001109 81ae      	LDD  R26,Y+6
00110a 81bf      	LDD  R27,Y+6+1
00110b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2F:
00110c 89a8      	LDD  R26,Y+16
00110d 89b9      	LDD  R27,Y+16+1
00110e 9614      	ADIW R26,4
00110f 940e 114a 	CALL __GETW1P
001111 87ea      	STD  Y+10,R30
001112 87fb      	STD  Y+10+1,R31
001113 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
001114 01de      	MOVW R26,R28
001115 961c      	ADIW R26,12
001116 940e 1125 	CALL __ADDW2R15
001118 940e 114a 	CALL __GETW1P
00111a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00111b 9610      	adiw r26,0
00111c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00111d ed80     +LDI R24 , LOW ( 0x7D0 )
00111e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00111f 9701     +SBIW R24 , 1
001120 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001121 95a8      	wdr
001122 9711      	sbiw r26,1
001123 f7c9      	brne __delay_ms0
                 __delay_ms1:
001124 9508      	ret
                 
                 __ADDW2R15:
001125 2400      	CLR  R0
001126 0daf      	ADD  R26,R15
001127 1db0      	ADC  R27,R0
001128 9508      	RET
                 
                 __ANEGW1:
001129 95f1      	NEG  R31
00112a 95e1      	NEG  R30
00112b 40f0      	SBCI R31,0
00112c 9508      	RET
                 
                 __LSLB12:
00112d 23ee      	TST  R30
00112e 2e0e      	MOV  R0,R30
00112f 2fea      	MOV  R30,R26
001130 f019      	BREQ __LSLB12R
                 __LSLB12L:
001131 0fee      	LSL  R30
001132 940a      	DEC  R0
001133 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
001134 9508      	RET
                 
                 __LSRB12:
001135 23ee      	TST  R30
001136 2e0e      	MOV  R0,R30
001137 2fea      	MOV  R30,R26
001138 f019      	BREQ __LSRB12R
                 __LSRB12L:
001139 95e6      	LSR  R30
00113a 940a      	DEC  R0
00113b f7e9      	BRNE __LSRB12L
                 __LSRB12R:
00113c 9508      	RET
                 
                 __CWD1:
00113d 2f6f      	MOV  R22,R31
00113e 0f66      	ADD  R22,R22
00113f 0b66      	SBC  R22,R22
001140 2f76      	MOV  R23,R22
001141 9508      	RET
                 
                 __MULW12U:
001142 9ffa      	MUL  R31,R26
001143 2df0      	MOV  R31,R0
001144 9feb      	MUL  R30,R27
001145 0df0      	ADD  R31,R0
001146 9fea      	MUL  R30,R26
001147 2de0      	MOV  R30,R0
001148 0df1      	ADD  R31,R1
001149 9508      	RET
                 
                 __GETW1P:
00114a 91ed      	LD   R30,X+
00114b 91fc      	LD   R31,X
00114c 9711      	SBIW R26,1
00114d 9508      	RET
                 
                 __GETD1P_INC:
00114e 91ed      	LD   R30,X+
00114f 91fd      	LD   R31,X+
001150 916d      	LD   R22,X+
001151 917d      	LD   R23,X+
001152 9508      	RET
                 
                 __PUTDP1_DEC:
001153 937e      	ST   -X,R23
001154 936e      	ST   -X,R22
001155 93fe      	ST   -X,R31
001156 93ee      	ST   -X,R30
001157 9508      	RET
                 
                 __GETW1PF:
001158 9005      	LPM  R0,Z+
001159 91f4      	LPM  R31,Z
00115a 2de0      	MOV  R30,R0
00115b 9508      	RET
                 
                 __PUTPARD1:
00115c 937a      	ST   -Y,R23
00115d 936a      	ST   -Y,R22
00115e 93fa      	ST   -Y,R31
00115f 93ea      	ST   -Y,R30
001160 9508      	RET
                 
                 __EEPROMRDB:
001161 99e1      	SBIC EECR,EEWE
001162 cffe      	RJMP __EEPROMRDB
001163 93ff      	PUSH R31
001164 b7ff      	IN   R31,SREG
001165 94f8      	CLI
001166 bbae      	OUT  EEARL,R26
001167 bbbf      	OUT  EEARH,R27
001168 9ae0      	SBI  EECR,EERE
001169 b3ed      	IN   R30,EEDR
00116a bfff      	OUT  SREG,R31
00116b 91ff      	POP  R31
00116c 9508      	RET
                 
                 __EEPROMWRB:
00116d 9be1      	SBIS EECR,EEWE
00116e c002      	RJMP __EEPROMWRB1
00116f 95a8      	WDR
001170 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001171 b79f      	IN   R25,SREG
001172 94f8      	CLI
001173 bbae      	OUT  EEARL,R26
001174 bbbf      	OUT  EEARH,R27
001175 9ae0      	SBI  EECR,EERE
001176 b38d      	IN   R24,EEDR
001177 17e8      	CP   R30,R24
001178 f019      	BREQ __EEPROMWRB0
001179 bbed      	OUT  EEDR,R30
00117a 9ae2      	SBI  EECR,EEMWE
00117b 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00117c bf9f      	OUT  SREG,R25
00117d 9508      	RET
                 
                 __CPW02:
00117e 2400      	CLR  R0
00117f 160a      	CP   R0,R26
001180 060b      	CPC  R0,R27
001181 9508      	RET
                 
                 __SAVELOCR6:
001182 935a      	ST   -Y,R21
                 __SAVELOCR5:
001183 934a      	ST   -Y,R20
                 __SAVELOCR4:
001184 933a      	ST   -Y,R19
                 __SAVELOCR3:
001185 932a      	ST   -Y,R18
                 __SAVELOCR2:
001186 931a      	ST   -Y,R17
001187 930a      	ST   -Y,R16
001188 9508      	RET
                 
                 __LOADLOCR6:
001189 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00118a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00118b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00118c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00118d 8119      	LDD  R17,Y+1
00118e 8108      	LD   R16,Y
00118f 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  36 r1 :   5 r2 :   1 r3 :   0 r4 :   1 r5 :   0 r6 :   1 r7 :   5 
r8 :   3 r9 :   1 r10:  13 r11:   3 r12:   4 r13:   2 r14:   0 r15:   4 
r16: 102 r17: 138 r18:  69 r19:  54 r20:  36 r21:  52 r22:  43 r23:  11 
r24:  50 r25:  16 r26: 535 r27: 200 r28:  53 r29:   1 r30:1116 r31: 262 
x  :  57 y  : 787 z  :  38 
Registers used: 32 out of 35 (91.4%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  23 add   :  37 
adiw  :  70 and   :  10 andi  :  19 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  52 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   7 brmi  :   1 brne  : 114 brpl  :   4 brsh  :  26 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 272 
cbi   :  17 cbr   :   0 clc   :   0 clh   :   0 cli   :   4 cln   :   0 
clr   :  36 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :  10 
cp    :  41 cpc   :  21 cpi   : 117 cpse  :   0 dec   :  10 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  10 inc   :   5 jmp   :  73 ld    : 106 ldd   : 354 
ldi   : 474 lds   :  75 lpm   :  30 lsl   :   8 lsr   :  15 mov   : 115 
movw  :  89 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   8 ori   :  15 out   :  58 pop   :  12 push  :  12 rcall : 102 
ret   :  79 reti  :   4 rjmp  : 175 rol   :   3 ror   :   0 sbc   :   7 
sbci  :  24 sbi   :  25 sbic  :   6 sbis  :   1 sbiw  :  44 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   2 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 291 std   : 111 sts   :  70 sub   :  16 subi  :  73 
swap  :   0 tst   :  14 wdr   :   2 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002320   7852   1140   8992  131072   6.9%
[.dseg] 0x000100 0x000b44      0   1604   1604    4096  39.2%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 13 warnings
