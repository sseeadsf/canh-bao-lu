
AVRASM ver. 2.1.30  D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm Sat Sep 09 18:36:16 2017

D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1090): warning: Register r5 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1091): warning: Register r4 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1092): warning: Register r7 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1093): warning: Register r6 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1094): warning: Register r9 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1095): warning: Register r8 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1096): warning: Register r11 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1097): warning: Register r12 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1098): warning: Register r13 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1099): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _P_Add=R5
                 	.DEF _Code_tay_cam1=R4
                 	.DEF _Code_tay_cam2=R7
                 	.DEF _Code_tay_cam3=R6
                 	.DEF _Code_tay_cam4=R9
                 	.DEF _p=R8
                 	.DEF _lan_bam=R11
                 	.DEF _count=R12
                 	.DEF _count_msb=R13
                 	.DEF _flag=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 027f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0318 	JMP  _timer2_ovf_isr
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0343 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 02c0 	JMP  _usart0_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 02f4 	JMP  _usart0_tx_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G105:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G105:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000146 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000147 00a1
000148 a2a3      	.DB  0xA1,0x0,0xA3,0xA2
000149 a400
00014a 0000      	.DB  0x0,0xA4,0x0,0x0
                 
                 _0x4:
00014b 0500
00014c 0501
00014d 0512
00014e 0523      	.DB  LOW(_0x3),HIGH(_0x3),LOW(_0x3+1),HIGH(_0x3+1),LOW(_0x3+18),HIGH(_0x3+18),LOW(_0x3+35),HIGH(_0x3+35)
00014f 0534      	.DB  LOW(_0x3+52),HIGH(_0x3+52)
                 _0x0:
000150 3400
000151 375a
000152 4741
000153 4636      	.DB  0x0,0x34,0x5A,0x37,0x41,0x47,0x36,0x46
000154 4553
000155 3442
000156 5848
000157 5534      	.DB  0x53,0x45,0x42,0x34,0x48,0x58,0x34,0x55
000158 0058
000159 5a4d
00015a 3053
00015b 4f56      	.DB  0x58,0x0,0x4D,0x5A,0x53,0x30,0x56,0x4F
00015c 4e4a
00015d 5750
00015e 4b4d
00015f 4549      	.DB  0x4A,0x4E,0x50,0x57,0x4D,0x4B,0x49,0x45
000160 3736
000161 5000
000162 3053
000163 3332      	.DB  0x36,0x37,0x0,0x50,0x53,0x30,0x32,0x33
000164 3752
000165 3754
000166 564d
000167 4255      	.DB  0x52,0x37,0x54,0x37,0x4D,0x56,0x55,0x42
000168 4553
000169 0057
00016a 3643
00016b 5631      	.DB  0x53,0x45,0x57,0x0,0x43,0x36,0x31,0x56
00016c 304c
00016d 365a
00016e 4449
00016f 364b      	.DB  0x4C,0x30,0x5A,0x36,0x49,0x44,0x4B,0x36
000170 3957
000171 4752
000172 4500
000173 5252      	.DB  0x57,0x39,0x52,0x47,0x0,0x45,0x52,0x52
000174 524f
000175 4700
000176 5445
000177 2f20      	.DB  0x4F,0x52,0x0,0x47,0x45,0x54,0x20,0x2F
000178 7075
000179 6164
00017a 6574
00017b 6b3f      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x3F,0x6B
00017c 7965
00017d 003d
00017e 5441
00017f 432b      	.DB  0x65,0x79,0x3D,0x0,0x41,0x54,0x2B,0x43
000180 5049
000181 4f4d
000182 4544
000183 303d      	.DB  0x49,0x50,0x4D,0x4F,0x44,0x45,0x3D,0x30
000184 0d00
000185 000a
000186 4b4f
000187 4100      	.DB  0x0,0xD,0xA,0x0,0x4F,0x4B,0x0,0x41
000188 2b54
000189 4943
00018a 4d50
00018b 5855      	.DB  0x54,0x2B,0x43,0x49,0x50,0x4D,0x55,0x58
00018c 313d
00018d 4100
00018e 2b54
00018f 4943      	.DB  0x3D,0x31,0x0,0x41,0x54,0x2B,0x43,0x49
000190 5350
000191 4154
000192 5452
000193 303d      	.DB  0x50,0x53,0x54,0x41,0x52,0x54,0x3D,0x30
000194 222c
000195 4354
000196 2250
000197 222c      	.DB  0x2C,0x22,0x54,0x43,0x50,0x22,0x2C,0x22
000198 7061
000199 2e69
00019a 6874
00019b 6e69      	.DB  0x61,0x70,0x69,0x2E,0x74,0x68,0x69,0x6E
00019c 7367
00019d 6570
00019e 6b61
00019f 632e      	.DB  0x67,0x73,0x70,0x65,0x61,0x6B,0x2E,0x63
0001a0 6d6f
0001a1 2c22
0001a2 3038
0001a3 5300      	.DB  0x6F,0x6D,0x22,0x2C,0x38,0x30,0x0,0x53
0001a4 7265
0001a5 6576
0001a6 2072
0001a7 6f63      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x63,0x6F
0001a8 6e6e
0001a9 6365
0001aa 6574
0001ab 0064      	.DB  0x6E,0x6E,0x65,0x63,0x74,0x65,0x64,0x0
0001ac 6626
0001ad 6569
0001ae 646c
0001af 3d31      	.DB  0x26,0x66,0x69,0x65,0x6C,0x64,0x31,0x3D
0001b0 2600
0001b1 6966
0001b2 6c65
0001b3 3264      	.DB  0x0,0x26,0x66,0x69,0x65,0x6C,0x64,0x32
0001b4 003d
0001b5 6626
0001b6 6569
0001b7 646c      	.DB  0x3D,0x0,0x26,0x66,0x69,0x65,0x6C,0x64
0001b8 3d33
0001b9 4100
0001ba 2b54
0001bb 4943      	.DB  0x33,0x3D,0x0,0x41,0x54,0x2B,0x43,0x49
0001bc 5350
0001bd 4e45
0001be 3d44
0001bf 2c30      	.DB  0x50,0x53,0x45,0x4E,0x44,0x3D,0x30,0x2C
0001c0 3e00
0001c1 0020
0001c2 6553
0001c3 646e      	.DB  0x0,0x3E,0x20,0x0,0x53,0x65,0x6E,0x64
0001c4 6e69
0001c5 0067
0001c6 6f4e
0001c7 6564      	.DB  0x69,0x6E,0x67,0x0,0x4E,0x6F,0x64,0x65
0001c8 203a
0001c9 5400
0001ca 6d65
0001cb 3a70      	.DB  0x3A,0x20,0x0,0x54,0x65,0x6D,0x70,0x3A
0001cc 0020
0001cd 7548
0001ce 696d
0001cf 3a64      	.DB  0x20,0x0,0x48,0x75,0x6D,0x69,0x64,0x3A
0001d0 0020
0001d1 6157
0001d2 6574
0001d3 3a72      	.DB  0x20,0x0,0x57,0x61,0x74,0x65,0x72,0x3A
0001d4 0020
0001d5 6d6d
0001d6 2500
0001d7 2064      	.DB  0x20,0x0,0x6D,0x6D,0x0,0x25,0x64,0x20
0001d8 2500
0001d9 2064
0001da 0020
0001db 5441      	.DB  0x0,0x25,0x64,0x20,0x20,0x0,0x41,0x54
0001dc 0a0d
0001dd 4100
0001de 2b54
0001df 5743      	.DB  0xD,0xA,0x0,0x41,0x54,0x2B,0x43,0x57
0001e0 4f4d
0001e1 4544
0001e2 313d
0001e3 0a0d      	.DB  0x4D,0x4F,0x44,0x45,0x3D,0x31,0xD,0xA
0001e4 4100
0001e5 2b54
0001e6 5743
0001e7 414a      	.DB  0x0,0x41,0x54,0x2B,0x43,0x57,0x4A,0x41
0001e8 3d50
0001e9 5422
0001ea 6168
0001eb 5f79      	.DB  0x50,0x3D,0x22,0x54,0x68,0x61,0x79,0x5F
0001ec 6854
0001ed 6f61
0001ee 645f
0001ef 6f65      	.DB  0x54,0x68,0x61,0x6F,0x5F,0x64,0x65,0x6F
0001f0 675f
0001f1 6169
0001f2 2269
0001f3 222c      	.DB  0x5F,0x67,0x69,0x61,0x69,0x22,0x2C,0x22
0001f4 6863
0001f5 6e69
0001f6 7868
0001f7 6361      	.DB  0x63,0x68,0x69,0x6E,0x68,0x78,0x61,0x63
0001f8 0d22
0001f9 000a
0001fa 7473
0001fb 7261      	.DB  0x22,0xD,0xA,0x0,0x73,0x74,0x61,0x72
0001fc 0074      	.DB  0x74,0x0
                 _0x2020060:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1273): warning: .cseg .db misalignment - padding zero byte
0001fd 0001      	.DB  0x1
                 _0x2020000:
0001fe 4e2d
0001ff 4e41
000200 4900
000201 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram_chinh_2\Debug\List\1.asm(1276): warning: .cseg .db misalignment - padding zero byte
000202 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000203 0001      	.DW  0x01
000204 0002      	.DW  0x02
000205 028c      	.DW  __REG_BIT_VARS*2
                 
000206 0008      	.DW  0x08
000207 0004      	.DW  0x04
000208 028e      	.DW  __REG_VARS*2
                 
000209 0001      	.DW  0x01
00020a 0500      	.DW  _0x3
00020b 02a0      	.DW  _0x0*2
                 
00020c 0011      	.DW  0x11
00020d 0501      	.DW  _0x3+1
00020e 02a1      	.DW  _0x0*2+1
                 
00020f 0011      	.DW  0x11
000210 0512      	.DW  _0x3+18
000211 02b2      	.DW  _0x0*2+18
                 
000212 0011      	.DW  0x11
000213 0523      	.DW  _0x3+35
000214 02c3      	.DW  _0x0*2+35
                 
000215 0011      	.DW  0x11
000216 0534      	.DW  _0x3+52
000217 02d4      	.DW  _0x0*2+52
                 
000218 000a      	.DW  0x0A
000219 0689      	.DW  _key
00021a 0296      	.DW  _0x4*2
                 
00021b 0006      	.DW  0x06
00021c 0545      	.DW  _0xCD
00021d 02e5      	.DW  _0x0*2+69
                 
00021e 0011      	.DW  0x11
00021f 054b      	.DW  _0xCE
000220 02eb      	.DW  _0x0*2+75
                 
000221 000d      	.DW  0x0D
000222 055c      	.DW  _0xCE+17
000223 02fc      	.DW  _0x0*2+92
                 
000224 0003      	.DW  0x03
000225 0569      	.DW  _0xCE+30
000226 0309      	.DW  _0x0*2+105
                 
000227 0003      	.DW  0x03
000228 056c      	.DW  _0xCE+33
000229 030c      	.DW  _0x0*2+108
                 
00022a 000c      	.DW  0x0C
00022b 056f      	.DW  _0xCE+36
00022c 030f      	.DW  _0x0*2+111
                 
00022d 0003      	.DW  0x03
00022e 057b      	.DW  _0xCE+48
00022f 0309      	.DW  _0x0*2+105
                 
000230 0003      	.DW  0x03
000231 057e      	.DW  _0xCE+51
000232 030c      	.DW  _0x0*2+108
                 
000233 002c      	.DW  0x2C
000234 0581      	.DW  _0xCE+54
000235 031b      	.DW  _0x0*2+123
                 
000236 0003      	.DW  0x03
000237 05ad      	.DW  _0xCE+98
000238 0309      	.DW  _0x0*2+105
                 
000239 0003      	.DW  0x03
00023a 05b0      	.DW  _0xCE+101
00023b 030c      	.DW  _0x0*2+108
                 
00023c 0011      	.DW  0x11
00023d 05b3      	.DW  _0xCE+104
00023e 0347      	.DW  _0x0*2+167
                 
00023f 0009      	.DW  0x09
000240 05c4      	.DW  _0xCE+121
000241 0358      	.DW  _0x0*2+184
                 
000242 0009      	.DW  0x09
000243 05cd      	.DW  _0xCE+130
000244 0361      	.DW  _0x0*2+193
                 
000245 0009      	.DW  0x09
000246 05d6      	.DW  _0xCE+139
000247 036a      	.DW  _0x0*2+202
                 
000248 000e      	.DW  0x0E
000249 05df      	.DW  _0xCE+148
00024a 0373      	.DW  _0x0*2+211
                 
00024b 0003      	.DW  0x03
00024c 05ed      	.DW  _0xCE+162
00024d 0309      	.DW  _0x0*2+105
                 
00024e 0003      	.DW  0x03
00024f 05f0      	.DW  _0xCE+165
000250 0381      	.DW  _0x0*2+225
                 
000251 0003      	.DW  0x03
000252 05f3      	.DW  _0xCE+168
000253 0309      	.DW  _0x0*2+105
                 
000254 0008      	.DW  0x08
000255 05f6      	.DW  _0xCE+171
000256 0384      	.DW  _0x0*2+228
                 
000257 0007      	.DW  0x07
000258 05fe      	.DW  _0xD4
000259 038c      	.DW  _0x0*2+236
                 
00025a 0007      	.DW  0x07
00025b 0605      	.DW  _0xD4+7
00025c 0393      	.DW  _0x0*2+243
                 
00025d 0008      	.DW  0x08
00025e 060c      	.DW  _0xD4+14
00025f 039a      	.DW  _0x0*2+250
                 
000260 0008      	.DW  0x08
000261 0614      	.DW  _0xD4+22
000262 03a2      	.DW  _0x0*2+258
                 
000263 0003      	.DW  0x03
000264 061c      	.DW  _0xD4+30
000265 03aa      	.DW  _0x0*2+266
                 
000266 0005      	.DW  0x05
000267 061f      	.DW  _0xDC
000268 03b6      	.DW  _0x0*2+278
                 
000269 0003      	.DW  0x03
00026a 0624      	.DW  _0xDC+5
00026b 030c      	.DW  _0x0*2+108
                 
00026c 000e      	.DW  0x0E
00026d 0627      	.DW  _0xDC+8
00026e 03bb      	.DW  _0x0*2+283
                 
00026f 0003      	.DW  0x03
000270 0635      	.DW  _0xDC+22
000271 030c      	.DW  _0x0*2+108
                 
000272 002b      	.DW  0x2B
000273 0638      	.DW  _0xDC+25
000274 03c9      	.DW  _0x0*2+297
                 
000275 0003      	.DW  0x03
000276 0663      	.DW  _0xDC+68
000277 030c      	.DW  _0x0*2+108
                 
000278 0006      	.DW  0x06
000279 0666      	.DW  _0xDC+71
00027a 03f4      	.DW  _0x0*2+340
                 
00027b 0001      	.DW  0x01
00027c 0954      	.DW  __seed_G101
00027d 03fa      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00027e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00027f 94f8      	CLI
000280 27ee      	CLR  R30
000281 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000282 e0f1      	LDI  R31,1
000283 bff5      	OUT  MCUCR,R31
000284 bfe5      	OUT  MCUCR,R30
000285 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000287 e08d      	LDI  R24,(14-2)+1
000288 e0a2      	LDI  R26,2
000289 27bb      	CLR  R27
                 __CLEAR_REG:
00028a 93ed      	ST   X+,R30
00028b 958a      	DEC  R24
00028c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00028d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00028e e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00028f e0a0      	LDI  R26,LOW(__SRAM_START)
000290 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000291 93ed      	ST   X+,R30
000292 9701      	SBIW R24,1
000293 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000294 e0e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000295 e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000296 9185      	LPM  R24,Z+
000297 9195      	LPM  R25,Z+
000298 9700      	SBIW R24,0
000299 f061      	BREQ __GLOBAL_INI_END
00029a 91a5      	LPM  R26,Z+
00029b 91b5      	LPM  R27,Z+
00029c 9005      	LPM  R0,Z+
00029d 9015      	LPM  R1,Z+
00029e 01bf      	MOVW R22,R30
00029f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002a0 9005      	LPM  R0,Z+
0002a1 920d      	ST   X+,R0
0002a2 9701      	SBIW R24,1
0002a3 f7e1      	BRNE __GLOBAL_INI_LOOP
0002a4 01fb      	MOVW R30,R22
0002a5 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0002a6 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002a7 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002a8 bfed      	OUT  SPL,R30
0002a9 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002aa bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002ab e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002ac e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002ad 940c 066d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;unsigned char P_Add;
                 ;unsigned char P_Add, Code_tay_cam1 = 0xA1, Code_tay_cam2 = 0xA2, Code_tay_cam3 = 0xA3, Code_tay_cam4 = 0xA4;
                 ;unsigned char p=0,lan_bam=0;
                 ;int count;
                 ;bool flag;
                 ;unsigned char* key[] = {"", "4Z7AG6FSEB4HX4UX", "MZS0VOJNPWMKIE67", "PS023R7T7MVUBSEW", "C61VL0Z6IDK6W9RG"};
                 
                 	.DSEG
                 _0x3:
000500           	.BYTE 0x45
                 ;char cmd[250];
                 ;
                 ;unsigned int dem=0;
                 ;#define CE PORTA.3
                 ;#define CSN PORTA.2
                 ;#define SCK PORTA.4
                 ;#define MOSI PORTA.1
                 ;#define MISO PINA.5
                 ;#define IRQ PINA.0
                 ;
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE0)
                 ;#define RX_COMPLETE (1<<RXC0)
                 ;#define FRAMING_ERROR (1<<FE0)
                 ;#define PARITY_ERROR (1<<UPE0)
                 ;#define DATA_OVERRUN (1<<DOR0)
                 ;
                 ;// USART0 Receiver buffer
                 ;#define RX_BUFFER_SIZE0 64
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;#if RX_BUFFER_SIZE0 <= 256
                 ;unsigned char rx_wr_index0=0,rx_rd_index0=0;
                 ;#else
                 ;unsigned int rx_wr_index0=0,rx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE0 < 256
                 ;unsigned char rx_counter0=0;
                 ;#else
                 ;unsigned int rx_counter0=0;
                 ;#endif
                 ;
                 ;char buff[260];
                 ;int i = 0, time_s = 0;
                 ;long time_flow = 0;
                 ;
                 ;void del_string(unsigned char *s) {
                 ; 0000 0036 void del_string(unsigned char *s) {
                 
                 	.CSEG
                 _del_string:
                 ; .FSTART _del_string
                 ; 0000 0037     while (*s) {
0002af 93ba      	ST   -Y,R27
0002b0 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0x5:
0002b1 81a8      	LD   R26,Y
0002b2 81b9      	LDD  R27,Y+1
0002b3 91ec      	LD   R30,X
0002b4 30e0      	CPI  R30,0
0002b5 f041      	BREQ _0x7
                 ; 0000 0038         *s = '\0';
0002b6 e0e0      	LDI  R30,LOW(0)
0002b7 93ec      	ST   X,R30
                 ; 0000 0039         s++;
0002b8 81e8      	LD   R30,Y
0002b9 81f9      	LDD  R31,Y+1
0002ba 9631      	ADIW R30,1
0002bb 83e8      	ST   Y,R30
0002bc 83f9      	STD  Y+1,R31
                 ; 0000 003A     }
0002bd cff3      	RJMP _0x5
                 _0x7:
                 ; 0000 003B }
0002be 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void) {
                 ; 0000 0041 interrupt [19] void usart0_rx_isr(void) {
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
0002c0 940e 0fb4 	CALL SUBOPT_0x0
                 ; 0000 0042     char status,data;
                 ; 0000 0043     status=UCSR0A;
0002c2 931a      	ST   -Y,R17
0002c3 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0002c4 b11b      	IN   R17,11
                 ; 0000 0044     data=UDR0;
0002c5 b10c      	IN   R16,12
                 ; 0000 0045     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0) {
0002c6 2fe1      	MOV  R30,R17
0002c7 71ec      	ANDI R30,LOW(0x1C)
0002c8 f4e9      	BRNE _0x8
                 ; 0000 0046         rx_buffer0[rx_wr_index0++]=data;
0002c9 91e0 07cf 	LDS  R30,_rx_wr_index0
0002cb 5fef      	SUBI R30,-LOW(1)
0002cc 93e0 07cf 	STS  _rx_wr_index0,R30
0002ce 50e1      	SUBI R30,LOW(1)
0002cf e0f0      	LDI  R31,0
0002d0 57e1      	SUBI R30,LOW(-_rx_buffer0)
0002d1 4ff8      	SBCI R31,HIGH(-_rx_buffer0)
0002d2 8300      	ST   Z,R16
                 ; 0000 0047 #if RX_BUFFER_SIZE0 == 256
                 ; 0000 0048         // special case for receiver buffer size=256
                 ; 0000 0049         if (++rx_counter0 == 0) rx_buffer_overflow0=1;
                 ; 0000 004A #else
                 ; 0000 004B         if (rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0=0;
0002d3 91a0 07cf 	LDS  R26,_rx_wr_index0
0002d5 34a0      	CPI  R26,LOW(0x40)
0002d6 f419      	BRNE _0x9
0002d7 e0e0      	LDI  R30,LOW(0)
0002d8 93e0 07cf 	STS  _rx_wr_index0,R30
                 ; 0000 004C         if (++rx_counter0 == RX_BUFFER_SIZE0) {
                 _0x9:
0002da 91a0 07d1 	LDS  R26,_rx_counter0
0002dc 5faf      	SUBI R26,-LOW(1)
0002dd 93a0 07d1 	STS  _rx_counter0,R26
0002df 34a0      	CPI  R26,LOW(0x40)
0002e0 f429      	BRNE _0xA
                 ; 0000 004D             rx_counter0=0;
0002e1 e0e0      	LDI  R30,LOW(0)
0002e2 93e0 07d1 	STS  _rx_counter0,R30
                 ; 0000 004E             rx_buffer_overflow0=1;
0002e4 9468      	SET
0002e5 f820      	BLD  R2,0
                 ; 0000 004F         }
                 ; 0000 0050 #endif
                 ; 0000 0051     }
                 _0xA:
                 ; 0000 0052     buff[i] = data;
                 _0x8:
0002e6 91e0 08d6 	LDS  R30,_i
0002e8 91f0 08d7 	LDS  R31,_i+1
0002ea 52ee      	SUBI R30,LOW(-_buff)
0002eb 4ff8      	SBCI R31,HIGH(-_buff)
0002ec 8300      	ST   Z,R16
                 ; 0000 0053     i++;
0002ed eda6      	LDI  R26,LOW(_i)
0002ee e0b8      	LDI  R27,HIGH(_i)
0002ef 940e 0fbb 	CALL SUBOPT_0x1
                 ; 0000 0054 }
0002f1 9109      	LD   R16,Y+
0002f2 9119      	LD   R17,Y+
0002f3 c048      	RJMP _0xE8
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void) {
                 ; 0000 005A char getchar(void) {
                 ; 0000 005B     char data;
                 ; 0000 005C     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0000 005D     data=rx_buffer0[rx_rd_index0++];
                 ; 0000 005E #if RX_BUFFER_SIZE0 != 256
                 ; 0000 005F     if (rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0=0;
                 ; 0000 0060 #endif
                 ; 0000 0061 #asm("cli")
                 ; 0000 0062     --rx_counter0;
                 ; 0000 0063 #asm("sei")
                 ; 0000 0064     return data;
                 ; 0000 0065 }
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// USART0 Transmitter buffer
                 ;#define TX_BUFFER_SIZE0 64
                 ;char tx_buffer0[TX_BUFFER_SIZE0];
                 ;
                 ;#if TX_BUFFER_SIZE0 <= 256
                 ;unsigned char tx_wr_index0=0,tx_rd_index0=0;
                 ;#else
                 ;unsigned int tx_wr_index0=0,tx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if TX_BUFFER_SIZE0 < 256
                 ;unsigned char tx_counter0=0;
                 ;#else
                 ;unsigned int tx_counter0=0;
                 ;#endif
                 ;
                 ;// USART0 Transmitter interrupt service routine
                 ;interrupt [USART0_TXC] void usart0_tx_isr(void) {
                 ; 0000 007A interrupt [21] void usart0_tx_isr(void) {
                 _usart0_tx_isr:
                 ; .FSTART _usart0_tx_isr
0002f4 93aa      	ST   -Y,R26
0002f5 93ea      	ST   -Y,R30
0002f6 93fa      	ST   -Y,R31
0002f7 b7ef      	IN   R30,SREG
0002f8 93ea      	ST   -Y,R30
                 ; 0000 007B     if (tx_counter0) {
0002f9 91e0 0920 	LDS  R30,_tx_counter0
0002fb 30e0      	CPI  R30,0
0002fc f0a9      	BREQ _0xF
                 ; 0000 007C         --tx_counter0;
0002fd 50e1      	SUBI R30,LOW(1)
0002fe 93e0 0920 	STS  _tx_counter0,R30
                 ; 0000 007D         UDR0=tx_buffer0[tx_rd_index0++];
000300 91e0 091f 	LDS  R30,_tx_rd_index0
000302 5fef      	SUBI R30,-LOW(1)
000303 93e0 091f 	STS  _tx_rd_index0,R30
000305 50e1      	SUBI R30,LOW(1)
000306 e0f0      	LDI  R31,0
000307 52e2      	SUBI R30,LOW(-_tx_buffer0)
000308 4ff7      	SBCI R31,HIGH(-_tx_buffer0)
000309 81e0      	LD   R30,Z
00030a b9ec      	OUT  0xC,R30
                 ; 0000 007E #if TX_BUFFER_SIZE0 != 256
                 ; 0000 007F         if (tx_rd_index0 == TX_BUFFER_SIZE0) tx_rd_index0=0;
00030b 91a0 091f 	LDS  R26,_tx_rd_index0
00030d 34a0      	CPI  R26,LOW(0x40)
00030e f419      	BRNE _0x10
00030f e0e0      	LDI  R30,LOW(0)
000310 93e0 091f 	STS  _tx_rd_index0,R30
                 ; 0000 0080 #endif
                 ; 0000 0081     }
                 _0x10:
                 ; 0000 0082 }
                 _0xF:
000312 91e9      	LD   R30,Y+
000313 bfef      	OUT  SREG,R30
000314 91f9      	LD   R31,Y+
000315 91e9      	LD   R30,Y+
000316 91a9      	LD   R26,Y+
000317 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0084 {
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
000318 940e 0fb4 	CALL SUBOPT_0x0
                 ; 0000 0085 TCNT2=0xB2;    //10ms
00031a ebe2      	LDI  R30,LOW(178)
00031b bde4      	OUT  0x24,R30
                 ; 0000 0086 if(flag == true)
00031c e0e1      	LDI  R30,LOW(1)
00031d 15ea      	CP   R30,R10
00031e f421      	BRNE _0x11
                 ; 0000 0087     dem++;
00031f e8ad      	LDI  R26,LOW(_dem)
000320 e0b7      	LDI  R27,HIGH(_dem)
000321 940e 0fbb 	CALL SUBOPT_0x1
                 ; 0000 0088 if(dem == 500){
                 _0x11:
000323 91a0 078d 	LDS  R26,_dem
000325 91b0 078e 	LDS  R27,_dem+1
000327 3fa4      	CPI  R26,LOW(0x1F4)
000328 e0e1      	LDI  R30,HIGH(0x1F4)
000329 07be      	CPC  R27,R30
00032a f489      	BRNE _0x12
                 ; 0000 0089     flag = false;
00032b 24aa      	CLR  R10
                 ; 0000 008A     count++;
00032c 01f6      	MOVW R30,R12
00032d 9631      	ADIW R30,1
00032e 016f      	MOVW R12,R30
                 ; 0000 008B     dem = 0;
00032f e0e0      	LDI  R30,LOW(0)
000330 93e0 078d 	STS  _dem,R30
000332 93e0 078e 	STS  _dem+1,R30
                 ; 0000 008C     if(count == 5)
000334 e0e5      	LDI  R30,LOW(5)
000335 e0f0      	LDI  R31,HIGH(5)
000336 15ec      	CP   R30,R12
000337 05fd      	CPC  R31,R13
000338 f419      	BRNE _0x13
                 ; 0000 008D         count = 1;
000339 e0e1      	LDI  R30,LOW(1)
00033a e0f0      	LDI  R31,HIGH(1)
00033b 016f      	MOVW R12,R30
                 ; 0000 008E }
                 _0x13:
                 ; 0000 008F }
                 _0x12:
                 _0xE8:
00033c 91e9      	LD   R30,Y+
00033d bfef      	OUT  SREG,R30
00033e 91f9      	LD   R31,Y+
00033f 91e9      	LD   R30,Y+
000340 91b9      	LD   R27,Y+
000341 91a9      	LD   R26,Y+
000342 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void) {
                 ; 0000 0090 interrupt [17] void timer0_ovf_isr(void) {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000343 936a      	ST   -Y,R22
000344 937a      	ST   -Y,R23
000345 938a      	ST   -Y,R24
000346 939a      	ST   -Y,R25
000347 93aa      	ST   -Y,R26
000348 93ba      	ST   -Y,R27
000349 93ea      	ST   -Y,R30
00034a 93fa      	ST   -Y,R31
00034b b7ef      	IN   R30,SREG
00034c 93ea      	ST   -Y,R30
                 ; 0000 0091     //0.02 ms => 50k = 1s.
                 ; 0000 0092     TCNT0=0x60;
00034d e6e0      	LDI  R30,LOW(96)
00034e bfe2      	OUT  0x32,R30
                 ; 0000 0093     // Place your code here
                 ; 0000 0094     time_flow++;
00034f edaa      	LDI  R26,LOW(_time_flow)
000350 e0b8      	LDI  R27,HIGH(_time_flow)
000351 940e 1146 	CALL __GETD1P_INC
                +
000353 5fef     +SUBI R30 , LOW ( - 1 )
000354 4fff     +SBCI R31 , HIGH ( - 1 )
000355 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000356 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000357 940e 114b 	CALL __PUTDP1_DEC
                 ; 0000 0095 
                 ; 0000 0096     if (time_flow == 50000) {
000359 91a0 08da 	LDS  R26,_time_flow
00035b 91b0 08db 	LDS  R27,_time_flow+1
00035d 9180 08dc 	LDS  R24,_time_flow+2
00035f 9190 08dd 	LDS  R25,_time_flow+3
                +
000361 35a0     +CPI R26 , LOW ( 0xC350 )
000362 ece3     +LDI R30 , HIGH ( 0xC350 )
000363 07be     +CPC R27 , R30
000364 e0e0     +LDI R30 , BYTE3 ( 0xC350 )
000365 078e     +CPC R24 , R30
000366 e0e0     +LDI R30 , BYTE4 ( 0xC350 )
000367 079e     +CPC R25 , R30
                 	__CPD2N 0xC350
000368 f469      	BRNE _0x14
                 ; 0000 0097         time_s++;
000369 eda8      	LDI  R26,LOW(_time_s)
00036a e0b8      	LDI  R27,HIGH(_time_s)
00036b 940e 0fbb 	CALL SUBOPT_0x1
                 ; 0000 0098         time_flow = 0;
00036d e0e0      	LDI  R30,LOW(0)
00036e 93e0 08da 	STS  _time_flow,R30
000370 93e0 08db 	STS  _time_flow+1,R30
000372 93e0 08dc 	STS  _time_flow+2,R30
000374 93e0 08dd 	STS  _time_flow+3,R30
                 ; 0000 0099     }
                 ; 0000 009A }
                 _0x14:
000376 91e9      	LD   R30,Y+
000377 bfef      	OUT  SREG,R30
000378 91f9      	LD   R31,Y+
000379 91e9      	LD   R30,Y+
00037a 91b9      	LD   R27,Y+
00037b 91a9      	LD   R26,Y+
00037c 9199      	LD   R25,Y+
00037d 9189      	LD   R24,Y+
00037e 9179      	LD   R23,Y+
00037f 9169      	LD   R22,Y+
000380 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Write a character to the USART0 Transmitter buffer
                 ;#define _ALTERNATE_PUTCHAR_
                 ;#pragma used+
                 ;void putchar(char c) {
                 ; 0000 00A0 void putchar(char c) {
                 _putchar:
                 ; .FSTART _putchar
                 ; 0000 00A1     while (tx_counter0 == TX_BUFFER_SIZE0);
000381 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x15:
000382 91a0 0920 	LDS  R26,_tx_counter0
000384 34a0      	CPI  R26,LOW(0x40)
000385 f3e1      	BREQ _0x15
                 ; 0000 00A2 #asm("cli")
000386 94f8      	cli
                 ; 0000 00A3     if (tx_counter0 || ((UCSR0A & DATA_REGISTER_EMPTY)==0)) {
000387 91e0 0920 	LDS  R30,_tx_counter0
000389 30e0      	CPI  R30,0
00038a f411      	BRNE _0x19
00038b 995d      	SBIC 0xB,5
00038c c018      	RJMP _0x18
                 _0x19:
                 ; 0000 00A4         tx_buffer0[tx_wr_index0++]=c;
00038d 91e0 091e 	LDS  R30,_tx_wr_index0
00038f 5fef      	SUBI R30,-LOW(1)
000390 93e0 091e 	STS  _tx_wr_index0,R30
000392 50e1      	SUBI R30,LOW(1)
000393 e0f0      	LDI  R31,0
000394 52e2      	SUBI R30,LOW(-_tx_buffer0)
000395 4ff7      	SBCI R31,HIGH(-_tx_buffer0)
000396 81a8      	LD   R26,Y
000397 83a0      	STD  Z+0,R26
                 ; 0000 00A5 #if TX_BUFFER_SIZE0 != 256
                 ; 0000 00A6         if (tx_wr_index0 == TX_BUFFER_SIZE0) tx_wr_index0=0;
000398 91a0 091e 	LDS  R26,_tx_wr_index0
00039a 34a0      	CPI  R26,LOW(0x40)
00039b f419      	BRNE _0x1B
00039c e0e0      	LDI  R30,LOW(0)
00039d 93e0 091e 	STS  _tx_wr_index0,R30
                 ; 0000 00A7 #endif
                 ; 0000 00A8         ++tx_counter0;
                 _0x1B:
00039f 91e0 0920 	LDS  R30,_tx_counter0
0003a1 5fef      	SUBI R30,-LOW(1)
0003a2 93e0 0920 	STS  _tx_counter0,R30
                 ; 0000 00A9     } else
0003a4 c002      	RJMP _0x1C
                 _0x18:
                 ; 0000 00AA         UDR0=c;
0003a5 81e8      	LD   R30,Y
0003a6 b9ec      	OUT  0xC,R30
                 ; 0000 00AB #asm("sei")
                 _0x1C:
0003a7 9478      	sei
                 ; 0000 00AC }
0003a8 940c 08ff 	JMP  _0x212000C
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;#include <nrf_code.h>
                 _config:
                 ; .FSTART _config
                +
0003aa e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0003ab 958a     +DEC R24
0003ac f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0003ad e0e0      	LDI  R30,LOW(0)
0003ae 93ea      	ST   -Y,R30
0003af e1af      	LDI  R26,LOW(31)
0003b0 d024      	RCALL _RF_Write_TX
0003b1 e0a2      	LDI  R26,LOW(2)
0003b2 e0b0      	LDI  R27,0
0003b3 940e 1113 	CALL _delay_ms
0003b5 e0e7      	LDI  R30,LOW(7)
0003b6 93ea      	ST   -Y,R30
0003b7 e7ae      	LDI  R26,LOW(126)
0003b8 d01c      	RCALL _RF_Write_TX
0003b9 e1ed      	LDI  R30,LOW(29)
0003ba 93ea      	ST   -Y,R30
0003bb e0a4      	LDI  R26,LOW(4)
0003bc d018      	RCALL _RF_Write_TX
0003bd e0e5      	LDI  R30,LOW(5)
0003be 93ea      	ST   -Y,R30
0003bf e0a2      	LDI  R26,LOW(2)
0003c0 d014      	RCALL _RF_Write_TX
0003c1 9508      	RET
                 ; .FEND
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
0003c2 93aa      	ST   -Y,R26
0003c3 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003c4 e010      	LDI  R17,LOW(0)
                 _0x1E:
0003c5 3018      	CPI  R17,8
0003c6 f450      	BRSH _0x1F
0003c7 81e9      	LDD  R30,Y+1
0003c8 78e0      	ANDI R30,LOW(0x80)
0003c9 f411      	BRNE _0x20
0003ca 98d9      	CBI  0x1B,1
0003cb c001      	RJMP _0x21
                 _0x20:
0003cc 9ad9      	SBI  0x1B,1
                 _0x21:
0003cd 940e 0fc1 	CALL SUBOPT_0x2
0003cf 5f1f      	SUBI R17,-1
0003d0 cff4      	RJMP _0x1E
                 _0x1F:
0003d1 81e9      	LDD  R30,Y+1
0003d2 8118      	LDD  R17,Y+0
0003d3 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
0003d5 940e 0fd3 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
0003d7 dfea      	RCALL _SPI_RW_TX
0003d8 93e0 0947 	STS  _result,R30
0003da 81a8      	LD   R26,Y
0003db dfe6      	RCALL _SPI_RW_TX
0003dc 940e 0fd9 	CALL SUBOPT_0x4
0003de 91e0 0947 	LDS  R30,_result
0003e0 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 ;	Address -> Y+0
                 ;	Address -> Y+1
                 ;	Address2 -> Y+0
                 ;	command -> Y+0
                 ;	send -> Y+0
                 ;	send -> Y+0
                 _SPI_RW_RX:
                 ; .FSTART _SPI_RW_RX
0003e2 93aa      	ST   -Y,R26
0003e3 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003e4 e010      	LDI  R17,LOW(0)
                 _0x6B:
0003e5 3018      	CPI  R17,8
0003e6 f450      	BRSH _0x6C
0003e7 81e9      	LDD  R30,Y+1
0003e8 78e0      	ANDI R30,LOW(0x80)
0003e9 f411      	BRNE _0x6D
0003ea 98d9      	CBI  0x1B,1
0003eb c001      	RJMP _0x6E
                 _0x6D:
0003ec 9ad9      	SBI  0x1B,1
                 _0x6E:
0003ed 940e 0fc1 	CALL SUBOPT_0x2
0003ef 5f1f      	SUBI R17,-1
0003f0 cff4      	RJMP _0x6B
                 _0x6C:
0003f1 81e9      	LDD  R30,Y+1
0003f2 8118      	LDD  R17,Y+0
0003f3 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 _SPI_Read_RX:
                 ; .FSTART _SPI_Read_RX
0003f5 931a      	ST   -Y,R17
0003f6 930a      	ST   -Y,R16
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
0003f7 e010      	LDI  R17,0
0003f8 e000      	LDI  R16,LOW(0)
                 _0x74:
0003f9 3008      	CPI  R16,8
0003fa f478      	BRSH _0x75
                +
0003fb e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003fc 958a     +DEC R24
0003fd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003fe 0f11      	LSL  R17
0003ff 9adc      	SBI  0x1B,4
                +
000400 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000401 958a     +DEC R24
000402 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000403 e0e0      	LDI  R30,0
000404 99cd      	SBIC 0x19,5
000405 e0e1      	LDI  R30,1
000406 2b1e      	OR   R17,R30
000407 98dc      	CBI  0x1B,4
000408 5f0f      	SUBI R16,-1
000409 cfef      	RJMP _0x74
                 _0x75:
00040a 2fe1      	MOV  R30,R17
00040b 9109      	LD   R16,Y+
00040c 9119      	LD   R17,Y+
00040d 9508      	RET
                 ; .FEND
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
00040e 9adb      	SBI  0x1B,3
                +
00040f e788     +LDI R24 , LOW ( 1400 )
000410 e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
000411 9701     +SBIW R24 , 1
000412 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
000413 98db      	CBI  0x1B,3
000414 9ada      	SBI  0x1B,2
000415 9508      	RET
                 ; .FEND
                 _RF_Write_RX:
                 ; .FSTART _RF_Write_RX
000416 940e 0fd3 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000418 940e 0fde 	CALL SUBOPT_0x5
00041a 940e 0fd9 	CALL SUBOPT_0x4
00041c 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write2_RX:
                 ; .FSTART _RF_Write2_RX
00041e 940e 0fd3 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000420 940e 0fde 	CALL SUBOPT_0x5
000422 81a8      	LD   R26,Y
000423 940e 0fde 	CALL SUBOPT_0x5
000425 81a8      	LD   R26,Y
000426 940e 0fde 	CALL SUBOPT_0x5
000428 940e 0fd9 	CALL SUBOPT_0x4
00042a 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write3_RX:
                 ; .FSTART _RF_Write3_RX
00042c 940e 0fd3 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00042e dfb3      	RCALL _SPI_RW_RX
00042f 2da7      	MOV  R26,R7
000430 dfb1      	RCALL _SPI_RW_RX
000431 2da7      	MOV  R26,R7
000432 dfaf      	RCALL _SPI_RW_RX
000433 2da7      	MOV  R26,R7
000434 dfad      	RCALL _SPI_RW_RX
000435 2da7      	MOV  R26,R7
000436 940e 0fde 	CALL SUBOPT_0x5
000438 940e 0fd9 	CALL SUBOPT_0x4
00043a 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 _RF_Command_RX:
                 ; .FSTART _RF_Command_RX
00043c 93aa      	ST   -Y,R26
                 ;	command -> Y+0
00043d 98da      	CBI  0x1B,2
00043e 81a8      	LD   R26,Y
00043f dfa2      	RCALL _SPI_RW_RX
000440 940e 0fd9 	CALL SUBOPT_0x4
000442 940c 08ff 	JMP  _0x212000C
                 ; .FEND
                 _RF_Write_Address_RX:
                 ; .FSTART _RF_Write_Address_RX
000444 93aa      	ST   -Y,R26
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
000445 98da      	CBI  0x1B,2
000446 e0e3      	LDI  R30,LOW(3)
000447 93ea      	ST   -Y,R30
000448 e0a3      	LDI  R26,LOW(3)
000449 dfcc      	RCALL _RF_Write_RX
00044a 940e 0fd9 	CALL SUBOPT_0x4
00044c 98da      	CBI  0x1B,2
00044d e0ea      	LDI  R30,LOW(10)
00044e 93ea      	ST   -Y,R30
00044f 81ac      	LDD  R26,Y+4
000450 dfcd      	RCALL _RF_Write2_RX
000451 e1e0      	LDI  R30,LOW(16)
000452 93ea      	ST   -Y,R30
000453 81ac      	LDD  R26,Y+4
000454 dfc9      	RCALL _RF_Write2_RX
000455 e0eb      	LDI  R30,LOW(11)
000456 93ea      	ST   -Y,R30
000457 81ab      	LDD  R26,Y+3
000458 940e 0fe3 	CALL SUBOPT_0x6
00045a 81ab      	LDD  R26,Y+3
00045b dfd0      	RCALL _RF_Write3_RX
00045c e0ec      	LDI  R30,LOW(12)
00045d 93ea      	ST   -Y,R30
00045e 81aa      	LDD  R26,Y+2
00045f 940e 0fe3 	CALL SUBOPT_0x6
000461 81aa      	LDD  R26,Y+2
000462 dfc9      	RCALL _RF_Write3_RX
000463 e0ed      	LDI  R30,LOW(13)
000464 93ea      	ST   -Y,R30
000465 81a9      	LDD  R26,Y+1
000466 940e 0fe3 	CALL SUBOPT_0x6
000468 81a9      	LDD  R26,Y+1
000469 dfc2      	RCALL _RF_Write3_RX
00046a 940c 091d 	JMP  _0x212000B
                 ; .FEND
                 ;	Address1 -> Y+0
                 _RF_Mode_RX:
                 ; .FSTART _RF_Mode_RX
00046c e0e0      	LDI  R30,LOW(0)
00046d 93ea      	ST   -Y,R30
00046e e1af      	LDI  R26,LOW(31)
00046f dfa6      	RCALL _RF_Write_RX
000470 9adb      	SBI  0x1B,3
000471 9508      	RET
                 ; .FEND
                 _RF_Config_RX:
                 ; .FSTART _RF_Config_RX
000472 e1ec      	LDI  R30,LOW(28)
000473 940e 0fe8 	CALL SUBOPT_0x7
000475 924a      	ST   -Y,R4
000476 927a      	ST   -Y,R7
000477 926a      	ST   -Y,R6
000478 2da9      	MOV  R26,R9
000479 dfca      	RCALL _RF_Write_Address_RX
00047a e0e2      	LDI  R30,LOW(2)
00047b 940e 0fe8 	CALL SUBOPT_0x7
00047d e0e1      	LDI  R30,LOW(1)
00047e 940e 0fe8 	CALL SUBOPT_0x7
000480 9508      	RET
                 ; .FEND
                 _RF_Read_RX_3:
                 ; .FSTART _RF_Read_RX_3
000481 98db      	CBI  0x1B,3
000482 940e 0fd9 	CALL SUBOPT_0x4
000484 98da      	CBI  0x1B,2
000485 e6a1      	LDI  R26,LOW(97)
000486 df5b      	RCALL _SPI_RW_RX
                +
000487 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000488 958a     +DEC R24
000489 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
00048a df6a      	RCALL _SPI_Read_RX
00048b e0f0      	LDI  R31,0
00048c 93e0 0921 	STS  _station_receive,R30
00048e 93f0 0922 	STS  _station_receive+1,R31
000490 df64      	RCALL _SPI_Read_RX
                +
000491 e2a3     +LDI R26 , LOW ( _station_receive + ( 2 ) )
000492 e0b9     +LDI R27 , HIGH ( _station_receive + ( 2 ) )
                 	__POINTW2MN _station_receive,2
000493 940e 0fec 	CALL SUBOPT_0x8
                +
000495 e2a5     +LDI R26 , LOW ( _station_receive + ( 4 ) )
000496 e0b9     +LDI R27 , HIGH ( _station_receive + ( 4 ) )
                 	__POINTW2MN _station_receive,4
000497 940e 0fec 	CALL SUBOPT_0x8
                +
000499 e2a7     +LDI R26 , LOW ( _station_receive + ( 6 ) )
00049a e0b9     +LDI R27 , HIGH ( _station_receive + ( 6 ) )
                 	__POINTW2MN _station_receive,6
00049b 940e 0fec 	CALL SUBOPT_0x8
                +
00049d e2a9     +LDI R26 , LOW ( _station_receive + ( 8 ) )
00049e e0b9     +LDI R27 , HIGH ( _station_receive + ( 8 ) )
                 	__POINTW2MN _station_receive,8
00049f 940e 0fec 	CALL SUBOPT_0x8
                +
0004a1 e2ab     +LDI R26 , LOW ( _station_receive + ( 10 ) )
0004a2 e0b9     +LDI R27 , HIGH ( _station_receive + ( 10 ) )
                 	__POINTW2MN _station_receive,10
0004a3 e0f0      	LDI  R31,0
0004a4 93ed      	ST   X+,R30
0004a5 93fc      	ST   X,R31
0004a6 9ada      	SBI  0x1B,2
0004a7 9adb      	SBI  0x1B,3
0004a8 e0e7      	LDI  R30,LOW(7)
0004a9 93ea      	ST   -Y,R30
0004aa e7ae      	LDI  R26,LOW(126)
0004ab df6a      	RCALL _RF_Write_RX
0004ac eea2      	LDI  R26,LOW(226)
0004ad df8e      	RCALL _RF_Command_RX
0004ae 9508      	RET
                 ; .FEND
                 ;station_info data_send;
                 ;
                 ;void put_string (unsigned char *s) {
                 ; 0000 00B5 void put_string (unsigned char *s) {
                 _put_string:
                 ; .FSTART _put_string
                 ; 0000 00B6     while(*s) {
0004af 93ba      	ST   -Y,R27
0004b0 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0xBC:
0004b1 81a8      	LD   R26,Y
0004b2 81b9      	LDD  R27,Y+1
0004b3 91ec      	LD   R30,X
0004b4 30e0      	CPI  R30,0
0004b5 f061      	BREQ _0xBE
                 ; 0000 00B7         putchar(*s);
0004b6 91ac      	LD   R26,X
0004b7 dec9      	RCALL _putchar
                 ; 0000 00B8         delay_ms(50);
0004b8 e3a2      	LDI  R26,LOW(50)
0004b9 e0b0      	LDI  R27,0
0004ba 940e 1113 	CALL _delay_ms
                 ; 0000 00B9         s++;
0004bc 81e8      	LD   R30,Y
0004bd 81f9      	LDD  R31,Y+1
0004be 9631      	ADIW R30,1
0004bf 83e8      	ST   Y,R30
0004c0 83f9      	STD  Y+1,R31
                 ; 0000 00BA     }
0004c1 cfef      	RJMP _0xBC
                 _0xBE:
                 ; 0000 00BB }
0004c2 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;void refresh(int time_ms) {
                 ; 0000 00BD void refresh(int time_ms) {
                 _refresh:
                 ; .FSTART _refresh
                 ; 0000 00BE     delay_ms(time_ms);
0004c4 940e 0ff1 	CALL SUBOPT_0x9
                 ;	time_ms -> Y+0
0004c6 940e 1113 	CALL _delay_ms
                 ; 0000 00BF     glcd_clear();
0004c8 940e 0ff6 	CALL SUBOPT_0xA
                 ; 0000 00C0     glcd_moveto(0,0);
                 ; 0000 00C1     glcd_outtext(buff);
0004ca 940e 0ffd 	CALL SUBOPT_0xB
                 ; 0000 00C2     del_string(buff);
0004cc eda2      	LDI  R26,LOW(_buff)
0004cd e0b7      	LDI  R27,HIGH(_buff)
0004ce dde0      	RCALL _del_string
                 ; 0000 00C3     i = 0;
0004cf e0e0      	LDI  R30,LOW(0)
0004d0 93e0 08d6 	STS  _i,R30
0004d2 93e0 08d7 	STS  _i+1,R30
                 ; 0000 00C4 }
0004d4 940c 086c 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;bool wait_until(unsigned char *keyword, int time_out_s) {
                 ; 0000 00C6 _Bool wait_until(unsigned char *keyword, int time_out_s) {
                 _wait_until:
                 ; .FSTART _wait_until
                 ; 0000 00C7     /*     deu biet cai temp2 de lam gi nhung khong co thi no khong chay trong 1 so truong hop @@
                 ; 0000 00C8         Vi du nhap vao "Hell" thi no se tach thua ra them 2 char. Co the do vi tri o nho. Cha biet @@*/
                 ; 0000 00C9     char temp[20], temp2[20];
                 ; 0000 00CA     int i = 0, time_start, time_temp;
                 ; 0000 00CB 
                 ; 0000 00CC     del_string(temp);
0004d6 93ba      	ST   -Y,R27
0004d7 93aa      	ST   -Y,R26
0004d8 97a8      	SBIW R28,40
0004d9 940e 117a 	CALL __SAVELOCR6
                 ;	*keyword -> Y+48
                 ;	time_out_s -> Y+46
                 ;	temp -> Y+26
                 ;	temp2 -> Y+6
                 ;	i -> R16,R17
                 ;	time_start -> R18,R19
                 ;	time_temp -> R20,R21
                +
0004db e000     +LDI R16 , LOW ( 0 )
0004dc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0004dd 01de      	MOVW R26,R28
0004de 965a      	ADIW R26,26
0004df ddcf      	RCALL _del_string
                 ; 0000 00CD 
                 ; 0000 00CE     while (*keyword) {
                 _0xBF:
0004e0 a9a8      	LDD  R26,Y+48
0004e1 a9b9      	LDD  R27,Y+48+1
0004e2 91ec      	LD   R30,X
0004e3 30e0      	CPI  R30,0
0004e4 f101      	BREQ _0xC1
                 ; 0000 00CF         temp[i] = *keyword;
0004e5 01f8      	MOVW R30,R16
0004e6 01de      	MOVW R26,R28
0004e7 965a      	ADIW R26,26
0004e8 0fea      	ADD  R30,R26
0004e9 1ffb      	ADC  R31,R27
0004ea 010f      	MOVW R0,R30
0004eb a9a8      	LDD  R26,Y+48
0004ec a9b9      	LDD  R27,Y+48+1
0004ed 91ec      	LD   R30,X
0004ee 01d0      	MOVW R26,R0
0004ef 93ec      	ST   X,R30
                 ; 0000 00D0         temp2[i] = temp[i];
0004f0 01f8      	MOVW R30,R16
0004f1 01de      	MOVW R26,R28
0004f2 9616      	ADIW R26,6
0004f3 0fea      	ADD  R30,R26
0004f4 1ffb      	ADC  R31,R27
0004f5 010f      	MOVW R0,R30
0004f6 01de      	MOVW R26,R28
0004f7 965a      	ADIW R26,26
0004f8 0fa0      	ADD  R26,R16
0004f9 1fb1      	ADC  R27,R17
0004fa 91ec      	LD   R30,X
0004fb 01d0      	MOVW R26,R0
0004fc 93ec      	ST   X,R30
                 ; 0000 00D1         keyword++;
0004fd a9e8      	LDD  R30,Y+48
0004fe a9f9      	LDD  R31,Y+48+1
0004ff 9631      	ADIW R30,1
000500 abe8      	STD  Y+48,R30
000501 abf9      	STD  Y+48+1,R31
                 ; 0000 00D2         i++;
                +
000502 5f0f     +SUBI R16 , LOW ( - 1 )
000503 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 00D3     }
000504 cfdb      	RJMP _0xBF
                 _0xC1:
                 ; 0000 00D4 
                 ; 0000 00D5     time_start = time_s;
                +
000505 9120 08d8+LDS R18 , 0 + ( _time_s )
000507 9130 08d9+LDS R19 , 0 + ( _time_s ) + 1
                 	__GETWRMN 18,19,0,_time_s
                 ; 0000 00D6 
                 ; 0000 00D7     while (1) {
                 _0xC2:
                 ; 0000 00D8         if (time_s < time_start) {
000509 91a0 08d8 	LDS  R26,_time_s
00050b 91b0 08d9 	LDS  R27,_time_s+1
00050d 17a2      	CP   R26,R18
00050e 07b3      	CPC  R27,R19
00050f f45c      	BRGE _0xC5
                 ; 0000 00D9             time_temp = time_s + 60;
000510 91e0 08d8 	LDS  R30,_time_s
000512 91f0 08d9 	LDS  R31,_time_s+1
000514 96fc      	ADIW R30,60
000515 01af      	MOVW R20,R30
                 ; 0000 00DA             if (time_temp - time_start > time_out_s) {
000516 01da      	MOVW R26,R20
000517 940e 1001 	CALL SUBOPT_0xC
000519 f11c      	BRLT _0x212000F
                 ; 0000 00DB                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00DC                 return false;
                 ; 0000 00DD             }
                 ; 0000 00DE         } else {
00051a c007      	RJMP _0xC7
                 _0xC5:
                 ; 0000 00DF             if (time_s - time_start > time_out_s) {
00051b 91a0 08d8 	LDS  R26,_time_s
00051d 91b0 08d9 	LDS  R27,_time_s+1
00051f 940e 1001 	CALL SUBOPT_0xC
000521 f0dc      	BRLT _0x212000F
                 ; 0000 00E0                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00E1                 return false;
                 ; 0000 00E2             }
                 ; 0000 00E3         }
                 _0xC7:
                 ; 0000 00E4 
                 ; 0000 00E5         if ((strstr(buff, temp)) || (strstr(buff, temp2))) {
000522 940e 1008 	CALL SUBOPT_0xD
000524 01de      	MOVW R26,R28
000525 965c      	ADIW R26,28
000526 940e 07d5 	CALL _strstr
000528 9730      	SBIW R30,0
000529 f441      	BRNE _0xCA
00052a 940e 1008 	CALL SUBOPT_0xD
00052c 01de      	MOVW R26,R28
00052d 9618      	ADIW R26,8
00052e 940e 07d5 	CALL _strstr
000530 9730      	SBIW R30,0
000531 f011      	BREQ _0xC9
                 _0xCA:
                 ; 0000 00E6             return true;
000532 e0e1      	LDI  R30,LOW(1)
000533 c00a      	RJMP _0x2120010
                 ; 0000 00E7         }
                 ; 0000 00E8         if (strstr(buff, "ERROR")) {
                 _0xC9:
000534 940e 1008 	CALL SUBOPT_0xD
                +
000536 e4a5     +LDI R26 , LOW ( _0xCD + ( 0 ) )
000537 e0b5     +LDI R27 , HIGH ( _0xCD + ( 0 ) )
                 	__POINTW2MN _0xCD,0
000538 940e 07d5 	CALL _strstr
00053a 9730      	SBIW R30,0
00053b f409      	BRNE _0x212000F
                 ; 0000 00E9             /*glcd_outtext("Error found, attempting to continue..\r\n");
                 ; 0000 00EA             delay_ms(3000);
                 ; 0000 00EB             glcd_clear();
                 ; 0000 00EC             glcd_moveto(0,0);*/
                 ; 0000 00ED             return false;
                 ; 0000 00EE             //nen lam them ve cai nay nua
                 ; 0000 00EF         }
                 ; 0000 00F0     }
00053c cfcc      	RJMP _0xC2
                 ; 0000 00F1 	return false;
                 _0x212000F:
00053d e0e0      	LDI  R30,LOW(0)
                 _0x2120010:
00053e 940e 1181 	CALL __LOADLOCR6
000540 96e2      	ADIW R28,50
000541 9508      	RET
                 ; 0000 00F2 }
                 ; .FEND
                 
                 	.DSEG
                 _0xCD:
000545           	.BYTE 0x6
                 ;
                 ;
                 ;bool read_and_send(unsigned char *s){
                 ; 0000 00F5 _Bool read_and_send(unsigned char *s){
                 
                 	.CSEG
                 _read_and_send:
                 ; .FSTART _read_and_send
                 ; 0000 00F6     // Thay nhung ham respones_read bang ham wait_until
                 ; 0000 00F7     char api_key[20], temp[20], temp2[20];
                 ; 0000 00F8     int length = 0, i = 0;
                 ; 0000 00F9     strcpy(cmd,"GET /update?key=");
000542 93ba      	ST   -Y,R27
000543 93aa      	ST   -Y,R26
000544 97ec      	SBIW R28,60
000545 940e 117c 	CALL __SAVELOCR4
                 ;	*s -> Y+64
                 ;	api_key -> Y+44
                 ;	temp -> Y+24
                 ;	temp2 -> Y+4
                 ;	length -> R16,R17
                 ;	i -> R18,R19
                +
000547 e000     +LDI R16 , LOW ( 0 )
000548 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000549 e020     +LDI R18 , LOW ( 0 )
00054a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00054b 940e 100d 	CALL SUBOPT_0xE
                +
00054d e4ab     +LDI R26 , LOW ( _0xCE + ( 0 ) )
00054e e0b5     +LDI R27 , HIGH ( _0xCE + ( 0 ) )
                 	__POINTW2MN _0xCE,0
00054f 940e 07af 	CALL _strcpy
                 ; 0000 00FA 
                 ; 0000 00FB     while (*s) {
                 _0xCF:
000551 940e 1012 	CALL SUBOPT_0xF
000553 30e0      	CPI  R30,0
000554 f0f9      	BREQ _0xD1
                 ; 0000 00FC         temp2[i] = *s;
000555 01f9      	MOVW R30,R18
000556 01de      	MOVW R26,R28
000557 9614      	ADIW R26,4
000558 0fea      	ADD  R30,R26
000559 1ffb      	ADC  R31,R27
00055a 01bf      	MOVW R22,R30
00055b 940e 1012 	CALL SUBOPT_0xF
00055d 01db      	MOVW R26,R22
00055e 93ec      	ST   X,R30
                 ; 0000 00FD         api_key[i] = temp2[i];
00055f 01f9      	MOVW R30,R18
000560 01de      	MOVW R26,R28
000561 969c      	ADIW R26,44
000562 0fea      	ADD  R30,R26
000563 1ffb      	ADC  R31,R27
000564 010f      	MOVW R0,R30
000565 01de      	MOVW R26,R28
000566 9614      	ADIW R26,4
000567 0fa2      	ADD  R26,R18
000568 1fb3      	ADC  R27,R19
000569 91ec      	LD   R30,X
00056a 01d0      	MOVW R26,R0
00056b 93ec      	ST   X,R30
                 ; 0000 00FE         s++;
00056c 01de      	MOVW R26,R28
00056d 5ca0      	SUBI R26,LOW(-(64))
00056e 4fbf      	SBCI R27,HIGH(-(64))
00056f 940e 0fbb 	CALL SUBOPT_0x1
                 ; 0000 00FF         i++;
                +
000571 5f2f     +SUBI R18 , LOW ( - 1 )
000572 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0100     }
000573 cfdd      	RJMP _0xCF
                 _0xD1:
                 ; 0000 0101 
                 ; 0000 0102     put_string("AT+CIPMODE=0");
                +
000574 e5ac     +LDI R26 , LOW ( _0xCE + ( 17 ) )
000575 e0b5     +LDI R27 , HIGH ( _0xCE + ( 17 ) )
                 	__POINTW2MN _0xCE,17
000576 940e 101a 	CALL SUBOPT_0x10
                 ; 0000 0103     delay_ms(300);
                 ; 0000 0104     put_string("\r\n");
                +
000578 e6a9     +LDI R26 , LOW ( _0xCE + ( 30 ) )
000579 e0b5     +LDI R27 , HIGH ( _0xCE + ( 30 ) )
                 	__POINTW2MN _0xCE,30
00057a df34      	RCALL _put_string
                 ; 0000 0105     wait_until("OK", 2);
                +
00057b e6ec     +LDI R30 , LOW ( _0xCE + ( 33 ) )
00057c e0f5     +LDI R31 , HIGH ( _0xCE + ( 33 ) )
                 	__POINTW1MN _0xCE,33
00057d 940e 1020 	CALL SUBOPT_0x11
                 ; 0000 0106     refresh(0);
                 ; 0000 0107 
                 ; 0000 0108     put_string("AT+CIPMUX=1");
                +
00057f e6af     +LDI R26 , LOW ( _0xCE + ( 36 ) )
000580 e0b5     +LDI R27 , HIGH ( _0xCE + ( 36 ) )
                 	__POINTW2MN _0xCE,36
000581 940e 101a 	CALL SUBOPT_0x10
                 ; 0000 0109     delay_ms(300);
                 ; 0000 010A     put_string("\r\n");
                +
000583 e7ab     +LDI R26 , LOW ( _0xCE + ( 48 ) )
000584 e0b5     +LDI R27 , HIGH ( _0xCE + ( 48 ) )
                 	__POINTW2MN _0xCE,48
000585 df29      	RCALL _put_string
                 ; 0000 010B     wait_until("OK", 2);
                +
000586 e7ee     +LDI R30 , LOW ( _0xCE + ( 51 ) )
000587 e0f5     +LDI R31 , HIGH ( _0xCE + ( 51 ) )
                 	__POINTW1MN _0xCE,51
000588 940e 1020 	CALL SUBOPT_0x11
                 ; 0000 010C     refresh(0);
                 ; 0000 010D 
                 ; 0000 010E 
                 ; 0000 010F 
                 ; 0000 0110     put_string("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80");
                +
00058a e8a1     +LDI R26 , LOW ( _0xCE + ( 54 ) )
00058b e0b5     +LDI R27 , HIGH ( _0xCE + ( 54 ) )
                 	__POINTW2MN _0xCE,54
00058c 940e 101a 	CALL SUBOPT_0x10
                 ; 0000 0111     delay_ms(300);
                 ; 0000 0112     put_string("\r\n");
                +
00058e eaad     +LDI R26 , LOW ( _0xCE + ( 98 ) )
00058f e0b5     +LDI R27 , HIGH ( _0xCE + ( 98 ) )
                 	__POINTW2MN _0xCE,98
000590 df1e      	RCALL _put_string
                 ; 0000 0113     if(!wait_until("OK", 10))
                +
000591 ebe0     +LDI R30 , LOW ( _0xCE + ( 101 ) )
000592 e0f5     +LDI R31 , HIGH ( _0xCE + ( 101 ) )
                 	__POINTW1MN _0xCE,101
000593 940e 102a 	CALL SUBOPT_0x12
000595 30e0      	CPI  R30,0
000596 f411      	BRNE _0xD2
                 ; 0000 0114         return false;
000597 e0e0      	LDI  R30,LOW(0)
000598 c082      	RJMP _0x212000E
                 ; 0000 0115     refresh(2000);
                 _0xD2:
000599 eda0      	LDI  R26,LOW(2000)
00059a e0b7      	LDI  R27,HIGH(2000)
00059b df28      	RCALL _refresh
                 ; 0000 0116 
                 ; 0000 0117     glcd_clear();
00059c 940e 0ff6 	CALL SUBOPT_0xA
                 ; 0000 0118     glcd_moveto(0,0);
                 ; 0000 0119     glcd_outtext("Server connected");
                +
00059e eba3     +LDI R26 , LOW ( _0xCE + ( 104 ) )
00059f e0b5     +LDI R27 , HIGH ( _0xCE + ( 104 ) )
                 	__POINTW2MN _0xCE,104
0005a0 940e 0c75 	CALL _glcd_outtext
                 ; 0000 011A 
                 ; 0000 011B     strcat(cmd, api_key);
0005a2 940e 100d 	CALL SUBOPT_0xE
0005a4 01de      	MOVW R26,R28
0005a5 969e      	ADIW R26,46
0005a6 940e 079e 	CALL _strcat
                 ; 0000 011C     strcat(cmd, "&field1=");
0005a8 940e 100d 	CALL SUBOPT_0xE
                +
0005aa eca4     +LDI R26 , LOW ( _0xCE + ( 121 ) )
0005ab e0b5     +LDI R27 , HIGH ( _0xCE + ( 121 ) )
                 	__POINTW2MN _0xCE,121
0005ac 940e 079e 	CALL _strcat
                 ; 0000 011D     itoa(station_receive.temp, temp);
                +
0005ae 91e0 0927+LDS R30 , _station_receive + ( 6 )
0005b0 91f0 0928+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
0005b2 940e 1030 	CALL SUBOPT_0x13
                 ; 0000 011E     //itoa(200, temp);
                 ; 0000 011F     strcat(cmd, temp);
0005b4 940e 1037 	CALL SUBOPT_0x14
                 ; 0000 0120 
                 ; 0000 0121     length = strlen(temp);
0005b6 018f      	MOVW R16,R30
                 ; 0000 0122 
                 ; 0000 0123     strcat(cmd, "&field2=");
0005b7 940e 100d 	CALL SUBOPT_0xE
                +
0005b9 ecad     +LDI R26 , LOW ( _0xCE + ( 130 ) )
0005ba e0b5     +LDI R27 , HIGH ( _0xCE + ( 130 ) )
                 	__POINTW2MN _0xCE,130
0005bb 940e 079e 	CALL _strcat
                 ; 0000 0124     itoa(station_receive.humi, temp);
                +
0005bd 91e0 0925+LDS R30 , _station_receive + ( 4 )
0005bf 91f0 0926+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
0005c1 940e 1030 	CALL SUBOPT_0x13
                 ; 0000 0125     //itoa(200, temp);
                 ; 0000 0126     strcat(cmd, temp);
0005c3 940e 1037 	CALL SUBOPT_0x14
                 ; 0000 0127 
                 ; 0000 0128     length += strlen(temp);
                +
0005c5 0f0e     +ADD R16 , R30
0005c6 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0129 
                 ; 0000 012A     strcat(cmd, "&field3=");
0005c7 940e 100d 	CALL SUBOPT_0xE
                +
0005c9 eda6     +LDI R26 , LOW ( _0xCE + ( 139 ) )
0005ca e0b5     +LDI R27 , HIGH ( _0xCE + ( 139 ) )
                 	__POINTW2MN _0xCE,139
0005cb 940e 079e 	CALL _strcat
                 ; 0000 012B     itoa(station_receive.water, temp);
                +
0005cd 91e0 092b+LDS R30 , _station_receive + ( 10 )
0005cf 91f0 092c+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
0005d1 940e 1030 	CALL SUBOPT_0x13
                 ; 0000 012C     //itoa(200, temp);
                 ; 0000 012D     strcat(cmd, temp);
0005d3 940e 1037 	CALL SUBOPT_0x14
                 ; 0000 012E 
                 ; 0000 012F     length += strlen(temp);
                +
0005d5 0f0e     +ADD R16 , R30
0005d6 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0130 
                 ; 0000 0131     glcd_clear();
0005d7 940e 0ff6 	CALL SUBOPT_0xA
                 ; 0000 0132     glcd_moveto(0,0);
                 ; 0000 0133     glcd_outtext(cmd);
0005d9 e9a3      	LDI  R26,LOW(_cmd)
0005da e0b6      	LDI  R27,HIGH(_cmd)
0005db 940e 0c75 	CALL _glcd_outtext
                 ; 0000 0134 
                 ; 0000 0135     length += 58;//strlen(cmd);
                +
0005dd 5c06     +SUBI R16 , LOW ( - 58 )
0005de 4f1f     +SBCI R17 , HIGH ( - 58 )
                 	__ADDWRN 16,17,58
                 ; 0000 0136     //length += 2;
                 ; 0000 0137 
                 ; 0000 0138     itoa(length, temp);
0005df 931a      	ST   -Y,R17
0005e0 930a      	ST   -Y,R16
0005e1 01de      	MOVW R26,R28
0005e2 965a      	ADIW R26,26
0005e3 940e 07ec 	CALL _itoa
                 ; 0000 0139     glcd_moveto(0, 40);
0005e5 e0e0      	LDI  R30,LOW(0)
0005e6 93ea      	ST   -Y,R30
0005e7 e2a8      	LDI  R26,LOW(40)
0005e8 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 013A     glcd_outtext(temp);
0005ea 01de      	MOVW R26,R28
0005eb 9658      	ADIW R26,24
0005ec 940e 0c75 	CALL _glcd_outtext
                 ; 0000 013B     delay_ms(1000);
0005ee 940e 103f 	CALL SUBOPT_0x15
                 ; 0000 013C 
                 ; 0000 013D 
                 ; 0000 013E 
                 ; 0000 013F     put_string("AT+CIPSEND=0,");
                +
0005f0 edaf     +LDI R26 , LOW ( _0xCE + ( 148 ) )
0005f1 e0b5     +LDI R27 , HIGH ( _0xCE + ( 148 ) )
                 	__POINTW2MN _0xCE,148
0005f2 940e 101a 	CALL SUBOPT_0x10
                 ; 0000 0140     delay_ms(300);
                 ; 0000 0141     put_string(temp);
0005f4 01de      	MOVW R26,R28
0005f5 9658      	ADIW R26,24
0005f6 deb8      	RCALL _put_string
                 ; 0000 0142     delay_ms(1000);
0005f7 940e 103f 	CALL SUBOPT_0x15
                 ; 0000 0143     put_string("\r\n");
                +
0005f9 eead     +LDI R26 , LOW ( _0xCE + ( 162 ) )
0005fa e0b5     +LDI R27 , HIGH ( _0xCE + ( 162 ) )
                 	__POINTW2MN _0xCE,162
0005fb deb3      	RCALL _put_string
                 ; 0000 0144 
                 ; 0000 0145     if(!wait_until("> ", 5))
                +
0005fc efe0     +LDI R30 , LOW ( _0xCE + ( 165 ) )
0005fd e0f5     +LDI R31 , HIGH ( _0xCE + ( 165 ) )
                 	__POINTW1MN _0xCE,165
0005fe 93fa      	ST   -Y,R31
0005ff 93ea      	ST   -Y,R30
000600 e0a5      	LDI  R26,LOW(5)
000601 e0b0      	LDI  R27,0
000602 ded3      	RCALL _wait_until
000603 30e0      	CPI  R30,0
000604 f411      	BRNE _0xD3
                 ; 0000 0146         return false;
000605 e0e0      	LDI  R30,LOW(0)
000606 c014      	RJMP _0x212000E
                 ; 0000 0147 
                 ; 0000 0148     put_string(cmd);
                 _0xD3:
000607 e9a3      	LDI  R26,LOW(_cmd)
000608 e0b6      	LDI  R27,HIGH(_cmd)
000609 dea5      	RCALL _put_string
                 ; 0000 0149     put_string("\r\n");
                +
00060a efa3     +LDI R26 , LOW ( _0xCE + ( 168 ) )
00060b e0b5     +LDI R27 , HIGH ( _0xCE + ( 168 ) )
                 	__POINTW2MN _0xCE,168
00060c dea2      	RCALL _put_string
                 ; 0000 014A     delay_ms(1000);
00060d 940e 103f 	CALL SUBOPT_0x15
                 ; 0000 014B     putchar(0x1A);
00060f e1aa      	LDI  R26,LOW(26)
000610 dd70      	RCALL _putchar
                 ; 0000 014C 
                 ; 0000 014D     glcd_clear();
000611 940e 0ff6 	CALL SUBOPT_0xA
                 ; 0000 014E     glcd_moveto(0,0);
                 ; 0000 014F     glcd_outtext("Sending");
                +
000613 efa6     +LDI R26 , LOW ( _0xCE + ( 171 ) )
000614 e0b5     +LDI R27 , HIGH ( _0xCE + ( 171 ) )
                 	__POINTW2MN _0xCE,171
000615 940e 0c75 	CALL _glcd_outtext
                 ; 0000 0150 
                 ; 0000 0151     refresh(0);
000617 e0a0      	LDI  R26,LOW(0)
000618 e0b0      	LDI  R27,0
000619 deaa      	RCALL _refresh
                 ; 0000 0152     /*if(!wait_until("OK", 5))
                 ; 0000 0153         return false;*/
                 ; 0000 0154     return true;
00061a e0e1      	LDI  R30,LOW(1)
                 _0x212000E:
00061b 940e 1183 	CALL __LOADLOCR4
00061d 96ef      	ADIW R28,63
00061e 9623      	ADIW R28,3
00061f 9508      	RET
                 ; 0000 0155 
                 ; 0000 0156 }
                 ; .FEND
                 
                 	.DSEG
                 _0xCE:
00054b           	.BYTE 0xB3
                 ;
                 ;void print_border(){
                 ; 0000 0158 void print_border(){
                 
                 	.CSEG
                 _print_border:
                 ; .FSTART _print_border
                 ; 0000 0159     glcd_line(48,0, 48, 15);
000620 e3e0      	LDI  R30,LOW(48)
000621 93ea      	ST   -Y,R30
000622 e0e0      	LDI  R30,LOW(0)
000623 940e 1043 	CALL SUBOPT_0x16
                 ; 0000 015A     glcd_line(0, 15, 48, 15);
000625 e0ef      	LDI  R30,LOW(15)
000626 940e 1043 	CALL SUBOPT_0x16
                 ; 0000 015B 
                 ; 0000 015C     glcd_line(0,0,84,0);
000628 e0e0      	LDI  R30,LOW(0)
000629 93ea      	ST   -Y,R30
00062a e5e4      	LDI  R30,LOW(84)
00062b 93ea      	ST   -Y,R30
00062c e0a0      	LDI  R26,LOW(0)
00062d 940e 0cab 	CALL _glcd_line
                 ; 0000 015D     glcd_line(84,0, 84, 48);
00062f e5e4      	LDI  R30,LOW(84)
000630 93ea      	ST   -Y,R30
000631 e0e0      	LDI  R30,LOW(0)
000632 940e 104c 	CALL SUBOPT_0x17
                 ; 0000 015E     glcd_line(0, 48, 84, 48);
000634 e3e0      	LDI  R30,LOW(48)
000635 940e 104c 	CALL SUBOPT_0x17
                 ; 0000 015F     glcd_line(0, 0, 0, 48);
000637 e0e0      	LDI  R30,LOW(0)
000638 93ea      	ST   -Y,R30
000639 93ea      	ST   -Y,R30
00063a e3a0      	LDI  R26,LOW(48)
00063b 940e 0cab 	CALL _glcd_line
                 ; 0000 0160     glcd_moveto(3,3);
00063d e0e3      	LDI  R30,LOW(3)
00063e 93ea      	ST   -Y,R30
00063f e0a3      	LDI  R26,LOW(3)
000640 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 0161     glcd_outtext("Node: ");
                +
000642 efae     +LDI R26 , LOW ( _0xD4 + ( 0 ) )
000643 e0b5     +LDI R27 , HIGH ( _0xD4 + ( 0 ) )
                 	__POINTW2MN _0xD4,0
000644 940e 1055 	CALL SUBOPT_0x18
                 ; 0000 0162 
                 ; 0000 0163     glcd_moveto(4, 18);
000646 e1a2      	LDI  R26,LOW(18)
000647 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 0164     glcd_outtext("Temp: ");
                +
000649 e0a5     +LDI R26 , LOW ( _0xD4 + ( 7 ) )
00064a e0b6     +LDI R27 , HIGH ( _0xD4 + ( 7 ) )
                 	__POINTW2MN _0xD4,7
00064b 940e 1055 	CALL SUBOPT_0x18
                 ; 0000 0165     glcd_moveto(4, 28);
00064d e1ac      	LDI  R26,LOW(28)
00064e 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 0166     glcd_outtext("Humid: ");
                +
000650 e0ac     +LDI R26 , LOW ( _0xD4 + ( 14 ) )
000651 e0b6     +LDI R27 , HIGH ( _0xD4 + ( 14 ) )
                 	__POINTW2MN _0xD4,14
000652 940e 1055 	CALL SUBOPT_0x18
                 ; 0000 0167     glcd_moveto(4, 37);
000654 e2a5      	LDI  R26,LOW(37)
000655 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 0168     glcd_outtext("Water: ");
                +
000657 e1a4     +LDI R26 , LOW ( _0xD4 + ( 22 ) )
000658 e0b6     +LDI R27 , HIGH ( _0xD4 + ( 22 ) )
                 	__POINTW2MN _0xD4,22
000659 940e 0c75 	CALL _glcd_outtext
                 ; 0000 0169     glcd_moveto(67, 28);
00065b e4e3      	LDI  R30,LOW(67)
00065c 93ea      	ST   -Y,R30
00065d e1ac      	LDI  R26,LOW(28)
00065e 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 016A     glcd_putchar(37);
000660 e2a5      	LDI  R26,LOW(37)
000661 940e 0c13 	CALL _glcd_putchar
                 ; 0000 016B     glcd_moveto(67, 37);
000663 e4e3      	LDI  R30,LOW(67)
000664 93ea      	ST   -Y,R30
000665 e2a5      	LDI  R26,LOW(37)
000666 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 016C     glcd_outtext("mm");
                +
000668 e1ac     +LDI R26 , LOW ( _0xD4 + ( 30 ) )
000669 e0b6     +LDI R27 , HIGH ( _0xD4 + ( 30 ) )
                 	__POINTW2MN _0xD4,30
00066a 940e 0c75 	CALL _glcd_outtext
                 ; 0000 016D }
00066c 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xD4:
0005fe           	.BYTE 0x21
                 ;
                 ;void check_do_rac(int value){
                 ; 0000 016F void check_do_rac(int value){
                 
                 	.CSEG
                 ; 0000 0170     if(value == 1)
                 ;	value -> Y+0
                 ; 0000 0171         P_Add = 0xA1;
                 ; 0000 0172     else if(value == 2)
                 ; 0000 0173         P_Add = 0xA2;
                 ; 0000 0174     else if(value == 3)
                 ; 0000 0175         P_Add = 0xA3;
                 ; 0000 0176     else
                 ; 0000 0177         P_Add = 0xA4;
                 ; 0000 0178     RF_Config_TX();
                 ; 0000 0179     RF_Mode_TX();
                 ; 0000 017A     RF_Send_TX(data_send);
                 ; 0000 017B     delay_ms(100);
                 ; 0000 017C     RF_Send_TX(data_send);
                 ; 0000 017D     delay_ms(500);
                 ; 0000 017E     RF_Config_RX_2();
                 ; 0000 017F     RF_Mode_RX();
                 ; 0000 0180         if(IRQ == 0){
                 ; 0000 0181            RF_Read_RX_3();
                 ; 0000 0182            print_border();
                 ; 0000 0183            //if(station_receive.flag == count){
                 ; 0000 0184             glcd_moveto(40, 3);
                 ; 0000 0185             itoa(station_receive.flag, buff);
                 ; 0000 0186             glcd_outtext(buff);
                 ; 0000 0187             glcd_moveto(46, 18);
                 ; 0000 0188             sprintf(buff, "%d ", station_receive.temp);
                 ; 0000 0189             glcd_outtext(buff);
                 ; 0000 018A             glcd_moveto(46, 28);
                 ; 0000 018B             sprintf(buff, "%d ", station_receive.humi);
                 ; 0000 018C             glcd_outtext(buff);
                 ; 0000 018D             glcd_moveto(46, 37);
                 ; 0000 018E             sprintf(buff, "%d  ", station_receive.water);
                 ; 0000 018F             glcd_outtext(buff);
                 ; 0000 0190             delay_ms(2000);
                 ; 0000 0191             /*count++;
                 ; 0000 0192             if(count == 5)
                 ; 0000 0193                 count = 1;
                 ; 0000 0194         }     */
                 ; 0000 0195 
                 ; 0000 0196         }
                 ; 0000 0197     }
                 ;
                 ;void main(void) {
                 ; 0000 0199 void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 019A 
                 ; 0000 019B // Declare your local variables here
                 ; 0000 019C // Variable used to store graphic display
                 ; 0000 019D // controller initialization data
                 ; 0000 019E     GLCDINIT_t glcd_init_data;
                 ; 0000 019F 
                 ; 0000 01A0 DDRA=(0<<DDA7) | (1<<DDA6) | (0<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (0<<DDA0);
00066d 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
00066e e5ee      	LDI  R30,LOW(94)
00066f bbea      	OUT  0x1A,R30
                 ; 0000 01A1 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01A2 PORTA=(0<<PORTA7) | (0<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
000670 e3ef      	LDI  R30,LOW(63)
000671 bbeb      	OUT  0x1B,R30
                 ; 0000 01A3 // Port B initialization
                 ; 0000 01A4 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01A5     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000672 e0e8      	LDI  R30,LOW(8)
000673 bbe7      	OUT  0x17,R30
                 ; 0000 01A6 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01A7     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000674 e0e0      	LDI  R30,LOW(0)
000675 bbe8      	OUT  0x18,R30
                 ; 0000 01A8 
                 ; 0000 01A9 // Port C initialization
                 ; 0000 01AA // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01AB     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000676 bbe4      	OUT  0x14,R30
                 ; 0000 01AC // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01AD     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (1<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000677 e0e8      	LDI  R30,LOW(8)
000678 bbe5      	OUT  0x15,R30
                 ; 0000 01AE 
                 ; 0000 01AF // Port D initialization
                 ; 0000 01B0 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01B1     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000679 e0e0      	LDI  R30,LOW(0)
00067a bbe1      	OUT  0x11,R30
                 ; 0000 01B2 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01B3     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00067b bbe2      	OUT  0x12,R30
                 ; 0000 01B4 
                 ; 0000 01B5 // Port E initialization
                 ; 0000 01B6 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01B7     DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
00067c b9e2      	OUT  0x2,R30
                 ; 0000 01B8 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01B9     PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
00067d b9e3      	OUT  0x3,R30
                 ; 0000 01BA 
                 ; 0000 01BB // Port F initialization
                 ; 0000 01BC // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01BD     DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
00067e 93e0 0061 	STS  97,R30
                 ; 0000 01BE // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01BF     PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
000680 93e0 0062 	STS  98,R30
                 ; 0000 01C0 
                 ; 0000 01C1 // Port G initialization
                 ; 0000 01C2 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01C3     DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
000682 93e0 0064 	STS  100,R30
                 ; 0000 01C4 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01C5     PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
000684 93e0 0065 	STS  101,R30
                 ; 0000 01C6 
                 ; 0000 01C7 // Timer/Counter 0 initialization
                 ; 0000 01C8 // Clock source: System Clock
                 ; 0000 01C9 // Clock value: 8000.000 kHz
                 ; 0000 01CA // Mode: Normal top=0xFF
                 ; 0000 01CB // OC0 output: Disconnected
                 ; 0000 01CC // Timer Period: 0.02 ms
                 ; 0000 01CD 
                 ; 0000 01CE         ASSR=0<<AS0;
000686 bfe0      	OUT  0x30,R30
                 ; 0000 01CF         TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00);
000687 e0e1      	LDI  R30,LOW(1)
000688 bfe3      	OUT  0x33,R30
                 ; 0000 01D0         TCNT0=0x60;
000689 e6e0      	LDI  R30,LOW(96)
00068a bfe2      	OUT  0x32,R30
                 ; 0000 01D1         OCR0=0x00;
00068b e0e0      	LDI  R30,LOW(0)
00068c bfe1      	OUT  0x31,R30
                 ; 0000 01D2 
                 ; 0000 01D3 // Timer/Counter 1 initialization
                 ; 0000 01D4 // Clock source: System Clock
                 ; 0000 01D5 // Clock value: Timer1 Stopped
                 ; 0000 01D6 // Mode: Normal top=0xFFFF
                 ; 0000 01D7 // OC1A output: Disconnected
                 ; 0000 01D8 // OC1B output: Disconnected
                 ; 0000 01D9 // OC1C output: Disconnected
                 ; 0000 01DA // Noise Canceler: Off
                 ; 0000 01DB // Input Capture on Falling Edge
                 ; 0000 01DC // Timer1 Overflow Interrupt: Off
                 ; 0000 01DD // Input Capture Interrupt: Off
                 ; 0000 01DE // Compare A Match Interrupt: Off
                 ; 0000 01DF // Compare B Match Interrupt: Off
                 ; 0000 01E0 // Compare C Match Interrupt: Off
                 ; 0000 01E1     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
00068d bdef      	OUT  0x2F,R30
                 ; 0000 01E2     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00068e bdee      	OUT  0x2E,R30
                 ; 0000 01E3     TCNT1H=0x00;
00068f bded      	OUT  0x2D,R30
                 ; 0000 01E4     TCNT1L=0x00;
000690 bdec      	OUT  0x2C,R30
                 ; 0000 01E5     ICR1H=0x00;
000691 bde7      	OUT  0x27,R30
                 ; 0000 01E6     ICR1L=0x00;
000692 bde6      	OUT  0x26,R30
                 ; 0000 01E7     OCR1AH=0x00;
000693 bdeb      	OUT  0x2B,R30
                 ; 0000 01E8     OCR1AL=0x00;
000694 bdea      	OUT  0x2A,R30
                 ; 0000 01E9     OCR1BH=0x00;
000695 bde9      	OUT  0x29,R30
                 ; 0000 01EA     OCR1BL=0x00;
000696 bde8      	OUT  0x28,R30
                 ; 0000 01EB     OCR1CH=0x00;
000697 93e0 0079 	STS  121,R30
                 ; 0000 01EC     OCR1CL=0x00;
000699 93e0 0078 	STS  120,R30
                 ; 0000 01ED 
                 ; 0000 01EE // Timer/Counter 2 initialization
                 ; 0000 01EF // Clock source: System Clock
                 ; 0000 01F0 // Clock value: 7.813 kHz
                 ; 0000 01F1 // Mode: Normal top=0xFF
                 ; 0000 01F2 // OC2 output: Disconnected
                 ; 0000 01F3 // Timer Period: 9.984 ms
                 ; 0000 01F4 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (1<<CS22) | (0<<CS21) | (1<<CS20);
00069b e0e5      	LDI  R30,LOW(5)
00069c bde5      	OUT  0x25,R30
                 ; 0000 01F5 TCNT2=0xB2;
00069d ebe2      	LDI  R30,LOW(178)
00069e bde4      	OUT  0x24,R30
                 ; 0000 01F6 OCR2=0x00;
00069f e0e0      	LDI  R30,LOW(0)
0006a0 bde3      	OUT  0x23,R30
                 ; 0000 01F7 
                 ; 0000 01F8 // Timer/Counter 3 initialization
                 ; 0000 01F9 // Clock source: System Clock
                 ; 0000 01FA // Clock value: Timer3 Stopped
                 ; 0000 01FB // Mode: Normal top=0xFFFF
                 ; 0000 01FC // OC3A output: Disconnected
                 ; 0000 01FD // OC3B output: Disconnected
                 ; 0000 01FE // OC3C output: Disconnected
                 ; 0000 01FF // Noise Canceler: Off
                 ; 0000 0200 // Input Capture on Falling Edge
                 ; 0000 0201 // Timer3 Overflow Interrupt: Off
                 ; 0000 0202 // Input Capture Interrupt: Off
                 ; 0000 0203 // Compare A Match Interrupt: Off
                 ; 0000 0204 // Compare B Match Interrupt: Off
                 ; 0000 0205 // Compare C Match Interrupt: Off
                 ; 0000 0206     TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
0006a1 93e0 008b 	STS  139,R30
                 ; 0000 0207     TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
0006a3 93e0 008a 	STS  138,R30
                 ; 0000 0208     TCNT3H=0x00;
0006a5 93e0 0089 	STS  137,R30
                 ; 0000 0209     TCNT3L=0x00;
0006a7 93e0 0088 	STS  136,R30
                 ; 0000 020A     ICR3H=0x00;
0006a9 93e0 0081 	STS  129,R30
                 ; 0000 020B     ICR3L=0x00;
0006ab 93e0 0080 	STS  128,R30
                 ; 0000 020C     OCR3AH=0x00;
0006ad 93e0 0087 	STS  135,R30
                 ; 0000 020D     OCR3AL=0x00;
0006af 93e0 0086 	STS  134,R30
                 ; 0000 020E     OCR3BH=0x00;
0006b1 93e0 0085 	STS  133,R30
                 ; 0000 020F     OCR3BL=0x00;
0006b3 93e0 0084 	STS  132,R30
                 ; 0000 0210     OCR3CH=0x00;
0006b5 93e0 0083 	STS  131,R30
                 ; 0000 0211     OCR3CL=0x00;
0006b7 93e0 0082 	STS  130,R30
                 ; 0000 0212 
                 ; 0000 0213 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0214     TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0006b9 e4e1      	LDI  R30,LOW(65)
0006ba bfe7      	OUT  0x37,R30
                 ; 0000 0215     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0006bb e0e0      	LDI  R30,LOW(0)
0006bc 93e0 007d 	STS  125,R30
                 ; 0000 0216 
                 ; 0000 0217 
                 ; 0000 0218 // External Interrupt(s) initialization
                 ; 0000 0219 // INT0: Off
                 ; 0000 021A // INT1: Off
                 ; 0000 021B // INT2: Off
                 ; 0000 021C // INT3: Off
                 ; 0000 021D // INT4: Off
                 ; 0000 021E // INT5: Off
                 ; 0000 021F // INT6: Off
                 ; 0000 0220 // INT7: Off
                 ; 0000 0221     EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0006be 93e0 006a 	STS  106,R30
                 ; 0000 0222     EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
0006c0 bfea      	OUT  0x3A,R30
                 ; 0000 0223     EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
0006c1 bfe9      	OUT  0x39,R30
                 ; 0000 0224 
                 ; 0000 0225 // USART0 initialization
                 ; 0000 0226 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0227 // USART0 Receiver: On
                 ; 0000 0228 // USART0 Transmitter: On
                 ; 0000 0229 // USART0 Mode: Asynchronous
                 ; 0000 022A // USART0 Baud Rate: 9600
                 ; 0000 022B     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0006c2 b9eb      	OUT  0xB,R30
                 ; 0000 022C     UCSR0B=(1<<RXCIE0) | (1<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0006c3 ede8      	LDI  R30,LOW(216)
0006c4 b9ea      	OUT  0xA,R30
                 ; 0000 022D     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0006c5 e0e6      	LDI  R30,LOW(6)
0006c6 93e0 0095 	STS  149,R30
                 ; 0000 022E     UBRR0H=0x00;
0006c8 e0e0      	LDI  R30,LOW(0)
0006c9 93e0 0090 	STS  144,R30
                 ; 0000 022F     UBRR0L=0x33;
0006cb e3e3      	LDI  R30,LOW(51)
0006cc b9e9      	OUT  0x9,R30
                 ; 0000 0230 
                 ; 0000 0231 // USART1 initialization
                 ; 0000 0232 // USART1 disabled
                 ; 0000 0233     UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0006cd e0e0      	LDI  R30,LOW(0)
0006ce 93e0 009a 	STS  154,R30
                 ; 0000 0234 
                 ; 0000 0235 // Analog Comparator initialization
                 ; 0000 0236 // Analog Comparator: Off
                 ; 0000 0237 // The Analog Comparator's positive input is
                 ; 0000 0238 // connected to the AIN0 pin
                 ; 0000 0239 // The Analog Comparator's negative input is
                 ; 0000 023A // connected to the AIN1 pin
                 ; 0000 023B     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0006d0 e8e0      	LDI  R30,LOW(128)
0006d1 b9e8      	OUT  0x8,R30
                 ; 0000 023C     SFIOR=(0<<ACME);
0006d2 e0e0      	LDI  R30,LOW(0)
0006d3 bde0      	OUT  0x20,R30
                 ; 0000 023D 
                 ; 0000 023E // ADC initialization
                 ; 0000 023F // ADC disabled
                 ; 0000 0240     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0006d4 b9e6      	OUT  0x6,R30
                 ; 0000 0241 
                 ; 0000 0242 // SPI initialization
                 ; 0000 0243 // SPI disabled
                 ; 0000 0244     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0006d5 b9ed      	OUT  0xD,R30
                 ; 0000 0245 
                 ; 0000 0246 // TWI initialization
                 ; 0000 0247 // TWI disabled
                 ; 0000 0248     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0006d6 93e0 0074 	STS  116,R30
                 ; 0000 0249 
                 ; 0000 024A // Graphic Display Controller initialization
                 ; 0000 024B // The PCD8544 connections are specified in the
                 ; 0000 024C // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 024D // SDIN - PORTC Bit 7
                 ; 0000 024E // SCLK - PORTA Bit 7
                 ; 0000 024F // D /C - PORTC Bit 6
                 ; 0000 0250 // /SCE - PORTC Bit 5
                 ; 0000 0251 // /RES - PORTC Bit 4
                 ; 0000 0252 
                 ; 0000 0253 // Specify the current font for displaying text
                 ; 0000 0254     glcd_init_data.font=font5x7;
0006d8 e8ec      	LDI  R30,LOW(_font5x7*2)
0006d9 e0f0      	LDI  R31,HIGH(_font5x7*2)
0006da 83e8      	ST   Y,R30
0006db 83f9      	STD  Y+1,R31
                 ; 0000 0255 // No function is used for reading
                 ; 0000 0256 // image data from external memory
                 ; 0000 0257     glcd_init_data.readxmem=NULL;
0006dc e0e0      	LDI  R30,LOW(0)
0006dd 83ea      	STD  Y+2,R30
0006de 83eb      	STD  Y+2+1,R30
                 ; 0000 0258 // No function is used for writing
                 ; 0000 0259 // image data to external memory
                 ; 0000 025A     glcd_init_data.writexmem=NULL;
0006df 83ec      	STD  Y+4,R30
0006e0 83ed      	STD  Y+4+1,R30
                 ; 0000 025B // Set the LCD temperature coefficient
                 ; 0000 025C     glcd_init_data.temp_coef=90;
0006e1 81ee      	LDD  R30,Y+6
0006e2 7fec      	ANDI R30,LOW(0xFC)
0006e3 60e2      	ORI  R30,2
0006e4 83ee      	STD  Y+6,R30
                 ; 0000 025D // Set the LCD bias
                 ; 0000 025E     glcd_init_data.bias=3;
0006e5 7ee3      	ANDI R30,LOW(0xE3)
0006e6 60ec      	ORI  R30,LOW(0xC)
0006e7 83ee      	STD  Y+6,R30
                 ; 0000 025F // Set the LCD contrast control voltage VLCD
                 ; 0000 0260     glcd_init_data.vlcd=57;
0006e8 81ef      	LDD  R30,Y+7
0006e9 78e0      	ANDI R30,LOW(0x80)
0006ea 63e9      	ORI  R30,LOW(0x39)
0006eb 83ef      	STD  Y+7,R30
                 ; 0000 0261 
                 ; 0000 0262     glcd_init(&glcd_init_data);
0006ec 01de      	MOVW R26,R28
0006ed 940e 0878 	CALL _glcd_init
                 ; 0000 0263 
                 ; 0000 0264 // Global enable interrupts
                 ; 0000 0265 #asm("sei")
0006ef 9478      	sei
                 ; 0000 0266 
                 ; 0000 0267     put_string("AT\r\n");
                +
0006f0 e1af     +LDI R26 , LOW ( _0xDC + ( 0 ) )
0006f1 e0b6     +LDI R27 , HIGH ( _0xDC + ( 0 ) )
                 	__POINTW2MN _0xDC,0
0006f2 ddbc      	RCALL _put_string
                 ; 0000 0268     wait_until("OK", 2);
                +
0006f3 e2e4     +LDI R30 , LOW ( _0xDC + ( 5 ) )
0006f4 e0f6     +LDI R31 , HIGH ( _0xDC + ( 5 ) )
                 	__POINTW1MN _0xDC,5
0006f5 940e 1020 	CALL SUBOPT_0x11
                 ; 0000 0269     refresh(0);
                 ; 0000 026A 
                 ; 0000 026B     put_string("AT+CWMODE=1\r\n");
                +
0006f7 e2a7     +LDI R26 , LOW ( _0xDC + ( 8 ) )
0006f8 e0b6     +LDI R27 , HIGH ( _0xDC + ( 8 ) )
                 	__POINTW2MN _0xDC,8
0006f9 ddb5      	RCALL _put_string
                 ; 0000 026C     wait_until("OK", 2);
                +
0006fa e3e5     +LDI R30 , LOW ( _0xDC + ( 22 ) )
0006fb e0f6     +LDI R31 , HIGH ( _0xDC + ( 22 ) )
                 	__POINTW1MN _0xDC,22
0006fc 940e 1020 	CALL SUBOPT_0x11
                 ; 0000 026D     refresh(0);
                 ; 0000 026E 
                 ; 0000 026F     put_string("AT+CWJAP=\"Thay_Thao_deo_giai\",\"chinhxac\"\r\n");
                +
0006fe e3a8     +LDI R26 , LOW ( _0xDC + ( 25 ) )
0006ff e0b6     +LDI R27 , HIGH ( _0xDC + ( 25 ) )
                 	__POINTW2MN _0xDC,25
000700 ddae      	RCALL _put_string
                 ; 0000 0270     wait_until("OK", 10);
                +
000701 e6e3     +LDI R30 , LOW ( _0xDC + ( 68 ) )
000702 e0f6     +LDI R31 , HIGH ( _0xDC + ( 68 ) )
                 	__POINTW1MN _0xDC,68
000703 940e 102a 	CALL SUBOPT_0x12
                 ; 0000 0271     refresh(0);
000705 e0a0      	LDI  R26,LOW(0)
000706 e0b0      	LDI  R27,0
000707 ddbc      	RCALL _refresh
                 ; 0000 0272 
                 ; 0000 0273 
                 ; 0000 0274 //while(!read_and_send("6ZF1YB8AXISBSA2P"));
                 ; 0000 0275 delay_ms(3000);
000708 eba8      	LDI  R26,LOW(3000)
000709 e0bb      	LDI  R27,HIGH(3000)
00070a 940e 1113 	CALL _delay_ms
                 ; 0000 0276 RF_Init_RX();
00070c dd01      	RCALL _RF_Init_RX
                 ; 0000 0277 config();
00070d dc9c      	RCALL _config
                 ; 0000 0278 RF_Config_RX();
00070e dd63      	RCALL _RF_Config_RX
                 ; 0000 0279 count = 1;
00070f e0e1      	LDI  R30,LOW(1)
000710 e0f0      	LDI  R31,HIGH(1)
000711 016f      	MOVW R12,R30
                 ; 0000 027A 
                 ; 0000 027B glcd_moveto(10,10);
000712 e0ea      	LDI  R30,LOW(10)
000713 93ea      	ST   -Y,R30
000714 e0aa      	LDI  R26,LOW(10)
000715 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 027C glcd_clear();
000717 940e 0901 	CALL _glcd_clear
                 ; 0000 027D glcd_outtext("start");
                +
000719 e6a6     +LDI R26 , LOW ( _0xDC + ( 71 ) )
00071a e0b6     +LDI R27 , HIGH ( _0xDC + ( 71 ) )
                 	__POINTW2MN _0xDC,71
00071b 940e 0c75 	CALL _glcd_outtext
                 ; 0000 027E 
                 ; 0000 027F while (1) {
                 _0xDD:
                 ; 0000 0280      /*if((PINC.3==0)&&(lan_bam==0))
                 ; 0000 0281      {delay_ms(250); check_do_rac(1);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=1;}
                 ; 0000 0282      if((PINC.3==0)&&(lan_bam==1))
                 ; 0000 0283      {delay_ms(250); check_do_rac(2);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=2;}
                 ; 0000 0284      if((PINC.3==0)&&(lan_bam==2))
                 ; 0000 0285      {delay_ms(250); check_do_rac(3);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=3;}
                 ; 0000 0286      if((PINC.3==0)&&(lan_bam==3))
                 ; 0000 0287      {delay_ms(250); check_do_rac(4);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=0;}*/
                 ; 0000 0288      RF_Mode_RX();
00071d dd4e      	RCALL _RF_Mode_RX
                 ; 0000 0289 
                 ; 0000 028A     if(IRQ == 0){
00071e 99c8      	SBIC 0x19,0
00071f c06c      	RJMP _0xE0
                 ; 0000 028B         RF_Read_RX_3();
000720 dd60      	RCALL _RF_Read_RX_3
                 ; 0000 028C         if(station_receive.flag == count){
000721 91a0 0921 	LDS  R26,_station_receive
000723 91b0 0922 	LDS  R27,_station_receive+1
000725 16ca      	CP   R12,R26
000726 06db      	CPC  R13,R27
000727 f009      	BREQ PC+2
000728 c063      	RJMP _0xE1
                 ; 0000 028D             print_border();
000729 def6      	RCALL _print_border
                 ; 0000 028E             glcd_moveto(40, 3);
00072a e2e8      	LDI  R30,LOW(40)
00072b 93ea      	ST   -Y,R30
00072c e0a3      	LDI  R26,LOW(3)
00072d 940e 0c9f 	CALL _glcd_moveto
                 ; 0000 028F             itoa(station_receive.flag, buff);
00072f 91e0 0921 	LDS  R30,_station_receive
000731 91f0 0922 	LDS  R31,_station_receive+1
000733 93fa      	ST   -Y,R31
000734 93ea      	ST   -Y,R30
000735 eda2      	LDI  R26,LOW(_buff)
000736 e0b7      	LDI  R27,HIGH(_buff)
000737 940e 07ec 	CALL _itoa
                 ; 0000 0290             glcd_outtext(buff);
000739 940e 0ffd 	CALL SUBOPT_0xB
                 ; 0000 0291             glcd_moveto(46, 18);
00073b e2ee      	LDI  R30,LOW(46)
00073c 93ea      	ST   -Y,R30
00073d e1a2      	LDI  R26,LOW(18)
00073e 940e 105a 	CALL SUBOPT_0x19
                 ; 0000 0292             sprintf(buff, "%d ", station_receive.temp);
                +
000740 eaed     +LDI R30 , LOW ( 2 * _0x0 + ( 269 ) )
000741 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 269 ) )
                 	__POINTW1FN _0x0,269
000742 93fa      	ST   -Y,R31
000743 93ea      	ST   -Y,R30
                +
000744 91e0 0927+LDS R30 , _station_receive + ( 6 )
000746 91f0 0928+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
000748 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0293             glcd_outtext(buff);
                 ; 0000 0294             glcd_moveto(46, 28);
00074a e2ee      	LDI  R30,LOW(46)
00074b 93ea      	ST   -Y,R30
00074c e1ac      	LDI  R26,LOW(28)
00074d 940e 105a 	CALL SUBOPT_0x19
                 ; 0000 0295             sprintf(buff, "%d ", station_receive.humi);
                +
00074f eaed     +LDI R30 , LOW ( 2 * _0x0 + ( 269 ) )
000750 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 269 ) )
                 	__POINTW1FN _0x0,269
000751 93fa      	ST   -Y,R31
000752 93ea      	ST   -Y,R30
                +
000753 91e0 0925+LDS R30 , _station_receive + ( 4 )
000755 91f0 0926+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
000757 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0296             glcd_outtext(buff);
                 ; 0000 0297             glcd_moveto(46, 37);
000759 e2ee      	LDI  R30,LOW(46)
00075a 93ea      	ST   -Y,R30
00075b e2a5      	LDI  R26,LOW(37)
00075c 940e 105a 	CALL SUBOPT_0x19
                 ; 0000 0298             sprintf(buff, "%d  ", station_receive.water);
                +
00075e ebe1     +LDI R30 , LOW ( 2 * _0x0 + ( 273 ) )
00075f e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 273 ) )
                 	__POINTW1FN _0x0,273
000760 93fa      	ST   -Y,R31
000761 93ea      	ST   -Y,R30
                +
000762 91e0 092b+LDS R30 , _station_receive + ( 10 )
000764 91f0 092c+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
000766 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0299             glcd_outtext(buff);
                 ; 0000 029A             delay_ms(100);
000768 e6a4      	LDI  R26,LOW(100)
000769 e0b0      	LDI  R27,0
00076a 940e 1113 	CALL _delay_ms
                 ; 0000 029B             while(!read_and_send(key[count]));
                 _0xE2:
00076c 01f6      	MOVW R30,R12
00076d e8a9      	LDI  R26,LOW(_key)
00076e e0b6      	LDI  R27,HIGH(_key)
00076f 0fee      	LSL  R30
000770 1fff      	ROL  R31
000771 0fae      	ADD  R26,R30
000772 1fbf      	ADC  R27,R31
000773 940e 1142 	CALL __GETW1P
000775 01df      	MOVW R26,R30
000776 ddcb      	RCALL _read_and_send
000777 30e0      	CPI  R30,0
000778 f399      	BREQ _0xE2
                 ; 0000 029C             delay_ms(200);
000779 eca8      	LDI  R26,LOW(200)
00077a e0b0      	LDI  R27,0
00077b 940e 1113 	CALL _delay_ms
                 ; 0000 029D             glcd_clear();
00077d 940e 0901 	CALL _glcd_clear
                 ; 0000 029E             count++;
00077f 01f6      	MOVW R30,R12
000780 9631      	ADIW R30,1
000781 016f      	MOVW R12,R30
                 ; 0000 029F             if(count == 5)
000782 e0e5      	LDI  R30,LOW(5)
000783 e0f0      	LDI  R31,HIGH(5)
000784 15ec      	CP   R30,R12
000785 05fd      	CPC  R31,R13
000786 f419      	BRNE _0xE5
                 ; 0000 02A0                 count = 1;
000787 e0e1      	LDI  R30,LOW(1)
000788 e0f0      	LDI  R31,HIGH(1)
000789 016f      	MOVW R12,R30
                 ; 0000 02A1             flag = true;
                 _0xE5:
00078a e0e1      	LDI  R30,LOW(1)
00078b 2eae      	MOV  R10,R30
                 ; 0000 02A2 
                 ; 0000 02A3         }
                 ; 0000 02A4     }
                 _0xE1:
                 ; 0000 02A5     }
                 _0xE0:
00078c cf90      	RJMP _0xDD
                 ; 0000 02A6 }
                 _0xE6:
00078d cfff      	RJMP _0xE6
                 ; .FEND
                 
                 	.DSEG
                 _0xDC:
00061f           	.BYTE 0x4D
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
00078e 93ba      	ST   -Y,R27
00078f 93aa      	ST   -Y,R26
000790 81b9          ldd  r27,y+1
000791 81a8          ld   r26,y
000792 9610          adiw r26,0
000793 f031          breq memset1
000794 81fc          ldd  r31,y+4
000795 81eb          ldd  r30,y+3
000796 816a          ldd  r22,y+2
                 memset0:
000797 9361          st   z+,r22
000798 9711          sbiw r26,1
000799 f7e9          brne memset0
                 memset1:
00079a 81eb          ldd  r30,y+3
00079b 81fc          ldd  r31,y+4
00079c 940c 0dd9 	JMP  _0x2120005
                 ; .FEND
                 _strcat:
                 ; .FSTART _strcat
00079e 93ba      	ST   -Y,R27
00079f 93aa      	ST   -Y,R26
0007a0 91e9          ld   r30,y+
0007a1 91f9          ld   r31,y+
0007a2 91a9          ld   r26,y+
0007a3 91b9          ld   r27,y+
0007a4 01cd          movw r24,r26
                 strcat0:
0007a5 916d          ld   r22,x+
0007a6 2366          tst  r22
0007a7 f7e9          brne strcat0
0007a8 9711          sbiw r26,1
                 strcat1:
0007a9 9161          ld   r22,z+
0007aa 936d          st   x+,r22
0007ab 2366          tst  r22
0007ac f7e1          brne strcat1
0007ad 01fc          movw r30,r24
0007ae 9508          ret
                 ; .FEND
                 _strcpy:
                 ; .FSTART _strcpy
0007af 93ba      	ST   -Y,R27
0007b0 93aa      	ST   -Y,R26
0007b1 91e9          ld   r30,y+
0007b2 91f9          ld   r31,y+
0007b3 91a9          ld   r26,y+
0007b4 91b9          ld   r27,y+
0007b5 01cd          movw r24,r26
                 strcpy0:
0007b6 9161          ld   r22,z+
0007b7 936d          st   x+,r22
0007b8 2366          tst  r22
0007b9 f7e1          brne strcpy0
0007ba 01fc          movw r30,r24
0007bb 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0007bc 93ba      	ST   -Y,R27
0007bd 93aa      	ST   -Y,R26
0007be 91a9          ld   r26,y+
0007bf 91b9          ld   r27,y+
0007c0 27ee          clr  r30
0007c1 27ff          clr  r31
                 strlen0:
0007c2 916d          ld   r22,x+
0007c3 2366          tst  r22
0007c4 f011          breq strlen1
0007c5 9631          adiw r30,1
0007c6 cffb          rjmp strlen0
                 strlen1:
0007c7 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0007c8 93ba      	ST   -Y,R27
0007c9 93aa      	ST   -Y,R26
0007ca 27aa          clr  r26
0007cb 27bb          clr  r27
0007cc 91e9          ld   r30,y+
0007cd 91f9          ld   r31,y+
                 strlenf0:
0007ce 9005      	lpm  r0,z+
0007cf 2000          tst  r0
0007d0 f011          breq strlenf1
0007d1 9611          adiw r26,1
0007d2 cffb          rjmp strlenf0
                 strlenf1:
0007d3 01fd          movw r30,r26
0007d4 9508          ret
                 ; .FEND
                 _strstr:
                 ; .FSTART _strstr
0007d5 93ba      	ST   -Y,R27
0007d6 93aa      	ST   -Y,R26
0007d7 81aa          ldd  r26,y+2
0007d8 81bb          ldd  r27,y+3
0007d9 01cd          movw r24,r26
                 strstr0:
0007da 81e8          ld   r30,y
0007db 81f9          ldd  r31,y+1
                 strstr1:
0007dc 9171          ld   r23,z+
0007dd 2377          tst  r23
0007de f411          brne strstr2
0007df 01fc          movw r30,r24
0007e0 c009          rjmp strstr3
                 strstr2:
0007e1 916d          ld   r22,x+
0007e2 1767          cp   r22,r23
0007e3 f3c1          breq strstr1
0007e4 9601          adiw r24,1
0007e5 01dc          movw r26,r24
0007e6 2366          tst  r22
0007e7 f791          brne strstr0
0007e8 27ee          clr  r30
0007e9 27ff          clr  r31
                 strstr3:
0007ea 940c 091d 	JMP  _0x212000B
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0007ec 93ba      	ST   -Y,R27
0007ed 93aa      	ST   -Y,R26
0007ee 91a9          ld   r26,y+
0007ef 91b9          ld   r27,y+
0007f0 91e9          ld   r30,y+
0007f1 91f9          ld   r31,y+
0007f2 9630          adiw r30,0
0007f3 f42a          brpl __itoa0
0007f4 95e0          com  r30
0007f5 95f0          com  r31
0007f6 9631          adiw r30,1
0007f7 e26d          ldi  r22,'-'
0007f8 936d          st   x+,r22
                 __itoa0:
0007f9 94e8          clt
0007fa e180          ldi  r24,low(10000)
0007fb e297          ldi  r25,high(10000)
0007fc d00d          rcall __itoa1
0007fd ee88          ldi  r24,low(1000)
0007fe e093          ldi  r25,high(1000)
0007ff d00a          rcall __itoa1
000800 e684          ldi  r24,100
000801 2799          clr  r25
000802 d007          rcall __itoa1
000803 e08a          ldi  r24,10
000804 d005          rcall __itoa1
000805 2f6e          mov  r22,r30
000806 d010          rcall __itoa5
000807 2766          clr  r22
000808 936c          st   x,r22
000809 9508          ret
                 
                 __itoa1:
00080a 2766          clr	 r22
                 __itoa2:
00080b 17e8          cp   r30,r24
00080c 07f9          cpc  r31,r25
00080d f020          brlo __itoa3
00080e 9563          inc  r22
00080f 1be8          sub  r30,r24
000810 0bf9          sbc  r31,r25
000811 f7c9          brne __itoa2
                 __itoa3:
000812 2366          tst  r22
000813 f411          brne __itoa4
000814 f016          brts __itoa5
000815 9508          ret
                 __itoa4:
000816 9468          set
                 __itoa5:
000817 5d60          subi r22,-0x30
000818 936d          st   x+,r22
000819 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
00081a 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
00081b 93aa      	ST   -Y,R26
00081c 931a      	ST   -Y,R17
00081d 98ad      	CBI  0x15,5
00081e e018      	LDI  R17,LOW(8)
                 _0x2040004:
00081f dffa      	RCALL _pcd8544_delay_G102
000820 81e9      	LDD  R30,Y+1
000821 78e0      	ANDI R30,LOW(0x80)
000822 f011      	BREQ _0x2040006
000823 9aaf      	SBI  0x15,7
000824 c001      	RJMP _0x2040007
                 _0x2040006:
000825 98af      	CBI  0x15,7
                 _0x2040007:
000826 81e9      	LDD  R30,Y+1
000827 0fee      	LSL  R30
000828 83e9      	STD  Y+1,R30
000829 dff0      	RCALL _pcd8544_delay_G102
00082a 9adf      	SBI  0x1B,7
00082b dfee      	RCALL _pcd8544_delay_G102
00082c 98df      	CBI  0x1B,7
00082d 5011      	SUBI R17,LOW(1)
00082e f781      	BRNE _0x2040004
00082f 9aad      	SBI  0x15,5
000830 8118      	LDD  R17,Y+0
000831 c03a      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000832 93aa      	ST   -Y,R26
000833 98ae      	CBI  0x15,6
000834 81a8      	LD   R26,Y
000835 dfe5      	RCALL _pcd8544_wrbus_G102
000836 c0c8      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
000837 93aa      	ST   -Y,R26
000838 9aae      	SBI  0x15,6
000839 81a8      	LD   R26,Y
00083a dfe0      	RCALL _pcd8544_wrbus_G102
00083b c0c3      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
00083c 93aa      	ST   -Y,R26
00083d 931a      	ST   -Y,R17
00083e 81e9      	LDD  R30,Y+1
00083f 95e6      	LSR  R30
000840 95e6      	LSR  R30
000841 95e6      	LSR  R30
000842 2f1e      	MOV  R17,R30
000843 e5e4      	LDI  R30,LOW(84)
000844 9fe1      	MUL  R30,R17
000845 01f0      	MOVW R30,R0
000846 01df      	MOVW R26,R30
000847 81ea      	LDD  R30,Y+2
000848 e0f0      	LDI  R31,0
000849 0fea      	ADD  R30,R26
00084a 1ffb      	ADC  R31,R27
00084b 93e0 0958 	STS  _gfx_addr_G102,R30
00084d 93f0 0959 	STS  _gfx_addr_G102+1,R31
00084f 2fe1      	MOV  R30,R17
000850 8118      	LDD  R17,Y+0
000851 9623      	ADIW R28,3
000852 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000853 93aa      	ST   -Y,R26
000854 81e9      	LDD  R30,Y+1
000855 68e0      	ORI  R30,0x80
000856 2fae      	MOV  R26,R30
000857 dfda      	RCALL _pcd8544_wrcmd
000858 81e9      	LDD  R30,Y+1
000859 93ea      	ST   -Y,R30
00085a 81a9      	LDD  R26,Y+1
00085b dfe0      	RCALL _pcd8544_setaddr_G102
00085c 64e0      	ORI  R30,0x40
00085d 2fae      	MOV  R26,R30
00085e dfd3      	RCALL _pcd8544_wrcmd
00085f c00c      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000860 93aa      	ST   -Y,R26
000861 81e9      	LDD  R30,Y+1
000862 93ea      	ST   -Y,R30
000863 81a9      	LDD  R26,Y+1
000864 dfee      	RCALL _pcd8544_gotoxy
000865 91e0 0958 	LDS  R30,_gfx_addr_G102
000867 91f0 0959 	LDS  R31,_gfx_addr_G102+1
000869 5ae6      	SUBI R30,LOW(-_gfx_buffer_G102)
00086a 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
00086b 81e0      	LD   R30,Z
                 _0x212000D:
00086c 9622      	ADIW R28,2
00086d 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
00086e 93aa      	ST   -Y,R26
00086f 940e 1066 	CALL SUBOPT_0x1B
000871 9731      	SBIW R30,1
000872 5ae6      	SUBI R30,LOW(-_gfx_buffer_G102)
000873 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000874 81a8      	LD   R26,Y
000875 83a0      	STD  Z+0,R26
000876 dfc0      	RCALL _pcd8544_wrdata_G102
000877 c087      	RJMP _0x212000C
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000878 93ba      	ST   -Y,R27
000879 93aa      	ST   -Y,R26
00087a 940e 117c 	CALL __SAVELOCR4
00087c 9aa5      	SBI  0x14,5
00087d 9aad      	SBI  0x15,5
00087e 9ad7      	SBI  0x1A,7
00087f 98df      	CBI  0x1B,7
000880 9aa7      	SBI  0x14,7
000881 9aa6      	SBI  0x14,6
000882 9aa4      	SBI  0x14,4
000883 98ac      	CBI  0x15,4
000884 e0aa      	LDI  R26,LOW(10)
000885 e0b0      	LDI  R27,0
000886 940e 1113 	CALL _delay_ms
000888 9aac      	SBI  0x15,4
000889 81ec      	LDD  R30,Y+4
00088a 81fd      	LDD  R31,Y+4+1
00088b 9730      	SBIW R30,0
00088c f121      	BREQ _0x2040008
00088d 81e6      	LDD  R30,Z+6
00088e 70e3      	ANDI R30,LOW(0x3)
00088f 2f1e      	MOV  R17,R30
000890 81ec      	LDD  R30,Y+4
000891 81fd      	LDD  R31,Y+4+1
000892 81e6      	LDD  R30,Z+6
000893 95e6      	LSR  R30
000894 95e6      	LSR  R30
000895 70e7      	ANDI R30,LOW(0x7)
000896 2f0e      	MOV  R16,R30
000897 81ec      	LDD  R30,Y+4
000898 81fd      	LDD  R31,Y+4+1
000899 81e7      	LDD  R30,Z+7
00089a 77ef      	ANDI R30,0x7F
00089b 2f3e      	MOV  R19,R30
00089c 81ac      	LDD  R26,Y+4
00089d 81bd      	LDD  R27,Y+4+1
00089e 940e 1142 	CALL __GETW1P
                +
0008a0 93e0 0670+STS _glcd_state + ( 4 ) , R30
0008a2 93f0 0671+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0008a4 9612      	ADIW R26,2
0008a5 940e 1142 	CALL __GETW1P
                +
0008a7 93e0 0685+STS _glcd_state + ( 25 ) , R30
0008a9 93f0 0686+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0008ab 81ac      	LDD  R26,Y+4
0008ac 81bd      	LDD  R27,Y+4+1
0008ad 9614      	ADIW R26,4
0008ae 940e 1142 	CALL __GETW1P
0008b0 c00d      	RJMP _0x20400A0
                 _0x2040008:
0008b1 e010      	LDI  R17,LOW(0)
0008b2 e003      	LDI  R16,LOW(3)
0008b3 e332      	LDI  R19,LOW(50)
0008b4 e0e0      	LDI  R30,LOW(0)
0008b5 e0f0      	LDI  R31,HIGH(0)
                +
0008b6 93e0 0670+STS _glcd_state + ( 4 ) , R30
0008b8 93f0 0671+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0008ba 93e0 0685+STS _glcd_state + ( 25 ) , R30
0008bc 93f0 0686+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400A0:
                +
0008be 93e0 0687+STS _glcd_state + ( 27 ) , R30
0008c0 93f0 0688+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0008c2 e2a1      	LDI  R26,LOW(33)
0008c3 df6e      	RCALL _pcd8544_wrcmd
0008c4 2fe1      	MOV  R30,R17
0008c5 60e4      	ORI  R30,4
0008c6 2fae      	MOV  R26,R30
0008c7 df6a      	RCALL _pcd8544_wrcmd
0008c8 2fe0      	MOV  R30,R16
0008c9 61e0      	ORI  R30,0x10
0008ca 2fae      	MOV  R26,R30
0008cb df66      	RCALL _pcd8544_wrcmd
0008cc 2fe3      	MOV  R30,R19
0008cd 68e0      	ORI  R30,0x80
0008ce 2fae      	MOV  R26,R30
0008cf df62      	RCALL _pcd8544_wrcmd
0008d0 e2a0      	LDI  R26,LOW(32)
0008d1 df60      	RCALL _pcd8544_wrcmd
0008d2 e0a1      	LDI  R26,LOW(1)
0008d3 d022      	RCALL _glcd_display
0008d4 e0e1      	LDI  R30,LOW(1)
0008d5 93e0 066c 	STS  _glcd_state,R30
0008d7 e0e0      	LDI  R30,LOW(0)
                +
0008d8 93e0 066d+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0008da e0e1      	LDI  R30,LOW(1)
                +
0008db 93e0 0672+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0008dd 93e0 0673+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0008df 93e0 0674+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0008e1 efef      	LDI  R30,LOW(255)
                +
0008e2 93e0 0675+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0008e4 e0e1      	LDI  R30,LOW(1)
                +
0008e5 93e0 067c+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0008e7 e7ed     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0008e8 e0f6     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0008e9 93fa      	ST   -Y,R31
0008ea 93ea      	ST   -Y,R30
0008eb efef      	LDI  R30,LOW(255)
0008ec 93ea      	ST   -Y,R30
0008ed e0a8      	LDI  R26,LOW(8)
0008ee e0b0      	LDI  R27,0
0008ef 940e 078e 	CALL _memset
0008f1 d00f      	RCALL _glcd_clear
0008f2 e0e1      	LDI  R30,LOW(1)
0008f3 940e 1183 	CALL __LOADLOCR4
0008f5 c082      	RJMP _0x212000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0008f6 93aa      	ST   -Y,R26
0008f7 81e8      	LD   R30,Y
0008f8 30e0      	CPI  R30,0
0008f9 f011      	BREQ _0x204000A
0008fa e0ec      	LDI  R30,LOW(12)
0008fb c001      	RJMP _0x204000B
                 _0x204000A:
0008fc e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
0008fd 2fae      	MOV  R26,R30
0008fe df33      	RCALL _pcd8544_wrcmd
                 _0x212000C:
0008ff 9621      	ADIW R28,1
000900 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000901 940e 117c 	CALL __SAVELOCR4
000903 e030      	LDI  R19,0
                +
000904 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000906 30e0      	CPI  R30,0
000907 f009      	BREQ _0x204000D
000908 ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
000909 e0e0      	LDI  R30,LOW(0)
00090a 93ea      	ST   -Y,R30
00090b e0a0      	LDI  R26,LOW(0)
00090c df46      	RCALL _pcd8544_gotoxy
                +
00090d ef08     +LDI R16 , LOW ( 504 )
00090e e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
00090f 01f8      	MOVW R30,R16
                +
000910 5001     +SUBI R16 , LOW ( 1 )
000911 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000912 9730      	SBIW R30,0
000913 f019      	BREQ _0x2040010
000914 2fa3      	MOV  R26,R19
000915 df58      	RCALL _pcd8544_wrbyte
000916 cff8      	RJMP _0x204000E
                 _0x2040010:
000917 e0e0      	LDI  R30,LOW(0)
000918 93ea      	ST   -Y,R30
000919 e0a0      	LDI  R26,LOW(0)
00091a d384      	RCALL _glcd_moveto
00091b 940e 1183 	CALL __LOADLOCR4
                 _0x212000B:
00091d 9624      	ADIW R28,4
00091e 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
00091f 93aa      	ST   -Y,R26
000920 931a      	ST   -Y,R17
000921 930a      	ST   -Y,R16
000922 81ac      	LDD  R26,Y+4
000923 35a4      	CPI  R26,LOW(0x54)
000924 f418      	BRSH _0x2040012
000925 81ab      	LDD  R26,Y+3
000926 33a0      	CPI  R26,LOW(0x30)
000927 f010      	BRLO _0x2040011
                 _0x2040012:
000928 940c 0dd7 	JMP  _0x2120004
                 _0x2040011:
00092a 81ec      	LDD  R30,Y+4
00092b 93ea      	ST   -Y,R30
00092c 81ac      	LDD  R26,Y+4
00092d df32      	RCALL _pcd8544_rdbyte
00092e 2f1e      	MOV  R17,R30
00092f 81eb      	LDD  R30,Y+3
000930 70e7      	ANDI R30,LOW(0x7)
000931 e0a1      	LDI  R26,LOW(1)
000932 940e 1125 	CALL __LSLB12
000934 2f0e      	MOV  R16,R30
000935 81ea      	LDD  R30,Y+2
000936 30e0      	CPI  R30,0
000937 f011      	BREQ _0x2040014
000938 2b10      	OR   R17,R16
000939 c003      	RJMP _0x2040015
                 _0x2040014:
00093a 2fe0      	MOV  R30,R16
00093b 95e0      	COM  R30
00093c 231e      	AND  R17,R30
                 _0x2040015:
00093d 2fa1      	MOV  R26,R17
00093e df2f      	RCALL _pcd8544_wrbyte
00093f 940c 0dd7 	JMP  _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
000941 93aa      	ST   -Y,R26
000942 931a      	ST   -Y,R17
000943 81ed      	LDD  R30,Y+5
000944 93ea      	ST   -Y,R30
000945 81ad      	LDD  R26,Y+5
000946 df19      	RCALL _pcd8544_rdbyte
000947 2f1e      	MOV  R17,R30
000948 81e9      	LDD  R30,Y+1
000949 30e7      	CPI  R30,LOW(0x7)
00094a f011      	BREQ _0x2040020
00094b 30e8      	CPI  R30,LOW(0x8)
00094c f439      	BRNE _0x2040021
                 _0x2040020:
00094d 81eb      	LDD  R30,Y+3
00094e 93ea      	ST   -Y,R30
00094f 81aa      	LDD  R26,Y+2
000950 940e 0f4e 	CALL _glcd_mappixcolor1bit
000952 83eb      	STD  Y+3,R30
000953 c008      	RJMP _0x2040022
                 _0x2040021:
000954 30e3      	CPI  R30,LOW(0x3)
000955 f421      	BRNE _0x2040024
000956 81eb      	LDD  R30,Y+3
000957 95e0      	COM  R30
000958 83eb      	STD  Y+3,R30
000959 c002      	RJMP _0x2040025
                 _0x2040024:
00095a 30e0      	CPI  R30,0
00095b f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
00095c 81ea      	LDD  R30,Y+2
00095d 95e0      	COM  R30
00095e 231e      	AND  R17,R30
00095f c002      	RJMP _0x2040027
                 _0x2040026:
000960 30e2      	CPI  R30,LOW(0x2)
000961 f429      	BRNE _0x2040028
                 _0x2040027:
000962 81ea      	LDD  R30,Y+2
000963 81ab      	LDD  R26,Y+3
000964 23ea      	AND  R30,R26
000965 2b1e      	OR   R17,R30
000966 c00e      	RJMP _0x204001E
                 _0x2040028:
000967 30e1      	CPI  R30,LOW(0x1)
000968 f429      	BRNE _0x2040029
000969 81ea      	LDD  R30,Y+2
00096a 81ab      	LDD  R26,Y+3
00096b 23ea      	AND  R30,R26
00096c 271e      	EOR  R17,R30
00096d c007      	RJMP _0x204001E
                 _0x2040029:
00096e 30e4      	CPI  R30,LOW(0x4)
00096f f429      	BRNE _0x204001E
000970 81ea      	LDD  R30,Y+2
000971 95e0      	COM  R30
000972 81ab      	LDD  R26,Y+3
000973 2bea      	OR   R30,R26
000974 231e      	AND  R17,R30
                 _0x204001E:
000975 2fa1      	MOV  R26,R17
000976 def7      	RCALL _pcd8544_wrbyte
000977 8118      	LDD  R17,Y+0
                 _0x212000A:
000978 9626      	ADIW R28,6
000979 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
00097a 93aa      	ST   -Y,R26
00097b 9723      	SBIW R28,3
00097c 940e 117a 	CALL __SAVELOCR6
00097e 89a8      	LDD  R26,Y+16
00097f 35a4      	CPI  R26,LOW(0x54)
000980 f448      	BRSH _0x204002C
000981 85af      	LDD  R26,Y+15
000982 33a0      	CPI  R26,LOW(0x30)
000983 f430      	BRSH _0x204002C
000984 85ae      	LDD  R26,Y+14
000985 30a0      	CPI  R26,LOW(0x0)
000986 f019      	BREQ _0x204002C
000987 85ad      	LDD  R26,Y+13
000988 30a0      	CPI  R26,LOW(0x0)
000989 f409      	BRNE _0x204002B
                 _0x204002C:
00098a c1d5      	RJMP _0x2120009
                 _0x204002B:
00098b 85ee      	LDD  R30,Y+14
00098c 87e8      	STD  Y+8,R30
00098d 89a8      	LDD  R26,Y+16
00098e 27bb      	CLR  R27
00098f 85ee      	LDD  R30,Y+14
000990 e0f0      	LDI  R31,0
000991 0fae      	ADD  R26,R30
000992 1fbf      	ADC  R27,R31
000993 35a5      	CPI  R26,LOW(0x55)
000994 e0e0      	LDI  R30,HIGH(0x55)
000995 07be      	CPC  R27,R30
000996 f020      	BRLO _0x204002E
000997 89a8      	LDD  R26,Y+16
000998 e5e4      	LDI  R30,LOW(84)
000999 1bea      	SUB  R30,R26
00099a 87ee      	STD  Y+14,R30
                 _0x204002E:
00099b 852d      	LDD  R18,Y+13
00099c 85af      	LDD  R26,Y+15
00099d 27bb      	CLR  R27
00099e 85ed      	LDD  R30,Y+13
00099f e0f0      	LDI  R31,0
0009a0 0fae      	ADD  R26,R30
0009a1 1fbf      	ADC  R27,R31
0009a2 97d1      	SBIW R26,49
0009a3 f020      	BRLO _0x204002F
0009a4 85af      	LDD  R26,Y+15
0009a5 e3e0      	LDI  R30,LOW(48)
0009a6 1bea      	SUB  R30,R26
0009a7 87ed      	STD  Y+13,R30
                 _0x204002F:
0009a8 85a9      	LDD  R26,Y+9
0009a9 30a6      	CPI  R26,LOW(0x6)
0009aa f009      	BREQ PC+2
0009ab c05b      	RJMP _0x2040030
0009ac 85ec      	LDD  R30,Y+12
0009ad 30e1      	CPI  R30,LOW(0x1)
0009ae f409      	BRNE _0x2040034
0009af c1b0      	RJMP _0x2120009
                 _0x2040034:
0009b0 30e3      	CPI  R30,LOW(0x3)
0009b1 f439      	BRNE _0x2040037
                +
0009b2 91e0 0687+LDS R30 , _glcd_state + ( 27 )
0009b4 91f0 0688+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0009b6 9730      	SBIW R30,0
0009b7 f409      	BRNE _0x2040036
0009b8 c1a7      	RJMP _0x2120009
                 _0x2040036:
                 _0x2040037:
0009b9 8508      	LDD  R16,Y+8
0009ba 85ed      	LDD  R30,Y+13
0009bb 95e6      	LSR  R30
0009bc 95e6      	LSR  R30
0009bd 95e6      	LSR  R30
0009be 2f3e      	MOV  R19,R30
0009bf 2fe2      	MOV  R30,R18
0009c0 70e7      	ANDI R30,LOW(0x7)
0009c1 f419      	BRNE _0x2040039
0009c2 85ad      	LDD  R26,Y+13
0009c3 172a      	CP   R18,R26
0009c4 f0e9      	BREQ _0x2040038
                 _0x2040039:
0009c5 2fa0      	MOV  R26,R16
0009c6 27bb      	CLR  R27
0009c7 2fe3      	MOV  R30,R19
0009c8 e0f0      	LDI  R31,0
0009c9 940e 113a 	CALL __MULW12U
0009cb 85aa      	LDD  R26,Y+10
0009cc 85bb      	LDD  R27,Y+10+1
0009cd 940e 1069 	CALL SUBOPT_0x1C
0009cf 9526      	LSR  R18
0009d0 9526      	LSR  R18
0009d1 9526      	LSR  R18
0009d2 2f53      	MOV  R21,R19
                 _0x204003B:
0009d3 935f      	PUSH R21
0009d4 5f5f      	SUBI R21,-1
0009d5 2fe2      	MOV  R30,R18
0009d6 91af      	POP  R26
0009d7 17ea      	CP   R30,R26
0009d8 f048      	BRLO _0x204003D
0009d9 2f10      	MOV  R17,R16
                 _0x204003E:
0009da 2fe1      	MOV  R30,R17
0009db 5011      	SUBI R17,1
0009dc 30e0      	CPI  R30,0
0009dd f019      	BREQ _0x2040040
0009de 940e 106e 	CALL SUBOPT_0x1D
0009e0 cff9      	RJMP _0x204003E
                 _0x2040040:
0009e1 cff1      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0009e2 85ae      	LDD  R26,Y+14
0009e3 170a      	CP   R16,R26
0009e4 f111      	BREQ _0x2040041
0009e5 85ee      	LDD  R30,Y+14
0009e6 85aa      	LDD  R26,Y+10
0009e7 85bb      	LDD  R27,Y+10+1
0009e8 e0f0      	LDI  R31,0
0009e9 940e 1069 	CALL SUBOPT_0x1C
0009eb 85ed      	LDD  R30,Y+13
0009ec 70e7      	ANDI R30,LOW(0x7)
0009ed f009      	BREQ _0x2040042
0009ee 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
0009ef e020      	LDI  R18,LOW(0)
                 _0x2040043:
0009f0 932f      	PUSH R18
0009f1 5f2f      	SUBI R18,-1
0009f2 2fe3      	MOV  R30,R19
0009f3 91af      	POP  R26
0009f4 17ae      	CP   R26,R30
0009f5 f488      	BRSH _0x2040045
0009f6 851e      	LDD  R17,Y+14
                 _0x2040046:
0009f7 931f      	PUSH R17
0009f8 5f1f      	SUBI R17,-1
0009f9 2fe0      	MOV  R30,R16
0009fa 91af      	POP  R26
0009fb 17ae      	CP   R26,R30
0009fc f418      	BRSH _0x2040048
0009fd 940e 106e 	CALL SUBOPT_0x1D
0009ff cff7      	RJMP _0x2040046
                 _0x2040048:
000a00 85ee      	LDD  R30,Y+14
000a01 81ae      	LDD  R26,Y+6
000a02 81bf      	LDD  R27,Y+6+1
000a03 e0f0      	LDI  R31,0
000a04 940e 1069 	CALL SUBOPT_0x1C
000a06 cfe9      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
000a07 85ef      	LDD  R30,Y+15
000a08 70e7      	ANDI R30,LOW(0x7)
000a09 2f3e      	MOV  R19,R30
                 _0x2040049:
000a0a 85ed      	LDD  R30,Y+13
000a0b 30e0      	CPI  R30,0
000a0c f409      	BRNE PC+2
000a0d c152      	RJMP _0x204004B
000a0e 85ea      	LDD  R30,Y+10
000a0f 85fb      	LDD  R31,Y+10+1
000a10 83ee      	STD  Y+6,R30
000a11 83ff      	STD  Y+6+1,R31
000a12 e010      	LDI  R17,LOW(0)
000a13 8908      	LDD  R16,Y+16
000a14 3030      	CPI  R19,0
000a15 f009      	BREQ PC+2
000a16 c066      	RJMP _0x204004C
000a17 85ad      	LDD  R26,Y+13
000a18 30a8      	CPI  R26,LOW(0x8)
000a19 f408      	BRSH PC+2
000a1a c05d      	RJMP _0x204004D
000a1b 85e9      	LDD  R30,Y+9
000a1c 30e0      	CPI  R30,0
000a1d f011      	BREQ _0x2040052
000a1e 30e3      	CPI  R30,LOW(0x3)
000a1f f409      	BRNE _0x2040053
                 _0x2040052:
000a20 c002      	RJMP _0x2040054
                 _0x2040053:
000a21 30e7      	CPI  R30,LOW(0x7)
000a22 f409      	BRNE _0x2040055
                 _0x2040054:
000a23 c002      	RJMP _0x2040056
                 _0x2040055:
000a24 30e8      	CPI  R30,LOW(0x8)
000a25 f409      	BRNE _0x2040057
                 _0x2040056:
000a26 c002      	RJMP _0x2040058
                 _0x2040057:
000a27 30e9      	CPI  R30,LOW(0x9)
000a28 f409      	BRNE _0x2040059
                 _0x2040058:
000a29 c002      	RJMP _0x204005A
                 _0x2040059:
000a2a 30ea      	CPI  R30,LOW(0xA)
000a2b f421      	BRNE _0x204005B
                 _0x204005A:
000a2c 930a      	ST   -Y,R16
000a2d 89a8      	LDD  R26,Y+16
000a2e de24      	RCALL _pcd8544_gotoxy
000a2f c004      	RJMP _0x2040050
                 _0x204005B:
000a30 30e6      	CPI  R30,LOW(0x6)
000a31 f411      	BRNE _0x2040050
000a32 940e 107b 	CALL SUBOPT_0x1E
                 _0x2040050:
                 _0x204005D:
000a34 931f      	PUSH R17
000a35 5f1f      	SUBI R17,-1
000a36 85ee      	LDD  R30,Y+14
000a37 91af      	POP  R26
000a38 17ae      	CP   R26,R30
000a39 f5b8      	BRSH _0x204005F
000a3a 85a9      	LDD  R26,Y+9
000a3b 30a6      	CPI  R26,LOW(0x6)
000a3c f469      	BRNE _0x2040060
000a3d 940e 107f 	CALL SUBOPT_0x1F
000a3f 93fa      	ST   -Y,R31
000a40 93ea      	ST   -Y,R30
000a41 940e 1066 	CALL SUBOPT_0x1B
000a43 9731      	SBIW R30,1
000a44 5ae6      	SUBI R30,LOW(-_gfx_buffer_G102)
000a45 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000a46 81a0      	LD   R26,Z
000a47 940e 0f95 	CALL _glcd_writemem
000a49 c026      	RJMP _0x2040061
                 _0x2040060:
000a4a 85e9      	LDD  R30,Y+9
000a4b 30e9      	CPI  R30,LOW(0x9)
000a4c f411      	BRNE _0x2040065
000a4d e050      	LDI  R21,LOW(0)
000a4e c00e      	RJMP _0x2040066
                 _0x2040065:
000a4f 30ea      	CPI  R30,LOW(0xA)
000a50 f411      	BRNE _0x2040064
000a51 ef5f      	LDI  R21,LOW(255)
000a52 c00a      	RJMP _0x2040066
                 _0x2040064:
000a53 940e 107f 	CALL SUBOPT_0x1F
000a55 940e 1088 	CALL SUBOPT_0x20
000a57 2f5e      	MOV  R21,R30
000a58 85e9      	LDD  R30,Y+9
000a59 30e7      	CPI  R30,LOW(0x7)
000a5a f011      	BREQ _0x204006D
000a5b 30e8      	CPI  R30,LOW(0x8)
000a5c f421      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
000a5d 940e 108e 	CALL SUBOPT_0x21
000a5f 2f5e      	MOV  R21,R30
000a60 c006      	RJMP _0x204006F
                 _0x204006E:
000a61 30e3      	CPI  R30,LOW(0x3)
000a62 f411      	BRNE _0x2040071
000a63 9550      	COM  R21
000a64 c002      	RJMP _0x2040072
                 _0x2040071:
000a65 30e0      	CPI  R30,0
000a66 f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
000a67 2fa5      	MOV  R26,R21
000a68 ddce      	RCALL _pcd8544_wrdata_G102
000a69 c006      	RJMP _0x204006B
                 _0x2040074:
000a6a 940e 1092 	CALL SUBOPT_0x22
000a6c efef      	LDI  R30,LOW(255)
000a6d 93ea      	ST   -Y,R30
000a6e 85ad      	LDD  R26,Y+13
000a6f ded1      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
000a70 cfc3      	RJMP _0x204005D
                 _0x204005F:
000a71 85ef      	LDD  R30,Y+15
000a72 5fe8      	SUBI R30,-LOW(8)
000a73 87ef      	STD  Y+15,R30
000a74 85ed      	LDD  R30,Y+13
000a75 50e8      	SUBI R30,LOW(8)
000a76 87ed      	STD  Y+13,R30
000a77 c0df      	RJMP _0x2040075
                 _0x204004D:
000a78 855d      	LDD  R21,Y+13
000a79 e020      	LDI  R18,LOW(0)
000a7a e0e0      	LDI  R30,LOW(0)
000a7b 87ed      	STD  Y+13,R30
000a7c c081      	RJMP _0x2040076
                 _0x204004C:
000a7d 2fe3      	MOV  R30,R19
000a7e 85ad      	LDD  R26,Y+13
000a7f 0fae      	ADD  R26,R30
000a80 30a9      	CPI  R26,LOW(0x9)
000a81 f420      	BRSH _0x2040077
000a82 852d      	LDD  R18,Y+13
000a83 e0e0      	LDI  R30,LOW(0)
000a84 87ed      	STD  Y+13,R30
000a85 c003      	RJMP _0x2040078
                 _0x2040077:
000a86 e0e8      	LDI  R30,LOW(8)
000a87 1be3      	SUB  R30,R19
000a88 2f2e      	MOV  R18,R30
                 _0x2040078:
000a89 933a      	ST   -Y,R19
000a8a 2fa2      	MOV  R26,R18
000a8b 940e 0f43 	CALL _glcd_getmask
000a8d 2f4e      	MOV  R20,R30
000a8e 85e9      	LDD  R30,Y+9
000a8f 30e6      	CPI  R30,LOW(0x6)
000a90 f529      	BRNE _0x204007C
000a91 940e 107b 	CALL SUBOPT_0x1E
                 _0x204007D:
000a93 931f      	PUSH R17
000a94 5f1f      	SUBI R17,-1
000a95 85ee      	LDD  R30,Y+14
000a96 91af      	POP  R26
000a97 17ae      	CP   R26,R30
000a98 f4e0      	BRSH _0x204007F
000a99 940e 1066 	CALL SUBOPT_0x1B
000a9b 9731      	SBIW R30,1
000a9c 5ae6      	SUBI R30,LOW(-_gfx_buffer_G102)
000a9d 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000a9e 81e0      	LD   R30,Z
000a9f 23e4      	AND  R30,R20
000aa0 2fae      	MOV  R26,R30
000aa1 2fe3      	MOV  R30,R19
000aa2 940e 112d 	CALL __LSRB12
000aa4 940e 1098 	CALL SUBOPT_0x23
000aa6 2fe3      	MOV  R30,R19
000aa7 2fa4      	MOV  R26,R20
000aa8 940e 112d 	CALL __LSRB12
000aaa 95e0      	COM  R30
000aab 21e1      	AND  R30,R1
000aac 2b5e      	OR   R21,R30
000aad 940e 107f 	CALL SUBOPT_0x1F
000aaf 93fa      	ST   -Y,R31
000ab0 93ea      	ST   -Y,R30
000ab1 2fa5      	MOV  R26,R21
000ab2 940e 0f95 	CALL _glcd_writemem
000ab4 cfde      	RJMP _0x204007D
                 _0x204007F:
000ab5 c02c      	RJMP _0x204007B
                 _0x204007C:
000ab6 30e9      	CPI  R30,LOW(0x9)
000ab7 f411      	BRNE _0x2040080
000ab8 e050      	LDI  R21,LOW(0)
000ab9 c003      	RJMP _0x2040081
                 _0x2040080:
000aba 30ea      	CPI  R30,LOW(0xA)
000abb f4a9      	BRNE _0x2040087
000abc ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
000abd 940e 108e 	CALL SUBOPT_0x21
000abf 2fae      	MOV  R26,R30
000ac0 2fe3      	MOV  R30,R19
000ac1 940e 1125 	CALL __LSLB12
000ac3 2f5e      	MOV  R21,R30
                 _0x2040084:
000ac4 931f      	PUSH R17
000ac5 5f1f      	SUBI R17,-1
000ac6 85ee      	LDD  R30,Y+14
000ac7 91af      	POP  R26
000ac8 17ae      	CP   R26,R30
000ac9 f430      	BRSH _0x2040086
000aca 940e 1092 	CALL SUBOPT_0x22
000acc 934a      	ST   -Y,R20
000acd e0a0      	LDI  R26,LOW(0)
000ace de72      	RCALL _pcd8544_wrmasked_G102
000acf cff4      	RJMP _0x2040084
                 _0x2040086:
000ad0 c011      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
000ad1 931f      	PUSH R17
000ad2 5f1f      	SUBI R17,-1
000ad3 85ee      	LDD  R30,Y+14
000ad4 91af      	POP  R26
000ad5 17ae      	CP   R26,R30
000ad6 f458      	BRSH _0x204008A
000ad7 940e 10a3 	CALL SUBOPT_0x24
000ad9 2fae      	MOV  R26,R30
000ada 2fe3      	MOV  R30,R19
000adb 940e 1125 	CALL __LSLB12
000add 93ea      	ST   -Y,R30
000ade 934a      	ST   -Y,R20
000adf 85ad      	LDD  R26,Y+13
000ae0 de60      	RCALL _pcd8544_wrmasked_G102
000ae1 cfef      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
000ae2 85ed      	LDD  R30,Y+13
000ae3 30e0      	CPI  R30,0
000ae4 f409      	BRNE _0x204008B
000ae5 c07a      	RJMP _0x204004B
                 _0x204008B:
000ae6 85ad      	LDD  R26,Y+13
000ae7 30a8      	CPI  R26,LOW(0x8)
000ae8 f428      	BRSH _0x204008C
000ae9 85ed      	LDD  R30,Y+13
000aea 1be2      	SUB  R30,R18
000aeb 2f5e      	MOV  R21,R30
000aec e0e0      	LDI  R30,LOW(0)
000aed c003      	RJMP _0x20400A1
                 _0x204008C:
000aee 2f53      	MOV  R21,R19
000aef 85ed      	LDD  R30,Y+13
000af0 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
000af1 87ed      	STD  Y+13,R30
000af2 e010      	LDI  R17,LOW(0)
000af3 85ef      	LDD  R30,Y+15
000af4 5fe8      	SUBI R30,-LOW(8)
000af5 87ef      	STD  Y+15,R30
000af6 e0e8      	LDI  R30,LOW(8)
000af7 1be3      	SUB  R30,R19
000af8 2f2e      	MOV  R18,R30
000af9 8908      	LDD  R16,Y+16
000afa 85ea      	LDD  R30,Y+10
000afb 85fb      	LDD  R31,Y+10+1
000afc 83ee      	STD  Y+6,R30
000afd 83ff      	STD  Y+6+1,R31
                 _0x2040076:
000afe 2fe5      	MOV  R30,R21
000aff e0f0      	LDI  R31,0
000b00 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000b01 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000b02 9144      	LPM  R20,Z
000b03 85e9      	LDD  R30,Y+9
000b04 30e6      	CPI  R30,LOW(0x6)
000b05 f529      	BRNE _0x2040091
000b06 940e 107b 	CALL SUBOPT_0x1E
                 _0x2040092:
000b08 931f      	PUSH R17
000b09 5f1f      	SUBI R17,-1
000b0a 85ee      	LDD  R30,Y+14
000b0b 91af      	POP  R26
000b0c 17ae      	CP   R26,R30
000b0d f4e0      	BRSH _0x2040094
000b0e 940e 1066 	CALL SUBOPT_0x1B
000b10 9731      	SBIW R30,1
000b11 5ae6      	SUBI R30,LOW(-_gfx_buffer_G102)
000b12 4ff6      	SBCI R31,HIGH(-_gfx_buffer_G102)
000b13 81e0      	LD   R30,Z
000b14 23e4      	AND  R30,R20
000b15 2fae      	MOV  R26,R30
000b16 2fe2      	MOV  R30,R18
000b17 940e 1125 	CALL __LSLB12
000b19 940e 1098 	CALL SUBOPT_0x23
000b1b 2fe2      	MOV  R30,R18
000b1c 2fa4      	MOV  R26,R20
000b1d 940e 1125 	CALL __LSLB12
000b1f 95e0      	COM  R30
000b20 21e1      	AND  R30,R1
000b21 2b5e      	OR   R21,R30
000b22 940e 107f 	CALL SUBOPT_0x1F
000b24 93fa      	ST   -Y,R31
000b25 93ea      	ST   -Y,R30
000b26 2fa5      	MOV  R26,R21
000b27 940e 0f95 	CALL _glcd_writemem
000b29 cfde      	RJMP _0x2040092
                 _0x2040094:
000b2a c02c      	RJMP _0x2040090
                 _0x2040091:
000b2b 30e9      	CPI  R30,LOW(0x9)
000b2c f411      	BRNE _0x2040095
000b2d e050      	LDI  R21,LOW(0)
000b2e c003      	RJMP _0x2040096
                 _0x2040095:
000b2f 30ea      	CPI  R30,LOW(0xA)
000b30 f4a9      	BRNE _0x204009C
000b31 ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
000b32 940e 108e 	CALL SUBOPT_0x21
000b34 2fae      	MOV  R26,R30
000b35 2fe2      	MOV  R30,R18
000b36 940e 112d 	CALL __LSRB12
000b38 2f5e      	MOV  R21,R30
                 _0x2040099:
000b39 931f      	PUSH R17
000b3a 5f1f      	SUBI R17,-1
000b3b 85ee      	LDD  R30,Y+14
000b3c 91af      	POP  R26
000b3d 17ae      	CP   R26,R30
000b3e f430      	BRSH _0x204009B
000b3f 940e 1092 	CALL SUBOPT_0x22
000b41 934a      	ST   -Y,R20
000b42 e0a0      	LDI  R26,LOW(0)
000b43 ddfd      	RCALL _pcd8544_wrmasked_G102
000b44 cff4      	RJMP _0x2040099
                 _0x204009B:
000b45 c011      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
000b46 931f      	PUSH R17
000b47 5f1f      	SUBI R17,-1
000b48 85ee      	LDD  R30,Y+14
000b49 91af      	POP  R26
000b4a 17ae      	CP   R26,R30
000b4b f458      	BRSH _0x204009F
000b4c 940e 10a3 	CALL SUBOPT_0x24
000b4e 2fae      	MOV  R26,R30
000b4f 2fe2      	MOV  R30,R18
000b50 940e 112d 	CALL __LSRB12
000b52 93ea      	ST   -Y,R30
000b53 934a      	ST   -Y,R20
000b54 85ad      	LDD  R26,Y+13
000b55 ddeb      	RCALL _pcd8544_wrmasked_G102
000b56 cfef      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
000b57 85e8      	LDD  R30,Y+8
000b58 85aa      	LDD  R26,Y+10
000b59 85bb      	LDD  R27,Y+10+1
000b5a e0f0      	LDI  R31,0
000b5b 0fea      	ADD  R30,R26
000b5c 1ffb      	ADC  R31,R27
000b5d 87ea      	STD  Y+10,R30
000b5e 87fb      	STD  Y+10+1,R31
000b5f ceaa      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120009:
000b60 940e 1181 	CALL __LOADLOCR6
000b62 9661      	ADIW R28,17
000b63 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000b64 940e 0ff1 	CALL SUBOPT_0x9
000b66 940e 1176 	CALL __CPW02
000b68 f024      	BRLT _0x2060003
000b69 e0e0      	LDI  R30,LOW(0)
000b6a e0f0      	LDI  R31,HIGH(0)
000b6b 940c 0f4c 	JMP  _0x2120002
                 _0x2060003:
000b6d 81a8      	LD   R26,Y
000b6e 81b9      	LDD  R27,Y+1
000b6f 35a4      	CPI  R26,LOW(0x54)
000b70 e0e0      	LDI  R30,HIGH(0x54)
000b71 07be      	CPC  R27,R30
000b72 f024      	BRLT _0x2060004
000b73 e5e3      	LDI  R30,LOW(83)
000b74 e0f0      	LDI  R31,HIGH(83)
000b75 940c 0f4c 	JMP  _0x2120002
                 _0x2060004:
000b77 81e8      	LD   R30,Y
000b78 81f9      	LDD  R31,Y+1
000b79 940c 0f4c 	JMP  _0x2120002
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000b7b 940e 0ff1 	CALL SUBOPT_0x9
000b7d 940e 1176 	CALL __CPW02
000b7f f024      	BRLT _0x2060005
000b80 e0e0      	LDI  R30,LOW(0)
000b81 e0f0      	LDI  R31,HIGH(0)
000b82 940c 0f4c 	JMP  _0x2120002
                 _0x2060005:
000b84 81a8      	LD   R26,Y
000b85 81b9      	LDD  R27,Y+1
000b86 97d0      	SBIW R26,48
000b87 f024      	BRLT _0x2060006
000b88 e2ef      	LDI  R30,LOW(47)
000b89 e0f0      	LDI  R31,HIGH(47)
000b8a 940c 0f4c 	JMP  _0x2120002
                 _0x2060006:
000b8c 81e8      	LD   R30,Y
000b8d 81f9      	LDD  R31,Y+1
000b8e 940c 0f4c 	JMP  _0x2120002
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
000b90 93ba      	ST   -Y,R27
000b91 93aa      	ST   -Y,R26
000b92 9723      	SBIW R28,3
000b93 940e 10b0 	CALL SUBOPT_0x25
000b95 018f      	MOVW R16,R30
000b96 2e00      	MOV  R0,R16
000b97 2a01      	OR   R0,R17
000b98 f419      	BRNE _0x206000B
000b99 e0e0      	LDI  R30,LOW(0)
000b9a e0f0      	LDI  R31,HIGH(0)
000b9b c05f      	RJMP _0x2120008
                 _0x206000B:
000b9c 940e 10b7 	CALL SUBOPT_0x26
000b9e 820f      	STD  Y+7,R0
000b9f 940e 10b7 	CALL SUBOPT_0x26
000ba1 820e      	STD  Y+6,R0
000ba2 940e 10b7 	CALL SUBOPT_0x26
000ba4 8608      	STD  Y+8,R0
000ba5 85eb      	LDD  R30,Y+11
000ba6 85a8      	LDD  R26,Y+8
000ba7 17ea      	CP   R30,R26
000ba8 f418      	BRSH _0x206000C
000ba9 e0e0      	LDI  R30,LOW(0)
000baa e0f0      	LDI  R31,HIGH(0)
000bab c04f      	RJMP _0x2120008
                 _0x206000C:
000bac 01f8      	MOVW R30,R16
                +
000bad 5f0f     +SUBI R16 , LOW ( - 1 )
000bae 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000baf 9154      	LPM  R21,Z
000bb0 85a8      	LDD  R26,Y+8
000bb1 27bb      	CLR  R27
000bb2 27ee      	CLR  R30
000bb3 0fa5      	ADD  R26,R21
000bb4 1fbe      	ADC  R27,R30
000bb5 85eb      	LDD  R30,Y+11
000bb6 e0f0      	LDI  R31,0
000bb7 17ea      	CP   R30,R26
000bb8 07fb      	CPC  R31,R27
000bb9 f018      	BRLO _0x206000D
000bba e0e0      	LDI  R30,LOW(0)
000bbb e0f0      	LDI  R31,HIGH(0)
000bbc c03e      	RJMP _0x2120008
                 _0x206000D:
000bbd 81ee      	LDD  R30,Y+6
000bbe 95e6      	LSR  R30
000bbf 95e6      	LSR  R30
000bc0 95e6      	LSR  R30
000bc1 2f4e      	MOV  R20,R30
000bc2 81ee      	LDD  R30,Y+6
000bc3 70e7      	ANDI R30,LOW(0x7)
000bc4 f009      	BREQ _0x206000E
000bc5 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
000bc6 81ef      	LDD  R30,Y+7
000bc7 30e0      	CPI  R30,0
000bc8 f0a1      	BREQ _0x206000F
000bc9 85a9      	LDD  R26,Y+9
000bca 85ba      	LDD  R27,Y+9+1
000bcb 93ec      	ST   X,R30
000bcc 85a8      	LDD  R26,Y+8
000bcd 85eb      	LDD  R30,Y+11
000bce 1bea      	SUB  R30,R26
000bcf e0f0      	LDI  R31,0
000bd0 01df      	MOVW R26,R30
000bd1 81ef      	LDD  R30,Y+7
000bd2 e0f0      	LDI  R31,0
000bd3 940e 113a 	CALL __MULW12U
000bd5 01df      	MOVW R26,R30
000bd6 2fe4      	MOV  R30,R20
000bd7 e0f0      	LDI  R31,0
000bd8 940e 113a 	CALL __MULW12U
000bda 0fe0      	ADD  R30,R16
000bdb 1ff1      	ADC  R31,R17
000bdc c01e      	RJMP _0x2120008
                 _0x206000F:
000bdd 0198      	MOVW R18,R16
000bde 2fe5      	MOV  R30,R21
000bdf e0f0      	LDI  R31,0
                +
000be0 0f0e     +ADD R16 , R30
000be1 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
000be2 85a8      	LDD  R26,Y+8
000be3 5faf      	SUBI R26,-LOW(1)
000be4 87a8      	STD  Y+8,R26
000be5 50a1      	SUBI R26,LOW(1)
000be6 85eb      	LDD  R30,Y+11
000be7 17ae      	CP   R26,R30
000be8 f460      	BRSH _0x2060012
000be9 01f9      	MOVW R30,R18
                +
000bea 5f2f     +SUBI R18 , LOW ( - 1 )
000beb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000bec 91a4      	LPM  R26,Z
000bed e0b0      	LDI  R27,0
000bee 2fe4      	MOV  R30,R20
000bef e0f0      	LDI  R31,0
000bf0 940e 113a 	CALL __MULW12U
                +
000bf2 0f0e     +ADD R16 , R30
000bf3 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000bf4 cfed      	RJMP _0x2060010
                 _0x2060012:
000bf5 01f9      	MOVW R30,R18
000bf6 91e4      	LPM  R30,Z
000bf7 85a9      	LDD  R26,Y+9
000bf8 85ba      	LDD  R27,Y+9+1
000bf9 93ec      	ST   X,R30
000bfa 01f8      	MOVW R30,R16
                 _0x2120008:
000bfb 940e 1181 	CALL __LOADLOCR6
000bfd 962c      	ADIW R28,12
000bfe 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
000bff e0e0      	LDI  R30,LOW(0)
                +
000c00 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000c02 91a0 066f+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c04 27bb      	CLR  R27
000c05 940e 10bc 	CALL SUBOPT_0x27
000c07 e0f0      	LDI  R31,0
000c08 0fae      	ADD  R26,R30
000c09 1fbf      	ADC  R27,R31
                +
000c0a 91e0 0673+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c0c e0f0      	LDI  R31,0
000c0d 0fae      	ADD  R26,R30
000c0e 1fbf      	ADC  R27,R31
000c0f df6b      	RCALL _glcd_clipy
                +
000c10 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000c12 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000c13 93aa      	ST   -Y,R26
000c14 9721      	SBIW R28,1
000c15 940e 10b0 	CALL SUBOPT_0x25
000c17 9730      	SBIW R30,0
000c18 f409      	BRNE PC+2
000c19 c055      	RJMP _0x206001F
000c1a 81af      	LDD  R26,Y+7
000c1b 30aa      	CPI  R26,LOW(0xA)
000c1c f409      	BRNE _0x2060020
000c1d c04f      	RJMP _0x2060021
                 _0x2060020:
000c1e 81ef      	LDD  R30,Y+7
000c1f 93ea      	ST   -Y,R30
000c20 01de      	MOVW R26,R28
000c21 9617      	ADIW R26,7
000c22 df6d      	RCALL _glcd_getcharw_G103
000c23 01af      	MOVW R20,R30
000c24 9730      	SBIW R30,0
000c25 f409      	BRNE _0x2060022
000c26 c04a      	RJMP _0x2120007
                 _0x2060022:
                +
000c27 91e0 0672+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c29 81ae      	LDD  R26,Y+6
000c2a 0fea      	ADD  R30,R26
000c2b 2f3e      	MOV  R19,R30
                +
000c2c 91a0 066e+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000c2e 27bb      	CLR  R27
000c2f e0f0      	LDI  R31,0
000c30 0fea      	ADD  R30,R26
000c31 1ffb      	ADC  R31,R27
000c32 018f      	MOVW R16,R30
                +
000c33 3505     +CPI R16 , LOW ( 85 )
000c34 e0e0     +LDI R30 , HIGH ( 85 )
000c35 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000c36 f018      	BRLO _0x2060023
000c37 2f03      	MOV  R16,R19
000c38 2711      	CLR  R17
000c39 dfc5      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
000c3a 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c3c 93ea      	ST   -Y,R30
                +
000c3d 91e0 066f+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c3f 93ea      	ST   -Y,R30
000c40 85e8      	LDD  R30,Y+8
000c41 93ea      	ST   -Y,R30
000c42 940e 10bc 	CALL SUBOPT_0x27
000c44 93ea      	ST   -Y,R30
000c45 e0e1      	LDI  R30,LOW(1)
000c46 93ea      	ST   -Y,R30
000c47 935a      	ST   -Y,R21
000c48 934a      	ST   -Y,R20
000c49 e0a7      	LDI  R26,LOW(7)
000c4a dd2f      	RCALL _glcd_block
                +
000c4b 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c4d 81ae      	LDD  R26,Y+6
000c4e 0fea      	ADD  R30,R26
000c4f 93ea      	ST   -Y,R30
                +
000c50 91e0 066f+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c52 93ea      	ST   -Y,R30
                +
000c53 91e0 0672+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c55 93ea      	ST   -Y,R30
000c56 940e 10bc 	CALL SUBOPT_0x27
000c58 940e 10c3 	CALL SUBOPT_0x28
                +
000c5a 91e0 066e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c5c 93ea      	ST   -Y,R30
                +
000c5d 91a0 066f+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c5f 940e 10bc 	CALL SUBOPT_0x27
000c61 0fea      	ADD  R30,R26
000c62 93ea      	ST   -Y,R30
000c63 933a      	ST   -Y,R19
                +
000c64 91e0 0673+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c66 940e 10c3 	CALL SUBOPT_0x28
000c68 e5e4      	LDI  R30,LOW(84)
000c69 e0f0      	LDI  R31,HIGH(84)
000c6a 17e0      	CP   R30,R16
000c6b 07f1      	CPC  R31,R17
000c6c f411      	BRNE _0x2060024
                 _0x2060021:
000c6d df91      	RCALL _glcd_new_line_G103
000c6e c002      	RJMP _0x2120007
                 _0x2060024:
                 _0x206001F:
                +
000c6f 9300 066e+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120007:
000c71 940e 1181 	CALL __LOADLOCR6
000c73 9628      	ADIW R28,8
000c74 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
000c75 93ba      	ST   -Y,R27
000c76 93aa      	ST   -Y,R26
000c77 931a      	ST   -Y,R17
                 _0x206002E:
000c78 81a9      	LDD  R26,Y+1
000c79 81ba      	LDD  R27,Y+1+1
000c7a 91ed      	LD   R30,X+
000c7b 83a9      	STD  Y+1,R26
000c7c 83ba      	STD  Y+1+1,R27
000c7d 2f1e      	MOV  R17,R30
000c7e 30e0      	CPI  R30,0
000c7f f019      	BREQ _0x2060030
000c80 2fa1      	MOV  R26,R17
000c81 df91      	RCALL _glcd_putchar
000c82 cff5      	RJMP _0x206002E
                 _0x2060030:
000c83 8118      	LDD  R17,Y+0
000c84 c30e      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
000c85 93aa      	ST   -Y,R26
000c86 81ea      	LDD  R30,Y+2
000c87 93ea      	ST   -Y,R30
000c88 81ea      	LDD  R30,Y+2
000c89 93ea      	ST   -Y,R30
                +
000c8a 91e0 0675+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000c8c 81aa      	LDD  R26,Y+2
000c8d 23ea      	AND  R30,R26
000c8e f019      	BREQ _0x206003E
000c8f 91e0 066c 	LDS  R30,_glcd_state
000c91 c002      	RJMP _0x206003F
                 _0x206003E:
                +
000c92 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
000c94 2fae      	MOV  R26,R30
000c95 dc89      	RCALL _glcd_putpixel
000c96 81e8      	LD   R30,Y
000c97 0fee      	LSL  R30
000c98 83e8      	ST   Y,R30
000c99 30e0      	CPI  R30,0
000c9a f411      	BRNE _0x2060041
000c9b e0e1      	LDI  R30,LOW(1)
000c9c 83e8      	ST   Y,R30
                 _0x2060041:
000c9d 81e8      	LD   R30,Y
000c9e c2f4      	RJMP _0x2120001
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000c9f 93aa      	ST   -Y,R26
000ca0 81a9      	LDD  R26,Y+1
000ca1 27bb      	CLR  R27
000ca2 dec1      	RCALL _glcd_clipx
                +
000ca3 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000ca5 81a8      	LD   R26,Y
000ca6 27bb      	CLR  R27
000ca7 ded3      	RCALL _glcd_clipy
                +
000ca8 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000caa c2a1      	RJMP _0x2120002
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000cab 93aa      	ST   -Y,R26
000cac 972b      	SBIW R28,11
000cad 940e 117a 	CALL __SAVELOCR6
000caf 89ac      	LDD  R26,Y+20
000cb0 27bb      	CLR  R27
000cb1 deb2      	RCALL _glcd_clipx
000cb2 8bec      	STD  Y+20,R30
000cb3 89aa      	LDD  R26,Y+18
000cb4 27bb      	CLR  R27
000cb5 deae      	RCALL _glcd_clipx
000cb6 8bea      	STD  Y+18,R30
000cb7 89ab      	LDD  R26,Y+19
000cb8 27bb      	CLR  R27
000cb9 dec1      	RCALL _glcd_clipy
000cba 8beb      	STD  Y+19,R30
000cbb 89a9      	LDD  R26,Y+17
000cbc 27bb      	CLR  R27
000cbd debd      	RCALL _glcd_clipy
000cbe 8be9      	STD  Y+17,R30
000cbf 89ea      	LDD  R30,Y+18
                +
000cc0 93e0 066e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000cc2 89e9      	LDD  R30,Y+17
                +
000cc3 93e0 066f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000cc5 e0e1      	LDI  R30,LOW(1)
000cc6 87e8      	STD  Y+8,R30
000cc7 89e9      	LDD  R30,Y+17
000cc8 89ab      	LDD  R26,Y+19
000cc9 17ea      	CP   R30,R26
000cca f571      	BRNE _0x2060042
000ccb 891c      	LDD  R17,Y+20
000ccc 89aa      	LDD  R26,Y+18
000ccd 171a      	CP   R17,R26
000cce f431      	BRNE _0x2060043
000ccf 931a      	ST   -Y,R17
000cd0 89ec      	LDD  R30,Y+20
000cd1 93ea      	ST   -Y,R30
000cd2 e0a1      	LDI  R26,LOW(1)
000cd3 dfb1      	RCALL _glcd_putpixelm_G103
000cd4 c0c8      	RJMP _0x2120006
                 _0x2060043:
000cd5 89aa      	LDD  R26,Y+18
000cd6 171a      	CP   R17,R26
000cd7 f430      	BRSH _0x2060044
000cd8 89ea      	LDD  R30,Y+18
000cd9 1be1      	SUB  R30,R17
000cda 2f0e      	MOV  R16,R30
                +
000cdb e041     +LDI R20 , LOW ( 1 )
000cdc e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000cdd c006      	RJMP _0x2060045
                 _0x2060044:
000cde 89aa      	LDD  R26,Y+18
000cdf 2fe1      	MOV  R30,R17
000ce0 1bea      	SUB  R30,R26
000ce1 2f0e      	MOV  R16,R30
                +
000ce2 ef4f     +LDI R20 , LOW ( - 1 )
000ce3 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
000ce4 893b      	LDD  R19,Y+19
000ce5 e0e0      	LDI  R30,LOW(0)
000ce6 83ee      	STD  Y+6,R30
                 _0x2060049:
000ce7 940e 10cd 	CALL SUBOPT_0x29
000ce9 f438      	BRSH _0x206004B
000cea 931a      	ST   -Y,R17
000ceb 933a      	ST   -Y,R19
000cec 9533      	INC  R19
000ced 85aa      	LDD  R26,Y+10
000cee df96      	RCALL _glcd_putpixelm_G103
000cef 83ef      	STD  Y+7,R30
000cf0 cff6      	RJMP _0x2060049
                 _0x206004B:
000cf1 81ef      	LDD  R30,Y+7
000cf2 87e8      	STD  Y+8,R30
000cf3 0f14      	ADD  R17,R20
000cf4 2fe0      	MOV  R30,R16
000cf5 5001      	SUBI R16,1
000cf6 30e0      	CPI  R30,0
000cf7 f761      	BRNE _0x2060047
000cf8 c0a4      	RJMP _0x206004C
                 _0x2060042:
000cf9 89ea      	LDD  R30,Y+18
000cfa 89ac      	LDD  R26,Y+20
000cfb 17ea      	CP   R30,R26
000cfc f539      	BRNE _0x206004D
000cfd 893b      	LDD  R19,Y+19
000cfe 89a9      	LDD  R26,Y+17
000cff 173a      	CP   R19,R26
000d00 f430      	BRSH _0x206004E
000d01 89e9      	LDD  R30,Y+17
000d02 1be3      	SUB  R30,R19
000d03 2f2e      	MOV  R18,R30
000d04 e0e1      	LDI  R30,LOW(1)
000d05 e0f0      	LDI  R31,HIGH(1)
000d06 c006      	RJMP _0x206011B
                 _0x206004E:
000d07 89a9      	LDD  R26,Y+17
000d08 2fe3      	MOV  R30,R19
000d09 1bea      	SUB  R30,R26
000d0a 2f2e      	MOV  R18,R30
000d0b efef      	LDI  R30,LOW(65535)
000d0c efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
000d0d 87ed      	STD  Y+13,R30
000d0e 87fe      	STD  Y+13+1,R31
                 _0x2060051:
000d0f 891c      	LDD  R17,Y+20
000d10 e0e0      	LDI  R30,LOW(0)
000d11 83ee      	STD  Y+6,R30
                 _0x2060053:
000d12 940e 10cd 	CALL SUBOPT_0x29
000d14 f430      	BRSH _0x2060055
000d15 931a      	ST   -Y,R17
000d16 9513      	INC  R17
000d17 940e 10d5 	CALL SUBOPT_0x2A
000d19 83ef      	STD  Y+7,R30
000d1a cff7      	RJMP _0x2060053
                 _0x2060055:
000d1b 81ef      	LDD  R30,Y+7
000d1c 87e8      	STD  Y+8,R30
000d1d 85ed      	LDD  R30,Y+13
000d1e 0f3e      	ADD  R19,R30
000d1f 2fe2      	MOV  R30,R18
000d20 5021      	SUBI R18,1
000d21 30e0      	CPI  R30,0
000d22 f761      	BRNE _0x2060051
000d23 c079      	RJMP _0x2060056
                 _0x206004D:
000d24 e0e0      	LDI  R30,LOW(0)
000d25 83ee      	STD  Y+6,R30
                 _0x2060057:
000d26 940e 10cd 	CALL SUBOPT_0x29
000d28 f008      	BRLO PC+2
000d29 c073      	RJMP _0x2060059
000d2a 891c      	LDD  R17,Y+20
000d2b 893b      	LDD  R19,Y+19
000d2c e0e1      	LDI  R30,LOW(1)
000d2d 2f2e      	MOV  R18,R30
000d2e 2f0e      	MOV  R16,R30
000d2f 89aa      	LDD  R26,Y+18
000d30 27bb      	CLR  R27
000d31 89ec      	LDD  R30,Y+20
000d32 e0f0      	LDI  R31,0
000d33 1bae      	SUB  R26,R30
000d34 0bbf      	SBC  R27,R31
000d35 01ad      	MOVW R20,R26
000d36 2355      	TST  R21
000d37 f42a      	BRPL _0x206005A
000d38 ef0f      	LDI  R16,LOW(255)
000d39 01fa      	MOVW R30,R20
000d3a 940e 1121 	CALL __ANEGW1
000d3c 01af      	MOVW R20,R30
                 _0x206005A:
000d3d 01fa      	MOVW R30,R20
000d3e 0fee      	LSL  R30
000d3f 1fff      	ROL  R31
000d40 87ef      	STD  Y+15,R30
000d41 8bf8      	STD  Y+15+1,R31
000d42 89a9      	LDD  R26,Y+17
000d43 27bb      	CLR  R27
000d44 89eb      	LDD  R30,Y+19
000d45 e0f0      	LDI  R31,0
000d46 1bae      	SUB  R26,R30
000d47 0bbf      	SBC  R27,R31
000d48 87ad      	STD  Y+13,R26
000d49 87be      	STD  Y+13+1,R27
000d4a 85ae      	LDD  R26,Y+14
000d4b 23aa      	TST  R26
000d4c f43a      	BRPL _0x206005B
000d4d ef2f      	LDI  R18,LOW(255)
000d4e 85ed      	LDD  R30,Y+13
000d4f 85fe      	LDD  R31,Y+13+1
000d50 940e 1121 	CALL __ANEGW1
000d52 87ed      	STD  Y+13,R30
000d53 87fe      	STD  Y+13+1,R31
                 _0x206005B:
000d54 85ed      	LDD  R30,Y+13
000d55 85fe      	LDD  R31,Y+13+1
000d56 0fee      	LSL  R30
000d57 1fff      	ROL  R31
000d58 87eb      	STD  Y+11,R30
000d59 87fc      	STD  Y+11+1,R31
000d5a 931a      	ST   -Y,R17
000d5b 933a      	ST   -Y,R19
000d5c e0a1      	LDI  R26,LOW(1)
000d5d df27      	RCALL _glcd_putpixelm_G103
000d5e 87e8      	STD  Y+8,R30
000d5f e0e0      	LDI  R30,LOW(0)
000d60 87e9      	STD  Y+9,R30
000d61 87ea      	STD  Y+9+1,R30
000d62 85ad      	LDD  R26,Y+13
000d63 85be      	LDD  R27,Y+13+1
000d64 174a      	CP   R20,R26
000d65 075b      	CPC  R21,R27
000d66 f0bc      	BRLT _0x206005C
                 _0x206005E:
000d67 0f10      	ADD  R17,R16
000d68 85eb      	LDD  R30,Y+11
000d69 85fc      	LDD  R31,Y+11+1
000d6a 940e 10d9 	CALL SUBOPT_0x2B
000d6c 85a9      	LDD  R26,Y+9
000d6d 85ba      	LDD  R27,Y+9+1
000d6e 174a      	CP   R20,R26
000d6f 075b      	CPC  R21,R27
000d70 f42c      	BRGE _0x2060060
000d71 0f32      	ADD  R19,R18
000d72 85af      	LDD  R26,Y+15
000d73 89b8      	LDD  R27,Y+15+1
000d74 940e 10e0 	CALL SUBOPT_0x2C
                 _0x2060060:
000d76 931a      	ST   -Y,R17
000d77 940e 10d5 	CALL SUBOPT_0x2A
000d79 87e8      	STD  Y+8,R30
000d7a 89ea      	LDD  R30,Y+18
000d7b 17e1      	CP   R30,R17
000d7c f751      	BRNE _0x206005E
000d7d c018      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
000d7e 0f32      	ADD  R19,R18
000d7f 85ef      	LDD  R30,Y+15
000d80 89f8      	LDD  R31,Y+15+1
000d81 940e 10d9 	CALL SUBOPT_0x2B
000d83 85ed      	LDD  R30,Y+13
000d84 85fe      	LDD  R31,Y+13+1
000d85 85a9      	LDD  R26,Y+9
000d86 85ba      	LDD  R27,Y+9+1
000d87 17ea      	CP   R30,R26
000d88 07fb      	CPC  R31,R27
000d89 f42c      	BRGE _0x2060065
000d8a 0f10      	ADD  R17,R16
000d8b 85ab      	LDD  R26,Y+11
000d8c 85bc      	LDD  R27,Y+11+1
000d8d 940e 10e0 	CALL SUBOPT_0x2C
                 _0x2060065:
000d8f 931a      	ST   -Y,R17
000d90 940e 10d5 	CALL SUBOPT_0x2A
000d92 87e8      	STD  Y+8,R30
000d93 89e9      	LDD  R30,Y+17
000d94 17e3      	CP   R30,R19
000d95 f741      	BRNE _0x2060063
                 _0x2060061:
000d96 89eb      	LDD  R30,Y+19
000d97 5fef      	SUBI R30,-LOW(1)
000d98 8beb      	STD  Y+19,R30
000d99 89e9      	LDD  R30,Y+17
000d9a 5fef      	SUBI R30,-LOW(1)
000d9b 8be9      	STD  Y+17,R30
000d9c cf89      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120006:
000d9d 940e 1181 	CALL __LOADLOCR6
000d9f 9665      	ADIW R28,21
000da0 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G105:
                 ; .FSTART _put_buff_G105
000da1 93ba      	ST   -Y,R27
000da2 93aa      	ST   -Y,R26
000da3 931a      	ST   -Y,R17
000da4 930a      	ST   -Y,R16
000da5 81aa      	LDD  R26,Y+2
000da6 81bb      	LDD  R27,Y+2+1
000da7 9612      	ADIW R26,2
000da8 940e 1142 	CALL __GETW1P
000daa 9730      	SBIW R30,0
000dab f129      	BREQ _0x20A0010
000dac 81aa      	LDD  R26,Y+2
000dad 81bb      	LDD  R27,Y+2+1
000dae 9614      	ADIW R26,4
000daf 940e 1142 	CALL __GETW1P
000db1 018f      	MOVW R16,R30
000db2 9730      	SBIW R30,0
000db3 f061      	BREQ _0x20A0012
                +
000db4 3002     +CPI R16 , LOW ( 2 )
000db5 e0e0     +LDI R30 , HIGH ( 2 )
000db6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000db7 f080      	BRLO _0x20A0013
000db8 01f8      	MOVW R30,R16
000db9 9731      	SBIW R30,1
000dba 018f      	MOVW R16,R30
                +
000dbb 81aa     +LDD R26 , Y + 2
000dbc 81bb     +LDD R27 , Y + 2 + 1
000dbd 9614     +ADIW R26 , 4
000dbe 93ed     +ST X + , R30
000dbf 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x20A0012:
000dc0 81aa      	LDD  R26,Y+2
000dc1 81bb      	LDD  R27,Y+2+1
000dc2 9612      	ADIW R26,2
000dc3 940e 0fbb 	CALL SUBOPT_0x1
000dc5 9731      	SBIW R30,1
000dc6 81ac      	LDD  R26,Y+4
000dc7 83a0      	STD  Z+0,R26
                 _0x20A0013:
000dc8 81aa      	LDD  R26,Y+2
000dc9 81bb      	LDD  R27,Y+2+1
000dca 940e 1142 	CALL __GETW1P
000dcc 23ff      	TST  R31
000dcd f012      	BRMI _0x20A0014
000dce 940e 0fbb 	CALL SUBOPT_0x1
                 _0x20A0014:
000dd0 c006      	RJMP _0x20A0015
                 _0x20A0010:
000dd1 81aa      	LDD  R26,Y+2
000dd2 81bb      	LDD  R27,Y+2+1
000dd3 efef      	LDI  R30,LOW(65535)
000dd4 efff      	LDI  R31,HIGH(65535)
000dd5 93ed      	ST   X+,R30
000dd6 93fc      	ST   X,R31
                 _0x20A0015:
                 _0x2120004:
000dd7 8119      	LDD  R17,Y+1
000dd8 8108      	LDD  R16,Y+0
                 _0x2120005:
000dd9 9625      	ADIW R28,5
000dda 9508      	RET
                 ; .FEND
                 __print_G105:
                 ; .FSTART __print_G105
000ddb 93ba      	ST   -Y,R27
000ddc 93aa      	ST   -Y,R26
000ddd 9726      	SBIW R28,6
000dde 940e 117a 	CALL __SAVELOCR6
000de0 e010      	LDI  R17,0
000de1 85ac      	LDD  R26,Y+12
000de2 85bd      	LDD  R27,Y+12+1
000de3 e0e0      	LDI  R30,LOW(0)
000de4 e0f0      	LDI  R31,HIGH(0)
000de5 93ed      	ST   X+,R30
000de6 93fc      	ST   X,R31
                 _0x20A0016:
000de7 89ea      	LDD  R30,Y+18
000de8 89fb      	LDD  R31,Y+18+1
000de9 9631      	ADIW R30,1
000dea 8bea      	STD  Y+18,R30
000deb 8bfb      	STD  Y+18+1,R31
000dec 9731      	SBIW R30,1
000ded 91e4      	LPM  R30,Z
000dee 2f2e      	MOV  R18,R30
000def 30e0      	CPI  R30,0
000df0 f409      	BRNE PC+2
000df1 c115      	RJMP _0x20A0018
000df2 2fe1      	MOV  R30,R17
000df3 30e0      	CPI  R30,0
000df4 f439      	BRNE _0x20A001C
000df5 3225      	CPI  R18,37
000df6 f411      	BRNE _0x20A001D
000df7 e011      	LDI  R17,LOW(1)
000df8 c002      	RJMP _0x20A001E
                 _0x20A001D:
000df9 940e 10e7 	CALL SUBOPT_0x2D
                 _0x20A001E:
000dfb c10a      	RJMP _0x20A001B
                 _0x20A001C:
000dfc 30e1      	CPI  R30,LOW(0x1)
000dfd f4a9      	BRNE _0x20A001F
000dfe 3225      	CPI  R18,37
000dff f419      	BRNE _0x20A0020
000e00 940e 10e7 	CALL SUBOPT_0x2D
000e02 c102      	RJMP _0x20A00CC
                 _0x20A0020:
000e03 e012      	LDI  R17,LOW(2)
000e04 e040      	LDI  R20,LOW(0)
000e05 e000      	LDI  R16,LOW(0)
000e06 322d      	CPI  R18,45
000e07 f411      	BRNE _0x20A0021
000e08 e001      	LDI  R16,LOW(1)
000e09 c0fc      	RJMP _0x20A001B
                 _0x20A0021:
000e0a 322b      	CPI  R18,43
000e0b f411      	BRNE _0x20A0022
000e0c e24b      	LDI  R20,LOW(43)
000e0d c0f8      	RJMP _0x20A001B
                 _0x20A0022:
000e0e 3220      	CPI  R18,32
000e0f f411      	BRNE _0x20A0023
000e10 e240      	LDI  R20,LOW(32)
000e11 c0f4      	RJMP _0x20A001B
                 _0x20A0023:
000e12 c002      	RJMP _0x20A0024
                 _0x20A001F:
000e13 30e2      	CPI  R30,LOW(0x2)
000e14 f439      	BRNE _0x20A0025
                 _0x20A0024:
000e15 e050      	LDI  R21,LOW(0)
000e16 e013      	LDI  R17,LOW(3)
000e17 3320      	CPI  R18,48
000e18 f411      	BRNE _0x20A0026
000e19 6800      	ORI  R16,LOW(128)
000e1a c0eb      	RJMP _0x20A001B
                 _0x20A0026:
000e1b c003      	RJMP _0x20A0027
                 _0x20A0025:
000e1c 30e3      	CPI  R30,LOW(0x3)
000e1d f009      	BREQ PC+2
000e1e c0e7      	RJMP _0x20A001B
                 _0x20A0027:
000e1f 3320      	CPI  R18,48
000e20 f010      	BRLO _0x20A002A
000e21 332a      	CPI  R18,58
000e22 f008      	BRLO _0x20A002B
                 _0x20A002A:
000e23 c007      	RJMP _0x20A0029
                 _0x20A002B:
000e24 e0aa      	LDI  R26,LOW(10)
000e25 9f5a      	MUL  R21,R26
000e26 2d50      	MOV  R21,R0
000e27 2fe2      	MOV  R30,R18
000e28 53e0      	SUBI R30,LOW(48)
000e29 0f5e      	ADD  R21,R30
000e2a c0db      	RJMP _0x20A001B
                 _0x20A0029:
000e2b 2fe2      	MOV  R30,R18
000e2c 36e3      	CPI  R30,LOW(0x63)
000e2d f449      	BRNE _0x20A002F
000e2e 940e 10ee 	CALL SUBOPT_0x2E
000e30 89e8      	LDD  R30,Y+16
000e31 89f9      	LDD  R31,Y+16+1
000e32 81a4      	LDD  R26,Z+4
000e33 93aa      	ST   -Y,R26
000e34 940e 10f4 	CALL SUBOPT_0x2F
000e36 c0ce      	RJMP _0x20A0030
                 _0x20A002F:
000e37 37e3      	CPI  R30,LOW(0x73)
000e38 f441      	BRNE _0x20A0032
000e39 940e 10ee 	CALL SUBOPT_0x2E
000e3b 940e 10fa 	CALL SUBOPT_0x30
000e3d 940e 07bc 	CALL _strlen
000e3f 2f1e      	MOV  R17,R30
000e40 c00a      	RJMP _0x20A0033
                 _0x20A0032:
000e41 37e0      	CPI  R30,LOW(0x70)
000e42 f461      	BRNE _0x20A0035
000e43 940e 10ee 	CALL SUBOPT_0x2E
000e45 940e 10fa 	CALL SUBOPT_0x30
000e47 940e 07c8 	CALL _strlenf
000e49 2f1e      	MOV  R17,R30
000e4a 6008      	ORI  R16,LOW(8)
                 _0x20A0033:
000e4b 6002      	ORI  R16,LOW(2)
000e4c 770f      	ANDI R16,LOW(127)
000e4d e030      	LDI  R19,LOW(0)
000e4e c034      	RJMP _0x20A0036
                 _0x20A0035:
000e4f 36e4      	CPI  R30,LOW(0x64)
000e50 f011      	BREQ _0x20A0039
000e51 36e9      	CPI  R30,LOW(0x69)
000e52 f411      	BRNE _0x20A003A
                 _0x20A0039:
000e53 6004      	ORI  R16,LOW(4)
000e54 c002      	RJMP _0x20A003B
                 _0x20A003A:
000e55 37e5      	CPI  R30,LOW(0x75)
000e56 f431      	BRNE _0x20A003C
                 _0x20A003B:
000e57 e7ea      	LDI  R30,LOW(_tbl10_G105*2)
000e58 e0f2      	LDI  R31,HIGH(_tbl10_G105*2)
000e59 83ee      	STD  Y+6,R30
000e5a 83ff      	STD  Y+6+1,R31
000e5b e015      	LDI  R17,LOW(5)
000e5c c00c      	RJMP _0x20A003D
                 _0x20A003C:
000e5d 35e8      	CPI  R30,LOW(0x58)
000e5e f411      	BRNE _0x20A003F
000e5f 6008      	ORI  R16,LOW(8)
000e60 c003      	RJMP _0x20A0040
                 _0x20A003F:
000e61 37e8      	CPI  R30,LOW(0x78)
000e62 f009      	BREQ PC+2
000e63 c0a1      	RJMP _0x20A0071
                 _0x20A0040:
000e64 e8e4      	LDI  R30,LOW(_tbl16_G105*2)
000e65 e0f2      	LDI  R31,HIGH(_tbl16_G105*2)
000e66 83ee      	STD  Y+6,R30
000e67 83ff      	STD  Y+6+1,R31
000e68 e014      	LDI  R17,LOW(4)
                 _0x20A003D:
000e69 ff02      	SBRS R16,2
000e6a c014      	RJMP _0x20A0042
000e6b 940e 10ee 	CALL SUBOPT_0x2E
000e6d 940e 1104 	CALL SUBOPT_0x31
000e6f 85ab      	LDD  R26,Y+11
000e70 23aa      	TST  R26
000e71 f43a      	BRPL _0x20A0043
000e72 85ea      	LDD  R30,Y+10
000e73 85fb      	LDD  R31,Y+10+1
000e74 940e 1121 	CALL __ANEGW1
000e76 87ea      	STD  Y+10,R30
000e77 87fb      	STD  Y+10+1,R31
000e78 e24d      	LDI  R20,LOW(45)
                 _0x20A0043:
000e79 3040      	CPI  R20,0
000e7a f011      	BREQ _0x20A0044
000e7b 5f1f      	SUBI R17,-LOW(1)
000e7c c001      	RJMP _0x20A0045
                 _0x20A0044:
000e7d 7f0b      	ANDI R16,LOW(251)
                 _0x20A0045:
000e7e c004      	RJMP _0x20A0046
                 _0x20A0042:
000e7f 940e 10ee 	CALL SUBOPT_0x2E
000e81 940e 1104 	CALL SUBOPT_0x31
                 _0x20A0046:
                 _0x20A0036:
000e83 fd00      	SBRC R16,0
000e84 c011      	RJMP _0x20A0047
                 _0x20A0048:
000e85 1715      	CP   R17,R21
000e86 f478      	BRSH _0x20A004A
000e87 ff07      	SBRS R16,7
000e88 c008      	RJMP _0x20A004B
000e89 ff02      	SBRS R16,2
000e8a c004      	RJMP _0x20A004C
000e8b 7f0b      	ANDI R16,LOW(251)
000e8c 2f24      	MOV  R18,R20
000e8d 5011      	SUBI R17,LOW(1)
000e8e c001      	RJMP _0x20A004D
                 _0x20A004C:
000e8f e320      	LDI  R18,LOW(48)
                 _0x20A004D:
000e90 c001      	RJMP _0x20A004E
                 _0x20A004B:
000e91 e220      	LDI  R18,LOW(32)
                 _0x20A004E:
000e92 940e 10e7 	CALL SUBOPT_0x2D
000e94 5051      	SUBI R21,LOW(1)
000e95 cfef      	RJMP _0x20A0048
                 _0x20A004A:
                 _0x20A0047:
000e96 2f31      	MOV  R19,R17
000e97 ff01      	SBRS R16,1
000e98 c017      	RJMP _0x20A004F
                 _0x20A0050:
000e99 3030      	CPI  R19,0
000e9a f0a1      	BREQ _0x20A0052
000e9b ff03      	SBRS R16,3
000e9c c006      	RJMP _0x20A0053
000e9d 81ee      	LDD  R30,Y+6
000e9e 81ff      	LDD  R31,Y+6+1
000e9f 9125      	LPM  R18,Z+
000ea0 83ee      	STD  Y+6,R30
000ea1 83ff      	STD  Y+6+1,R31
000ea2 c005      	RJMP _0x20A0054
                 _0x20A0053:
000ea3 81ae      	LDD  R26,Y+6
000ea4 81bf      	LDD  R27,Y+6+1
000ea5 912d      	LD   R18,X+
000ea6 83ae      	STD  Y+6,R26
000ea7 83bf      	STD  Y+6+1,R27
                 _0x20A0054:
000ea8 940e 10e7 	CALL SUBOPT_0x2D
000eaa 3050      	CPI  R21,0
000eab f009      	BREQ _0x20A0055
000eac 5051      	SUBI R21,LOW(1)
                 _0x20A0055:
000ead 5031      	SUBI R19,LOW(1)
000eae cfea      	RJMP _0x20A0050
                 _0x20A0052:
000eaf c04b      	RJMP _0x20A0056
                 _0x20A004F:
                 _0x20A0058:
000eb0 e320      	LDI  R18,LOW(48)
000eb1 81ee      	LDD  R30,Y+6
000eb2 81ff      	LDD  R31,Y+6+1
000eb3 940e 1150 	CALL __GETW1PF
000eb5 87e8      	STD  Y+8,R30
000eb6 87f9      	STD  Y+8+1,R31
000eb7 81ee      	LDD  R30,Y+6
000eb8 81ff      	LDD  R31,Y+6+1
000eb9 9632      	ADIW R30,2
000eba 83ee      	STD  Y+6,R30
000ebb 83ff      	STD  Y+6+1,R31
                 _0x20A005A:
000ebc 85e8      	LDD  R30,Y+8
000ebd 85f9      	LDD  R31,Y+8+1
000ebe 85aa      	LDD  R26,Y+10
000ebf 85bb      	LDD  R27,Y+10+1
000ec0 17ae      	CP   R26,R30
000ec1 07bf      	CPC  R27,R31
000ec2 f050      	BRLO _0x20A005C
000ec3 5f2f      	SUBI R18,-LOW(1)
000ec4 85a8      	LDD  R26,Y+8
000ec5 85b9      	LDD  R27,Y+8+1
000ec6 85ea      	LDD  R30,Y+10
000ec7 85fb      	LDD  R31,Y+10+1
000ec8 1bea      	SUB  R30,R26
000ec9 0bfb      	SBC  R31,R27
000eca 87ea      	STD  Y+10,R30
000ecb 87fb      	STD  Y+10+1,R31
000ecc cfef      	RJMP _0x20A005A
                 _0x20A005C:
000ecd 332a      	CPI  R18,58
000ece f028      	BRLO _0x20A005D
000ecf ff03      	SBRS R16,3
000ed0 c002      	RJMP _0x20A005E
000ed1 5f29      	SUBI R18,-LOW(7)
000ed2 c001      	RJMP _0x20A005F
                 _0x20A005E:
000ed3 5d29      	SUBI R18,-LOW(39)
                 _0x20A005F:
                 _0x20A005D:
000ed4 fd04      	SBRC R16,4
000ed5 c01a      	RJMP _0x20A0061
000ed6 3321      	CPI  R18,49
000ed7 f420      	BRSH _0x20A0063
000ed8 85a8      	LDD  R26,Y+8
000ed9 85b9      	LDD  R27,Y+8+1
000eda 9711      	SBIW R26,1
000edb f409      	BRNE _0x20A0062
                 _0x20A0063:
000edc c009      	RJMP _0x20A00CD
                 _0x20A0062:
000edd 1753      	CP   R21,R19
000ede f010      	BRLO _0x20A0067
000edf ff00      	SBRS R16,0
000ee0 c001      	RJMP _0x20A0068
                 _0x20A0067:
000ee1 c013      	RJMP _0x20A0066
                 _0x20A0068:
000ee2 e220      	LDI  R18,LOW(32)
000ee3 ff07      	SBRS R16,7
000ee4 c00b      	RJMP _0x20A0069
000ee5 e320      	LDI  R18,LOW(48)
                 _0x20A00CD:
000ee6 6100      	ORI  R16,LOW(16)
000ee7 ff02      	SBRS R16,2
000ee8 c007      	RJMP _0x20A006A
000ee9 7f0b      	ANDI R16,LOW(251)
000eea 934a      	ST   -Y,R20
000eeb 940e 10f4 	CALL SUBOPT_0x2F
000eed 3050      	CPI  R21,0
000eee f009      	BREQ _0x20A006B
000eef 5051      	SUBI R21,LOW(1)
                 _0x20A006B:
                 _0x20A006A:
                 _0x20A0069:
                 _0x20A0061:
000ef0 940e 10e7 	CALL SUBOPT_0x2D
000ef2 3050      	CPI  R21,0
000ef3 f009      	BREQ _0x20A006C
000ef4 5051      	SUBI R21,LOW(1)
                 _0x20A006C:
                 _0x20A0066:
000ef5 5031      	SUBI R19,LOW(1)
000ef6 85a8      	LDD  R26,Y+8
000ef7 85b9      	LDD  R27,Y+8+1
000ef8 9712      	SBIW R26,2
000ef9 f008      	BRLO _0x20A0059
000efa cfb5      	RJMP _0x20A0058
                 _0x20A0059:
                 _0x20A0056:
000efb ff00      	SBRS R16,0
000efc c008      	RJMP _0x20A006D
                 _0x20A006E:
000efd 3050      	CPI  R21,0
000efe f031      	BREQ _0x20A0070
000eff 5051      	SUBI R21,LOW(1)
000f00 e2e0      	LDI  R30,LOW(32)
000f01 93ea      	ST   -Y,R30
000f02 940e 10f4 	CALL SUBOPT_0x2F
000f04 cff8      	RJMP _0x20A006E
                 _0x20A0070:
                 _0x20A006D:
                 _0x20A0071:
                 _0x20A0030:
                 _0x20A00CC:
000f05 e010      	LDI  R17,LOW(0)
                 _0x20A001B:
000f06 cee0      	RJMP _0x20A0016
                 _0x20A0018:
000f07 85ac      	LDD  R26,Y+12
000f08 85bd      	LDD  R27,Y+12+1
000f09 940e 1142 	CALL __GETW1P
000f0b 940e 1181 	CALL __LOADLOCR6
000f0d 9664      	ADIW R28,20
000f0e 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000f0f 92ff      	PUSH R15
000f10 2ef8      	MOV  R15,R24
000f11 9726      	SBIW R28,6
000f12 940e 117c 	CALL __SAVELOCR4
000f14 940e 110c 	CALL SUBOPT_0x32
000f16 9730      	SBIW R30,0
000f17 f419      	BRNE _0x20A0072
000f18 efef      	LDI  R30,LOW(65535)
000f19 efff      	LDI  R31,HIGH(65535)
000f1a c023      	RJMP _0x2120003
                 _0x20A0072:
000f1b 01de      	MOVW R26,R28
000f1c 9616      	ADIW R26,6
000f1d 940e 111d 	CALL __ADDW2R15
000f1f 018d      	MOVW R16,R26
000f20 940e 110c 	CALL SUBOPT_0x32
000f22 83ee      	STD  Y+6,R30
000f23 83ff      	STD  Y+6+1,R31
000f24 e0e0      	LDI  R30,LOW(0)
000f25 87e8      	STD  Y+8,R30
000f26 87e9      	STD  Y+8+1,R30
000f27 01de      	MOVW R26,R28
000f28 961a      	ADIW R26,10
000f29 940e 111d 	CALL __ADDW2R15
000f2b 940e 1142 	CALL __GETW1P
000f2d 93fa      	ST   -Y,R31
000f2e 93ea      	ST   -Y,R30
000f2f 931a      	ST   -Y,R17
000f30 930a      	ST   -Y,R16
000f31 eae1      	LDI  R30,LOW(_put_buff_G105)
000f32 e0fd      	LDI  R31,HIGH(_put_buff_G105)
000f33 93fa      	ST   -Y,R31
000f34 93ea      	ST   -Y,R30
000f35 01de      	MOVW R26,R28
000f36 961a      	ADIW R26,10
000f37 dea3      	RCALL __print_G105
000f38 019f      	MOVW R18,R30
000f39 81ae      	LDD  R26,Y+6
000f3a 81bf      	LDD  R27,Y+6+1
000f3b e0e0      	LDI  R30,LOW(0)
000f3c 93ec      	ST   X,R30
000f3d 01f9      	MOVW R30,R18
                 _0x2120003:
000f3e 940e 1183 	CALL __LOADLOCR4
000f40 962a      	ADIW R28,10
000f41 90ff      	POP  R15
000f42 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000f43 93aa      	ST   -Y,R26
000f44 81e8      	LD   R30,Y
000f45 e0f0      	LDI  R31,0
000f46 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000f47 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000f48 91a4      	LPM  R26,Z
000f49 81e9      	LDD  R30,Y+1
000f4a 940e 1125 	CALL __LSLB12
                 _0x2120002:
000f4c 9622      	ADIW R28,2
000f4d 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000f4e 93aa      	ST   -Y,R26
000f4f 931a      	ST   -Y,R17
000f50 81e9      	LDD  R30,Y+1
000f51 30e7      	CPI  R30,LOW(0x7)
000f52 f011      	BREQ _0x2100007
000f53 30ea      	CPI  R30,LOW(0xA)
000f54 f419      	BRNE _0x2100008
                 _0x2100007:
000f55 9110 066c 	LDS  R17,_glcd_state
000f57 c009      	RJMP _0x2100009
                 _0x2100008:
000f58 30e9      	CPI  R30,LOW(0x9)
000f59 f419      	BRNE _0x210000B
                +
000f5a 9110 066d+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000f5c c004      	RJMP _0x2100009
                 _0x210000B:
000f5d 30e8      	CPI  R30,LOW(0x8)
000f5e f4a1      	BRNE _0x2100005
                +
000f5f 9110 067c+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000f61 91e0 066d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000f63 30e0      	CPI  R30,0
000f64 f049      	BREQ _0x210000E
000f65 3010      	CPI  R17,0
000f66 f019      	BREQ _0x210000F
000f67 efef      	LDI  R30,LOW(255)
000f68 8118      	LDD  R17,Y+0
000f69 c029      	RJMP _0x2120001
                 _0x210000F:
000f6a 81ea      	LDD  R30,Y+2
000f6b 95e0      	COM  R30
000f6c 8118      	LDD  R17,Y+0
000f6d c025      	RJMP _0x2120001
                 _0x210000E:
000f6e 3010      	CPI  R17,0
000f6f f419      	BRNE _0x2100011
000f70 e0e0      	LDI  R30,LOW(0)
000f71 8118      	LDD  R17,Y+0
000f72 c020      	RJMP _0x2120001
                 _0x2100011:
                 _0x2100005:
000f73 81ea      	LDD  R30,Y+2
000f74 8118      	LDD  R17,Y+0
000f75 c01d      	RJMP _0x2120001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000f76 93ba      	ST   -Y,R27
000f77 93aa      	ST   -Y,R26
000f78 81ea      	LDD  R30,Y+2
000f79 30e1      	CPI  R30,LOW(0x1)
000f7a f421      	BRNE _0x2100015
000f7b 81e8      	LD   R30,Y
000f7c 81f9      	LDD  R31,Y+1
000f7d 91e4      	LPM  R30,Z
000f7e c014      	RJMP _0x2120001
                 _0x2100015:
000f7f 30e2      	CPI  R30,LOW(0x2)
000f80 f429      	BRNE _0x2100016
000f81 81a8      	LD   R26,Y
000f82 81b9      	LDD  R27,Y+1
000f83 940e 1159 	CALL __EEPROMRDB
000f85 c00d      	RJMP _0x2120001
                 _0x2100016:
000f86 30e3      	CPI  R30,LOW(0x3)
000f87 f441      	BRNE _0x2100018
000f88 81a8      	LD   R26,Y
000f89 81b9      	LDD  R27,Y+1
                +
000f8a 91e0 0685+LDS R30 , _glcd_state + ( 25 )
000f8c 91f0 0686+LDS R31 , _glcd_state + ( 25 ) + 1
000f8e 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000f8f c003      	RJMP _0x2120001
                 _0x2100018:
000f90 81a8      	LD   R26,Y
000f91 81b9      	LDD  R27,Y+1
000f92 91ec      	LD   R30,X
                 _0x2120001:
000f93 9623      	ADIW R28,3
000f94 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000f95 93aa      	ST   -Y,R26
000f96 81eb      	LDD  R30,Y+3
000f97 30e0      	CPI  R30,0
000f98 f429      	BRNE _0x210001C
000f99 81e8      	LD   R30,Y
000f9a 81a9      	LDD  R26,Y+1
000f9b 81ba      	LDD  R27,Y+1+1
000f9c 93ec      	ST   X,R30
000f9d c014      	RJMP _0x210001B
                 _0x210001C:
000f9e 30e2      	CPI  R30,LOW(0x2)
000f9f f431      	BRNE _0x210001D
000fa0 81e8      	LD   R30,Y
000fa1 81a9      	LDD  R26,Y+1
000fa2 81ba      	LDD  R27,Y+1+1
000fa3 940e 1165 	CALL __EEPROMWRB
000fa5 c00c      	RJMP _0x210001B
                 _0x210001D:
000fa6 30e3      	CPI  R30,LOW(0x3)
000fa7 f451      	BRNE _0x210001B
000fa8 81e9      	LDD  R30,Y+1
000fa9 81fa      	LDD  R31,Y+1+1
000faa 93fa      	ST   -Y,R31
000fab 93ea      	ST   -Y,R30
000fac 81aa      	LDD  R26,Y+2
                +
000fad 91e0 0687+LDS R30 , _glcd_state + ( 27 )
000faf 91f0 0688+LDS R31 , _glcd_state + ( 27 ) + 1
000fb1 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
000fb2 9624      	ADIW R28,4
000fb3 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
00066c           	.BYTE 0x1D
                 _key:
000689           	.BYTE 0xA
                 _cmd:
000693           	.BYTE 0xFA
                 _dem:
00078d           	.BYTE 0x2
                 _rx_buffer0:
00078f           	.BYTE 0x40
                 _rx_wr_index0:
0007cf           	.BYTE 0x1
                 _rx_rd_index0:
0007d0           	.BYTE 0x1
                 _rx_counter0:
0007d1           	.BYTE 0x1
                 _buff:
0007d2           	.BYTE 0x104
                 _i:
0008d6           	.BYTE 0x2
                 _time_s:
0008d8           	.BYTE 0x2
                 _time_flow:
0008da           	.BYTE 0x4
                 _tx_buffer0:
0008de           	.BYTE 0x40
                 _tx_wr_index0:
00091e           	.BYTE 0x1
                 _tx_rd_index0:
00091f           	.BYTE 0x1
                 _tx_counter0:
000920           	.BYTE 0x1
                 _station_receive:
000921           	.BYTE 0xC
                 _tay_cam_receive:
00092d           	.BYTE 0x8
                 _data_receive:
000935           	.BYTE 0x12
                 _result:
000947           	.BYTE 0x1
                 _data_send:
000948           	.BYTE 0xC
                 __seed_G101:
000954           	.BYTE 0x4
                 _gfx_addr_G102:
000958           	.BYTE 0x2
                 _gfx_buffer_G102:
00095a           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000fb4 93aa      	ST   -Y,R26
000fb5 93ba      	ST   -Y,R27
000fb6 93ea      	ST   -Y,R30
000fb7 93fa      	ST   -Y,R31
000fb8 b7ef      	IN   R30,SREG
000fb9 93ea      	ST   -Y,R30
000fba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x1:
000fbb 91ed      	LD   R30,X+
000fbc 91fd      	LD   R31,X+
000fbd 9631      	ADIW R30,1
000fbe 93fe      	ST   -X,R31
000fbf 93ee      	ST   -X,R30
000fc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
                +
000fc1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fc2 958a     +DEC R24
000fc3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fc4 81e9      	LDD  R30,Y+1
000fc5 0fee      	LSL  R30
000fc6 83e9      	STD  Y+1,R30
000fc7 9adc      	SBI  0x1B,4
                +
000fc8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fc9 958a     +DEC R24
000fca f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fcb e0e0      	LDI  R30,0
000fcc 99cd      	SBIC 0x19,5
000fcd e0e1      	LDI  R30,1
000fce 81a9      	LDD  R26,Y+1
000fcf 2bea      	OR   R30,R26
000fd0 83e9      	STD  Y+1,R30
000fd1 98dc      	CBI  0x1B,4
000fd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000fd3 93aa      	ST   -Y,R26
000fd4 98da      	CBI  0x1B,2
000fd5 81e9      	LDD  R30,Y+1
000fd6 62e0      	ORI  R30,0x20
000fd7 2fae      	MOV  R26,R30
000fd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000fd9 9ada      	SBI  0x1B,2
                +
000fda e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000fdb 958a     +DEC R24
000fdc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000fdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000fde 940e 03e2 	CALL _SPI_RW_RX
000fe0 81a8      	LD   R26,Y
000fe1 940c 03e2 	JMP  _SPI_RW_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000fe3 940e 042c 	CALL _RF_Write3_RX
000fe5 e1e0      	LDI  R30,LOW(16)
000fe6 93ea      	ST   -Y,R30
000fe7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000fe8 93ea      	ST   -Y,R30
000fe9 e0af      	LDI  R26,LOW(15)
000fea 940c 0416 	JMP  _RF_Write_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000fec e0f0      	LDI  R31,0
000fed 93ed      	ST   X+,R30
000fee 93fc      	ST   X,R31
000fef 940c 03f5 	JMP  _SPI_Read_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000ff1 93ba      	ST   -Y,R27
000ff2 93aa      	ST   -Y,R26
000ff3 81a8      	LD   R26,Y
000ff4 81b9      	LDD  R27,Y+1
000ff5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xA:
000ff6 940e 0901 	CALL _glcd_clear
000ff8 e0e0      	LDI  R30,LOW(0)
000ff9 93ea      	ST   -Y,R30
000ffa e0a0      	LDI  R26,LOW(0)
000ffb 940c 0c9f 	JMP  _glcd_moveto
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
000ffd eda2      	LDI  R26,LOW(_buff)
000ffe e0b7      	LDI  R27,HIGH(_buff)
000fff 940c 0c75 	JMP  _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
001001 1ba2      	SUB  R26,R18
001002 0bb3      	SBC  R27,R19
001003 a5ee      	LDD  R30,Y+46
001004 a5ff      	LDD  R31,Y+46+1
001005 17ea      	CP   R30,R26
001006 07fb      	CPC  R31,R27
001007 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD:
001008 ede2      	LDI  R30,LOW(_buff)
001009 e0f7      	LDI  R31,HIGH(_buff)
00100a 93fa      	ST   -Y,R31
00100b 93ea      	ST   -Y,R30
00100c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xE:
00100d e9e3      	LDI  R30,LOW(_cmd)
00100e e0f6      	LDI  R31,HIGH(_cmd)
00100f 93fa      	ST   -Y,R31
001010 93ea      	ST   -Y,R30
001011 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
                +
001012 01de     +MOVW R26 , R28
001013 5ca0     +SUBI R26 , LOW ( - 64 )
001014 4fbf     +SBCI R27 , HIGH ( - 64 )
001015 900d     +LD R0 , X +
001016 91bc     +LD R27 , X
001017 2da0     +MOV R26 , R0
                 	__GETW2SX 64
001018 91ec      	LD   R30,X
001019 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
00101a 940e 04af 	CALL _put_string
00101c e2ac      	LDI  R26,LOW(300)
00101d e0b1      	LDI  R27,HIGH(300)
00101e 940c 1113 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x11:
001020 93fa      	ST   -Y,R31
001021 93ea      	ST   -Y,R30
001022 e0a2      	LDI  R26,LOW(2)
001023 e0b0      	LDI  R27,0
001024 940e 04d6 	CALL _wait_until
001026 e0a0      	LDI  R26,LOW(0)
001027 e0b0      	LDI  R27,0
001028 940c 04c4 	JMP  _refresh
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
00102a 93fa      	ST   -Y,R31
00102b 93ea      	ST   -Y,R30
00102c e0aa      	LDI  R26,LOW(10)
00102d e0b0      	LDI  R27,0
00102e 940c 04d6 	JMP  _wait_until
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
001030 93fa      	ST   -Y,R31
001031 93ea      	ST   -Y,R30
001032 01de      	MOVW R26,R28
001033 965a      	ADIW R26,26
001034 940e 07ec 	CALL _itoa
001036 cfd6      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
001037 01de      	MOVW R26,R28
001038 965a      	ADIW R26,26
001039 940e 079e 	CALL _strcat
00103b 01de      	MOVW R26,R28
00103c 9658      	ADIW R26,24
00103d 940c 07bc 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
00103f eea8      	LDI  R26,LOW(1000)
001040 e0b3      	LDI  R27,HIGH(1000)
001041 940c 1113 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
001043 93ea      	ST   -Y,R30
001044 e3e0      	LDI  R30,LOW(48)
001045 93ea      	ST   -Y,R30
001046 e0af      	LDI  R26,LOW(15)
001047 940e 0cab 	CALL _glcd_line
001049 e0e0      	LDI  R30,LOW(0)
00104a 93ea      	ST   -Y,R30
00104b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
00104c 93ea      	ST   -Y,R30
00104d e5e4      	LDI  R30,LOW(84)
00104e 93ea      	ST   -Y,R30
00104f e3a0      	LDI  R26,LOW(48)
001050 940e 0cab 	CALL _glcd_line
001052 e0e0      	LDI  R30,LOW(0)
001053 93ea      	ST   -Y,R30
001054 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
001055 940e 0c75 	CALL _glcd_outtext
001057 e0e4      	LDI  R30,LOW(4)
001058 93ea      	ST   -Y,R30
001059 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
00105a 940e 0c9f 	CALL _glcd_moveto
00105c cfab      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1A:
00105d 940e 1135 	CALL __CWD1
00105f 940e 1154 	CALL __PUTPARD1
001061 e084      	LDI  R24,4
001062 940e 0f0f 	CALL _sprintf
001064 9628      	ADIW R28,8
001065 cf97      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
001066 e5a8      	LDI  R26,LOW(_gfx_addr_G102)
001067 e0b9      	LDI  R27,HIGH(_gfx_addr_G102)
001068 cf52      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
001069 0fea      	ADD  R30,R26
00106a 1ffb      	ADC  R31,R27
00106b 83ee      	STD  Y+6,R30
00106c 83ff      	STD  Y+6+1,R31
00106d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1D:
00106e 85ec      	LDD  R30,Y+12
00106f 93ea      	ST   -Y,R30
001070 81ef      	LDD  R30,Y+7
001071 85f8      	LDD  R31,Y+7+1
001072 9631      	ADIW R30,1
001073 83ef      	STD  Y+7,R30
001074 87f8      	STD  Y+7+1,R31
001075 9731      	SBIW R30,1
001076 93fa      	ST   -Y,R31
001077 93ea      	ST   -Y,R30
001078 e0a0      	LDI  R26,LOW(0)
001079 940c 0f95 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
00107b 930a      	ST   -Y,R16
00107c 89a8      	LDD  R26,Y+16
00107d 940c 083c 	JMP  _pcd8544_setaddr_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
00107f 85ec      	LDD  R30,Y+12
001080 93ea      	ST   -Y,R30
001081 81ef      	LDD  R30,Y+7
001082 85f8      	LDD  R31,Y+7+1
001083 9631      	ADIW R30,1
001084 83ef      	STD  Y+7,R30
001085 87f8      	STD  Y+7+1,R31
001086 9731      	SBIW R30,1
001087 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
001088 2766      	CLR  R22
001089 2777      	CLR  R23
00108a 01df      	MOVW R26,R30
00108b 01cb      	MOVW R24,R22
00108c 940c 0f76 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
00108e 935a      	ST   -Y,R21
00108f 85aa      	LDD  R26,Y+10
001090 940c 0f4e 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
001092 930a      	ST   -Y,R16
001093 9503      	INC  R16
001094 89e8      	LDD  R30,Y+16
001095 93ea      	ST   -Y,R30
001096 935a      	ST   -Y,R21
001097 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
001098 2f5e      	MOV  R21,R30
001099 85ec      	LDD  R30,Y+12
00109a 93ea      	ST   -Y,R30
00109b 81af      	LDD  R26,Y+7
00109c 85b8      	LDD  R27,Y+7+1
00109d 2788      	CLR  R24
00109e 2799      	CLR  R25
00109f 940e 0f76 	CALL _glcd_readmem
0010a1 2e1e      	MOV  R1,R30
0010a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
0010a3 930a      	ST   -Y,R16
0010a4 9503      	INC  R16
0010a5 89e8      	LDD  R30,Y+16
0010a6 93ea      	ST   -Y,R30
0010a7 85ee      	LDD  R30,Y+14
0010a8 93ea      	ST   -Y,R30
0010a9 85e9      	LDD  R30,Y+9
0010aa 85fa      	LDD  R31,Y+9+1
0010ab 9631      	ADIW R30,1
0010ac 87e9      	STD  Y+9,R30
0010ad 87fa      	STD  Y+9+1,R31
0010ae 9731      	SBIW R30,1
0010af cfd8      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
0010b0 940e 117a 	CALL __SAVELOCR6
                +
0010b2 91e0 0670+LDS R30 , _glcd_state + ( 4 )
0010b4 91f0 0671+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
0010b7 01f8      	MOVW R30,R16
                +
0010b8 5f0f     +SUBI R16 , LOW ( - 1 )
0010b9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0010ba 9004      	LPM  R0,Z
0010bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
                +
0010bc 91e0 0670+LDS R30 , _glcd_state + ( 4 )
0010be 91f0 0671+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010c0 9631      	ADIW R30,1
0010c1 91e4      	LPM  R30,Z
0010c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
0010c3 93ea      	ST   -Y,R30
0010c4 e0e0      	LDI  R30,LOW(0)
0010c5 93ea      	ST   -Y,R30
0010c6 e0e0      	LDI  R30,LOW(0)
0010c7 e0f0      	LDI  R31,HIGH(0)
0010c8 93fa      	ST   -Y,R31
0010c9 93ea      	ST   -Y,R30
0010ca e0a9      	LDI  R26,LOW(9)
0010cb 940c 097a 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29:
0010cd 81ae      	LDD  R26,Y+6
0010ce 5faf      	SUBI R26,-LOW(1)
0010cf 83ae      	STD  Y+6,R26
0010d0 50a1      	SUBI R26,LOW(1)
                +
0010d1 91e0 0674+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0010d3 17ae      	CP   R26,R30
0010d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0010d5 933a      	ST   -Y,R19
0010d6 85aa      	LDD  R26,Y+10
0010d7 940c 0c85 	JMP  _glcd_putpixelm_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0010d9 85a9      	LDD  R26,Y+9
0010da 85ba      	LDD  R27,Y+9+1
0010db 0fea      	ADD  R30,R26
0010dc 1ffb      	ADC  R31,R27
0010dd 87e9      	STD  Y+9,R30
0010de 87fa      	STD  Y+9+1,R31
0010df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
0010e0 85e9      	LDD  R30,Y+9
0010e1 85fa      	LDD  R31,Y+9+1
0010e2 1bea      	SUB  R30,R26
0010e3 0bfb      	SBC  R31,R27
0010e4 87e9      	STD  Y+9,R30
0010e5 87fa      	STD  Y+9+1,R31
0010e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2D:
0010e7 932a      	ST   -Y,R18
0010e8 85ad      	LDD  R26,Y+13
0010e9 85be      	LDD  R27,Y+13+1
0010ea 85ef      	LDD  R30,Y+15
0010eb 89f8      	LDD  R31,Y+15+1
0010ec 9509      	ICALL
0010ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2E:
0010ee 89e8      	LDD  R30,Y+16
0010ef 89f9      	LDD  R31,Y+16+1
0010f0 9734      	SBIW R30,4
0010f1 8be8      	STD  Y+16,R30
0010f2 8bf9      	STD  Y+16+1,R31
0010f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
0010f4 85ad      	LDD  R26,Y+13
0010f5 85be      	LDD  R27,Y+13+1
0010f6 85ef      	LDD  R30,Y+15
0010f7 89f8      	LDD  R31,Y+15+1
0010f8 9509      	ICALL
0010f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x30:
0010fa 89a8      	LDD  R26,Y+16
0010fb 89b9      	LDD  R27,Y+16+1
0010fc 9614      	ADIW R26,4
0010fd 940e 1142 	CALL __GETW1P
0010ff 83ee      	STD  Y+6,R30
001100 83ff      	STD  Y+6+1,R31
001101 81ae      	LDD  R26,Y+6
001102 81bf      	LDD  R27,Y+6+1
001103 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
001104 89a8      	LDD  R26,Y+16
001105 89b9      	LDD  R27,Y+16+1
001106 9614      	ADIW R26,4
001107 940e 1142 	CALL __GETW1P
001109 87ea      	STD  Y+10,R30
00110a 87fb      	STD  Y+10+1,R31
00110b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
00110c 01de      	MOVW R26,R28
00110d 961c      	ADIW R26,12
00110e 940e 111d 	CALL __ADDW2R15
001110 940e 1142 	CALL __GETW1P
001112 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001113 9610      	adiw r26,0
001114 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001115 ed80     +LDI R24 , LOW ( 0x7D0 )
001116 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
001117 9701     +SBIW R24 , 1
001118 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001119 95a8      	wdr
00111a 9711      	sbiw r26,1
00111b f7c9      	brne __delay_ms0
                 __delay_ms1:
00111c 9508      	ret
                 
                 __ADDW2R15:
00111d 2400      	CLR  R0
00111e 0daf      	ADD  R26,R15
00111f 1db0      	ADC  R27,R0
001120 9508      	RET
                 
                 __ANEGW1:
001121 95f1      	NEG  R31
001122 95e1      	NEG  R30
001123 40f0      	SBCI R31,0
001124 9508      	RET
                 
                 __LSLB12:
001125 23ee      	TST  R30
001126 2e0e      	MOV  R0,R30
001127 2fea      	MOV  R30,R26
001128 f019      	BREQ __LSLB12R
                 __LSLB12L:
001129 0fee      	LSL  R30
00112a 940a      	DEC  R0
00112b f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00112c 9508      	RET
                 
                 __LSRB12:
00112d 23ee      	TST  R30
00112e 2e0e      	MOV  R0,R30
00112f 2fea      	MOV  R30,R26
001130 f019      	BREQ __LSRB12R
                 __LSRB12L:
001131 95e6      	LSR  R30
001132 940a      	DEC  R0
001133 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
001134 9508      	RET
                 
                 __CWD1:
001135 2f6f      	MOV  R22,R31
001136 0f66      	ADD  R22,R22
001137 0b66      	SBC  R22,R22
001138 2f76      	MOV  R23,R22
001139 9508      	RET
                 
                 __MULW12U:
00113a 9ffa      	MUL  R31,R26
00113b 2df0      	MOV  R31,R0
00113c 9feb      	MUL  R30,R27
00113d 0df0      	ADD  R31,R0
00113e 9fea      	MUL  R30,R26
00113f 2de0      	MOV  R30,R0
001140 0df1      	ADD  R31,R1
001141 9508      	RET
                 
                 __GETW1P:
001142 91ed      	LD   R30,X+
001143 91fc      	LD   R31,X
001144 9711      	SBIW R26,1
001145 9508      	RET
                 
                 __GETD1P_INC:
001146 91ed      	LD   R30,X+
001147 91fd      	LD   R31,X+
001148 916d      	LD   R22,X+
001149 917d      	LD   R23,X+
00114a 9508      	RET
                 
                 __PUTDP1_DEC:
00114b 937e      	ST   -X,R23
00114c 936e      	ST   -X,R22
00114d 93fe      	ST   -X,R31
00114e 93ee      	ST   -X,R30
00114f 9508      	RET
                 
                 __GETW1PF:
001150 9005      	LPM  R0,Z+
001151 91f4      	LPM  R31,Z
001152 2de0      	MOV  R30,R0
001153 9508      	RET
                 
                 __PUTPARD1:
001154 937a      	ST   -Y,R23
001155 936a      	ST   -Y,R22
001156 93fa      	ST   -Y,R31
001157 93ea      	ST   -Y,R30
001158 9508      	RET
                 
                 __EEPROMRDB:
001159 99e1      	SBIC EECR,EEWE
00115a cffe      	RJMP __EEPROMRDB
00115b 93ff      	PUSH R31
00115c b7ff      	IN   R31,SREG
00115d 94f8      	CLI
00115e bbae      	OUT  EEARL,R26
00115f bbbf      	OUT  EEARH,R27
001160 9ae0      	SBI  EECR,EERE
001161 b3ed      	IN   R30,EEDR
001162 bfff      	OUT  SREG,R31
001163 91ff      	POP  R31
001164 9508      	RET
                 
                 __EEPROMWRB:
001165 9be1      	SBIS EECR,EEWE
001166 c002      	RJMP __EEPROMWRB1
001167 95a8      	WDR
001168 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001169 b79f      	IN   R25,SREG
00116a 94f8      	CLI
00116b bbae      	OUT  EEARL,R26
00116c bbbf      	OUT  EEARH,R27
00116d 9ae0      	SBI  EECR,EERE
00116e b38d      	IN   R24,EEDR
00116f 17e8      	CP   R30,R24
001170 f019      	BREQ __EEPROMWRB0
001171 bbed      	OUT  EEDR,R30
001172 9ae2      	SBI  EECR,EEMWE
001173 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
001174 bf9f      	OUT  SREG,R25
001175 9508      	RET
                 
                 __CPW02:
001176 2400      	CLR  R0
001177 160a      	CP   R0,R26
001178 060b      	CPC  R0,R27
001179 9508      	RET
                 
                 __SAVELOCR6:
00117a 935a      	ST   -Y,R21
                 __SAVELOCR5:
00117b 934a      	ST   -Y,R20
                 __SAVELOCR4:
00117c 933a      	ST   -Y,R19
                 __SAVELOCR3:
00117d 932a      	ST   -Y,R18
                 __SAVELOCR2:
00117e 931a      	ST   -Y,R17
00117f 930a      	ST   -Y,R16
001180 9508      	RET
                 
                 __LOADLOCR6:
001181 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001182 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001183 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001184 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001185 8119      	LDD  R17,Y+1
001186 8108      	LD   R16,Y
001187 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  36 r1 :   5 r2 :   1 r3 :   0 r4 :   1 r5 :   0 r6 :   1 r7 :   5 
r8 :   0 r9 :   1 r10:   3 r11:   0 r12:  11 r13:   3 r14:   0 r15:   4 
r16: 102 r17: 138 r18:  69 r19:  54 r20:  36 r21:  52 r22:  43 r23:  11 
r24:  50 r25:  16 r26: 537 r27: 201 r28:  53 r29:   1 r30:1103 r31: 256 
x  :  57 y  : 779 z  :  38 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  23 add   :  37 
adiw  :  68 and   :  10 andi  :  19 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  52 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   7 brmi  :   1 brne  : 113 brpl  :   4 brsh  :  26 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 276 
cbi   :  17 cbr   :   0 clc   :   0 clh   :   0 cli   :   4 cln   :   0 
clr   :  34 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :  10 
cp    :  40 cpc   :  21 cpi   : 117 cpse  :   0 dec   :  10 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   9 inc   :   5 jmp   :  74 ld    : 103 ldd   : 354 
ldi   : 470 lds   :  77 lpm   :  30 lsl   :   8 lsr   :  15 mov   : 115 
movw  :  85 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   8 ori   :  15 out   :  57 pop   :  12 push  :  12 rcall : 103 
ret   :  80 reti  :   3 rjmp  : 174 rol   :   3 ror   :   0 sbc   :   7 
sbci  :  24 sbi   :  25 sbic  :   5 sbis  :   1 sbiw  :  44 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   2 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 286 std   : 111 sts   :  72 sub   :  16 subi  :  73 
swap  :   0 tst   :  14 wdr   :   2 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002310   7838   1138   8976  131072   6.8%
[.dseg] 0x000100 0x000b52      0   1618   1618    4096  39.5%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 13 warnings
