
AVRASM ver. 2.1.30  C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm Sat Sep 09 18:03:16 2017

C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1090): warning: Register r5 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1091): warning: Register r4 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1092): warning: Register r7 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1093): warning: Register r6 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1094): warning: Register r9 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1095): warning: Register r8 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1096): warning: Register r11 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1097): warning: Register r12 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1098): warning: Register r13 already defined by the .DEF directive
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1099): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _P_Add=R5
                 	.DEF _Code_tay_cam1=R4
                 	.DEF _Code_tay_cam2=R7
                 	.DEF _Code_tay_cam3=R6
                 	.DEF _Code_tay_cam4=R9
                 	.DEF _p=R8
                 	.DEF _lan_bam=R11
                 	.DEF _count=R12
                 	.DEF _count_msb=R13
                 	.DEF _flag=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 027d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0316 	JMP  _timer2_ovf_isr
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0341 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 02be 	JMP  _usart0_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 02f2 	JMP  _usart0_tx_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G105:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G105:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000146 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000147 00a1
000148 a2a3      	.DB  0xA1,0x0,0xA3,0xA2
000149 a400
00014a 0000      	.DB  0x0,0xA4,0x0,0x0
                 
                 _0x4:
00014b 0500
00014c 0511
00014d 0522
00014e 0533      	.DB  LOW(_0x3),HIGH(_0x3),LOW(_0x3+17),HIGH(_0x3+17),LOW(_0x3+34),HIGH(_0x3+34),LOW(_0x3+51),HIGH(_0x3+51)
                 _0xCE:
00014f 4547
000150 2054
000151 752f
000152 6470      	.DB  0x47,0x45,0x54,0x20,0x2F,0x75,0x70,0x64
000153 7461
000154 3f65
000155 656b
000156 3d79      	.DB  0x61,0x74,0x65,0x3F,0x6B,0x65,0x79,0x3D
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1229): warning: .cseg .db misalignment - padding zero byte
000157 0000      	.DB  0x0
                 _0x0:
000158 5a34
000159 4137
00015a 3647
00015b 5346      	.DB  0x34,0x5A,0x37,0x41,0x47,0x36,0x46,0x53
00015c 4245
00015d 4834
00015e 3458
00015f 5855      	.DB  0x45,0x42,0x34,0x48,0x58,0x34,0x55,0x58
000160 4d00
000161 535a
000162 5630
000163 4a4f      	.DB  0x0,0x4D,0x5A,0x53,0x30,0x56,0x4F,0x4A
000164 504e
000165 4d57
000166 494b
000167 3645      	.DB  0x4E,0x50,0x57,0x4D,0x4B,0x49,0x45,0x36
000168 0037
000169 5350
00016a 3230
00016b 5233      	.DB  0x37,0x0,0x50,0x53,0x30,0x32,0x33,0x52
00016c 5437
00016d 4d37
00016e 5556
00016f 5342      	.DB  0x37,0x54,0x37,0x4D,0x56,0x55,0x42,0x53
000170 5745
000171 4300
000172 3136
000173 4c56      	.DB  0x45,0x57,0x0,0x43,0x36,0x31,0x56,0x4C
000174 5a30
000175 4936
000176 4b44
000177 5736      	.DB  0x30,0x5A,0x36,0x49,0x44,0x4B,0x36,0x57
000178 5239
000179 0047
00017a 5245
00017b 4f52      	.DB  0x39,0x52,0x47,0x0,0x45,0x52,0x52,0x4F
00017c 0052
00017d 5441
00017e 432b
00017f 5049      	.DB  0x52,0x0,0x41,0x54,0x2B,0x43,0x49,0x50
000180 4f4d
000181 4544
000182 303d
000183 0d00      	.DB  0x4D,0x4F,0x44,0x45,0x3D,0x30,0x0,0xD
000184 000a
000185 4b4f
000186 4100
000187 2b54      	.DB  0xA,0x0,0x4F,0x4B,0x0,0x41,0x54,0x2B
000188 4943
000189 4d50
00018a 5855
00018b 313d      	.DB  0x43,0x49,0x50,0x4D,0x55,0x58,0x3D,0x31
00018c 4100
00018d 2b54
00018e 4943
00018f 5350      	.DB  0x0,0x41,0x54,0x2B,0x43,0x49,0x50,0x53
000190 4154
000191 5452
000192 303d
000193 222c      	.DB  0x54,0x41,0x52,0x54,0x3D,0x30,0x2C,0x22
000194 4354
000195 2250
000196 222c
000197 7061      	.DB  0x54,0x43,0x50,0x22,0x2C,0x22,0x61,0x70
000198 2e69
000199 6874
00019a 6e69
00019b 7367      	.DB  0x69,0x2E,0x74,0x68,0x69,0x6E,0x67,0x73
00019c 6570
00019d 6b61
00019e 632e
00019f 6d6f      	.DB  0x70,0x65,0x61,0x6B,0x2E,0x63,0x6F,0x6D
0001a0 2c22
0001a1 3038
0001a2 5300
0001a3 7265      	.DB  0x22,0x2C,0x38,0x30,0x0,0x53,0x65,0x72
0001a4 6576
0001a5 2072
0001a6 6f63
0001a7 6e6e      	.DB  0x76,0x65,0x72,0x20,0x63,0x6F,0x6E,0x6E
0001a8 6365
0001a9 6574
0001aa 0064
0001ab 6626      	.DB  0x65,0x63,0x74,0x65,0x64,0x0,0x26,0x66
0001ac 6569
0001ad 646c
0001ae 3d31
0001af 2600      	.DB  0x69,0x65,0x6C,0x64,0x31,0x3D,0x0,0x26
0001b0 6966
0001b1 6c65
0001b2 3264
0001b3 003d      	.DB  0x66,0x69,0x65,0x6C,0x64,0x32,0x3D,0x0
0001b4 6626
0001b5 6569
0001b6 646c
0001b7 3d33      	.DB  0x26,0x66,0x69,0x65,0x6C,0x64,0x33,0x3D
0001b8 4100
0001b9 2b54
0001ba 4943
0001bb 5350      	.DB  0x0,0x41,0x54,0x2B,0x43,0x49,0x50,0x53
0001bc 4e45
0001bd 3d44
0001be 2c30
0001bf 3e00      	.DB  0x45,0x4E,0x44,0x3D,0x30,0x2C,0x0,0x3E
0001c0 0020
0001c1 6553
0001c2 646e
0001c3 6e69      	.DB  0x20,0x0,0x53,0x65,0x6E,0x64,0x69,0x6E
0001c4 0067
0001c5 4449
0001c6 0050
0001c7 6f4e      	.DB  0x67,0x0,0x49,0x44,0x50,0x0,0x4E,0x6F
0001c8 6564
0001c9 203a
0001ca 5400
0001cb 6d65      	.DB  0x64,0x65,0x3A,0x20,0x0,0x54,0x65,0x6D
0001cc 3a70
0001cd 0020
0001ce 7548
0001cf 696d      	.DB  0x70,0x3A,0x20,0x0,0x48,0x75,0x6D,0x69
0001d0 3a64
0001d1 0020
0001d2 6157
0001d3 6574      	.DB  0x64,0x3A,0x20,0x0,0x57,0x61,0x74,0x65
0001d4 3a72
0001d5 0020
0001d6 6d6d
0001d7 2500      	.DB  0x72,0x3A,0x20,0x0,0x6D,0x6D,0x0,0x25
0001d8 2064
0001d9 2500
0001da 2064
0001db 0020      	.DB  0x64,0x20,0x0,0x25,0x64,0x20,0x20,0x0
0001dc 5441
0001dd 0a0d
0001de 4100
0001df 2b54      	.DB  0x41,0x54,0xD,0xA,0x0,0x41,0x54,0x2B
0001e0 5743
0001e1 4f4d
0001e2 4544
0001e3 313d      	.DB  0x43,0x57,0x4D,0x4F,0x44,0x45,0x3D,0x31
0001e4 0a0d
0001e5 4100
0001e6 2b54
0001e7 5743      	.DB  0xD,0xA,0x0,0x41,0x54,0x2B,0x43,0x57
0001e8 414a
0001e9 3d50
0001ea 5422
0001eb 6168      	.DB  0x4A,0x41,0x50,0x3D,0x22,0x54,0x68,0x61
0001ec 5f79
0001ed 6854
0001ee 6f61
0001ef 645f      	.DB  0x79,0x5F,0x54,0x68,0x61,0x6F,0x5F,0x64
0001f0 6f65
0001f1 675f
0001f2 6169
0001f3 2269      	.DB  0x65,0x6F,0x5F,0x67,0x69,0x61,0x69,0x22
0001f4 222c
0001f5 6863
0001f6 6e69
0001f7 7868      	.DB  0x2C,0x22,0x63,0x68,0x69,0x6E,0x68,0x78
0001f8 6361
0001f9 0d22
0001fa 000a
0001fb 7473      	.DB  0x61,0x63,0x22,0xD,0xA,0x0,0x73,0x74
0001fc 7261
0001fd 0074      	.DB  0x61,0x72,0x74,0x0
                 _0x2020060:
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1274): warning: .cseg .db misalignment - padding zero byte
0001fe 0001      	.DB  0x1
                 _0x2020000:
0001ff 4e2d
000200 4e41
000201 4900
000202 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\s0lut1on\Desktop\tuoi nuoc\tram_chinh_2\Debug\List\1.asm(1277): warning: .cseg .db misalignment - padding zero byte
000203 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000204 0001      	.DW  0x01
000205 0002      	.DW  0x02
000206 028c      	.DW  __REG_BIT_VARS*2
                 
000207 0008      	.DW  0x08
000208 0004      	.DW  0x04
000209 028e      	.DW  __REG_VARS*2
                 
00020a 0011      	.DW  0x11
00020b 0500      	.DW  _0x3
00020c 02b0      	.DW  _0x0*2
                 
00020d 0011      	.DW  0x11
00020e 0511      	.DW  _0x3+17
00020f 02c1      	.DW  _0x0*2+17
                 
000210 0011      	.DW  0x11
000211 0522      	.DW  _0x3+34
000212 02d2      	.DW  _0x0*2+34
                 
000213 0011      	.DW  0x11
000214 0533      	.DW  _0x3+51
000215 02e3      	.DW  _0x0*2+51
                 
000216 0008      	.DW  0x08
000217 067b      	.DW  _key
000218 0296      	.DW  _0x4*2
                 
000219 0006      	.DW  0x06
00021a 0544      	.DW  _0xCD
00021b 02f4      	.DW  _0x0*2+68
                 
00021c 000d      	.DW  0x0D
00021d 054a      	.DW  _0xD2
00021e 02fa      	.DW  _0x0*2+74
                 
00021f 0003      	.DW  0x03
000220 0557      	.DW  _0xD2+13
000221 0307      	.DW  _0x0*2+87
                 
000222 0003      	.DW  0x03
000223 055a      	.DW  _0xD2+16
000224 030a      	.DW  _0x0*2+90
                 
000225 000c      	.DW  0x0C
000226 055d      	.DW  _0xD2+19
000227 030d      	.DW  _0x0*2+93
                 
000228 0003      	.DW  0x03
000229 0569      	.DW  _0xD2+31
00022a 0307      	.DW  _0x0*2+87
                 
00022b 0003      	.DW  0x03
00022c 056c      	.DW  _0xD2+34
00022d 030a      	.DW  _0x0*2+90
                 
00022e 002c      	.DW  0x2C
00022f 056f      	.DW  _0xD2+37
000230 0319      	.DW  _0x0*2+105
                 
000231 0003      	.DW  0x03
000232 059b      	.DW  _0xD2+81
000233 0307      	.DW  _0x0*2+87
                 
000234 0003      	.DW  0x03
000235 059e      	.DW  _0xD2+84
000236 030a      	.DW  _0x0*2+90
                 
000237 0011      	.DW  0x11
000238 05a1      	.DW  _0xD2+87
000239 0345      	.DW  _0x0*2+149
                 
00023a 0009      	.DW  0x09
00023b 05b2      	.DW  _0xD2+104
00023c 0356      	.DW  _0x0*2+166
                 
00023d 0009      	.DW  0x09
00023e 05bb      	.DW  _0xD2+113
00023f 035f      	.DW  _0x0*2+175
                 
000240 0009      	.DW  0x09
000241 05c4      	.DW  _0xD2+122
000242 0368      	.DW  _0x0*2+184
                 
000243 000e      	.DW  0x0E
000244 05cd      	.DW  _0xD2+131
000245 0371      	.DW  _0x0*2+193
                 
000246 0003      	.DW  0x03
000247 05db      	.DW  _0xD2+145
000248 0307      	.DW  _0x0*2+87
                 
000249 0003      	.DW  0x03
00024a 05de      	.DW  _0xD2+148
00024b 037f      	.DW  _0x0*2+207
                 
00024c 0008      	.DW  0x08
00024d 05e1      	.DW  _0xD2+151
00024e 0382      	.DW  _0x0*2+210
                 
00024f 0003      	.DW  0x03
000250 05e9      	.DW  _0xD2+159
000251 0307      	.DW  _0x0*2+87
                 
000252 0004      	.DW  0x04
000253 05ec      	.DW  _0xD2+162
000254 038a      	.DW  _0x0*2+218
                 
000255 0007      	.DW  0x07
000256 05f0      	.DW  _0xD6
000257 038e      	.DW  _0x0*2+222
                 
000258 0007      	.DW  0x07
000259 05f7      	.DW  _0xD6+7
00025a 0395      	.DW  _0x0*2+229
                 
00025b 0008      	.DW  0x08
00025c 05fe      	.DW  _0xD6+14
00025d 039c      	.DW  _0x0*2+236
                 
00025e 0008      	.DW  0x08
00025f 0606      	.DW  _0xD6+22
000260 03a4      	.DW  _0x0*2+244
                 
000261 0003      	.DW  0x03
000262 060e      	.DW  _0xD6+30
000263 03ac      	.DW  _0x0*2+252
                 
000264 0005      	.DW  0x05
000265 0611      	.DW  _0xDE
000266 03b8      	.DW  _0x0*2+264
                 
000267 0003      	.DW  0x03
000268 0616      	.DW  _0xDE+5
000269 030a      	.DW  _0x0*2+90
                 
00026a 000e      	.DW  0x0E
00026b 0619      	.DW  _0xDE+8
00026c 03bd      	.DW  _0x0*2+269
                 
00026d 0003      	.DW  0x03
00026e 0627      	.DW  _0xDE+22
00026f 030a      	.DW  _0x0*2+90
                 
000270 002b      	.DW  0x2B
000271 062a      	.DW  _0xDE+25
000272 03cb      	.DW  _0x0*2+283
                 
000273 0003      	.DW  0x03
000274 0655      	.DW  _0xDE+68
000275 030a      	.DW  _0x0*2+90
                 
000276 0006      	.DW  0x06
000277 0658      	.DW  _0xDE+71
000278 03f6      	.DW  _0x0*2+326
                 
000279 0001      	.DW  0x01
00027a 084a      	.DW  __seed_G101
00027b 03fc      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00027c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00027d 94f8      	CLI
00027e 27ee      	CLR  R30
00027f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000280 e0f1      	LDI  R31,1
000281 bff5      	OUT  MCUCR,R31
000282 bfe5      	OUT  MCUCR,R30
000283 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000285 e08d      	LDI  R24,(14-2)+1
000286 e0a2      	LDI  R26,2
000287 27bb      	CLR  R27
                 __CLEAR_REG:
000288 93ed      	ST   X+,R30
000289 958a      	DEC  R24
00028a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00028b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00028c e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00028d e0a0      	LDI  R26,LOW(__SRAM_START)
00028e e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00028f 93ed      	ST   X+,R30
000290 9701      	SBIW R24,1
000291 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000292 e0e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000293 e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000294 9185      	LPM  R24,Z+
000295 9195      	LPM  R25,Z+
000296 9700      	SBIW R24,0
000297 f061      	BREQ __GLOBAL_INI_END
000298 91a5      	LPM  R26,Z+
000299 91b5      	LPM  R27,Z+
00029a 9005      	LPM  R0,Z+
00029b 9015      	LPM  R1,Z+
00029c 01bf      	MOVW R22,R30
00029d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00029e 9005      	LPM  R0,Z+
00029f 920d      	ST   X+,R0
0002a0 9701      	SBIW R24,1
0002a1 f7e1      	BRNE __GLOBAL_INI_LOOP
0002a2 01fb      	MOVW R30,R22
0002a3 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0002a4 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002a5 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002a6 bfed      	OUT  SPL,R30
0002a7 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002a8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002a9 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002aa e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002ab 940c 0676 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdlib.h>
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;unsigned char P_Add;
                 ;unsigned char P_Add, Code_tay_cam1 = 0xA1, Code_tay_cam2 = 0xA2, Code_tay_cam3 = 0xA3, Code_tay_cam4 = 0xA4;
                 ;unsigned char p=0,lan_bam=0;
                 ;int count;
                 ;bool flag;
                 ;unsigned char* key[] = {"4Z7AG6FSEB4HX4UX", "MZS0VOJNPWMKIE67", "PS023R7T7MVUBSEW", "C61VL0Z6IDK6W9RG"};
                 
                 	.DSEG
                 _0x3:
000500           	.BYTE 0x44
                 ;
                 ;unsigned int dem=0;
                 ;#define CE PORTA.3
                 ;#define CSN PORTA.2
                 ;#define SCK PORTA.4
                 ;#define MOSI PORTA.1
                 ;#define MISO PINA.5
                 ;#define IRQ PINA.0
                 ;
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE0)
                 ;#define RX_COMPLETE (1<<RXC0)
                 ;#define FRAMING_ERROR (1<<FE0)
                 ;#define PARITY_ERROR (1<<UPE0)
                 ;#define DATA_OVERRUN (1<<DOR0)
                 ;
                 ;// USART0 Receiver buffer
                 ;#define RX_BUFFER_SIZE0 64
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;#if RX_BUFFER_SIZE0 <= 256
                 ;unsigned char rx_wr_index0=0,rx_rd_index0=0;
                 ;#else
                 ;unsigned int rx_wr_index0=0,rx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE0 < 256
                 ;unsigned char rx_counter0=0;
                 ;#else
                 ;unsigned int rx_counter0=0;
                 ;#endif
                 ;
                 ;char buff[260];
                 ;int i = 0, time_s = 0;
                 ;long time_flow = 0;
                 ;
                 ;void del_string(unsigned char *s) {
                 ; 0000 0035 void del_string(unsigned char *s) {
                 
                 	.CSEG
                 _del_string:
                 ; .FSTART _del_string
                 ; 0000 0036     while (*s) {
0002ad 93ba      	ST   -Y,R27
0002ae 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0x5:
0002af 81a8      	LD   R26,Y
0002b0 81b9      	LDD  R27,Y+1
0002b1 91ec      	LD   R30,X
0002b2 30e0      	CPI  R30,0
0002b3 f041      	BREQ _0x7
                 ; 0000 0037         *s = '\0';
0002b4 e0e0      	LDI  R30,LOW(0)
0002b5 93ec      	ST   X,R30
                 ; 0000 0038         s++;
0002b6 81e8      	LD   R30,Y
0002b7 81f9      	LDD  R31,Y+1
0002b8 9631      	ADIW R30,1
0002b9 83e8      	ST   Y,R30
0002ba 83f9      	STD  Y+1,R31
                 ; 0000 0039     }
0002bb cff3      	RJMP _0x5
                 _0x7:
                 ; 0000 003A }
0002bc 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void) {
                 ; 0000 0040 interrupt [19] void usart0_rx_isr(void) {
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
0002be 940e 0fb0 	CALL SUBOPT_0x0
                 ; 0000 0041     char status,data;
                 ; 0000 0042     status=UCSR0A;
0002c0 931a      	ST   -Y,R17
0002c1 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0002c2 b11b      	IN   R17,11
                 ; 0000 0043     data=UDR0;
0002c3 b10c      	IN   R16,12
                 ; 0000 0044     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0) {
0002c4 2fe1      	MOV  R30,R17
0002c5 71ec      	ANDI R30,LOW(0x1C)
0002c6 f4e9      	BRNE _0x8
                 ; 0000 0045         rx_buffer0[rx_wr_index0++]=data;
0002c7 91e0 06c5 	LDS  R30,_rx_wr_index0
0002c9 5fef      	SUBI R30,-LOW(1)
0002ca 93e0 06c5 	STS  _rx_wr_index0,R30
0002cc 50e1      	SUBI R30,LOW(1)
0002cd e0f0      	LDI  R31,0
0002ce 57eb      	SUBI R30,LOW(-_rx_buffer0)
0002cf 4ff9      	SBCI R31,HIGH(-_rx_buffer0)
0002d0 8300      	ST   Z,R16
                 ; 0000 0046 #if RX_BUFFER_SIZE0 == 256
                 ; 0000 0047         // special case for receiver buffer size=256
                 ; 0000 0048         if (++rx_counter0 == 0) rx_buffer_overflow0=1;
                 ; 0000 0049 #else
                 ; 0000 004A         if (rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0=0;
0002d1 91a0 06c5 	LDS  R26,_rx_wr_index0
0002d3 34a0      	CPI  R26,LOW(0x40)
0002d4 f419      	BRNE _0x9
0002d5 e0e0      	LDI  R30,LOW(0)
0002d6 93e0 06c5 	STS  _rx_wr_index0,R30
                 ; 0000 004B         if (++rx_counter0 == RX_BUFFER_SIZE0) {
                 _0x9:
0002d8 91a0 06c7 	LDS  R26,_rx_counter0
0002da 5faf      	SUBI R26,-LOW(1)
0002db 93a0 06c7 	STS  _rx_counter0,R26
0002dd 34a0      	CPI  R26,LOW(0x40)
0002de f429      	BRNE _0xA
                 ; 0000 004C             rx_counter0=0;
0002df e0e0      	LDI  R30,LOW(0)
0002e0 93e0 06c7 	STS  _rx_counter0,R30
                 ; 0000 004D             rx_buffer_overflow0=1;
0002e2 9468      	SET
0002e3 f820      	BLD  R2,0
                 ; 0000 004E         }
                 ; 0000 004F #endif
                 ; 0000 0050     }
                 _0xA:
                 ; 0000 0051     buff[i] = data;
                 _0x8:
0002e4 91e0 07cc 	LDS  R30,_i
0002e6 91f0 07cd 	LDS  R31,_i+1
0002e8 53e8      	SUBI R30,LOW(-_buff)
0002e9 4ff9      	SBCI R31,HIGH(-_buff)
0002ea 8300      	ST   Z,R16
                 ; 0000 0052     i++;
0002eb ecac      	LDI  R26,LOW(_i)
0002ec e0b7      	LDI  R27,HIGH(_i)
0002ed 940e 0fb7 	CALL SUBOPT_0x1
                 ; 0000 0053 }
0002ef 9109      	LD   R16,Y+
0002f0 9119      	LD   R17,Y+
0002f1 c048      	RJMP _0xEA
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void) {
                 ; 0000 0059 char getchar(void) {
                 ; 0000 005A     char data;
                 ; 0000 005B     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0000 005C     data=rx_buffer0[rx_rd_index0++];
                 ; 0000 005D #if RX_BUFFER_SIZE0 != 256
                 ; 0000 005E     if (rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0=0;
                 ; 0000 005F #endif
                 ; 0000 0060 #asm("cli")
                 ; 0000 0061     --rx_counter0;
                 ; 0000 0062 #asm("sei")
                 ; 0000 0063     return data;
                 ; 0000 0064 }
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// USART0 Transmitter buffer
                 ;#define TX_BUFFER_SIZE0 64
                 ;char tx_buffer0[TX_BUFFER_SIZE0];
                 ;
                 ;#if TX_BUFFER_SIZE0 <= 256
                 ;unsigned char tx_wr_index0=0,tx_rd_index0=0;
                 ;#else
                 ;unsigned int tx_wr_index0=0,tx_rd_index0=0;
                 ;#endif
                 ;
                 ;#if TX_BUFFER_SIZE0 < 256
                 ;unsigned char tx_counter0=0;
                 ;#else
                 ;unsigned int tx_counter0=0;
                 ;#endif
                 ;
                 ;// USART0 Transmitter interrupt service routine
                 ;interrupt [USART0_TXC] void usart0_tx_isr(void) {
                 ; 0000 0079 interrupt [21] void usart0_tx_isr(void) {
                 _usart0_tx_isr:
                 ; .FSTART _usart0_tx_isr
0002f2 93aa      	ST   -Y,R26
0002f3 93ea      	ST   -Y,R30
0002f4 93fa      	ST   -Y,R31
0002f5 b7ef      	IN   R30,SREG
0002f6 93ea      	ST   -Y,R30
                 ; 0000 007A     if (tx_counter0) {
0002f7 91e0 0816 	LDS  R30,_tx_counter0
0002f9 30e0      	CPI  R30,0
0002fa f0a9      	BREQ _0xF
                 ; 0000 007B         --tx_counter0;
0002fb 50e1      	SUBI R30,LOW(1)
0002fc 93e0 0816 	STS  _tx_counter0,R30
                 ; 0000 007C         UDR0=tx_buffer0[tx_rd_index0++];
0002fe 91e0 0815 	LDS  R30,_tx_rd_index0
000300 5fef      	SUBI R30,-LOW(1)
000301 93e0 0815 	STS  _tx_rd_index0,R30
000303 50e1      	SUBI R30,LOW(1)
000304 e0f0      	LDI  R31,0
000305 52ec      	SUBI R30,LOW(-_tx_buffer0)
000306 4ff8      	SBCI R31,HIGH(-_tx_buffer0)
000307 81e0      	LD   R30,Z
000308 b9ec      	OUT  0xC,R30
                 ; 0000 007D #if TX_BUFFER_SIZE0 != 256
                 ; 0000 007E         if (tx_rd_index0 == TX_BUFFER_SIZE0) tx_rd_index0=0;
000309 91a0 0815 	LDS  R26,_tx_rd_index0
00030b 34a0      	CPI  R26,LOW(0x40)
00030c f419      	BRNE _0x10
00030d e0e0      	LDI  R30,LOW(0)
00030e 93e0 0815 	STS  _tx_rd_index0,R30
                 ; 0000 007F #endif
                 ; 0000 0080     }
                 _0x10:
                 ; 0000 0081 }
                 _0xF:
000310 91e9      	LD   R30,Y+
000311 bfef      	OUT  SREG,R30
000312 91f9      	LD   R31,Y+
000313 91e9      	LD   R30,Y+
000314 91a9      	LD   R26,Y+
000315 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0083 {
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
000316 940e 0fb0 	CALL SUBOPT_0x0
                 ; 0000 0084 TCNT2=0xB2;    //10ms
000318 ebe2      	LDI  R30,LOW(178)
000319 bde4      	OUT  0x24,R30
                 ; 0000 0085 if(flag == true)
00031a e0e1      	LDI  R30,LOW(1)
00031b 15ea      	CP   R30,R10
00031c f421      	BRNE _0x11
                 ; 0000 0086     dem++;
00031d e8a3      	LDI  R26,LOW(_dem)
00031e e0b6      	LDI  R27,HIGH(_dem)
00031f 940e 0fb7 	CALL SUBOPT_0x1
                 ; 0000 0087 if(dem == 500){
                 _0x11:
000321 91a0 0683 	LDS  R26,_dem
000323 91b0 0684 	LDS  R27,_dem+1
000325 3fa4      	CPI  R26,LOW(0x1F4)
000326 e0e1      	LDI  R30,HIGH(0x1F4)
000327 07be      	CPC  R27,R30
000328 f489      	BRNE _0x12
                 ; 0000 0088     flag = false;
000329 24aa      	CLR  R10
                 ; 0000 0089     count++;
00032a 01f6      	MOVW R30,R12
00032b 9631      	ADIW R30,1
00032c 016f      	MOVW R12,R30
                 ; 0000 008A     dem = 0;
00032d e0e0      	LDI  R30,LOW(0)
00032e 93e0 0683 	STS  _dem,R30
000330 93e0 0684 	STS  _dem+1,R30
                 ; 0000 008B     if(count == 5)
000332 e0e5      	LDI  R30,LOW(5)
000333 e0f0      	LDI  R31,HIGH(5)
000334 15ec      	CP   R30,R12
000335 05fd      	CPC  R31,R13
000336 f419      	BRNE _0x13
                 ; 0000 008C         count = 1;
000337 e0e1      	LDI  R30,LOW(1)
000338 e0f0      	LDI  R31,HIGH(1)
000339 016f      	MOVW R12,R30
                 ; 0000 008D }
                 _0x13:
                 ; 0000 008E }
                 _0x12:
                 _0xEA:
00033a 91e9      	LD   R30,Y+
00033b bfef      	OUT  SREG,R30
00033c 91f9      	LD   R31,Y+
00033d 91e9      	LD   R30,Y+
00033e 91b9      	LD   R27,Y+
00033f 91a9      	LD   R26,Y+
000340 9518      	RETI
                 ; .FEND
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void) {
                 ; 0000 008F interrupt [17] void timer0_ovf_isr(void) {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000341 936a      	ST   -Y,R22
000342 937a      	ST   -Y,R23
000343 938a      	ST   -Y,R24
000344 939a      	ST   -Y,R25
000345 93aa      	ST   -Y,R26
000346 93ba      	ST   -Y,R27
000347 93ea      	ST   -Y,R30
000348 93fa      	ST   -Y,R31
000349 b7ef      	IN   R30,SREG
00034a 93ea      	ST   -Y,R30
                 ; 0000 0090     //0.02 ms => 50k = 1s.
                 ; 0000 0091     TCNT0=0x60;
00034b e6e0      	LDI  R30,LOW(96)
00034c bfe2      	OUT  0x32,R30
                 ; 0000 0092     // Place your code here
                 ; 0000 0093     time_flow++;
00034d eda0      	LDI  R26,LOW(_time_flow)
00034e e0b7      	LDI  R27,HIGH(_time_flow)
00034f 940e 1146 	CALL __GETD1P_INC
                +
000351 5fef     +SUBI R30 , LOW ( - 1 )
000352 4fff     +SBCI R31 , HIGH ( - 1 )
000353 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000354 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000355 940e 114b 	CALL __PUTDP1_DEC
                 ; 0000 0094 
                 ; 0000 0095     if (time_flow == 50000) {
000357 91a0 07d0 	LDS  R26,_time_flow
000359 91b0 07d1 	LDS  R27,_time_flow+1
00035b 9180 07d2 	LDS  R24,_time_flow+2
00035d 9190 07d3 	LDS  R25,_time_flow+3
                +
00035f 35a0     +CPI R26 , LOW ( 0xC350 )
000360 ece3     +LDI R30 , HIGH ( 0xC350 )
000361 07be     +CPC R27 , R30
000362 e0e0     +LDI R30 , BYTE3 ( 0xC350 )
000363 078e     +CPC R24 , R30
000364 e0e0     +LDI R30 , BYTE4 ( 0xC350 )
000365 079e     +CPC R25 , R30
                 	__CPD2N 0xC350
000366 f469      	BRNE _0x14
                 ; 0000 0096         time_s++;
000367 ecae      	LDI  R26,LOW(_time_s)
000368 e0b7      	LDI  R27,HIGH(_time_s)
000369 940e 0fb7 	CALL SUBOPT_0x1
                 ; 0000 0097         time_flow = 0;
00036b e0e0      	LDI  R30,LOW(0)
00036c 93e0 07d0 	STS  _time_flow,R30
00036e 93e0 07d1 	STS  _time_flow+1,R30
000370 93e0 07d2 	STS  _time_flow+2,R30
000372 93e0 07d3 	STS  _time_flow+3,R30
                 ; 0000 0098     }
                 ; 0000 0099 }
                 _0x14:
000374 91e9      	LD   R30,Y+
000375 bfef      	OUT  SREG,R30
000376 91f9      	LD   R31,Y+
000377 91e9      	LD   R30,Y+
000378 91b9      	LD   R27,Y+
000379 91a9      	LD   R26,Y+
00037a 9199      	LD   R25,Y+
00037b 9189      	LD   R24,Y+
00037c 9179      	LD   R23,Y+
00037d 9169      	LD   R22,Y+
00037e 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Write a character to the USART0 Transmitter buffer
                 ;#define _ALTERNATE_PUTCHAR_
                 ;#pragma used+
                 ;void putchar(char c) {
                 ; 0000 009F void putchar(char c) {
                 _putchar:
                 ; .FSTART _putchar
                 ; 0000 00A0     while (tx_counter0 == TX_BUFFER_SIZE0);
00037f 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x15:
000380 91a0 0816 	LDS  R26,_tx_counter0
000382 34a0      	CPI  R26,LOW(0x40)
000383 f3e1      	BREQ _0x15
                 ; 0000 00A1 #asm("cli")
000384 94f8      	cli
                 ; 0000 00A2     if (tx_counter0 || ((UCSR0A & DATA_REGISTER_EMPTY)==0)) {
000385 91e0 0816 	LDS  R30,_tx_counter0
000387 30e0      	CPI  R30,0
000388 f411      	BRNE _0x19
000389 995d      	SBIC 0xB,5
00038a c018      	RJMP _0x18
                 _0x19:
                 ; 0000 00A3         tx_buffer0[tx_wr_index0++]=c;
00038b 91e0 0814 	LDS  R30,_tx_wr_index0
00038d 5fef      	SUBI R30,-LOW(1)
00038e 93e0 0814 	STS  _tx_wr_index0,R30
000390 50e1      	SUBI R30,LOW(1)
000391 e0f0      	LDI  R31,0
000392 52ec      	SUBI R30,LOW(-_tx_buffer0)
000393 4ff8      	SBCI R31,HIGH(-_tx_buffer0)
000394 81a8      	LD   R26,Y
000395 83a0      	STD  Z+0,R26
                 ; 0000 00A4 #if TX_BUFFER_SIZE0 != 256
                 ; 0000 00A5         if (tx_wr_index0 == TX_BUFFER_SIZE0) tx_wr_index0=0;
000396 91a0 0814 	LDS  R26,_tx_wr_index0
000398 34a0      	CPI  R26,LOW(0x40)
000399 f419      	BRNE _0x1B
00039a e0e0      	LDI  R30,LOW(0)
00039b 93e0 0814 	STS  _tx_wr_index0,R30
                 ; 0000 00A6 #endif
                 ; 0000 00A7         ++tx_counter0;
                 _0x1B:
00039d 91e0 0816 	LDS  R30,_tx_counter0
00039f 5fef      	SUBI R30,-LOW(1)
0003a0 93e0 0816 	STS  _tx_counter0,R30
                 ; 0000 00A8     } else
0003a2 c002      	RJMP _0x1C
                 _0x18:
                 ; 0000 00A9         UDR0=c;
0003a3 81e8      	LD   R30,Y
0003a4 b9ec      	OUT  0xC,R30
                 ; 0000 00AA #asm("sei")
                 _0x1C:
0003a5 9478      	sei
                 ; 0000 00AB }
0003a6 940c 08fb 	JMP  _0x212000C
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;#include <nrf_code.h>
                 _config:
                 ; .FSTART _config
                +
0003a8 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0003a9 958a     +DEC R24
0003aa f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0003ab e0e0      	LDI  R30,LOW(0)
0003ac 93ea      	ST   -Y,R30
0003ad e1af      	LDI  R26,LOW(31)
0003ae d024      	RCALL _RF_Write_TX
0003af e0a2      	LDI  R26,LOW(2)
0003b0 e0b0      	LDI  R27,0
0003b1 940e 1113 	CALL _delay_ms
0003b3 e0e7      	LDI  R30,LOW(7)
0003b4 93ea      	ST   -Y,R30
0003b5 e7ae      	LDI  R26,LOW(126)
0003b6 d01c      	RCALL _RF_Write_TX
0003b7 e1ed      	LDI  R30,LOW(29)
0003b8 93ea      	ST   -Y,R30
0003b9 e0a4      	LDI  R26,LOW(4)
0003ba d018      	RCALL _RF_Write_TX
0003bb e0e5      	LDI  R30,LOW(5)
0003bc 93ea      	ST   -Y,R30
0003bd e0a2      	LDI  R26,LOW(2)
0003be d014      	RCALL _RF_Write_TX
0003bf 9508      	RET
                 ; .FEND
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
0003c0 93aa      	ST   -Y,R26
0003c1 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003c2 e010      	LDI  R17,LOW(0)
                 _0x1E:
0003c3 3018      	CPI  R17,8
0003c4 f450      	BRSH _0x1F
0003c5 81e9      	LDD  R30,Y+1
0003c6 78e0      	ANDI R30,LOW(0x80)
0003c7 f411      	BRNE _0x20
0003c8 98d9      	CBI  0x1B,1
0003c9 c001      	RJMP _0x21
                 _0x20:
0003ca 9ad9      	SBI  0x1B,1
                 _0x21:
0003cb 940e 0fbd 	CALL SUBOPT_0x2
0003cd 5f1f      	SUBI R17,-1
0003ce cff4      	RJMP _0x1E
                 _0x1F:
0003cf 81e9      	LDD  R30,Y+1
0003d0 8118      	LDD  R17,Y+0
0003d1 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
0003d3 940e 0fcf 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
0003d5 dfea      	RCALL _SPI_RW_TX
0003d6 93e0 083d 	STS  _result,R30
0003d8 81a8      	LD   R26,Y
0003d9 dfe6      	RCALL _SPI_RW_TX
0003da 940e 0fd5 	CALL SUBOPT_0x4
0003dc 91e0 083d 	LDS  R30,_result
0003de 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 ;	Address -> Y+0
                 ;	Address -> Y+1
                 ;	Address2 -> Y+0
                 ;	command -> Y+0
                 ;	send -> Y+0
                 ;	send -> Y+0
                 _SPI_RW_RX:
                 ; .FSTART _SPI_RW_RX
0003e0 93aa      	ST   -Y,R26
0003e1 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0003e2 e010      	LDI  R17,LOW(0)
                 _0x6B:
0003e3 3018      	CPI  R17,8
0003e4 f450      	BRSH _0x6C
0003e5 81e9      	LDD  R30,Y+1
0003e6 78e0      	ANDI R30,LOW(0x80)
0003e7 f411      	BRNE _0x6D
0003e8 98d9      	CBI  0x1B,1
0003e9 c001      	RJMP _0x6E
                 _0x6D:
0003ea 9ad9      	SBI  0x1B,1
                 _0x6E:
0003eb 940e 0fbd 	CALL SUBOPT_0x2
0003ed 5f1f      	SUBI R17,-1
0003ee cff4      	RJMP _0x6B
                 _0x6C:
0003ef 81e9      	LDD  R30,Y+1
0003f0 8118      	LDD  R17,Y+0
0003f1 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 _SPI_Read_RX:
                 ; .FSTART _SPI_Read_RX
0003f3 931a      	ST   -Y,R17
0003f4 930a      	ST   -Y,R16
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
0003f5 e010      	LDI  R17,0
0003f6 e000      	LDI  R16,LOW(0)
                 _0x74:
0003f7 3008      	CPI  R16,8
0003f8 f478      	BRSH _0x75
                +
0003f9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003fa 958a     +DEC R24
0003fb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003fc 0f11      	LSL  R17
0003fd 9adc      	SBI  0x1B,4
                +
0003fe e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003ff 958a     +DEC R24
000400 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000401 e0e0      	LDI  R30,0
000402 99cd      	SBIC 0x19,5
000403 e0e1      	LDI  R30,1
000404 2b1e      	OR   R17,R30
000405 98dc      	CBI  0x1B,4
000406 5f0f      	SUBI R16,-1
000407 cfef      	RJMP _0x74
                 _0x75:
000408 2fe1      	MOV  R30,R17
000409 9109      	LD   R16,Y+
00040a 9119      	LD   R17,Y+
00040b 9508      	RET
                 ; .FEND
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
00040c 9adb      	SBI  0x1B,3
                +
00040d e788     +LDI R24 , LOW ( 1400 )
00040e e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
00040f 9701     +SBIW R24 , 1
000410 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
000411 98db      	CBI  0x1B,3
000412 9ada      	SBI  0x1B,2
000413 9508      	RET
                 ; .FEND
                 _RF_Write_RX:
                 ; .FSTART _RF_Write_RX
000414 940e 0fcf 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000416 940e 0fda 	CALL SUBOPT_0x5
000418 940e 0fd5 	CALL SUBOPT_0x4
00041a 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write2_RX:
                 ; .FSTART _RF_Write2_RX
00041c 940e 0fcf 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00041e 940e 0fda 	CALL SUBOPT_0x5
000420 81a8      	LD   R26,Y
000421 940e 0fda 	CALL SUBOPT_0x5
000423 81a8      	LD   R26,Y
000424 940e 0fda 	CALL SUBOPT_0x5
000426 940e 0fd5 	CALL SUBOPT_0x4
000428 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 _RF_Write3_RX:
                 ; .FSTART _RF_Write3_RX
00042a 940e 0fcf 	CALL SUBOPT_0x3
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00042c dfb3      	RCALL _SPI_RW_RX
00042d 2da7      	MOV  R26,R7
00042e dfb1      	RCALL _SPI_RW_RX
00042f 2da7      	MOV  R26,R7
000430 dfaf      	RCALL _SPI_RW_RX
000431 2da7      	MOV  R26,R7
000432 dfad      	RCALL _SPI_RW_RX
000433 2da7      	MOV  R26,R7
000434 940e 0fda 	CALL SUBOPT_0x5
000436 940e 0fd5 	CALL SUBOPT_0x4
000438 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 _RF_Command_RX:
                 ; .FSTART _RF_Command_RX
00043a 93aa      	ST   -Y,R26
                 ;	command -> Y+0
00043b 98da      	CBI  0x1B,2
00043c 81a8      	LD   R26,Y
00043d dfa2      	RCALL _SPI_RW_RX
00043e 940e 0fd5 	CALL SUBOPT_0x4
000440 940c 08fb 	JMP  _0x212000C
                 ; .FEND
                 _RF_Write_Address_RX:
                 ; .FSTART _RF_Write_Address_RX
000442 93aa      	ST   -Y,R26
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
000443 98da      	CBI  0x1B,2
000444 e0e3      	LDI  R30,LOW(3)
000445 93ea      	ST   -Y,R30
000446 e0a3      	LDI  R26,LOW(3)
000447 dfcc      	RCALL _RF_Write_RX
000448 940e 0fd5 	CALL SUBOPT_0x4
00044a 98da      	CBI  0x1B,2
00044b e0ea      	LDI  R30,LOW(10)
00044c 93ea      	ST   -Y,R30
00044d 81ac      	LDD  R26,Y+4
00044e dfcd      	RCALL _RF_Write2_RX
00044f e1e0      	LDI  R30,LOW(16)
000450 93ea      	ST   -Y,R30
000451 81ac      	LDD  R26,Y+4
000452 dfc9      	RCALL _RF_Write2_RX
000453 e0eb      	LDI  R30,LOW(11)
000454 93ea      	ST   -Y,R30
000455 81ab      	LDD  R26,Y+3
000456 940e 0fdf 	CALL SUBOPT_0x6
000458 81ab      	LDD  R26,Y+3
000459 dfd0      	RCALL _RF_Write3_RX
00045a e0ec      	LDI  R30,LOW(12)
00045b 93ea      	ST   -Y,R30
00045c 81aa      	LDD  R26,Y+2
00045d 940e 0fdf 	CALL SUBOPT_0x6
00045f 81aa      	LDD  R26,Y+2
000460 dfc9      	RCALL _RF_Write3_RX
000461 e0ed      	LDI  R30,LOW(13)
000462 93ea      	ST   -Y,R30
000463 81a9      	LDD  R26,Y+1
000464 940e 0fdf 	CALL SUBOPT_0x6
000466 81a9      	LDD  R26,Y+1
000467 dfc2      	RCALL _RF_Write3_RX
000468 940c 0919 	JMP  _0x212000B
                 ; .FEND
                 ;	Address1 -> Y+0
                 _RF_Mode_RX:
                 ; .FSTART _RF_Mode_RX
00046a e0e0      	LDI  R30,LOW(0)
00046b 93ea      	ST   -Y,R30
00046c e1af      	LDI  R26,LOW(31)
00046d dfa6      	RCALL _RF_Write_RX
00046e 9adb      	SBI  0x1B,3
00046f 9508      	RET
                 ; .FEND
                 _RF_Config_RX:
                 ; .FSTART _RF_Config_RX
000470 e1ec      	LDI  R30,LOW(28)
000471 940e 0fe4 	CALL SUBOPT_0x7
000473 924a      	ST   -Y,R4
000474 927a      	ST   -Y,R7
000475 926a      	ST   -Y,R6
000476 2da9      	MOV  R26,R9
000477 dfca      	RCALL _RF_Write_Address_RX
000478 e0e2      	LDI  R30,LOW(2)
000479 940e 0fe4 	CALL SUBOPT_0x7
00047b e0e1      	LDI  R30,LOW(1)
00047c 940e 0fe4 	CALL SUBOPT_0x7
00047e 9508      	RET
                 ; .FEND
                 _RF_Read_RX_3:
                 ; .FSTART _RF_Read_RX_3
00047f 98db      	CBI  0x1B,3
000480 940e 0fd5 	CALL SUBOPT_0x4
000482 98da      	CBI  0x1B,2
000483 e6a1      	LDI  R26,LOW(97)
000484 df5b      	RCALL _SPI_RW_RX
                +
000485 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000486 958a     +DEC R24
000487 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000488 df6a      	RCALL _SPI_Read_RX
000489 e0f0      	LDI  R31,0
00048a 93e0 0817 	STS  _station_receive,R30
00048c 93f0 0818 	STS  _station_receive+1,R31
00048e df64      	RCALL _SPI_Read_RX
                +
00048f e1a9     +LDI R26 , LOW ( _station_receive + ( 2 ) )
000490 e0b8     +LDI R27 , HIGH ( _station_receive + ( 2 ) )
                 	__POINTW2MN _station_receive,2
000491 940e 0fe8 	CALL SUBOPT_0x8
                +
000493 e1ab     +LDI R26 , LOW ( _station_receive + ( 4 ) )
000494 e0b8     +LDI R27 , HIGH ( _station_receive + ( 4 ) )
                 	__POINTW2MN _station_receive,4
000495 940e 0fe8 	CALL SUBOPT_0x8
                +
000497 e1ad     +LDI R26 , LOW ( _station_receive + ( 6 ) )
000498 e0b8     +LDI R27 , HIGH ( _station_receive + ( 6 ) )
                 	__POINTW2MN _station_receive,6
000499 940e 0fe8 	CALL SUBOPT_0x8
                +
00049b e1af     +LDI R26 , LOW ( _station_receive + ( 8 ) )
00049c e0b8     +LDI R27 , HIGH ( _station_receive + ( 8 ) )
                 	__POINTW2MN _station_receive,8
00049d 940e 0fe8 	CALL SUBOPT_0x8
                +
00049f e2a1     +LDI R26 , LOW ( _station_receive + ( 10 ) )
0004a0 e0b8     +LDI R27 , HIGH ( _station_receive + ( 10 ) )
                 	__POINTW2MN _station_receive,10
0004a1 e0f0      	LDI  R31,0
0004a2 93ed      	ST   X+,R30
0004a3 93fc      	ST   X,R31
0004a4 9ada      	SBI  0x1B,2
0004a5 9adb      	SBI  0x1B,3
0004a6 e0e7      	LDI  R30,LOW(7)
0004a7 93ea      	ST   -Y,R30
0004a8 e7ae      	LDI  R26,LOW(126)
0004a9 df6a      	RCALL _RF_Write_RX
0004aa eea2      	LDI  R26,LOW(226)
0004ab df8e      	RCALL _RF_Command_RX
0004ac 9508      	RET
                 ; .FEND
                 ;station_info data_send;
                 ;
                 ;void put_string (unsigned char *s) {
                 ; 0000 00B4 void put_string (unsigned char *s) {
                 _put_string:
                 ; .FSTART _put_string
                 ; 0000 00B5     while(*s) {
0004ad 93ba      	ST   -Y,R27
0004ae 93aa      	ST   -Y,R26
                 ;	*s -> Y+0
                 _0xBC:
0004af 81a8      	LD   R26,Y
0004b0 81b9      	LDD  R27,Y+1
0004b1 91ec      	LD   R30,X
0004b2 30e0      	CPI  R30,0
0004b3 f061      	BREQ _0xBE
                 ; 0000 00B6         putchar(*s);
0004b4 91ac      	LD   R26,X
0004b5 dec9      	RCALL _putchar
                 ; 0000 00B7         delay_ms(50);
0004b6 e3a2      	LDI  R26,LOW(50)
0004b7 e0b0      	LDI  R27,0
0004b8 940e 1113 	CALL _delay_ms
                 ; 0000 00B8         s++;
0004ba 81e8      	LD   R30,Y
0004bb 81f9      	LDD  R31,Y+1
0004bc 9631      	ADIW R30,1
0004bd 83e8      	ST   Y,R30
0004be 83f9      	STD  Y+1,R31
                 ; 0000 00B9     }
0004bf cfef      	RJMP _0xBC
                 _0xBE:
                 ; 0000 00BA }
0004c0 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;void refresh(int time_ms) {
                 ; 0000 00BC void refresh(int time_ms) {
                 _refresh:
                 ; .FSTART _refresh
                 ; 0000 00BD     delay_ms(time_ms);
0004c2 940e 0fed 	CALL SUBOPT_0x9
                 ;	time_ms -> Y+0
0004c4 940e 1113 	CALL _delay_ms
                 ; 0000 00BE     glcd_clear();
0004c6 940e 0ff2 	CALL SUBOPT_0xA
                 ; 0000 00BF     glcd_moveto(0,0);
                 ; 0000 00C0     glcd_outtext(buff);
0004c8 940e 0ff9 	CALL SUBOPT_0xB
                 ; 0000 00C1     del_string(buff);
0004ca eca8      	LDI  R26,LOW(_buff)
0004cb e0b6      	LDI  R27,HIGH(_buff)
0004cc dde0      	RCALL _del_string
                 ; 0000 00C2     i = 0;
0004cd e0e0      	LDI  R30,LOW(0)
0004ce 93e0 07cc 	STS  _i,R30
0004d0 93e0 07cd 	STS  _i+1,R30
                 ; 0000 00C3 }
0004d2 940c 0868 	JMP  _0x212000D
                 ; .FEND
                 ;
                 ;bool wait_until(unsigned char *keyword, int time_out_s) {
                 ; 0000 00C5 _Bool wait_until(unsigned char *keyword, int time_out_s) {
                 _wait_until:
                 ; .FSTART _wait_until
                 ; 0000 00C6     /*     deu biet cai temp2 de lam gi nhung khong co thi no khong chay trong 1 so truong hop @@
                 ; 0000 00C7         Vi du nhap vao "Hell" thi no se tach thua ra them 2 char. Co the do vi tri o nho. Cha biet @@*/
                 ; 0000 00C8     char temp[20], temp2[20];
                 ; 0000 00C9     int i = 0, time_start, time_temp;
                 ; 0000 00CA 
                 ; 0000 00CB     del_string(temp);
0004d4 93ba      	ST   -Y,R27
0004d5 93aa      	ST   -Y,R26
0004d6 97a8      	SBIW R28,40
0004d7 940e 117a 	CALL __SAVELOCR6
                 ;	*keyword -> Y+48
                 ;	time_out_s -> Y+46
                 ;	temp -> Y+26
                 ;	temp2 -> Y+6
                 ;	i -> R16,R17
                 ;	time_start -> R18,R19
                 ;	time_temp -> R20,R21
                +
0004d9 e000     +LDI R16 , LOW ( 0 )
0004da e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0004db 01de      	MOVW R26,R28
0004dc 965a      	ADIW R26,26
0004dd ddcf      	RCALL _del_string
                 ; 0000 00CC 
                 ; 0000 00CD     while (*keyword) {
                 _0xBF:
0004de a9a8      	LDD  R26,Y+48
0004df a9b9      	LDD  R27,Y+48+1
0004e0 91ec      	LD   R30,X
0004e1 30e0      	CPI  R30,0
0004e2 f101      	BREQ _0xC1
                 ; 0000 00CE         temp[i] = *keyword;
0004e3 01f8      	MOVW R30,R16
0004e4 01de      	MOVW R26,R28
0004e5 965a      	ADIW R26,26
0004e6 0fea      	ADD  R30,R26
0004e7 1ffb      	ADC  R31,R27
0004e8 010f      	MOVW R0,R30
0004e9 a9a8      	LDD  R26,Y+48
0004ea a9b9      	LDD  R27,Y+48+1
0004eb 91ec      	LD   R30,X
0004ec 01d0      	MOVW R26,R0
0004ed 93ec      	ST   X,R30
                 ; 0000 00CF         temp2[i] = temp[i];
0004ee 01f8      	MOVW R30,R16
0004ef 01de      	MOVW R26,R28
0004f0 9616      	ADIW R26,6
0004f1 0fea      	ADD  R30,R26
0004f2 1ffb      	ADC  R31,R27
0004f3 010f      	MOVW R0,R30
0004f4 01de      	MOVW R26,R28
0004f5 965a      	ADIW R26,26
0004f6 0fa0      	ADD  R26,R16
0004f7 1fb1      	ADC  R27,R17
0004f8 91ec      	LD   R30,X
0004f9 01d0      	MOVW R26,R0
0004fa 93ec      	ST   X,R30
                 ; 0000 00D0         keyword++;
0004fb a9e8      	LDD  R30,Y+48
0004fc a9f9      	LDD  R31,Y+48+1
0004fd 9631      	ADIW R30,1
0004fe abe8      	STD  Y+48,R30
0004ff abf9      	STD  Y+48+1,R31
                 ; 0000 00D1         i++;
                +
000500 5f0f     +SUBI R16 , LOW ( - 1 )
000501 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 00D2     }
000502 cfdb      	RJMP _0xBF
                 _0xC1:
                 ; 0000 00D3 
                 ; 0000 00D4     time_start = time_s;
                +
000503 9120 07ce+LDS R18 , 0 + ( _time_s )
000505 9130 07cf+LDS R19 , 0 + ( _time_s ) + 1
                 	__GETWRMN 18,19,0,_time_s
                 ; 0000 00D5 
                 ; 0000 00D6     while (1) {
                 _0xC2:
                 ; 0000 00D7         if (time_s < time_start) {
000507 91a0 07ce 	LDS  R26,_time_s
000509 91b0 07cf 	LDS  R27,_time_s+1
00050b 17a2      	CP   R26,R18
00050c 07b3      	CPC  R27,R19
00050d f45c      	BRGE _0xC5
                 ; 0000 00D8             time_temp = time_s + 60;
00050e 91e0 07ce 	LDS  R30,_time_s
000510 91f0 07cf 	LDS  R31,_time_s+1
000512 96fc      	ADIW R30,60
000513 01af      	MOVW R20,R30
                 ; 0000 00D9             if (time_temp - time_start > time_out_s) {
000514 01da      	MOVW R26,R20
000515 940e 0ffd 	CALL SUBOPT_0xC
000517 f11c      	BRLT _0x212000F
                 ; 0000 00DA                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00DB                 return false;
                 ; 0000 00DC             }
                 ; 0000 00DD         } else {
000518 c007      	RJMP _0xC7
                 _0xC5:
                 ; 0000 00DE             if (time_s - time_start > time_out_s) {
000519 91a0 07ce 	LDS  R26,_time_s
00051b 91b0 07cf 	LDS  R27,_time_s+1
00051d 940e 0ffd 	CALL SUBOPT_0xC
00051f f0dc      	BRLT _0x212000F
                 ; 0000 00DF                 //glcd_outtext("Timed out\r\n");
                 ; 0000 00E0                 return false;
                 ; 0000 00E1             }
                 ; 0000 00E2         }
                 _0xC7:
                 ; 0000 00E3 
                 ; 0000 00E4         if ((strstr(buff, temp)) || (strstr(buff, temp2))) {
000520 940e 1004 	CALL SUBOPT_0xD
000522 01de      	MOVW R26,R28
000523 965c      	ADIW R26,28
000524 940e 07d1 	CALL _strstr
000526 9730      	SBIW R30,0
000527 f441      	BRNE _0xCA
000528 940e 1004 	CALL SUBOPT_0xD
00052a 01de      	MOVW R26,R28
00052b 9618      	ADIW R26,8
00052c 940e 07d1 	CALL _strstr
00052e 9730      	SBIW R30,0
00052f f011      	BREQ _0xC9
                 _0xCA:
                 ; 0000 00E5             return true;
000530 e0e1      	LDI  R30,LOW(1)
000531 c00a      	RJMP _0x2120010
                 ; 0000 00E6         }
                 ; 0000 00E7         if (strstr(buff, "ERROR")) {
                 _0xC9:
000532 940e 1004 	CALL SUBOPT_0xD
                +
000534 e4a4     +LDI R26 , LOW ( _0xCD + ( 0 ) )
000535 e0b5     +LDI R27 , HIGH ( _0xCD + ( 0 ) )
                 	__POINTW2MN _0xCD,0
000536 940e 07d1 	CALL _strstr
000538 9730      	SBIW R30,0
000539 f409      	BRNE _0x212000F
                 ; 0000 00E8             /*glcd_outtext("Error found, attempting to continue..\r\n");
                 ; 0000 00E9             delay_ms(3000);
                 ; 0000 00EA             glcd_clear();
                 ; 0000 00EB             glcd_moveto(0,0);*/
                 ; 0000 00EC             return false;
                 ; 0000 00ED             //nen lam them ve cai nay nua
                 ; 0000 00EE         }
                 ; 0000 00EF     }
00053a cfcc      	RJMP _0xC2
                 ; 0000 00F0 	return false;
                 _0x212000F:
00053b e0e0      	LDI  R30,LOW(0)
                 _0x2120010:
00053c 940e 1181 	CALL __LOADLOCR6
00053e 96e2      	ADIW R28,50
00053f 9508      	RET
                 ; 0000 00F1 }
                 ; .FEND
                 
                 	.DSEG
                 _0xCD:
000544           	.BYTE 0x6
                 ;
                 ;
                 ;bool read_and_send(unsigned char *s){
                 ; 0000 00F4 _Bool read_and_send(unsigned char *s){
                 
                 	.CSEG
                 _read_and_send:
                 ; .FSTART _read_and_send
                 ; 0000 00F5     // Thay nhung ham respones_read bang ham wait_until
                 ; 0000 00F6     char api_key[20], cmd[] = "GET /update?key=", temp[20], temp2[20];
                 ; 0000 00F7     int length = 0, i = 0;
                 ; 0000 00F8 
                 ; 0000 00F9     while (*s) {
000540 93ba      	ST   -Y,R27
000541 93aa      	ST   -Y,R26
000542 97ef      	SBIW R28,63
000543 972e      	SBIW R28,14
000544 e181      	LDI  R24,17
000545 e2a8      	LDI  R26,LOW(40)
000546 e0b0      	LDI  R27,HIGH(40)
000547 e9ee      	LDI  R30,LOW(_0xCE*2)
000548 e0f2      	LDI  R31,HIGH(_0xCE*2)
000549 940e 1188 	CALL __INITLOCB
00054b 940e 117c 	CALL __SAVELOCR4
                 ;	*s -> Y+81
                 ;	api_key -> Y+61
                 ;	cmd -> Y+44
                 ;	temp -> Y+24
                 ;	temp2 -> Y+4
                 ;	length -> R16,R17
                 ;	i -> R18,R19
                +
00054d e000     +LDI R16 , LOW ( 0 )
00054e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00054f e020     +LDI R18 , LOW ( 0 )
000550 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCF:
000551 940e 1009 	CALL SUBOPT_0xE
000553 30e0      	CPI  R30,0
000554 f0f9      	BREQ _0xD1
                 ; 0000 00FA         temp2[i] = *s;
000555 01f9      	MOVW R30,R18
000556 01de      	MOVW R26,R28
000557 9614      	ADIW R26,4
000558 0fea      	ADD  R30,R26
000559 1ffb      	ADC  R31,R27
00055a 01bf      	MOVW R22,R30
00055b 940e 1009 	CALL SUBOPT_0xE
00055d 01db      	MOVW R26,R22
00055e 93ec      	ST   X,R30
                 ; 0000 00FB         api_key[i] = temp2[i];
00055f 01f9      	MOVW R30,R18
000560 01de      	MOVW R26,R28
000561 96dd      	ADIW R26,61
000562 0fea      	ADD  R30,R26
000563 1ffb      	ADC  R31,R27
000564 010f      	MOVW R0,R30
000565 01de      	MOVW R26,R28
000566 9614      	ADIW R26,4
000567 0fa2      	ADD  R26,R18
000568 1fb3      	ADC  R27,R19
000569 91ec      	LD   R30,X
00056a 01d0      	MOVW R26,R0
00056b 93ec      	ST   X,R30
                 ; 0000 00FC         s++;
00056c 01de      	MOVW R26,R28
00056d 5aaf      	SUBI R26,LOW(-(81))
00056e 4fbf      	SBCI R27,HIGH(-(81))
00056f 940e 0fb7 	CALL SUBOPT_0x1
                 ; 0000 00FD         i++;
                +
000571 5f2f     +SUBI R18 , LOW ( - 1 )
000572 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 00FE     }
000573 cfdd      	RJMP _0xCF
                 _0xD1:
                 ; 0000 00FF 
                 ; 0000 0100     put_string("AT+CIPMODE=0");
                +
000574 e4aa     +LDI R26 , LOW ( _0xD2 + ( 0 ) )
000575 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 0 ) )
                 	__POINTW2MN _0xD2,0
000576 940e 1011 	CALL SUBOPT_0xF
                 ; 0000 0101     delay_ms(300);
                 ; 0000 0102     put_string("\r\n");
                +
000578 e5a7     +LDI R26 , LOW ( _0xD2 + ( 13 ) )
000579 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 13 ) )
                 	__POINTW2MN _0xD2,13
00057a df32      	RCALL _put_string
                 ; 0000 0103     wait_until("OK", 2);
                +
00057b e5ea     +LDI R30 , LOW ( _0xD2 + ( 16 ) )
00057c e0f5     +LDI R31 , HIGH ( _0xD2 + ( 16 ) )
                 	__POINTW1MN _0xD2,16
00057d 940e 1017 	CALL SUBOPT_0x10
                 ; 0000 0104     refresh(0);
                 ; 0000 0105 
                 ; 0000 0106     put_string("AT+CIPMUX=1");
                +
00057f e5ad     +LDI R26 , LOW ( _0xD2 + ( 19 ) )
000580 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 19 ) )
                 	__POINTW2MN _0xD2,19
000581 940e 1011 	CALL SUBOPT_0xF
                 ; 0000 0107     delay_ms(300);
                 ; 0000 0108     put_string("\r\n");
                +
000583 e6a9     +LDI R26 , LOW ( _0xD2 + ( 31 ) )
000584 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 31 ) )
                 	__POINTW2MN _0xD2,31
000585 df27      	RCALL _put_string
                 ; 0000 0109     wait_until("OK", 2);
                +
000586 e6ec     +LDI R30 , LOW ( _0xD2 + ( 34 ) )
000587 e0f5     +LDI R31 , HIGH ( _0xD2 + ( 34 ) )
                 	__POINTW1MN _0xD2,34
000588 940e 1017 	CALL SUBOPT_0x10
                 ; 0000 010A     refresh(0);
                 ; 0000 010B 
                 ; 0000 010C 
                 ; 0000 010D 
                 ; 0000 010E     put_string("AT+CIPSTART=0,\"TCP\",\"api.thingspeak.com\",80");
                +
00058a e6af     +LDI R26 , LOW ( _0xD2 + ( 37 ) )
00058b e0b5     +LDI R27 , HIGH ( _0xD2 + ( 37 ) )
                 	__POINTW2MN _0xD2,37
00058c 940e 1011 	CALL SUBOPT_0xF
                 ; 0000 010F     delay_ms(300);
                 ; 0000 0110     put_string("\r\n");
                +
00058e e9ab     +LDI R26 , LOW ( _0xD2 + ( 81 ) )
00058f e0b5     +LDI R27 , HIGH ( _0xD2 + ( 81 ) )
                 	__POINTW2MN _0xD2,81
000590 df1c      	RCALL _put_string
                 ; 0000 0111     if(!wait_until("OK", 10))
                +
000591 e9ee     +LDI R30 , LOW ( _0xD2 + ( 84 ) )
000592 e0f5     +LDI R31 , HIGH ( _0xD2 + ( 84 ) )
                 	__POINTW1MN _0xD2,84
000593 940e 1021 	CALL SUBOPT_0x11
000595 f411      	BRNE _0xD3
                 ; 0000 0112         return false;
000596 e0e0      	LDI  R30,LOW(0)
000597 c08c      	RJMP _0x212000E
                 ; 0000 0113     refresh(2000);
                 _0xD3:
000598 eda0      	LDI  R26,LOW(2000)
000599 e0b7      	LDI  R27,HIGH(2000)
00059a df27      	RCALL _refresh
                 ; 0000 0114 
                 ; 0000 0115     glcd_clear();
00059b 940e 0ff2 	CALL SUBOPT_0xA
                 ; 0000 0116     glcd_moveto(0,0);
                 ; 0000 0117     glcd_outtext("Server connected");
                +
00059d eaa1     +LDI R26 , LOW ( _0xD2 + ( 87 ) )
00059e e0b5     +LDI R27 , HIGH ( _0xD2 + ( 87 ) )
                 	__POINTW2MN _0xD2,87
00059f 940e 0c71 	CALL _glcd_outtext
                 ; 0000 0118 
                 ; 0000 0119     strcat(cmd, api_key);
0005a1 940e 1029 	CALL SUBOPT_0x12
0005a3 01de      	MOVW R26,R28
0005a4 96df      	ADIW R26,63
0005a5 940e 07a7 	CALL _strcat
                 ; 0000 011A     strcat(cmd, "&field1=");
0005a7 940e 1029 	CALL SUBOPT_0x12
                +
0005a9 eba2     +LDI R26 , LOW ( _0xD2 + ( 104 ) )
0005aa e0b5     +LDI R27 , HIGH ( _0xD2 + ( 104 ) )
                 	__POINTW2MN _0xD2,104
0005ab 940e 07a7 	CALL _strcat
                 ; 0000 011B     itoa(station_receive.temp, temp);
                +
0005ad 91e0 081d+LDS R30 , _station_receive + ( 6 )
0005af 91f0 081e+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
0005b1 940e 102e 	CALL SUBOPT_0x13
                 ; 0000 011C     //itoa(200, temp);
                 ; 0000 011D     strcat(cmd, temp);
0005b3 940e 1035 	CALL SUBOPT_0x14
                 ; 0000 011E 
                 ; 0000 011F     length = strlen(temp);
0005b5 018f      	MOVW R16,R30
                 ; 0000 0120 
                 ; 0000 0121     strcat(cmd, "&field2=");
0005b6 940e 1029 	CALL SUBOPT_0x12
                +
0005b8 ebab     +LDI R26 , LOW ( _0xD2 + ( 113 ) )
0005b9 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 113 ) )
                 	__POINTW2MN _0xD2,113
0005ba 940e 07a7 	CALL _strcat
                 ; 0000 0122     itoa(station_receive.humi, temp);
                +
0005bc 91e0 081b+LDS R30 , _station_receive + ( 4 )
0005be 91f0 081c+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
0005c0 940e 102e 	CALL SUBOPT_0x13
                 ; 0000 0123     //itoa(200, temp);
                 ; 0000 0124     strcat(cmd, temp);
0005c2 940e 1035 	CALL SUBOPT_0x14
                 ; 0000 0125 
                 ; 0000 0126     length += strlen(temp);
                +
0005c4 0f0e     +ADD R16 , R30
0005c5 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0127 
                 ; 0000 0128     strcat(cmd, "&field3=");
0005c6 940e 1029 	CALL SUBOPT_0x12
                +
0005c8 eca4     +LDI R26 , LOW ( _0xD2 + ( 122 ) )
0005c9 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 122 ) )
                 	__POINTW2MN _0xD2,122
0005ca 940e 07a7 	CALL _strcat
                 ; 0000 0129     itoa(station_receive.water, temp);
                +
0005cc 91e0 0821+LDS R30 , _station_receive + ( 10 )
0005ce 91f0 0822+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
0005d0 940e 102e 	CALL SUBOPT_0x13
                 ; 0000 012A     //itoa(200, temp);
                 ; 0000 012B     strcat(cmd, temp);
0005d2 940e 1035 	CALL SUBOPT_0x14
                 ; 0000 012C 
                 ; 0000 012D     length += strlen(temp);
                +
0005d4 0f0e     +ADD R16 , R30
0005d5 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 012E 
                 ; 0000 012F     glcd_clear();
0005d6 940e 0ff2 	CALL SUBOPT_0xA
                 ; 0000 0130     glcd_moveto(0,0);
                 ; 0000 0131     glcd_outtext(cmd);
0005d8 01de      	MOVW R26,R28
0005d9 969c      	ADIW R26,44
0005da 940e 0c71 	CALL _glcd_outtext
                 ; 0000 0132 
                 ; 0000 0133     length += 58;//strlen(cmd);
                +
0005dc 5c06     +SUBI R16 , LOW ( - 58 )
0005dd 4f1f     +SBCI R17 , HIGH ( - 58 )
                 	__ADDWRN 16,17,58
                 ; 0000 0134     //length += 2;
                 ; 0000 0135 
                 ; 0000 0136     itoa(length, temp);
0005de 931a      	ST   -Y,R17
0005df 930a      	ST   -Y,R16
0005e0 01de      	MOVW R26,R28
0005e1 965a      	ADIW R26,26
0005e2 940e 07e8 	CALL _itoa
                 ; 0000 0137     glcd_moveto(0, 40);
0005e4 e0e0      	LDI  R30,LOW(0)
0005e5 93ea      	ST   -Y,R30
0005e6 e2a8      	LDI  R26,LOW(40)
0005e7 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 0138     glcd_outtext(temp);
0005e9 01de      	MOVW R26,R28
0005ea 9658      	ADIW R26,24
0005eb 940e 0c71 	CALL _glcd_outtext
                 ; 0000 0139     delay_ms(3000);
0005ed eba8      	LDI  R26,LOW(3000)
0005ee e0bb      	LDI  R27,HIGH(3000)
0005ef 940e 1113 	CALL _delay_ms
                 ; 0000 013A 
                 ; 0000 013B 
                 ; 0000 013C 
                 ; 0000 013D     put_string("AT+CIPSEND=0,");
                +
0005f1 ecad     +LDI R26 , LOW ( _0xD2 + ( 131 ) )
0005f2 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 131 ) )
                 	__POINTW2MN _0xD2,131
0005f3 940e 1011 	CALL SUBOPT_0xF
                 ; 0000 013E     delay_ms(300);
                 ; 0000 013F     put_string(temp);
0005f5 01de      	MOVW R26,R28
0005f6 9658      	ADIW R26,24
0005f7 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 0140     delay_ms(1000);
                 ; 0000 0141     put_string("\r\n");
                +
0005f9 edab     +LDI R26 , LOW ( _0xD2 + ( 145 ) )
0005fa e0b5     +LDI R27 , HIGH ( _0xD2 + ( 145 ) )
                 	__POINTW2MN _0xD2,145
0005fb deb1      	RCALL _put_string
                 ; 0000 0142 
                 ; 0000 0143     if(!wait_until("> ", 10))
                +
0005fc edee     +LDI R30 , LOW ( _0xD2 + ( 148 ) )
0005fd e0f5     +LDI R31 , HIGH ( _0xD2 + ( 148 ) )
                 	__POINTW1MN _0xD2,148
0005fe 940e 1021 	CALL SUBOPT_0x11
000600 f411      	BRNE _0xD4
                 ; 0000 0144         return false;
000601 e0e0      	LDI  R30,LOW(0)
000602 c021      	RJMP _0x212000E
                 ; 0000 0145 
                 ; 0000 0146     glcd_clear();
                 _0xD4:
000603 940e 0ff2 	CALL SUBOPT_0xA
                 ; 0000 0147     glcd_moveto(0,0);
                 ; 0000 0148     glcd_outtext("Sending");
                +
000605 eea1     +LDI R26 , LOW ( _0xD2 + ( 151 ) )
000606 e0b5     +LDI R27 , HIGH ( _0xD2 + ( 151 ) )
                 	__POINTW2MN _0xD2,151
000607 940e 0c71 	CALL _glcd_outtext
                 ; 0000 0149 
                 ; 0000 014A     put_string(cmd);
000609 01de      	MOVW R26,R28
00060a 969c      	ADIW R26,44
00060b dea1      	RCALL _put_string
                 ; 0000 014B     put_string("\r\n");
                +
00060c eea9     +LDI R26 , LOW ( _0xD2 + ( 159 ) )
00060d e0b5     +LDI R27 , HIGH ( _0xD2 + ( 159 ) )
                 	__POINTW2MN _0xD2,159
00060e 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 014C     delay_ms(1000);
                 ; 0000 014D     putchar(0x1A);
000610 e1aa      	LDI  R26,LOW(26)
000611 dd6d      	RCALL _putchar
                 ; 0000 014E 
                 ; 0000 014F     refresh(0);
000612 e0a0      	LDI  R26,LOW(0)
000613 e0b0      	LDI  R27,0
000614 dead      	RCALL _refresh
                 ; 0000 0150     if(!wait_until("IDP", 5))
                +
000615 eeec     +LDI R30 , LOW ( _0xD2 + ( 162 ) )
000616 e0f5     +LDI R31 , HIGH ( _0xD2 + ( 162 ) )
                 	__POINTW1MN _0xD2,162
000617 93fa      	ST   -Y,R31
000618 93ea      	ST   -Y,R30
000619 e0a5      	LDI  R26,LOW(5)
00061a e0b0      	LDI  R27,0
00061b deb8      	RCALL _wait_until
00061c 30e0      	CPI  R30,0
00061d f411      	BRNE _0xD5
                 ; 0000 0151         return false;
00061e e0e0      	LDI  R30,LOW(0)
00061f c004      	RJMP _0x212000E
                 ; 0000 0152     del_string(cmd);
                 _0xD5:
000620 01de      	MOVW R26,R28
000621 969c      	ADIW R26,44
000622 dc8a      	RCALL _del_string
                 ; 0000 0153     return true;
000623 e0e1      	LDI  R30,LOW(1)
                 _0x212000E:
000624 940e 1183 	CALL __LOADLOCR4
000626 96ef      	ADIW R28,63
000627 9664      	ADIW R28,20
000628 9508      	RET
                 ; 0000 0154 
                 ; 0000 0155 }
                 ; .FEND
                 
                 	.DSEG
                 _0xD2:
00054a           	.BYTE 0xA6
                 ;
                 ;void print_border(){
                 ; 0000 0157 void print_border(){
                 
                 	.CSEG
                 _print_border:
                 ; .FSTART _print_border
                 ; 0000 0158     glcd_line(48,0, 48, 15);
000629 e3e0      	LDI  R30,LOW(48)
00062a 93ea      	ST   -Y,R30
00062b e0e0      	LDI  R30,LOW(0)
00062c 940e 1043 	CALL SUBOPT_0x16
                 ; 0000 0159     glcd_line(0, 15, 48, 15);
00062e e0ef      	LDI  R30,LOW(15)
00062f 940e 1043 	CALL SUBOPT_0x16
                 ; 0000 015A 
                 ; 0000 015B     glcd_line(0,0,84,0);
000631 e0e0      	LDI  R30,LOW(0)
000632 93ea      	ST   -Y,R30
000633 e5e4      	LDI  R30,LOW(84)
000634 93ea      	ST   -Y,R30
000635 e0a0      	LDI  R26,LOW(0)
000636 940e 0ca7 	CALL _glcd_line
                 ; 0000 015C     glcd_line(84,0, 84, 48);
000638 e5e4      	LDI  R30,LOW(84)
000639 93ea      	ST   -Y,R30
00063a e0e0      	LDI  R30,LOW(0)
00063b 940e 104c 	CALL SUBOPT_0x17
                 ; 0000 015D     glcd_line(0, 48, 84, 48);
00063d e3e0      	LDI  R30,LOW(48)
00063e 940e 104c 	CALL SUBOPT_0x17
                 ; 0000 015E     glcd_line(0, 0, 0, 48);
000640 e0e0      	LDI  R30,LOW(0)
000641 93ea      	ST   -Y,R30
000642 93ea      	ST   -Y,R30
000643 e3a0      	LDI  R26,LOW(48)
000644 940e 0ca7 	CALL _glcd_line
                 ; 0000 015F     glcd_moveto(3,3);
000646 e0e3      	LDI  R30,LOW(3)
000647 93ea      	ST   -Y,R30
000648 e0a3      	LDI  R26,LOW(3)
000649 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 0160     glcd_outtext("Node: ");
                +
00064b efa0     +LDI R26 , LOW ( _0xD6 + ( 0 ) )
00064c e0b5     +LDI R27 , HIGH ( _0xD6 + ( 0 ) )
                 	__POINTW2MN _0xD6,0
00064d 940e 1055 	CALL SUBOPT_0x18
                 ; 0000 0161 
                 ; 0000 0162     glcd_moveto(4, 18);
00064f e1a2      	LDI  R26,LOW(18)
000650 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 0163     glcd_outtext("Temp: ");
                +
000652 efa7     +LDI R26 , LOW ( _0xD6 + ( 7 ) )
000653 e0b5     +LDI R27 , HIGH ( _0xD6 + ( 7 ) )
                 	__POINTW2MN _0xD6,7
000654 940e 1055 	CALL SUBOPT_0x18
                 ; 0000 0164     glcd_moveto(4, 28);
000656 e1ac      	LDI  R26,LOW(28)
000657 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 0165     glcd_outtext("Humid: ");
                +
000659 efae     +LDI R26 , LOW ( _0xD6 + ( 14 ) )
00065a e0b5     +LDI R27 , HIGH ( _0xD6 + ( 14 ) )
                 	__POINTW2MN _0xD6,14
00065b 940e 1055 	CALL SUBOPT_0x18
                 ; 0000 0166     glcd_moveto(4, 37);
00065d e2a5      	LDI  R26,LOW(37)
00065e 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 0167     glcd_outtext("Water: ");
                +
000660 e0a6     +LDI R26 , LOW ( _0xD6 + ( 22 ) )
000661 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 22 ) )
                 	__POINTW2MN _0xD6,22
000662 940e 0c71 	CALL _glcd_outtext
                 ; 0000 0168     glcd_moveto(67, 28);
000664 e4e3      	LDI  R30,LOW(67)
000665 93ea      	ST   -Y,R30
000666 e1ac      	LDI  R26,LOW(28)
000667 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 0169     glcd_putchar(37);
000669 e2a5      	LDI  R26,LOW(37)
00066a 940e 0c0f 	CALL _glcd_putchar
                 ; 0000 016A     glcd_moveto(67, 37);
00066c e4e3      	LDI  R30,LOW(67)
00066d 93ea      	ST   -Y,R30
00066e e2a5      	LDI  R26,LOW(37)
00066f 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 016B     glcd_outtext("mm");
                +
000671 e0ae     +LDI R26 , LOW ( _0xD6 + ( 30 ) )
000672 e0b6     +LDI R27 , HIGH ( _0xD6 + ( 30 ) )
                 	__POINTW2MN _0xD6,30
000673 940e 0c71 	CALL _glcd_outtext
                 ; 0000 016C }
000675 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xD6:
0005f0           	.BYTE 0x21
                 ;
                 ;void check_do_rac(int value){
                 ; 0000 016E void check_do_rac(int value){
                 
                 	.CSEG
                 ; 0000 016F     if(value == 1)
                 ;	value -> Y+0
                 ; 0000 0170         P_Add = 0xA1;
                 ; 0000 0171     else if(value == 2)
                 ; 0000 0172         P_Add = 0xA2;
                 ; 0000 0173     else if(value == 3)
                 ; 0000 0174         P_Add = 0xA3;
                 ; 0000 0175     else
                 ; 0000 0176         P_Add = 0xA4;
                 ; 0000 0177     RF_Config_TX();
                 ; 0000 0178     RF_Mode_TX();
                 ; 0000 0179     RF_Send_TX(data_send);
                 ; 0000 017A     delay_ms(100);
                 ; 0000 017B     RF_Send_TX(data_send);
                 ; 0000 017C     delay_ms(500);
                 ; 0000 017D     RF_Config_RX_2();
                 ; 0000 017E     RF_Mode_RX();
                 ; 0000 017F         if(IRQ == 0){
                 ; 0000 0180            RF_Read_RX_3();
                 ; 0000 0181            print_border();
                 ; 0000 0182            //if(station_receive.flag == count){
                 ; 0000 0183             glcd_moveto(40, 3);
                 ; 0000 0184             itoa(station_receive.flag, buff);
                 ; 0000 0185             glcd_outtext(buff);
                 ; 0000 0186             glcd_moveto(46, 18);
                 ; 0000 0187             sprintf(buff, "%d ", station_receive.temp);
                 ; 0000 0188             glcd_outtext(buff);
                 ; 0000 0189             glcd_moveto(46, 28);
                 ; 0000 018A             sprintf(buff, "%d ", station_receive.humi);
                 ; 0000 018B             glcd_outtext(buff);
                 ; 0000 018C             glcd_moveto(46, 37);
                 ; 0000 018D             sprintf(buff, "%d  ", station_receive.water);
                 ; 0000 018E             glcd_outtext(buff);
                 ; 0000 018F             delay_ms(2000);
                 ; 0000 0190             /*count++;
                 ; 0000 0191             if(count == 5)
                 ; 0000 0192                 count = 1;
                 ; 0000 0193         }     */
                 ; 0000 0194 
                 ; 0000 0195         }
                 ; 0000 0196     }
                 ;
                 ;void main(void) {
                 ; 0000 0198 void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 0199 
                 ; 0000 019A // Declare your local variables here
                 ; 0000 019B // Variable used to store graphic display
                 ; 0000 019C // controller initialization data
                 ; 0000 019D     GLCDINIT_t glcd_init_data;
                 ; 0000 019E 
                 ; 0000 019F DDRA=(0<<DDA7) | (1<<DDA6) | (0<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (0<<DDA0);
000676 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
000677 e5ee      	LDI  R30,LOW(94)
000678 bbea      	OUT  0x1A,R30
                 ; 0000 01A0 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01A1 PORTA=(0<<PORTA7) | (0<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
000679 e3ef      	LDI  R30,LOW(63)
00067a bbeb      	OUT  0x1B,R30
                 ; 0000 01A2 // Port B initialization
                 ; 0000 01A3 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01A4     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00067b e0e8      	LDI  R30,LOW(8)
00067c bbe7      	OUT  0x17,R30
                 ; 0000 01A5 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01A6     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00067d e0e0      	LDI  R30,LOW(0)
00067e bbe8      	OUT  0x18,R30
                 ; 0000 01A7 
                 ; 0000 01A8 // Port C initialization
                 ; 0000 01A9 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01AA     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00067f bbe4      	OUT  0x14,R30
                 ; 0000 01AB // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01AC     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (1<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000680 e0e8      	LDI  R30,LOW(8)
000681 bbe5      	OUT  0x15,R30
                 ; 0000 01AD 
                 ; 0000 01AE // Port D initialization
                 ; 0000 01AF // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01B0     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000682 e0e0      	LDI  R30,LOW(0)
000683 bbe1      	OUT  0x11,R30
                 ; 0000 01B1 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01B2     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000684 bbe2      	OUT  0x12,R30
                 ; 0000 01B3 
                 ; 0000 01B4 // Port E initialization
                 ; 0000 01B5 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01B6     DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
000685 b9e2      	OUT  0x2,R30
                 ; 0000 01B7 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01B8     PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
000686 b9e3      	OUT  0x3,R30
                 ; 0000 01B9 
                 ; 0000 01BA // Port F initialization
                 ; 0000 01BB // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01BC     DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
000687 93e0 0061 	STS  97,R30
                 ; 0000 01BD // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01BE     PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
000689 93e0 0062 	STS  98,R30
                 ; 0000 01BF 
                 ; 0000 01C0 // Port G initialization
                 ; 0000 01C1 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 01C2     DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
00068b 93e0 0064 	STS  100,R30
                 ; 0000 01C3 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 01C4     PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
00068d 93e0 0065 	STS  101,R30
                 ; 0000 01C5 
                 ; 0000 01C6 // Timer/Counter 0 initialization
                 ; 0000 01C7 // Clock source: System Clock
                 ; 0000 01C8 // Clock value: 8000.000 kHz
                 ; 0000 01C9 // Mode: Normal top=0xFF
                 ; 0000 01CA // OC0 output: Disconnected
                 ; 0000 01CB // Timer Period: 0.02 ms
                 ; 0000 01CC 
                 ; 0000 01CD         ASSR=0<<AS0;
00068f bfe0      	OUT  0x30,R30
                 ; 0000 01CE         TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00);
000690 e0e1      	LDI  R30,LOW(1)
000691 bfe3      	OUT  0x33,R30
                 ; 0000 01CF         TCNT0=0x60;
000692 e6e0      	LDI  R30,LOW(96)
000693 bfe2      	OUT  0x32,R30
                 ; 0000 01D0         OCR0=0x00;
000694 e0e0      	LDI  R30,LOW(0)
000695 bfe1      	OUT  0x31,R30
                 ; 0000 01D1 
                 ; 0000 01D2 // Timer/Counter 1 initialization
                 ; 0000 01D3 // Clock source: System Clock
                 ; 0000 01D4 // Clock value: Timer1 Stopped
                 ; 0000 01D5 // Mode: Normal top=0xFFFF
                 ; 0000 01D6 // OC1A output: Disconnected
                 ; 0000 01D7 // OC1B output: Disconnected
                 ; 0000 01D8 // OC1C output: Disconnected
                 ; 0000 01D9 // Noise Canceler: Off
                 ; 0000 01DA // Input Capture on Falling Edge
                 ; 0000 01DB // Timer1 Overflow Interrupt: Off
                 ; 0000 01DC // Input Capture Interrupt: Off
                 ; 0000 01DD // Compare A Match Interrupt: Off
                 ; 0000 01DE // Compare B Match Interrupt: Off
                 ; 0000 01DF // Compare C Match Interrupt: Off
                 ; 0000 01E0     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
000696 bdef      	OUT  0x2F,R30
                 ; 0000 01E1     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000697 bdee      	OUT  0x2E,R30
                 ; 0000 01E2     TCNT1H=0x00;
000698 bded      	OUT  0x2D,R30
                 ; 0000 01E3     TCNT1L=0x00;
000699 bdec      	OUT  0x2C,R30
                 ; 0000 01E4     ICR1H=0x00;
00069a bde7      	OUT  0x27,R30
                 ; 0000 01E5     ICR1L=0x00;
00069b bde6      	OUT  0x26,R30
                 ; 0000 01E6     OCR1AH=0x00;
00069c bdeb      	OUT  0x2B,R30
                 ; 0000 01E7     OCR1AL=0x00;
00069d bdea      	OUT  0x2A,R30
                 ; 0000 01E8     OCR1BH=0x00;
00069e bde9      	OUT  0x29,R30
                 ; 0000 01E9     OCR1BL=0x00;
00069f bde8      	OUT  0x28,R30
                 ; 0000 01EA     OCR1CH=0x00;
0006a0 93e0 0079 	STS  121,R30
                 ; 0000 01EB     OCR1CL=0x00;
0006a2 93e0 0078 	STS  120,R30
                 ; 0000 01EC 
                 ; 0000 01ED // Timer/Counter 2 initialization
                 ; 0000 01EE // Clock source: System Clock
                 ; 0000 01EF // Clock value: 7.813 kHz
                 ; 0000 01F0 // Mode: Normal top=0xFF
                 ; 0000 01F1 // OC2 output: Disconnected
                 ; 0000 01F2 // Timer Period: 9.984 ms
                 ; 0000 01F3 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (1<<CS22) | (0<<CS21) | (1<<CS20);
0006a4 e0e5      	LDI  R30,LOW(5)
0006a5 bde5      	OUT  0x25,R30
                 ; 0000 01F4 TCNT2=0xB2;
0006a6 ebe2      	LDI  R30,LOW(178)
0006a7 bde4      	OUT  0x24,R30
                 ; 0000 01F5 OCR2=0x00;
0006a8 e0e0      	LDI  R30,LOW(0)
0006a9 bde3      	OUT  0x23,R30
                 ; 0000 01F6 
                 ; 0000 01F7 // Timer/Counter 3 initialization
                 ; 0000 01F8 // Clock source: System Clock
                 ; 0000 01F9 // Clock value: Timer3 Stopped
                 ; 0000 01FA // Mode: Normal top=0xFFFF
                 ; 0000 01FB // OC3A output: Disconnected
                 ; 0000 01FC // OC3B output: Disconnected
                 ; 0000 01FD // OC3C output: Disconnected
                 ; 0000 01FE // Noise Canceler: Off
                 ; 0000 01FF // Input Capture on Falling Edge
                 ; 0000 0200 // Timer3 Overflow Interrupt: Off
                 ; 0000 0201 // Input Capture Interrupt: Off
                 ; 0000 0202 // Compare A Match Interrupt: Off
                 ; 0000 0203 // Compare B Match Interrupt: Off
                 ; 0000 0204 // Compare C Match Interrupt: Off
                 ; 0000 0205     TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
0006aa 93e0 008b 	STS  139,R30
                 ; 0000 0206     TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
0006ac 93e0 008a 	STS  138,R30
                 ; 0000 0207     TCNT3H=0x00;
0006ae 93e0 0089 	STS  137,R30
                 ; 0000 0208     TCNT3L=0x00;
0006b0 93e0 0088 	STS  136,R30
                 ; 0000 0209     ICR3H=0x00;
0006b2 93e0 0081 	STS  129,R30
                 ; 0000 020A     ICR3L=0x00;
0006b4 93e0 0080 	STS  128,R30
                 ; 0000 020B     OCR3AH=0x00;
0006b6 93e0 0087 	STS  135,R30
                 ; 0000 020C     OCR3AL=0x00;
0006b8 93e0 0086 	STS  134,R30
                 ; 0000 020D     OCR3BH=0x00;
0006ba 93e0 0085 	STS  133,R30
                 ; 0000 020E     OCR3BL=0x00;
0006bc 93e0 0084 	STS  132,R30
                 ; 0000 020F     OCR3CH=0x00;
0006be 93e0 0083 	STS  131,R30
                 ; 0000 0210     OCR3CL=0x00;
0006c0 93e0 0082 	STS  130,R30
                 ; 0000 0211 
                 ; 0000 0212 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0213     TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0006c2 e4e1      	LDI  R30,LOW(65)
0006c3 bfe7      	OUT  0x37,R30
                 ; 0000 0214     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0006c4 e0e0      	LDI  R30,LOW(0)
0006c5 93e0 007d 	STS  125,R30
                 ; 0000 0215 
                 ; 0000 0216 
                 ; 0000 0217 // External Interrupt(s) initialization
                 ; 0000 0218 // INT0: Off
                 ; 0000 0219 // INT1: Off
                 ; 0000 021A // INT2: Off
                 ; 0000 021B // INT3: Off
                 ; 0000 021C // INT4: Off
                 ; 0000 021D // INT5: Off
                 ; 0000 021E // INT6: Off
                 ; 0000 021F // INT7: Off
                 ; 0000 0220     EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0006c7 93e0 006a 	STS  106,R30
                 ; 0000 0221     EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
0006c9 bfea      	OUT  0x3A,R30
                 ; 0000 0222     EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
0006ca bfe9      	OUT  0x39,R30
                 ; 0000 0223 
                 ; 0000 0224 // USART0 initialization
                 ; 0000 0225 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0226 // USART0 Receiver: On
                 ; 0000 0227 // USART0 Transmitter: On
                 ; 0000 0228 // USART0 Mode: Asynchronous
                 ; 0000 0229 // USART0 Baud Rate: 9600
                 ; 0000 022A     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0006cb b9eb      	OUT  0xB,R30
                 ; 0000 022B     UCSR0B=(1<<RXCIE0) | (1<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0006cc ede8      	LDI  R30,LOW(216)
0006cd b9ea      	OUT  0xA,R30
                 ; 0000 022C     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0006ce e0e6      	LDI  R30,LOW(6)
0006cf 93e0 0095 	STS  149,R30
                 ; 0000 022D     UBRR0H=0x00;
0006d1 e0e0      	LDI  R30,LOW(0)
0006d2 93e0 0090 	STS  144,R30
                 ; 0000 022E     UBRR0L=0x33;
0006d4 e3e3      	LDI  R30,LOW(51)
0006d5 b9e9      	OUT  0x9,R30
                 ; 0000 022F 
                 ; 0000 0230 // USART1 initialization
                 ; 0000 0231 // USART1 disabled
                 ; 0000 0232     UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0006d6 e0e0      	LDI  R30,LOW(0)
0006d7 93e0 009a 	STS  154,R30
                 ; 0000 0233 
                 ; 0000 0234 // Analog Comparator initialization
                 ; 0000 0235 // Analog Comparator: Off
                 ; 0000 0236 // The Analog Comparator's positive input is
                 ; 0000 0237 // connected to the AIN0 pin
                 ; 0000 0238 // The Analog Comparator's negative input is
                 ; 0000 0239 // connected to the AIN1 pin
                 ; 0000 023A     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0006d9 e8e0      	LDI  R30,LOW(128)
0006da b9e8      	OUT  0x8,R30
                 ; 0000 023B     SFIOR=(0<<ACME);
0006db e0e0      	LDI  R30,LOW(0)
0006dc bde0      	OUT  0x20,R30
                 ; 0000 023C 
                 ; 0000 023D // ADC initialization
                 ; 0000 023E // ADC disabled
                 ; 0000 023F     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0006dd b9e6      	OUT  0x6,R30
                 ; 0000 0240 
                 ; 0000 0241 // SPI initialization
                 ; 0000 0242 // SPI disabled
                 ; 0000 0243     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0006de b9ed      	OUT  0xD,R30
                 ; 0000 0244 
                 ; 0000 0245 // TWI initialization
                 ; 0000 0246 // TWI disabled
                 ; 0000 0247     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0006df 93e0 0074 	STS  116,R30
                 ; 0000 0248 
                 ; 0000 0249 // Graphic Display Controller initialization
                 ; 0000 024A // The PCD8544 connections are specified in the
                 ; 0000 024B // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 024C // SDIN - PORTC Bit 7
                 ; 0000 024D // SCLK - PORTA Bit 7
                 ; 0000 024E // D /C - PORTC Bit 6
                 ; 0000 024F // /SCE - PORTC Bit 5
                 ; 0000 0250 // /RES - PORTC Bit 4
                 ; 0000 0251 
                 ; 0000 0252 // Specify the current font for displaying text
                 ; 0000 0253     glcd_init_data.font=font5x7;
0006e1 e8ec      	LDI  R30,LOW(_font5x7*2)
0006e2 e0f0      	LDI  R31,HIGH(_font5x7*2)
0006e3 83e8      	ST   Y,R30
0006e4 83f9      	STD  Y+1,R31
                 ; 0000 0254 // No function is used for reading
                 ; 0000 0255 // image data from external memory
                 ; 0000 0256     glcd_init_data.readxmem=NULL;
0006e5 e0e0      	LDI  R30,LOW(0)
0006e6 83ea      	STD  Y+2,R30
0006e7 83eb      	STD  Y+2+1,R30
                 ; 0000 0257 // No function is used for writing
                 ; 0000 0258 // image data to external memory
                 ; 0000 0259     glcd_init_data.writexmem=NULL;
0006e8 83ec      	STD  Y+4,R30
0006e9 83ed      	STD  Y+4+1,R30
                 ; 0000 025A // Set the LCD temperature coefficient
                 ; 0000 025B     glcd_init_data.temp_coef=90;
0006ea 81ee      	LDD  R30,Y+6
0006eb 7fec      	ANDI R30,LOW(0xFC)
0006ec 60e2      	ORI  R30,2
0006ed 83ee      	STD  Y+6,R30
                 ; 0000 025C // Set the LCD bias
                 ; 0000 025D     glcd_init_data.bias=3;
0006ee 7ee3      	ANDI R30,LOW(0xE3)
0006ef 60ec      	ORI  R30,LOW(0xC)
0006f0 83ee      	STD  Y+6,R30
                 ; 0000 025E // Set the LCD contrast control voltage VLCD
                 ; 0000 025F     glcd_init_data.vlcd=57;
0006f1 81ef      	LDD  R30,Y+7
0006f2 78e0      	ANDI R30,LOW(0x80)
0006f3 63e9      	ORI  R30,LOW(0x39)
0006f4 83ef      	STD  Y+7,R30
                 ; 0000 0260 
                 ; 0000 0261     glcd_init(&glcd_init_data);
0006f5 01de      	MOVW R26,R28
0006f6 940e 0874 	CALL _glcd_init
                 ; 0000 0262 
                 ; 0000 0263 // Global enable interrupts
                 ; 0000 0264 #asm("sei")
0006f8 9478      	sei
                 ; 0000 0265 
                 ; 0000 0266     put_string("AT\r\n");
                +
0006f9 e1a1     +LDI R26 , LOW ( _0xDE + ( 0 ) )
0006fa e0b6     +LDI R27 , HIGH ( _0xDE + ( 0 ) )
                 	__POINTW2MN _0xDE,0
0006fb ddb1      	RCALL _put_string
                 ; 0000 0267     wait_until("OK", 2);
                +
0006fc e1e6     +LDI R30 , LOW ( _0xDE + ( 5 ) )
0006fd e0f6     +LDI R31 , HIGH ( _0xDE + ( 5 ) )
                 	__POINTW1MN _0xDE,5
0006fe 940e 1017 	CALL SUBOPT_0x10
                 ; 0000 0268     refresh(0);
                 ; 0000 0269 
                 ; 0000 026A     put_string("AT+CWMODE=1\r\n");
                +
000700 e1a9     +LDI R26 , LOW ( _0xDE + ( 8 ) )
000701 e0b6     +LDI R27 , HIGH ( _0xDE + ( 8 ) )
                 	__POINTW2MN _0xDE,8
000702 ddaa      	RCALL _put_string
                 ; 0000 026B     wait_until("OK", 2);
                +
000703 e2e7     +LDI R30 , LOW ( _0xDE + ( 22 ) )
000704 e0f6     +LDI R31 , HIGH ( _0xDE + ( 22 ) )
                 	__POINTW1MN _0xDE,22
000705 940e 1017 	CALL SUBOPT_0x10
                 ; 0000 026C     refresh(0);
                 ; 0000 026D 
                 ; 0000 026E     put_string("AT+CWJAP=\"Thay_Thao_deo_giai\",\"chinhxac\"\r\n");
                +
000707 e2aa     +LDI R26 , LOW ( _0xDE + ( 25 ) )
000708 e0b6     +LDI R27 , HIGH ( _0xDE + ( 25 ) )
                 	__POINTW2MN _0xDE,25
000709 dda3      	RCALL _put_string
                 ; 0000 026F     wait_until("OK", 10);
                +
00070a e5e5     +LDI R30 , LOW ( _0xDE + ( 68 ) )
00070b e0f6     +LDI R31 , HIGH ( _0xDE + ( 68 ) )
                 	__POINTW1MN _0xDE,68
00070c 93fa      	ST   -Y,R31
00070d 93ea      	ST   -Y,R30
00070e e0aa      	LDI  R26,LOW(10)
00070f e0b0      	LDI  R27,0
000710 ddc3      	RCALL _wait_until
                 ; 0000 0270     refresh(0);
000711 e0a0      	LDI  R26,LOW(0)
000712 e0b0      	LDI  R27,0
000713 ddae      	RCALL _refresh
                 ; 0000 0271 
                 ; 0000 0272 
                 ; 0000 0273 //while(!read_and_send("6ZF1YB8AXISBSA2P"));
                 ; 0000 0274 delay_ms(3000);
000714 eba8      	LDI  R26,LOW(3000)
000715 e0bb      	LDI  R27,HIGH(3000)
000716 940e 1113 	CALL _delay_ms
                 ; 0000 0275 RF_Init_RX();
000718 dcf3      	RCALL _RF_Init_RX
                 ; 0000 0276 config();
000719 dc8e      	RCALL _config
                 ; 0000 0277 RF_Config_RX();
00071a dd55      	RCALL _RF_Config_RX
                 ; 0000 0278 count = 1;
00071b e0e1      	LDI  R30,LOW(1)
00071c e0f0      	LDI  R31,HIGH(1)
00071d 016f      	MOVW R12,R30
                 ; 0000 0279 
                 ; 0000 027A glcd_moveto(10,10);
00071e e0ea      	LDI  R30,LOW(10)
00071f 93ea      	ST   -Y,R30
000720 e0aa      	LDI  R26,LOW(10)
000721 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 027B glcd_clear();
000723 940e 08fd 	CALL _glcd_clear
                 ; 0000 027C glcd_outtext("start");
                +
000725 e5a8     +LDI R26 , LOW ( _0xDE + ( 71 ) )
000726 e0b6     +LDI R27 , HIGH ( _0xDE + ( 71 ) )
                 	__POINTW2MN _0xDE,71
000727 940e 0c71 	CALL _glcd_outtext
                 ; 0000 027D 
                 ; 0000 027E while (1) {
                 _0xDF:
                 ; 0000 027F      /*if((PINC.3==0)&&(lan_bam==0))
                 ; 0000 0280      {delay_ms(250); check_do_rac(1);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=1;}
                 ; 0000 0281      if((PINC.3==0)&&(lan_bam==1))
                 ; 0000 0282      {delay_ms(250); check_do_rac(2);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=2;}
                 ; 0000 0283      if((PINC.3==0)&&(lan_bam==2))
                 ; 0000 0284      {delay_ms(250); check_do_rac(3);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=3;}
                 ; 0000 0285      if((PINC.3==0)&&(lan_bam==3))
                 ; 0000 0286      {delay_ms(250); check_do_rac(4);read_and_send("6ZF1YB8AXISBSA2P");lan_bam=0;}*/
                 ; 0000 0287      RF_Mode_RX();
000729 dd40      	RCALL _RF_Mode_RX
                 ; 0000 0288 
                 ; 0000 0289     if(IRQ == 0){
00072a 99c8      	SBIC 0x19,0
00072b c069      	RJMP _0xE2
                 ; 0000 028A         RF_Read_RX_3();
00072c dd52      	RCALL _RF_Read_RX_3
                 ; 0000 028B         if(station_receive.flag == count){
00072d 91a0 0817 	LDS  R26,_station_receive
00072f 91b0 0818 	LDS  R27,_station_receive+1
000731 16ca      	CP   R12,R26
000732 06db      	CPC  R13,R27
000733 f009      	BREQ PC+2
000734 c060      	RJMP _0xE3
                 ; 0000 028C             print_border();
000735 def3      	RCALL _print_border
                 ; 0000 028D             glcd_moveto(40, 3);
000736 e2e8      	LDI  R30,LOW(40)
000737 93ea      	ST   -Y,R30
000738 e0a3      	LDI  R26,LOW(3)
000739 940e 0c9b 	CALL _glcd_moveto
                 ; 0000 028E             itoa(station_receive.flag, buff);
00073b 91e0 0817 	LDS  R30,_station_receive
00073d 91f0 0818 	LDS  R31,_station_receive+1
00073f 93fa      	ST   -Y,R31
000740 93ea      	ST   -Y,R30
000741 eca8      	LDI  R26,LOW(_buff)
000742 e0b6      	LDI  R27,HIGH(_buff)
000743 940e 07e8 	CALL _itoa
                 ; 0000 028F             glcd_outtext(buff);
000745 940e 0ff9 	CALL SUBOPT_0xB
                 ; 0000 0290             glcd_moveto(46, 18);
000747 e2ee      	LDI  R30,LOW(46)
000748 93ea      	ST   -Y,R30
000749 e1a2      	LDI  R26,LOW(18)
00074a 940e 105a 	CALL SUBOPT_0x19
                 ; 0000 0291             sprintf(buff, "%d ", station_receive.temp);
                +
00074c eaef     +LDI R30 , LOW ( 2 * _0x0 + ( 255 ) )
00074d e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 255 ) )
                 	__POINTW1FN _0x0,255
00074e 93fa      	ST   -Y,R31
00074f 93ea      	ST   -Y,R30
                +
000750 91e0 081d+LDS R30 , _station_receive + ( 6 )
000752 91f0 081e+LDS R31 , _station_receive + ( 6 ) + 1
                 	__GETW1MN _station_receive,6
000754 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0292             glcd_outtext(buff);
                 ; 0000 0293             glcd_moveto(46, 28);
000756 e2ee      	LDI  R30,LOW(46)
000757 93ea      	ST   -Y,R30
000758 e1ac      	LDI  R26,LOW(28)
000759 940e 105a 	CALL SUBOPT_0x19
                 ; 0000 0294             sprintf(buff, "%d ", station_receive.humi);
                +
00075b eaef     +LDI R30 , LOW ( 2 * _0x0 + ( 255 ) )
00075c e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 255 ) )
                 	__POINTW1FN _0x0,255
00075d 93fa      	ST   -Y,R31
00075e 93ea      	ST   -Y,R30
                +
00075f 91e0 081b+LDS R30 , _station_receive + ( 4 )
000761 91f0 081c+LDS R31 , _station_receive + ( 4 ) + 1
                 	__GETW1MN _station_receive,4
000763 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0295             glcd_outtext(buff);
                 ; 0000 0296             glcd_moveto(46, 37);
000765 e2ee      	LDI  R30,LOW(46)
000766 93ea      	ST   -Y,R30
000767 e2a5      	LDI  R26,LOW(37)
000768 940e 105a 	CALL SUBOPT_0x19
                 ; 0000 0297             sprintf(buff, "%d  ", station_receive.water);
                +
00076a ebe3     +LDI R30 , LOW ( 2 * _0x0 + ( 259 ) )
00076b e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 259 ) )
                 	__POINTW1FN _0x0,259
00076c 93fa      	ST   -Y,R31
00076d 93ea      	ST   -Y,R30
                +
00076e 91e0 0821+LDS R30 , _station_receive + ( 10 )
000770 91f0 0822+LDS R31 , _station_receive + ( 10 ) + 1
                 	__GETW1MN _station_receive,10
000772 940e 105d 	CALL SUBOPT_0x1A
                 ; 0000 0298             glcd_outtext(buff);
                 ; 0000 0299             while(!read_and_send(key[count-1]));
                 _0xE4:
000774 01f6      	MOVW R30,R12
000775 9731      	SBIW R30,1
000776 e7ab      	LDI  R26,LOW(_key)
000777 e0b6      	LDI  R27,HIGH(_key)
000778 0fee      	LSL  R30
000779 1fff      	ROL  R31
00077a 0fae      	ADD  R26,R30
00077b 1fbf      	ADC  R27,R31
00077c 940e 1142 	CALL __GETW1P
00077e 01df      	MOVW R26,R30
00077f ddc0      	RCALL _read_and_send
000780 30e0      	CPI  R30,0
000781 f391      	BREQ _0xE4
                 ; 0000 029A             delay_ms(100);
000782 e6a4      	LDI  R26,LOW(100)
000783 e0b0      	LDI  R27,0
000784 940e 1113 	CALL _delay_ms
                 ; 0000 029B             glcd_clear();
000786 940e 08fd 	CALL _glcd_clear
                 ; 0000 029C             count++;
000788 01f6      	MOVW R30,R12
000789 9631      	ADIW R30,1
00078a 016f      	MOVW R12,R30
                 ; 0000 029D             if(count == 5)
00078b e0e5      	LDI  R30,LOW(5)
00078c e0f0      	LDI  R31,HIGH(5)
00078d 15ec      	CP   R30,R12
00078e 05fd      	CPC  R31,R13
00078f f419      	BRNE _0xE7
                 ; 0000 029E                 count = 1;
000790 e0e1      	LDI  R30,LOW(1)
000791 e0f0      	LDI  R31,HIGH(1)
000792 016f      	MOVW R12,R30
                 ; 0000 029F             flag = true;
                 _0xE7:
000793 e0e1      	LDI  R30,LOW(1)
000794 2eae      	MOV  R10,R30
                 ; 0000 02A0 
                 ; 0000 02A1         }
                 ; 0000 02A2     }
                 _0xE3:
                 ; 0000 02A3     }
                 _0xE2:
000795 cf93      	RJMP _0xDF
                 ; 0000 02A4 }
                 _0xE8:
000796 cfff      	RJMP _0xE8
                 ; .FEND
                 
                 	.DSEG
                 _0xDE:
000611           	.BYTE 0x4D
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000797 93ba      	ST   -Y,R27
000798 93aa      	ST   -Y,R26
000799 81b9          ldd  r27,y+1
00079a 81a8          ld   r26,y
00079b 9610          adiw r26,0
00079c f031          breq memset1
00079d 81fc          ldd  r31,y+4
00079e 81eb          ldd  r30,y+3
00079f 816a          ldd  r22,y+2
                 memset0:
0007a0 9361          st   z+,r22
0007a1 9711          sbiw r26,1
0007a2 f7e9          brne memset0
                 memset1:
0007a3 81eb          ldd  r30,y+3
0007a4 81fc          ldd  r31,y+4
0007a5 940c 0dd5 	JMP  _0x2120005
                 ; .FEND
                 _strcat:
                 ; .FSTART _strcat
0007a7 93ba      	ST   -Y,R27
0007a8 93aa      	ST   -Y,R26
0007a9 91e9          ld   r30,y+
0007aa 91f9          ld   r31,y+
0007ab 91a9          ld   r26,y+
0007ac 91b9          ld   r27,y+
0007ad 01cd          movw r24,r26
                 strcat0:
0007ae 916d          ld   r22,x+
0007af 2366          tst  r22
0007b0 f7e9          brne strcat0
0007b1 9711          sbiw r26,1
                 strcat1:
0007b2 9161          ld   r22,z+
0007b3 936d          st   x+,r22
0007b4 2366          tst  r22
0007b5 f7e1          brne strcat1
0007b6 01fc          movw r30,r24
0007b7 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0007b8 93ba      	ST   -Y,R27
0007b9 93aa      	ST   -Y,R26
0007ba 91a9          ld   r26,y+
0007bb 91b9          ld   r27,y+
0007bc 27ee          clr  r30
0007bd 27ff          clr  r31
                 strlen0:
0007be 916d          ld   r22,x+
0007bf 2366          tst  r22
0007c0 f011          breq strlen1
0007c1 9631          adiw r30,1
0007c2 cffb          rjmp strlen0
                 strlen1:
0007c3 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0007c4 93ba      	ST   -Y,R27
0007c5 93aa      	ST   -Y,R26
0007c6 27aa          clr  r26
0007c7 27bb          clr  r27
0007c8 91e9          ld   r30,y+
0007c9 91f9          ld   r31,y+
                 strlenf0:
0007ca 9005      	lpm  r0,z+
0007cb 2000          tst  r0
0007cc f011          breq strlenf1
0007cd 9611          adiw r26,1
0007ce cffb          rjmp strlenf0
                 strlenf1:
0007cf 01fd          movw r30,r26
0007d0 9508          ret
                 ; .FEND
                 _strstr:
                 ; .FSTART _strstr
0007d1 93ba      	ST   -Y,R27
0007d2 93aa      	ST   -Y,R26
0007d3 81aa          ldd  r26,y+2
0007d4 81bb          ldd  r27,y+3
0007d5 01cd          movw r24,r26
                 strstr0:
0007d6 81e8          ld   r30,y
0007d7 81f9          ldd  r31,y+1
                 strstr1:
0007d8 9171          ld   r23,z+
0007d9 2377          tst  r23
0007da f411          brne strstr2
0007db 01fc          movw r30,r24
0007dc c009          rjmp strstr3
                 strstr2:
0007dd 916d          ld   r22,x+
0007de 1767          cp   r22,r23
0007df f3c1          breq strstr1
0007e0 9601          adiw r24,1
0007e1 01dc          movw r26,r24
0007e2 2366          tst  r22
0007e3 f791          brne strstr0
0007e4 27ee          clr  r30
0007e5 27ff          clr  r31
                 strstr3:
0007e6 940c 0919 	JMP  _0x212000B
                 ; .FEND
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
0007e8 93ba      	ST   -Y,R27
0007e9 93aa      	ST   -Y,R26
0007ea 91a9          ld   r26,y+
0007eb 91b9          ld   r27,y+
0007ec 91e9          ld   r30,y+
0007ed 91f9          ld   r31,y+
0007ee 9630          adiw r30,0
0007ef f42a          brpl __itoa0
0007f0 95e0          com  r30
0007f1 95f0          com  r31
0007f2 9631          adiw r30,1
0007f3 e26d          ldi  r22,'-'
0007f4 936d          st   x+,r22
                 __itoa0:
0007f5 94e8          clt
0007f6 e180          ldi  r24,low(10000)
0007f7 e297          ldi  r25,high(10000)
0007f8 d00d          rcall __itoa1
0007f9 ee88          ldi  r24,low(1000)
0007fa e093          ldi  r25,high(1000)
0007fb d00a          rcall __itoa1
0007fc e684          ldi  r24,100
0007fd 2799          clr  r25
0007fe d007          rcall __itoa1
0007ff e08a          ldi  r24,10
000800 d005          rcall __itoa1
000801 2f6e          mov  r22,r30
000802 d010          rcall __itoa5
000803 2766          clr  r22
000804 936c          st   x,r22
000805 9508          ret
                 
                 __itoa1:
000806 2766          clr	 r22
                 __itoa2:
000807 17e8          cp   r30,r24
000808 07f9          cpc  r31,r25
000809 f020          brlo __itoa3
00080a 9563          inc  r22
00080b 1be8          sub  r30,r24
00080c 0bf9          sbc  r31,r25
00080d f7c9          brne __itoa2
                 __itoa3:
00080e 2366          tst  r22
00080f f411          brne __itoa4
000810 f016          brts __itoa5
000811 9508          ret
                 __itoa4:
000812 9468          set
                 __itoa5:
000813 5d60          subi r22,-0x30
000814 936d          st   x+,r22
000815 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
000816 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
000817 93aa      	ST   -Y,R26
000818 931a      	ST   -Y,R17
000819 98ad      	CBI  0x15,5
00081a e018      	LDI  R17,LOW(8)
                 _0x2040004:
00081b dffa      	RCALL _pcd8544_delay_G102
00081c 81e9      	LDD  R30,Y+1
00081d 78e0      	ANDI R30,LOW(0x80)
00081e f011      	BREQ _0x2040006
00081f 9aaf      	SBI  0x15,7
000820 c001      	RJMP _0x2040007
                 _0x2040006:
000821 98af      	CBI  0x15,7
                 _0x2040007:
000822 81e9      	LDD  R30,Y+1
000823 0fee      	LSL  R30
000824 83e9      	STD  Y+1,R30
000825 dff0      	RCALL _pcd8544_delay_G102
000826 9adf      	SBI  0x1B,7
000827 dfee      	RCALL _pcd8544_delay_G102
000828 98df      	CBI  0x1B,7
000829 5011      	SUBI R17,LOW(1)
00082a f781      	BRNE _0x2040004
00082b 9aad      	SBI  0x15,5
00082c 8118      	LDD  R17,Y+0
00082d c03a      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
00082e 93aa      	ST   -Y,R26
00082f 98ae      	CBI  0x15,6
000830 81a8      	LD   R26,Y
000831 dfe5      	RCALL _pcd8544_wrbus_G102
000832 c0c8      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
000833 93aa      	ST   -Y,R26
000834 9aae      	SBI  0x15,6
000835 81a8      	LD   R26,Y
000836 dfe0      	RCALL _pcd8544_wrbus_G102
000837 c0c3      	RJMP _0x212000C
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
000838 93aa      	ST   -Y,R26
000839 931a      	ST   -Y,R17
00083a 81e9      	LDD  R30,Y+1
00083b 95e6      	LSR  R30
00083c 95e6      	LSR  R30
00083d 95e6      	LSR  R30
00083e 2f1e      	MOV  R17,R30
00083f e5e4      	LDI  R30,LOW(84)
000840 9fe1      	MUL  R30,R17
000841 01f0      	MOVW R30,R0
000842 01df      	MOVW R26,R30
000843 81ea      	LDD  R30,Y+2
000844 e0f0      	LDI  R31,0
000845 0fea      	ADD  R30,R26
000846 1ffb      	ADC  R31,R27
000847 93e0 084e 	STS  _gfx_addr_G102,R30
000849 93f0 084f 	STS  _gfx_addr_G102+1,R31
00084b 2fe1      	MOV  R30,R17
00084c 8118      	LDD  R17,Y+0
00084d 9623      	ADIW R28,3
00084e 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00084f 93aa      	ST   -Y,R26
000850 81e9      	LDD  R30,Y+1
000851 68e0      	ORI  R30,0x80
000852 2fae      	MOV  R26,R30
000853 dfda      	RCALL _pcd8544_wrcmd
000854 81e9      	LDD  R30,Y+1
000855 93ea      	ST   -Y,R30
000856 81a9      	LDD  R26,Y+1
000857 dfe0      	RCALL _pcd8544_setaddr_G102
000858 64e0      	ORI  R30,0x40
000859 2fae      	MOV  R26,R30
00085a dfd3      	RCALL _pcd8544_wrcmd
00085b c00c      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00085c 93aa      	ST   -Y,R26
00085d 81e9      	LDD  R30,Y+1
00085e 93ea      	ST   -Y,R30
00085f 81a9      	LDD  R26,Y+1
000860 dfee      	RCALL _pcd8544_gotoxy
000861 91e0 084e 	LDS  R30,_gfx_addr_G102
000863 91f0 084f 	LDS  R31,_gfx_addr_G102+1
000865 5be0      	SUBI R30,LOW(-_gfx_buffer_G102)
000866 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000867 81e0      	LD   R30,Z
                 _0x212000D:
000868 9622      	ADIW R28,2
000869 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
00086a 93aa      	ST   -Y,R26
00086b 940e 1066 	CALL SUBOPT_0x1B
00086d 9731      	SBIW R30,1
00086e 5be0      	SUBI R30,LOW(-_gfx_buffer_G102)
00086f 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000870 81a8      	LD   R26,Y
000871 83a0      	STD  Z+0,R26
000872 dfc0      	RCALL _pcd8544_wrdata_G102
000873 c087      	RJMP _0x212000C
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000874 93ba      	ST   -Y,R27
000875 93aa      	ST   -Y,R26
000876 940e 117c 	CALL __SAVELOCR4
000878 9aa5      	SBI  0x14,5
000879 9aad      	SBI  0x15,5
00087a 9ad7      	SBI  0x1A,7
00087b 98df      	CBI  0x1B,7
00087c 9aa7      	SBI  0x14,7
00087d 9aa6      	SBI  0x14,6
00087e 9aa4      	SBI  0x14,4
00087f 98ac      	CBI  0x15,4
000880 e0aa      	LDI  R26,LOW(10)
000881 e0b0      	LDI  R27,0
000882 940e 1113 	CALL _delay_ms
000884 9aac      	SBI  0x15,4
000885 81ec      	LDD  R30,Y+4
000886 81fd      	LDD  R31,Y+4+1
000887 9730      	SBIW R30,0
000888 f121      	BREQ _0x2040008
000889 81e6      	LDD  R30,Z+6
00088a 70e3      	ANDI R30,LOW(0x3)
00088b 2f1e      	MOV  R17,R30
00088c 81ec      	LDD  R30,Y+4
00088d 81fd      	LDD  R31,Y+4+1
00088e 81e6      	LDD  R30,Z+6
00088f 95e6      	LSR  R30
000890 95e6      	LSR  R30
000891 70e7      	ANDI R30,LOW(0x7)
000892 2f0e      	MOV  R16,R30
000893 81ec      	LDD  R30,Y+4
000894 81fd      	LDD  R31,Y+4+1
000895 81e7      	LDD  R30,Z+7
000896 77ef      	ANDI R30,0x7F
000897 2f3e      	MOV  R19,R30
000898 81ac      	LDD  R26,Y+4
000899 81bd      	LDD  R27,Y+4+1
00089a 940e 1142 	CALL __GETW1P
                +
00089c 93e0 0662+STS _glcd_state + ( 4 ) , R30
00089e 93f0 0663+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0008a0 9612      	ADIW R26,2
0008a1 940e 1142 	CALL __GETW1P
                +
0008a3 93e0 0677+STS _glcd_state + ( 25 ) , R30
0008a5 93f0 0678+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0008a7 81ac      	LDD  R26,Y+4
0008a8 81bd      	LDD  R27,Y+4+1
0008a9 9614      	ADIW R26,4
0008aa 940e 1142 	CALL __GETW1P
0008ac c00d      	RJMP _0x20400A0
                 _0x2040008:
0008ad e010      	LDI  R17,LOW(0)
0008ae e003      	LDI  R16,LOW(3)
0008af e332      	LDI  R19,LOW(50)
0008b0 e0e0      	LDI  R30,LOW(0)
0008b1 e0f0      	LDI  R31,HIGH(0)
                +
0008b2 93e0 0662+STS _glcd_state + ( 4 ) , R30
0008b4 93f0 0663+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0008b6 93e0 0677+STS _glcd_state + ( 25 ) , R30
0008b8 93f0 0678+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400A0:
                +
0008ba 93e0 0679+STS _glcd_state + ( 27 ) , R30
0008bc 93f0 067a+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0008be e2a1      	LDI  R26,LOW(33)
0008bf df6e      	RCALL _pcd8544_wrcmd
0008c0 2fe1      	MOV  R30,R17
0008c1 60e4      	ORI  R30,4
0008c2 2fae      	MOV  R26,R30
0008c3 df6a      	RCALL _pcd8544_wrcmd
0008c4 2fe0      	MOV  R30,R16
0008c5 61e0      	ORI  R30,0x10
0008c6 2fae      	MOV  R26,R30
0008c7 df66      	RCALL _pcd8544_wrcmd
0008c8 2fe3      	MOV  R30,R19
0008c9 68e0      	ORI  R30,0x80
0008ca 2fae      	MOV  R26,R30
0008cb df62      	RCALL _pcd8544_wrcmd
0008cc e2a0      	LDI  R26,LOW(32)
0008cd df60      	RCALL _pcd8544_wrcmd
0008ce e0a1      	LDI  R26,LOW(1)
0008cf d022      	RCALL _glcd_display
0008d0 e0e1      	LDI  R30,LOW(1)
0008d1 93e0 065e 	STS  _glcd_state,R30
0008d3 e0e0      	LDI  R30,LOW(0)
                +
0008d4 93e0 065f+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0008d6 e0e1      	LDI  R30,LOW(1)
                +
0008d7 93e0 0664+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0008d9 93e0 0665+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0008db 93e0 0666+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0008dd efef      	LDI  R30,LOW(255)
                +
0008de 93e0 0667+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0008e0 e0e1      	LDI  R30,LOW(1)
                +
0008e1 93e0 066e+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0008e3 e6ef     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0008e4 e0f6     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0008e5 93fa      	ST   -Y,R31
0008e6 93ea      	ST   -Y,R30
0008e7 efef      	LDI  R30,LOW(255)
0008e8 93ea      	ST   -Y,R30
0008e9 e0a8      	LDI  R26,LOW(8)
0008ea e0b0      	LDI  R27,0
0008eb 940e 0797 	CALL _memset
0008ed d00f      	RCALL _glcd_clear
0008ee e0e1      	LDI  R30,LOW(1)
0008ef 940e 1183 	CALL __LOADLOCR4
0008f1 c082      	RJMP _0x212000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0008f2 93aa      	ST   -Y,R26
0008f3 81e8      	LD   R30,Y
0008f4 30e0      	CPI  R30,0
0008f5 f011      	BREQ _0x204000A
0008f6 e0ec      	LDI  R30,LOW(12)
0008f7 c001      	RJMP _0x204000B
                 _0x204000A:
0008f8 e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
0008f9 2fae      	MOV  R26,R30
0008fa df33      	RCALL _pcd8544_wrcmd
                 _0x212000C:
0008fb 9621      	ADIW R28,1
0008fc 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0008fd 940e 117c 	CALL __SAVELOCR4
0008ff e030      	LDI  R19,0
                +
000900 91e0 065f+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000902 30e0      	CPI  R30,0
000903 f009      	BREQ _0x204000D
000904 ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
000905 e0e0      	LDI  R30,LOW(0)
000906 93ea      	ST   -Y,R30
000907 e0a0      	LDI  R26,LOW(0)
000908 df46      	RCALL _pcd8544_gotoxy
                +
000909 ef08     +LDI R16 , LOW ( 504 )
00090a e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
00090b 01f8      	MOVW R30,R16
                +
00090c 5001     +SUBI R16 , LOW ( 1 )
00090d 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00090e 9730      	SBIW R30,0
00090f f019      	BREQ _0x2040010
000910 2fa3      	MOV  R26,R19
000911 df58      	RCALL _pcd8544_wrbyte
000912 cff8      	RJMP _0x204000E
                 _0x2040010:
000913 e0e0      	LDI  R30,LOW(0)
000914 93ea      	ST   -Y,R30
000915 e0a0      	LDI  R26,LOW(0)
000916 d384      	RCALL _glcd_moveto
000917 940e 1183 	CALL __LOADLOCR4
                 _0x212000B:
000919 9624      	ADIW R28,4
00091a 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
00091b 93aa      	ST   -Y,R26
00091c 931a      	ST   -Y,R17
00091d 930a      	ST   -Y,R16
00091e 81ac      	LDD  R26,Y+4
00091f 35a4      	CPI  R26,LOW(0x54)
000920 f418      	BRSH _0x2040012
000921 81ab      	LDD  R26,Y+3
000922 33a0      	CPI  R26,LOW(0x30)
000923 f010      	BRLO _0x2040011
                 _0x2040012:
000924 940c 0dd3 	JMP  _0x2120004
                 _0x2040011:
000926 81ec      	LDD  R30,Y+4
000927 93ea      	ST   -Y,R30
000928 81ac      	LDD  R26,Y+4
000929 df32      	RCALL _pcd8544_rdbyte
00092a 2f1e      	MOV  R17,R30
00092b 81eb      	LDD  R30,Y+3
00092c 70e7      	ANDI R30,LOW(0x7)
00092d e0a1      	LDI  R26,LOW(1)
00092e 940e 1125 	CALL __LSLB12
000930 2f0e      	MOV  R16,R30
000931 81ea      	LDD  R30,Y+2
000932 30e0      	CPI  R30,0
000933 f011      	BREQ _0x2040014
000934 2b10      	OR   R17,R16
000935 c003      	RJMP _0x2040015
                 _0x2040014:
000936 2fe0      	MOV  R30,R16
000937 95e0      	COM  R30
000938 231e      	AND  R17,R30
                 _0x2040015:
000939 2fa1      	MOV  R26,R17
00093a df2f      	RCALL _pcd8544_wrbyte
00093b 940c 0dd3 	JMP  _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
00093d 93aa      	ST   -Y,R26
00093e 931a      	ST   -Y,R17
00093f 81ed      	LDD  R30,Y+5
000940 93ea      	ST   -Y,R30
000941 81ad      	LDD  R26,Y+5
000942 df19      	RCALL _pcd8544_rdbyte
000943 2f1e      	MOV  R17,R30
000944 81e9      	LDD  R30,Y+1
000945 30e7      	CPI  R30,LOW(0x7)
000946 f011      	BREQ _0x2040020
000947 30e8      	CPI  R30,LOW(0x8)
000948 f439      	BRNE _0x2040021
                 _0x2040020:
000949 81eb      	LDD  R30,Y+3
00094a 93ea      	ST   -Y,R30
00094b 81aa      	LDD  R26,Y+2
00094c 940e 0f4a 	CALL _glcd_mappixcolor1bit
00094e 83eb      	STD  Y+3,R30
00094f c008      	RJMP _0x2040022
                 _0x2040021:
000950 30e3      	CPI  R30,LOW(0x3)
000951 f421      	BRNE _0x2040024
000952 81eb      	LDD  R30,Y+3
000953 95e0      	COM  R30
000954 83eb      	STD  Y+3,R30
000955 c002      	RJMP _0x2040025
                 _0x2040024:
000956 30e0      	CPI  R30,0
000957 f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
000958 81ea      	LDD  R30,Y+2
000959 95e0      	COM  R30
00095a 231e      	AND  R17,R30
00095b c002      	RJMP _0x2040027
                 _0x2040026:
00095c 30e2      	CPI  R30,LOW(0x2)
00095d f429      	BRNE _0x2040028
                 _0x2040027:
00095e 81ea      	LDD  R30,Y+2
00095f 81ab      	LDD  R26,Y+3
000960 23ea      	AND  R30,R26
000961 2b1e      	OR   R17,R30
000962 c00e      	RJMP _0x204001E
                 _0x2040028:
000963 30e1      	CPI  R30,LOW(0x1)
000964 f429      	BRNE _0x2040029
000965 81ea      	LDD  R30,Y+2
000966 81ab      	LDD  R26,Y+3
000967 23ea      	AND  R30,R26
000968 271e      	EOR  R17,R30
000969 c007      	RJMP _0x204001E
                 _0x2040029:
00096a 30e4      	CPI  R30,LOW(0x4)
00096b f429      	BRNE _0x204001E
00096c 81ea      	LDD  R30,Y+2
00096d 95e0      	COM  R30
00096e 81ab      	LDD  R26,Y+3
00096f 2bea      	OR   R30,R26
000970 231e      	AND  R17,R30
                 _0x204001E:
000971 2fa1      	MOV  R26,R17
000972 def7      	RCALL _pcd8544_wrbyte
000973 8118      	LDD  R17,Y+0
                 _0x212000A:
000974 9626      	ADIW R28,6
000975 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000976 93aa      	ST   -Y,R26
000977 9723      	SBIW R28,3
000978 940e 117a 	CALL __SAVELOCR6
00097a 89a8      	LDD  R26,Y+16
00097b 35a4      	CPI  R26,LOW(0x54)
00097c f448      	BRSH _0x204002C
00097d 85af      	LDD  R26,Y+15
00097e 33a0      	CPI  R26,LOW(0x30)
00097f f430      	BRSH _0x204002C
000980 85ae      	LDD  R26,Y+14
000981 30a0      	CPI  R26,LOW(0x0)
000982 f019      	BREQ _0x204002C
000983 85ad      	LDD  R26,Y+13
000984 30a0      	CPI  R26,LOW(0x0)
000985 f409      	BRNE _0x204002B
                 _0x204002C:
000986 c1d5      	RJMP _0x2120009
                 _0x204002B:
000987 85ee      	LDD  R30,Y+14
000988 87e8      	STD  Y+8,R30
000989 89a8      	LDD  R26,Y+16
00098a 27bb      	CLR  R27
00098b 85ee      	LDD  R30,Y+14
00098c e0f0      	LDI  R31,0
00098d 0fae      	ADD  R26,R30
00098e 1fbf      	ADC  R27,R31
00098f 35a5      	CPI  R26,LOW(0x55)
000990 e0e0      	LDI  R30,HIGH(0x55)
000991 07be      	CPC  R27,R30
000992 f020      	BRLO _0x204002E
000993 89a8      	LDD  R26,Y+16
000994 e5e4      	LDI  R30,LOW(84)
000995 1bea      	SUB  R30,R26
000996 87ee      	STD  Y+14,R30
                 _0x204002E:
000997 852d      	LDD  R18,Y+13
000998 85af      	LDD  R26,Y+15
000999 27bb      	CLR  R27
00099a 85ed      	LDD  R30,Y+13
00099b e0f0      	LDI  R31,0
00099c 0fae      	ADD  R26,R30
00099d 1fbf      	ADC  R27,R31
00099e 97d1      	SBIW R26,49
00099f f020      	BRLO _0x204002F
0009a0 85af      	LDD  R26,Y+15
0009a1 e3e0      	LDI  R30,LOW(48)
0009a2 1bea      	SUB  R30,R26
0009a3 87ed      	STD  Y+13,R30
                 _0x204002F:
0009a4 85a9      	LDD  R26,Y+9
0009a5 30a6      	CPI  R26,LOW(0x6)
0009a6 f009      	BREQ PC+2
0009a7 c05b      	RJMP _0x2040030
0009a8 85ec      	LDD  R30,Y+12
0009a9 30e1      	CPI  R30,LOW(0x1)
0009aa f409      	BRNE _0x2040034
0009ab c1b0      	RJMP _0x2120009
                 _0x2040034:
0009ac 30e3      	CPI  R30,LOW(0x3)
0009ad f439      	BRNE _0x2040037
                +
0009ae 91e0 0679+LDS R30 , _glcd_state + ( 27 )
0009b0 91f0 067a+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0009b2 9730      	SBIW R30,0
0009b3 f409      	BRNE _0x2040036
0009b4 c1a7      	RJMP _0x2120009
                 _0x2040036:
                 _0x2040037:
0009b5 8508      	LDD  R16,Y+8
0009b6 85ed      	LDD  R30,Y+13
0009b7 95e6      	LSR  R30
0009b8 95e6      	LSR  R30
0009b9 95e6      	LSR  R30
0009ba 2f3e      	MOV  R19,R30
0009bb 2fe2      	MOV  R30,R18
0009bc 70e7      	ANDI R30,LOW(0x7)
0009bd f419      	BRNE _0x2040039
0009be 85ad      	LDD  R26,Y+13
0009bf 172a      	CP   R18,R26
0009c0 f0e9      	BREQ _0x2040038
                 _0x2040039:
0009c1 2fa0      	MOV  R26,R16
0009c2 27bb      	CLR  R27
0009c3 2fe3      	MOV  R30,R19
0009c4 e0f0      	LDI  R31,0
0009c5 940e 113a 	CALL __MULW12U
0009c7 85aa      	LDD  R26,Y+10
0009c8 85bb      	LDD  R27,Y+10+1
0009c9 940e 1069 	CALL SUBOPT_0x1C
0009cb 9526      	LSR  R18
0009cc 9526      	LSR  R18
0009cd 9526      	LSR  R18
0009ce 2f53      	MOV  R21,R19
                 _0x204003B:
0009cf 935f      	PUSH R21
0009d0 5f5f      	SUBI R21,-1
0009d1 2fe2      	MOV  R30,R18
0009d2 91af      	POP  R26
0009d3 17ea      	CP   R30,R26
0009d4 f048      	BRLO _0x204003D
0009d5 2f10      	MOV  R17,R16
                 _0x204003E:
0009d6 2fe1      	MOV  R30,R17
0009d7 5011      	SUBI R17,1
0009d8 30e0      	CPI  R30,0
0009d9 f019      	BREQ _0x2040040
0009da 940e 106e 	CALL SUBOPT_0x1D
0009dc cff9      	RJMP _0x204003E
                 _0x2040040:
0009dd cff1      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0009de 85ae      	LDD  R26,Y+14
0009df 170a      	CP   R16,R26
0009e0 f111      	BREQ _0x2040041
0009e1 85ee      	LDD  R30,Y+14
0009e2 85aa      	LDD  R26,Y+10
0009e3 85bb      	LDD  R27,Y+10+1
0009e4 e0f0      	LDI  R31,0
0009e5 940e 1069 	CALL SUBOPT_0x1C
0009e7 85ed      	LDD  R30,Y+13
0009e8 70e7      	ANDI R30,LOW(0x7)
0009e9 f009      	BREQ _0x2040042
0009ea 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
0009eb e020      	LDI  R18,LOW(0)
                 _0x2040043:
0009ec 932f      	PUSH R18
0009ed 5f2f      	SUBI R18,-1
0009ee 2fe3      	MOV  R30,R19
0009ef 91af      	POP  R26
0009f0 17ae      	CP   R26,R30
0009f1 f488      	BRSH _0x2040045
0009f2 851e      	LDD  R17,Y+14
                 _0x2040046:
0009f3 931f      	PUSH R17
0009f4 5f1f      	SUBI R17,-1
0009f5 2fe0      	MOV  R30,R16
0009f6 91af      	POP  R26
0009f7 17ae      	CP   R26,R30
0009f8 f418      	BRSH _0x2040048
0009f9 940e 106e 	CALL SUBOPT_0x1D
0009fb cff7      	RJMP _0x2040046
                 _0x2040048:
0009fc 85ee      	LDD  R30,Y+14
0009fd 81ae      	LDD  R26,Y+6
0009fe 81bf      	LDD  R27,Y+6+1
0009ff e0f0      	LDI  R31,0
000a00 940e 1069 	CALL SUBOPT_0x1C
000a02 cfe9      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
000a03 85ef      	LDD  R30,Y+15
000a04 70e7      	ANDI R30,LOW(0x7)
000a05 2f3e      	MOV  R19,R30
                 _0x2040049:
000a06 85ed      	LDD  R30,Y+13
000a07 30e0      	CPI  R30,0
000a08 f409      	BRNE PC+2
000a09 c152      	RJMP _0x204004B
000a0a 85ea      	LDD  R30,Y+10
000a0b 85fb      	LDD  R31,Y+10+1
000a0c 83ee      	STD  Y+6,R30
000a0d 83ff      	STD  Y+6+1,R31
000a0e e010      	LDI  R17,LOW(0)
000a0f 8908      	LDD  R16,Y+16
000a10 3030      	CPI  R19,0
000a11 f009      	BREQ PC+2
000a12 c066      	RJMP _0x204004C
000a13 85ad      	LDD  R26,Y+13
000a14 30a8      	CPI  R26,LOW(0x8)
000a15 f408      	BRSH PC+2
000a16 c05d      	RJMP _0x204004D
000a17 85e9      	LDD  R30,Y+9
000a18 30e0      	CPI  R30,0
000a19 f011      	BREQ _0x2040052
000a1a 30e3      	CPI  R30,LOW(0x3)
000a1b f409      	BRNE _0x2040053
                 _0x2040052:
000a1c c002      	RJMP _0x2040054
                 _0x2040053:
000a1d 30e7      	CPI  R30,LOW(0x7)
000a1e f409      	BRNE _0x2040055
                 _0x2040054:
000a1f c002      	RJMP _0x2040056
                 _0x2040055:
000a20 30e8      	CPI  R30,LOW(0x8)
000a21 f409      	BRNE _0x2040057
                 _0x2040056:
000a22 c002      	RJMP _0x2040058
                 _0x2040057:
000a23 30e9      	CPI  R30,LOW(0x9)
000a24 f409      	BRNE _0x2040059
                 _0x2040058:
000a25 c002      	RJMP _0x204005A
                 _0x2040059:
000a26 30ea      	CPI  R30,LOW(0xA)
000a27 f421      	BRNE _0x204005B
                 _0x204005A:
000a28 930a      	ST   -Y,R16
000a29 89a8      	LDD  R26,Y+16
000a2a de24      	RCALL _pcd8544_gotoxy
000a2b c004      	RJMP _0x2040050
                 _0x204005B:
000a2c 30e6      	CPI  R30,LOW(0x6)
000a2d f411      	BRNE _0x2040050
000a2e 940e 107b 	CALL SUBOPT_0x1E
                 _0x2040050:
                 _0x204005D:
000a30 931f      	PUSH R17
000a31 5f1f      	SUBI R17,-1
000a32 85ee      	LDD  R30,Y+14
000a33 91af      	POP  R26
000a34 17ae      	CP   R26,R30
000a35 f5b8      	BRSH _0x204005F
000a36 85a9      	LDD  R26,Y+9
000a37 30a6      	CPI  R26,LOW(0x6)
000a38 f469      	BRNE _0x2040060
000a39 940e 107f 	CALL SUBOPT_0x1F
000a3b 93fa      	ST   -Y,R31
000a3c 93ea      	ST   -Y,R30
000a3d 940e 1066 	CALL SUBOPT_0x1B
000a3f 9731      	SBIW R30,1
000a40 5be0      	SUBI R30,LOW(-_gfx_buffer_G102)
000a41 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000a42 81a0      	LD   R26,Z
000a43 940e 0f91 	CALL _glcd_writemem
000a45 c026      	RJMP _0x2040061
                 _0x2040060:
000a46 85e9      	LDD  R30,Y+9
000a47 30e9      	CPI  R30,LOW(0x9)
000a48 f411      	BRNE _0x2040065
000a49 e050      	LDI  R21,LOW(0)
000a4a c00e      	RJMP _0x2040066
                 _0x2040065:
000a4b 30ea      	CPI  R30,LOW(0xA)
000a4c f411      	BRNE _0x2040064
000a4d ef5f      	LDI  R21,LOW(255)
000a4e c00a      	RJMP _0x2040066
                 _0x2040064:
000a4f 940e 107f 	CALL SUBOPT_0x1F
000a51 940e 1088 	CALL SUBOPT_0x20
000a53 2f5e      	MOV  R21,R30
000a54 85e9      	LDD  R30,Y+9
000a55 30e7      	CPI  R30,LOW(0x7)
000a56 f011      	BREQ _0x204006D
000a57 30e8      	CPI  R30,LOW(0x8)
000a58 f421      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
000a59 940e 108e 	CALL SUBOPT_0x21
000a5b 2f5e      	MOV  R21,R30
000a5c c006      	RJMP _0x204006F
                 _0x204006E:
000a5d 30e3      	CPI  R30,LOW(0x3)
000a5e f411      	BRNE _0x2040071
000a5f 9550      	COM  R21
000a60 c002      	RJMP _0x2040072
                 _0x2040071:
000a61 30e0      	CPI  R30,0
000a62 f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
000a63 2fa5      	MOV  R26,R21
000a64 ddce      	RCALL _pcd8544_wrdata_G102
000a65 c006      	RJMP _0x204006B
                 _0x2040074:
000a66 940e 1092 	CALL SUBOPT_0x22
000a68 efef      	LDI  R30,LOW(255)
000a69 93ea      	ST   -Y,R30
000a6a 85ad      	LDD  R26,Y+13
000a6b ded1      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
000a6c cfc3      	RJMP _0x204005D
                 _0x204005F:
000a6d 85ef      	LDD  R30,Y+15
000a6e 5fe8      	SUBI R30,-LOW(8)
000a6f 87ef      	STD  Y+15,R30
000a70 85ed      	LDD  R30,Y+13
000a71 50e8      	SUBI R30,LOW(8)
000a72 87ed      	STD  Y+13,R30
000a73 c0df      	RJMP _0x2040075
                 _0x204004D:
000a74 855d      	LDD  R21,Y+13
000a75 e020      	LDI  R18,LOW(0)
000a76 e0e0      	LDI  R30,LOW(0)
000a77 87ed      	STD  Y+13,R30
000a78 c081      	RJMP _0x2040076
                 _0x204004C:
000a79 2fe3      	MOV  R30,R19
000a7a 85ad      	LDD  R26,Y+13
000a7b 0fae      	ADD  R26,R30
000a7c 30a9      	CPI  R26,LOW(0x9)
000a7d f420      	BRSH _0x2040077
000a7e 852d      	LDD  R18,Y+13
000a7f e0e0      	LDI  R30,LOW(0)
000a80 87ed      	STD  Y+13,R30
000a81 c003      	RJMP _0x2040078
                 _0x2040077:
000a82 e0e8      	LDI  R30,LOW(8)
000a83 1be3      	SUB  R30,R19
000a84 2f2e      	MOV  R18,R30
                 _0x2040078:
000a85 933a      	ST   -Y,R19
000a86 2fa2      	MOV  R26,R18
000a87 940e 0f3f 	CALL _glcd_getmask
000a89 2f4e      	MOV  R20,R30
000a8a 85e9      	LDD  R30,Y+9
000a8b 30e6      	CPI  R30,LOW(0x6)
000a8c f529      	BRNE _0x204007C
000a8d 940e 107b 	CALL SUBOPT_0x1E
                 _0x204007D:
000a8f 931f      	PUSH R17
000a90 5f1f      	SUBI R17,-1
000a91 85ee      	LDD  R30,Y+14
000a92 91af      	POP  R26
000a93 17ae      	CP   R26,R30
000a94 f4e0      	BRSH _0x204007F
000a95 940e 1066 	CALL SUBOPT_0x1B
000a97 9731      	SBIW R30,1
000a98 5be0      	SUBI R30,LOW(-_gfx_buffer_G102)
000a99 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000a9a 81e0      	LD   R30,Z
000a9b 23e4      	AND  R30,R20
000a9c 2fae      	MOV  R26,R30
000a9d 2fe3      	MOV  R30,R19
000a9e 940e 112d 	CALL __LSRB12
000aa0 940e 1098 	CALL SUBOPT_0x23
000aa2 2fe3      	MOV  R30,R19
000aa3 2fa4      	MOV  R26,R20
000aa4 940e 112d 	CALL __LSRB12
000aa6 95e0      	COM  R30
000aa7 21e1      	AND  R30,R1
000aa8 2b5e      	OR   R21,R30
000aa9 940e 107f 	CALL SUBOPT_0x1F
000aab 93fa      	ST   -Y,R31
000aac 93ea      	ST   -Y,R30
000aad 2fa5      	MOV  R26,R21
000aae 940e 0f91 	CALL _glcd_writemem
000ab0 cfde      	RJMP _0x204007D
                 _0x204007F:
000ab1 c02c      	RJMP _0x204007B
                 _0x204007C:
000ab2 30e9      	CPI  R30,LOW(0x9)
000ab3 f411      	BRNE _0x2040080
000ab4 e050      	LDI  R21,LOW(0)
000ab5 c003      	RJMP _0x2040081
                 _0x2040080:
000ab6 30ea      	CPI  R30,LOW(0xA)
000ab7 f4a9      	BRNE _0x2040087
000ab8 ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
000ab9 940e 108e 	CALL SUBOPT_0x21
000abb 2fae      	MOV  R26,R30
000abc 2fe3      	MOV  R30,R19
000abd 940e 1125 	CALL __LSLB12
000abf 2f5e      	MOV  R21,R30
                 _0x2040084:
000ac0 931f      	PUSH R17
000ac1 5f1f      	SUBI R17,-1
000ac2 85ee      	LDD  R30,Y+14
000ac3 91af      	POP  R26
000ac4 17ae      	CP   R26,R30
000ac5 f430      	BRSH _0x2040086
000ac6 940e 1092 	CALL SUBOPT_0x22
000ac8 934a      	ST   -Y,R20
000ac9 e0a0      	LDI  R26,LOW(0)
000aca de72      	RCALL _pcd8544_wrmasked_G102
000acb cff4      	RJMP _0x2040084
                 _0x2040086:
000acc c011      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
000acd 931f      	PUSH R17
000ace 5f1f      	SUBI R17,-1
000acf 85ee      	LDD  R30,Y+14
000ad0 91af      	POP  R26
000ad1 17ae      	CP   R26,R30
000ad2 f458      	BRSH _0x204008A
000ad3 940e 10a3 	CALL SUBOPT_0x24
000ad5 2fae      	MOV  R26,R30
000ad6 2fe3      	MOV  R30,R19
000ad7 940e 1125 	CALL __LSLB12
000ad9 93ea      	ST   -Y,R30
000ada 934a      	ST   -Y,R20
000adb 85ad      	LDD  R26,Y+13
000adc de60      	RCALL _pcd8544_wrmasked_G102
000add cfef      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
000ade 85ed      	LDD  R30,Y+13
000adf 30e0      	CPI  R30,0
000ae0 f409      	BRNE _0x204008B
000ae1 c07a      	RJMP _0x204004B
                 _0x204008B:
000ae2 85ad      	LDD  R26,Y+13
000ae3 30a8      	CPI  R26,LOW(0x8)
000ae4 f428      	BRSH _0x204008C
000ae5 85ed      	LDD  R30,Y+13
000ae6 1be2      	SUB  R30,R18
000ae7 2f5e      	MOV  R21,R30
000ae8 e0e0      	LDI  R30,LOW(0)
000ae9 c003      	RJMP _0x20400A1
                 _0x204008C:
000aea 2f53      	MOV  R21,R19
000aeb 85ed      	LDD  R30,Y+13
000aec 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
000aed 87ed      	STD  Y+13,R30
000aee e010      	LDI  R17,LOW(0)
000aef 85ef      	LDD  R30,Y+15
000af0 5fe8      	SUBI R30,-LOW(8)
000af1 87ef      	STD  Y+15,R30
000af2 e0e8      	LDI  R30,LOW(8)
000af3 1be3      	SUB  R30,R19
000af4 2f2e      	MOV  R18,R30
000af5 8908      	LDD  R16,Y+16
000af6 85ea      	LDD  R30,Y+10
000af7 85fb      	LDD  R31,Y+10+1
000af8 83ee      	STD  Y+6,R30
000af9 83ff      	STD  Y+6+1,R31
                 _0x2040076:
000afa 2fe5      	MOV  R30,R21
000afb e0f0      	LDI  R31,0
000afc 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000afd 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000afe 9144      	LPM  R20,Z
000aff 85e9      	LDD  R30,Y+9
000b00 30e6      	CPI  R30,LOW(0x6)
000b01 f529      	BRNE _0x2040091
000b02 940e 107b 	CALL SUBOPT_0x1E
                 _0x2040092:
000b04 931f      	PUSH R17
000b05 5f1f      	SUBI R17,-1
000b06 85ee      	LDD  R30,Y+14
000b07 91af      	POP  R26
000b08 17ae      	CP   R26,R30
000b09 f4e0      	BRSH _0x2040094
000b0a 940e 1066 	CALL SUBOPT_0x1B
000b0c 9731      	SBIW R30,1
000b0d 5be0      	SUBI R30,LOW(-_gfx_buffer_G102)
000b0e 4ff7      	SBCI R31,HIGH(-_gfx_buffer_G102)
000b0f 81e0      	LD   R30,Z
000b10 23e4      	AND  R30,R20
000b11 2fae      	MOV  R26,R30
000b12 2fe2      	MOV  R30,R18
000b13 940e 1125 	CALL __LSLB12
000b15 940e 1098 	CALL SUBOPT_0x23
000b17 2fe2      	MOV  R30,R18
000b18 2fa4      	MOV  R26,R20
000b19 940e 1125 	CALL __LSLB12
000b1b 95e0      	COM  R30
000b1c 21e1      	AND  R30,R1
000b1d 2b5e      	OR   R21,R30
000b1e 940e 107f 	CALL SUBOPT_0x1F
000b20 93fa      	ST   -Y,R31
000b21 93ea      	ST   -Y,R30
000b22 2fa5      	MOV  R26,R21
000b23 940e 0f91 	CALL _glcd_writemem
000b25 cfde      	RJMP _0x2040092
                 _0x2040094:
000b26 c02c      	RJMP _0x2040090
                 _0x2040091:
000b27 30e9      	CPI  R30,LOW(0x9)
000b28 f411      	BRNE _0x2040095
000b29 e050      	LDI  R21,LOW(0)
000b2a c003      	RJMP _0x2040096
                 _0x2040095:
000b2b 30ea      	CPI  R30,LOW(0xA)
000b2c f4a9      	BRNE _0x204009C
000b2d ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
000b2e 940e 108e 	CALL SUBOPT_0x21
000b30 2fae      	MOV  R26,R30
000b31 2fe2      	MOV  R30,R18
000b32 940e 112d 	CALL __LSRB12
000b34 2f5e      	MOV  R21,R30
                 _0x2040099:
000b35 931f      	PUSH R17
000b36 5f1f      	SUBI R17,-1
000b37 85ee      	LDD  R30,Y+14
000b38 91af      	POP  R26
000b39 17ae      	CP   R26,R30
000b3a f430      	BRSH _0x204009B
000b3b 940e 1092 	CALL SUBOPT_0x22
000b3d 934a      	ST   -Y,R20
000b3e e0a0      	LDI  R26,LOW(0)
000b3f ddfd      	RCALL _pcd8544_wrmasked_G102
000b40 cff4      	RJMP _0x2040099
                 _0x204009B:
000b41 c011      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
000b42 931f      	PUSH R17
000b43 5f1f      	SUBI R17,-1
000b44 85ee      	LDD  R30,Y+14
000b45 91af      	POP  R26
000b46 17ae      	CP   R26,R30
000b47 f458      	BRSH _0x204009F
000b48 940e 10a3 	CALL SUBOPT_0x24
000b4a 2fae      	MOV  R26,R30
000b4b 2fe2      	MOV  R30,R18
000b4c 940e 112d 	CALL __LSRB12
000b4e 93ea      	ST   -Y,R30
000b4f 934a      	ST   -Y,R20
000b50 85ad      	LDD  R26,Y+13
000b51 ddeb      	RCALL _pcd8544_wrmasked_G102
000b52 cfef      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
000b53 85e8      	LDD  R30,Y+8
000b54 85aa      	LDD  R26,Y+10
000b55 85bb      	LDD  R27,Y+10+1
000b56 e0f0      	LDI  R31,0
000b57 0fea      	ADD  R30,R26
000b58 1ffb      	ADC  R31,R27
000b59 87ea      	STD  Y+10,R30
000b5a 87fb      	STD  Y+10+1,R31
000b5b ceaa      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120009:
000b5c 940e 1181 	CALL __LOADLOCR6
000b5e 9661      	ADIW R28,17
000b5f 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000b60 940e 0fed 	CALL SUBOPT_0x9
000b62 940e 1176 	CALL __CPW02
000b64 f024      	BRLT _0x2060003
000b65 e0e0      	LDI  R30,LOW(0)
000b66 e0f0      	LDI  R31,HIGH(0)
000b67 940c 0f48 	JMP  _0x2120002
                 _0x2060003:
000b69 81a8      	LD   R26,Y
000b6a 81b9      	LDD  R27,Y+1
000b6b 35a4      	CPI  R26,LOW(0x54)
000b6c e0e0      	LDI  R30,HIGH(0x54)
000b6d 07be      	CPC  R27,R30
000b6e f024      	BRLT _0x2060004
000b6f e5e3      	LDI  R30,LOW(83)
000b70 e0f0      	LDI  R31,HIGH(83)
000b71 940c 0f48 	JMP  _0x2120002
                 _0x2060004:
000b73 81e8      	LD   R30,Y
000b74 81f9      	LDD  R31,Y+1
000b75 940c 0f48 	JMP  _0x2120002
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000b77 940e 0fed 	CALL SUBOPT_0x9
000b79 940e 1176 	CALL __CPW02
000b7b f024      	BRLT _0x2060005
000b7c e0e0      	LDI  R30,LOW(0)
000b7d e0f0      	LDI  R31,HIGH(0)
000b7e 940c 0f48 	JMP  _0x2120002
                 _0x2060005:
000b80 81a8      	LD   R26,Y
000b81 81b9      	LDD  R27,Y+1
000b82 97d0      	SBIW R26,48
000b83 f024      	BRLT _0x2060006
000b84 e2ef      	LDI  R30,LOW(47)
000b85 e0f0      	LDI  R31,HIGH(47)
000b86 940c 0f48 	JMP  _0x2120002
                 _0x2060006:
000b88 81e8      	LD   R30,Y
000b89 81f9      	LDD  R31,Y+1
000b8a 940c 0f48 	JMP  _0x2120002
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
000b8c 93ba      	ST   -Y,R27
000b8d 93aa      	ST   -Y,R26
000b8e 9723      	SBIW R28,3
000b8f 940e 10b0 	CALL SUBOPT_0x25
000b91 018f      	MOVW R16,R30
000b92 2e00      	MOV  R0,R16
000b93 2a01      	OR   R0,R17
000b94 f419      	BRNE _0x206000B
000b95 e0e0      	LDI  R30,LOW(0)
000b96 e0f0      	LDI  R31,HIGH(0)
000b97 c05f      	RJMP _0x2120008
                 _0x206000B:
000b98 940e 10b7 	CALL SUBOPT_0x26
000b9a 820f      	STD  Y+7,R0
000b9b 940e 10b7 	CALL SUBOPT_0x26
000b9d 820e      	STD  Y+6,R0
000b9e 940e 10b7 	CALL SUBOPT_0x26
000ba0 8608      	STD  Y+8,R0
000ba1 85eb      	LDD  R30,Y+11
000ba2 85a8      	LDD  R26,Y+8
000ba3 17ea      	CP   R30,R26
000ba4 f418      	BRSH _0x206000C
000ba5 e0e0      	LDI  R30,LOW(0)
000ba6 e0f0      	LDI  R31,HIGH(0)
000ba7 c04f      	RJMP _0x2120008
                 _0x206000C:
000ba8 01f8      	MOVW R30,R16
                +
000ba9 5f0f     +SUBI R16 , LOW ( - 1 )
000baa 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000bab 9154      	LPM  R21,Z
000bac 85a8      	LDD  R26,Y+8
000bad 27bb      	CLR  R27
000bae 27ee      	CLR  R30
000baf 0fa5      	ADD  R26,R21
000bb0 1fbe      	ADC  R27,R30
000bb1 85eb      	LDD  R30,Y+11
000bb2 e0f0      	LDI  R31,0
000bb3 17ea      	CP   R30,R26
000bb4 07fb      	CPC  R31,R27
000bb5 f018      	BRLO _0x206000D
000bb6 e0e0      	LDI  R30,LOW(0)
000bb7 e0f0      	LDI  R31,HIGH(0)
000bb8 c03e      	RJMP _0x2120008
                 _0x206000D:
000bb9 81ee      	LDD  R30,Y+6
000bba 95e6      	LSR  R30
000bbb 95e6      	LSR  R30
000bbc 95e6      	LSR  R30
000bbd 2f4e      	MOV  R20,R30
000bbe 81ee      	LDD  R30,Y+6
000bbf 70e7      	ANDI R30,LOW(0x7)
000bc0 f009      	BREQ _0x206000E
000bc1 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
000bc2 81ef      	LDD  R30,Y+7
000bc3 30e0      	CPI  R30,0
000bc4 f0a1      	BREQ _0x206000F
000bc5 85a9      	LDD  R26,Y+9
000bc6 85ba      	LDD  R27,Y+9+1
000bc7 93ec      	ST   X,R30
000bc8 85a8      	LDD  R26,Y+8
000bc9 85eb      	LDD  R30,Y+11
000bca 1bea      	SUB  R30,R26
000bcb e0f0      	LDI  R31,0
000bcc 01df      	MOVW R26,R30
000bcd 81ef      	LDD  R30,Y+7
000bce e0f0      	LDI  R31,0
000bcf 940e 113a 	CALL __MULW12U
000bd1 01df      	MOVW R26,R30
000bd2 2fe4      	MOV  R30,R20
000bd3 e0f0      	LDI  R31,0
000bd4 940e 113a 	CALL __MULW12U
000bd6 0fe0      	ADD  R30,R16
000bd7 1ff1      	ADC  R31,R17
000bd8 c01e      	RJMP _0x2120008
                 _0x206000F:
000bd9 0198      	MOVW R18,R16
000bda 2fe5      	MOV  R30,R21
000bdb e0f0      	LDI  R31,0
                +
000bdc 0f0e     +ADD R16 , R30
000bdd 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
000bde 85a8      	LDD  R26,Y+8
000bdf 5faf      	SUBI R26,-LOW(1)
000be0 87a8      	STD  Y+8,R26
000be1 50a1      	SUBI R26,LOW(1)
000be2 85eb      	LDD  R30,Y+11
000be3 17ae      	CP   R26,R30
000be4 f460      	BRSH _0x2060012
000be5 01f9      	MOVW R30,R18
                +
000be6 5f2f     +SUBI R18 , LOW ( - 1 )
000be7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000be8 91a4      	LPM  R26,Z
000be9 e0b0      	LDI  R27,0
000bea 2fe4      	MOV  R30,R20
000beb e0f0      	LDI  R31,0
000bec 940e 113a 	CALL __MULW12U
                +
000bee 0f0e     +ADD R16 , R30
000bef 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000bf0 cfed      	RJMP _0x2060010
                 _0x2060012:
000bf1 01f9      	MOVW R30,R18
000bf2 91e4      	LPM  R30,Z
000bf3 85a9      	LDD  R26,Y+9
000bf4 85ba      	LDD  R27,Y+9+1
000bf5 93ec      	ST   X,R30
000bf6 01f8      	MOVW R30,R16
                 _0x2120008:
000bf7 940e 1181 	CALL __LOADLOCR6
000bf9 962c      	ADIW R28,12
000bfa 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
000bfb e0e0      	LDI  R30,LOW(0)
                +
000bfc 93e0 0660+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000bfe 91a0 0661+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c00 27bb      	CLR  R27
000c01 940e 10bc 	CALL SUBOPT_0x27
000c03 e0f0      	LDI  R31,0
000c04 0fae      	ADD  R26,R30
000c05 1fbf      	ADC  R27,R31
                +
000c06 91e0 0665+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c08 e0f0      	LDI  R31,0
000c09 0fae      	ADD  R26,R30
000c0a 1fbf      	ADC  R27,R31
000c0b df6b      	RCALL _glcd_clipy
                +
000c0c 93e0 0661+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000c0e 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000c0f 93aa      	ST   -Y,R26
000c10 9721      	SBIW R28,1
000c11 940e 10b0 	CALL SUBOPT_0x25
000c13 9730      	SBIW R30,0
000c14 f409      	BRNE PC+2
000c15 c055      	RJMP _0x206001F
000c16 81af      	LDD  R26,Y+7
000c17 30aa      	CPI  R26,LOW(0xA)
000c18 f409      	BRNE _0x2060020
000c19 c04f      	RJMP _0x2060021
                 _0x2060020:
000c1a 81ef      	LDD  R30,Y+7
000c1b 93ea      	ST   -Y,R30
000c1c 01de      	MOVW R26,R28
000c1d 9617      	ADIW R26,7
000c1e df6d      	RCALL _glcd_getcharw_G103
000c1f 01af      	MOVW R20,R30
000c20 9730      	SBIW R30,0
000c21 f409      	BRNE _0x2060022
000c22 c04a      	RJMP _0x2120007
                 _0x2060022:
                +
000c23 91e0 0664+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c25 81ae      	LDD  R26,Y+6
000c26 0fea      	ADD  R30,R26
000c27 2f3e      	MOV  R19,R30
                +
000c28 91a0 0660+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000c2a 27bb      	CLR  R27
000c2b e0f0      	LDI  R31,0
000c2c 0fea      	ADD  R30,R26
000c2d 1ffb      	ADC  R31,R27
000c2e 018f      	MOVW R16,R30
                +
000c2f 3505     +CPI R16 , LOW ( 85 )
000c30 e0e0     +LDI R30 , HIGH ( 85 )
000c31 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000c32 f018      	BRLO _0x2060023
000c33 2f03      	MOV  R16,R19
000c34 2711      	CLR  R17
000c35 dfc5      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
000c36 91e0 0660+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c38 93ea      	ST   -Y,R30
                +
000c39 91e0 0661+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c3b 93ea      	ST   -Y,R30
000c3c 85e8      	LDD  R30,Y+8
000c3d 93ea      	ST   -Y,R30
000c3e 940e 10bc 	CALL SUBOPT_0x27
000c40 93ea      	ST   -Y,R30
000c41 e0e1      	LDI  R30,LOW(1)
000c42 93ea      	ST   -Y,R30
000c43 935a      	ST   -Y,R21
000c44 934a      	ST   -Y,R20
000c45 e0a7      	LDI  R26,LOW(7)
000c46 dd2f      	RCALL _glcd_block
                +
000c47 91e0 0660+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c49 81ae      	LDD  R26,Y+6
000c4a 0fea      	ADD  R30,R26
000c4b 93ea      	ST   -Y,R30
                +
000c4c 91e0 0661+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000c4e 93ea      	ST   -Y,R30
                +
000c4f 91e0 0664+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000c51 93ea      	ST   -Y,R30
000c52 940e 10bc 	CALL SUBOPT_0x27
000c54 940e 10c3 	CALL SUBOPT_0x28
                +
000c56 91e0 0660+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000c58 93ea      	ST   -Y,R30
                +
000c59 91a0 0661+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000c5b 940e 10bc 	CALL SUBOPT_0x27
000c5d 0fea      	ADD  R30,R26
000c5e 93ea      	ST   -Y,R30
000c5f 933a      	ST   -Y,R19
                +
000c60 91e0 0665+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000c62 940e 10c3 	CALL SUBOPT_0x28
000c64 e5e4      	LDI  R30,LOW(84)
000c65 e0f0      	LDI  R31,HIGH(84)
000c66 17e0      	CP   R30,R16
000c67 07f1      	CPC  R31,R17
000c68 f411      	BRNE _0x2060024
                 _0x2060021:
000c69 df91      	RCALL _glcd_new_line_G103
000c6a c002      	RJMP _0x2120007
                 _0x2060024:
                 _0x206001F:
                +
000c6b 9300 0660+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120007:
000c6d 940e 1181 	CALL __LOADLOCR6
000c6f 9628      	ADIW R28,8
000c70 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
000c71 93ba      	ST   -Y,R27
000c72 93aa      	ST   -Y,R26
000c73 931a      	ST   -Y,R17
                 _0x206002E:
000c74 81a9      	LDD  R26,Y+1
000c75 81ba      	LDD  R27,Y+1+1
000c76 91ed      	LD   R30,X+
000c77 83a9      	STD  Y+1,R26
000c78 83ba      	STD  Y+1+1,R27
000c79 2f1e      	MOV  R17,R30
000c7a 30e0      	CPI  R30,0
000c7b f019      	BREQ _0x2060030
000c7c 2fa1      	MOV  R26,R17
000c7d df91      	RCALL _glcd_putchar
000c7e cff5      	RJMP _0x206002E
                 _0x2060030:
000c7f 8118      	LDD  R17,Y+0
000c80 c30e      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
000c81 93aa      	ST   -Y,R26
000c82 81ea      	LDD  R30,Y+2
000c83 93ea      	ST   -Y,R30
000c84 81ea      	LDD  R30,Y+2
000c85 93ea      	ST   -Y,R30
                +
000c86 91e0 0667+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000c88 81aa      	LDD  R26,Y+2
000c89 23ea      	AND  R30,R26
000c8a f019      	BREQ _0x206003E
000c8b 91e0 065e 	LDS  R30,_glcd_state
000c8d c002      	RJMP _0x206003F
                 _0x206003E:
                +
000c8e 91e0 065f+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
000c90 2fae      	MOV  R26,R30
000c91 dc89      	RCALL _glcd_putpixel
000c92 81e8      	LD   R30,Y
000c93 0fee      	LSL  R30
000c94 83e8      	ST   Y,R30
000c95 30e0      	CPI  R30,0
000c96 f411      	BRNE _0x2060041
000c97 e0e1      	LDI  R30,LOW(1)
000c98 83e8      	ST   Y,R30
                 _0x2060041:
000c99 81e8      	LD   R30,Y
000c9a c2f4      	RJMP _0x2120001
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000c9b 93aa      	ST   -Y,R26
000c9c 81a9      	LDD  R26,Y+1
000c9d 27bb      	CLR  R27
000c9e dec1      	RCALL _glcd_clipx
                +
000c9f 93e0 0660+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000ca1 81a8      	LD   R26,Y
000ca2 27bb      	CLR  R27
000ca3 ded3      	RCALL _glcd_clipy
                +
000ca4 93e0 0661+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000ca6 c2a1      	RJMP _0x2120002
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000ca7 93aa      	ST   -Y,R26
000ca8 972b      	SBIW R28,11
000ca9 940e 117a 	CALL __SAVELOCR6
000cab 89ac      	LDD  R26,Y+20
000cac 27bb      	CLR  R27
000cad deb2      	RCALL _glcd_clipx
000cae 8bec      	STD  Y+20,R30
000caf 89aa      	LDD  R26,Y+18
000cb0 27bb      	CLR  R27
000cb1 deae      	RCALL _glcd_clipx
000cb2 8bea      	STD  Y+18,R30
000cb3 89ab      	LDD  R26,Y+19
000cb4 27bb      	CLR  R27
000cb5 dec1      	RCALL _glcd_clipy
000cb6 8beb      	STD  Y+19,R30
000cb7 89a9      	LDD  R26,Y+17
000cb8 27bb      	CLR  R27
000cb9 debd      	RCALL _glcd_clipy
000cba 8be9      	STD  Y+17,R30
000cbb 89ea      	LDD  R30,Y+18
                +
000cbc 93e0 0660+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000cbe 89e9      	LDD  R30,Y+17
                +
000cbf 93e0 0661+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000cc1 e0e1      	LDI  R30,LOW(1)
000cc2 87e8      	STD  Y+8,R30
000cc3 89e9      	LDD  R30,Y+17
000cc4 89ab      	LDD  R26,Y+19
000cc5 17ea      	CP   R30,R26
000cc6 f571      	BRNE _0x2060042
000cc7 891c      	LDD  R17,Y+20
000cc8 89aa      	LDD  R26,Y+18
000cc9 171a      	CP   R17,R26
000cca f431      	BRNE _0x2060043
000ccb 931a      	ST   -Y,R17
000ccc 89ec      	LDD  R30,Y+20
000ccd 93ea      	ST   -Y,R30
000cce e0a1      	LDI  R26,LOW(1)
000ccf dfb1      	RCALL _glcd_putpixelm_G103
000cd0 c0c8      	RJMP _0x2120006
                 _0x2060043:
000cd1 89aa      	LDD  R26,Y+18
000cd2 171a      	CP   R17,R26
000cd3 f430      	BRSH _0x2060044
000cd4 89ea      	LDD  R30,Y+18
000cd5 1be1      	SUB  R30,R17
000cd6 2f0e      	MOV  R16,R30
                +
000cd7 e041     +LDI R20 , LOW ( 1 )
000cd8 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000cd9 c006      	RJMP _0x2060045
                 _0x2060044:
000cda 89aa      	LDD  R26,Y+18
000cdb 2fe1      	MOV  R30,R17
000cdc 1bea      	SUB  R30,R26
000cdd 2f0e      	MOV  R16,R30
                +
000cde ef4f     +LDI R20 , LOW ( - 1 )
000cdf ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
000ce0 893b      	LDD  R19,Y+19
000ce1 e0e0      	LDI  R30,LOW(0)
000ce2 83ee      	STD  Y+6,R30
                 _0x2060049:
000ce3 940e 10cd 	CALL SUBOPT_0x29
000ce5 f438      	BRSH _0x206004B
000ce6 931a      	ST   -Y,R17
000ce7 933a      	ST   -Y,R19
000ce8 9533      	INC  R19
000ce9 85aa      	LDD  R26,Y+10
000cea df96      	RCALL _glcd_putpixelm_G103
000ceb 83ef      	STD  Y+7,R30
000cec cff6      	RJMP _0x2060049
                 _0x206004B:
000ced 81ef      	LDD  R30,Y+7
000cee 87e8      	STD  Y+8,R30
000cef 0f14      	ADD  R17,R20
000cf0 2fe0      	MOV  R30,R16
000cf1 5001      	SUBI R16,1
000cf2 30e0      	CPI  R30,0
000cf3 f761      	BRNE _0x2060047
000cf4 c0a4      	RJMP _0x206004C
                 _0x2060042:
000cf5 89ea      	LDD  R30,Y+18
000cf6 89ac      	LDD  R26,Y+20
000cf7 17ea      	CP   R30,R26
000cf8 f539      	BRNE _0x206004D
000cf9 893b      	LDD  R19,Y+19
000cfa 89a9      	LDD  R26,Y+17
000cfb 173a      	CP   R19,R26
000cfc f430      	BRSH _0x206004E
000cfd 89e9      	LDD  R30,Y+17
000cfe 1be3      	SUB  R30,R19
000cff 2f2e      	MOV  R18,R30
000d00 e0e1      	LDI  R30,LOW(1)
000d01 e0f0      	LDI  R31,HIGH(1)
000d02 c006      	RJMP _0x206011B
                 _0x206004E:
000d03 89a9      	LDD  R26,Y+17
000d04 2fe3      	MOV  R30,R19
000d05 1bea      	SUB  R30,R26
000d06 2f2e      	MOV  R18,R30
000d07 efef      	LDI  R30,LOW(65535)
000d08 efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
000d09 87ed      	STD  Y+13,R30
000d0a 87fe      	STD  Y+13+1,R31
                 _0x2060051:
000d0b 891c      	LDD  R17,Y+20
000d0c e0e0      	LDI  R30,LOW(0)
000d0d 83ee      	STD  Y+6,R30
                 _0x2060053:
000d0e 940e 10cd 	CALL SUBOPT_0x29
000d10 f430      	BRSH _0x2060055
000d11 931a      	ST   -Y,R17
000d12 9513      	INC  R17
000d13 940e 10d5 	CALL SUBOPT_0x2A
000d15 83ef      	STD  Y+7,R30
000d16 cff7      	RJMP _0x2060053
                 _0x2060055:
000d17 81ef      	LDD  R30,Y+7
000d18 87e8      	STD  Y+8,R30
000d19 85ed      	LDD  R30,Y+13
000d1a 0f3e      	ADD  R19,R30
000d1b 2fe2      	MOV  R30,R18
000d1c 5021      	SUBI R18,1
000d1d 30e0      	CPI  R30,0
000d1e f761      	BRNE _0x2060051
000d1f c079      	RJMP _0x2060056
                 _0x206004D:
000d20 e0e0      	LDI  R30,LOW(0)
000d21 83ee      	STD  Y+6,R30
                 _0x2060057:
000d22 940e 10cd 	CALL SUBOPT_0x29
000d24 f008      	BRLO PC+2
000d25 c073      	RJMP _0x2060059
000d26 891c      	LDD  R17,Y+20
000d27 893b      	LDD  R19,Y+19
000d28 e0e1      	LDI  R30,LOW(1)
000d29 2f2e      	MOV  R18,R30
000d2a 2f0e      	MOV  R16,R30
000d2b 89aa      	LDD  R26,Y+18
000d2c 27bb      	CLR  R27
000d2d 89ec      	LDD  R30,Y+20
000d2e e0f0      	LDI  R31,0
000d2f 1bae      	SUB  R26,R30
000d30 0bbf      	SBC  R27,R31
000d31 01ad      	MOVW R20,R26
000d32 2355      	TST  R21
000d33 f42a      	BRPL _0x206005A
000d34 ef0f      	LDI  R16,LOW(255)
000d35 01fa      	MOVW R30,R20
000d36 940e 1121 	CALL __ANEGW1
000d38 01af      	MOVW R20,R30
                 _0x206005A:
000d39 01fa      	MOVW R30,R20
000d3a 0fee      	LSL  R30
000d3b 1fff      	ROL  R31
000d3c 87ef      	STD  Y+15,R30
000d3d 8bf8      	STD  Y+15+1,R31
000d3e 89a9      	LDD  R26,Y+17
000d3f 27bb      	CLR  R27
000d40 89eb      	LDD  R30,Y+19
000d41 e0f0      	LDI  R31,0
000d42 1bae      	SUB  R26,R30
000d43 0bbf      	SBC  R27,R31
000d44 87ad      	STD  Y+13,R26
000d45 87be      	STD  Y+13+1,R27
000d46 85ae      	LDD  R26,Y+14
000d47 23aa      	TST  R26
000d48 f43a      	BRPL _0x206005B
000d49 ef2f      	LDI  R18,LOW(255)
000d4a 85ed      	LDD  R30,Y+13
000d4b 85fe      	LDD  R31,Y+13+1
000d4c 940e 1121 	CALL __ANEGW1
000d4e 87ed      	STD  Y+13,R30
000d4f 87fe      	STD  Y+13+1,R31
                 _0x206005B:
000d50 85ed      	LDD  R30,Y+13
000d51 85fe      	LDD  R31,Y+13+1
000d52 0fee      	LSL  R30
000d53 1fff      	ROL  R31
000d54 87eb      	STD  Y+11,R30
000d55 87fc      	STD  Y+11+1,R31
000d56 931a      	ST   -Y,R17
000d57 933a      	ST   -Y,R19
000d58 e0a1      	LDI  R26,LOW(1)
000d59 df27      	RCALL _glcd_putpixelm_G103
000d5a 87e8      	STD  Y+8,R30
000d5b e0e0      	LDI  R30,LOW(0)
000d5c 87e9      	STD  Y+9,R30
000d5d 87ea      	STD  Y+9+1,R30
000d5e 85ad      	LDD  R26,Y+13
000d5f 85be      	LDD  R27,Y+13+1
000d60 174a      	CP   R20,R26
000d61 075b      	CPC  R21,R27
000d62 f0bc      	BRLT _0x206005C
                 _0x206005E:
000d63 0f10      	ADD  R17,R16
000d64 85eb      	LDD  R30,Y+11
000d65 85fc      	LDD  R31,Y+11+1
000d66 940e 10d9 	CALL SUBOPT_0x2B
000d68 85a9      	LDD  R26,Y+9
000d69 85ba      	LDD  R27,Y+9+1
000d6a 174a      	CP   R20,R26
000d6b 075b      	CPC  R21,R27
000d6c f42c      	BRGE _0x2060060
000d6d 0f32      	ADD  R19,R18
000d6e 85af      	LDD  R26,Y+15
000d6f 89b8      	LDD  R27,Y+15+1
000d70 940e 10e0 	CALL SUBOPT_0x2C
                 _0x2060060:
000d72 931a      	ST   -Y,R17
000d73 940e 10d5 	CALL SUBOPT_0x2A
000d75 87e8      	STD  Y+8,R30
000d76 89ea      	LDD  R30,Y+18
000d77 17e1      	CP   R30,R17
000d78 f751      	BRNE _0x206005E
000d79 c018      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
000d7a 0f32      	ADD  R19,R18
000d7b 85ef      	LDD  R30,Y+15
000d7c 89f8      	LDD  R31,Y+15+1
000d7d 940e 10d9 	CALL SUBOPT_0x2B
000d7f 85ed      	LDD  R30,Y+13
000d80 85fe      	LDD  R31,Y+13+1
000d81 85a9      	LDD  R26,Y+9
000d82 85ba      	LDD  R27,Y+9+1
000d83 17ea      	CP   R30,R26
000d84 07fb      	CPC  R31,R27
000d85 f42c      	BRGE _0x2060065
000d86 0f10      	ADD  R17,R16
000d87 85ab      	LDD  R26,Y+11
000d88 85bc      	LDD  R27,Y+11+1
000d89 940e 10e0 	CALL SUBOPT_0x2C
                 _0x2060065:
000d8b 931a      	ST   -Y,R17
000d8c 940e 10d5 	CALL SUBOPT_0x2A
000d8e 87e8      	STD  Y+8,R30
000d8f 89e9      	LDD  R30,Y+17
000d90 17e3      	CP   R30,R19
000d91 f741      	BRNE _0x2060063
                 _0x2060061:
000d92 89eb      	LDD  R30,Y+19
000d93 5fef      	SUBI R30,-LOW(1)
000d94 8beb      	STD  Y+19,R30
000d95 89e9      	LDD  R30,Y+17
000d96 5fef      	SUBI R30,-LOW(1)
000d97 8be9      	STD  Y+17,R30
000d98 cf89      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120006:
000d99 940e 1181 	CALL __LOADLOCR6
000d9b 9665      	ADIW R28,21
000d9c 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G105:
                 ; .FSTART _put_buff_G105
000d9d 93ba      	ST   -Y,R27
000d9e 93aa      	ST   -Y,R26
000d9f 931a      	ST   -Y,R17
000da0 930a      	ST   -Y,R16
000da1 81aa      	LDD  R26,Y+2
000da2 81bb      	LDD  R27,Y+2+1
000da3 9612      	ADIW R26,2
000da4 940e 1142 	CALL __GETW1P
000da6 9730      	SBIW R30,0
000da7 f129      	BREQ _0x20A0010
000da8 81aa      	LDD  R26,Y+2
000da9 81bb      	LDD  R27,Y+2+1
000daa 9614      	ADIW R26,4
000dab 940e 1142 	CALL __GETW1P
000dad 018f      	MOVW R16,R30
000dae 9730      	SBIW R30,0
000daf f061      	BREQ _0x20A0012
                +
000db0 3002     +CPI R16 , LOW ( 2 )
000db1 e0e0     +LDI R30 , HIGH ( 2 )
000db2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000db3 f080      	BRLO _0x20A0013
000db4 01f8      	MOVW R30,R16
000db5 9731      	SBIW R30,1
000db6 018f      	MOVW R16,R30
                +
000db7 81aa     +LDD R26 , Y + 2
000db8 81bb     +LDD R27 , Y + 2 + 1
000db9 9614     +ADIW R26 , 4
000dba 93ed     +ST X + , R30
000dbb 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x20A0012:
000dbc 81aa      	LDD  R26,Y+2
000dbd 81bb      	LDD  R27,Y+2+1
000dbe 9612      	ADIW R26,2
000dbf 940e 0fb7 	CALL SUBOPT_0x1
000dc1 9731      	SBIW R30,1
000dc2 81ac      	LDD  R26,Y+4
000dc3 83a0      	STD  Z+0,R26
                 _0x20A0013:
000dc4 81aa      	LDD  R26,Y+2
000dc5 81bb      	LDD  R27,Y+2+1
000dc6 940e 1142 	CALL __GETW1P
000dc8 23ff      	TST  R31
000dc9 f012      	BRMI _0x20A0014
000dca 940e 0fb7 	CALL SUBOPT_0x1
                 _0x20A0014:
000dcc c006      	RJMP _0x20A0015
                 _0x20A0010:
000dcd 81aa      	LDD  R26,Y+2
000dce 81bb      	LDD  R27,Y+2+1
000dcf efef      	LDI  R30,LOW(65535)
000dd0 efff      	LDI  R31,HIGH(65535)
000dd1 93ed      	ST   X+,R30
000dd2 93fc      	ST   X,R31
                 _0x20A0015:
                 _0x2120004:
000dd3 8119      	LDD  R17,Y+1
000dd4 8108      	LDD  R16,Y+0
                 _0x2120005:
000dd5 9625      	ADIW R28,5
000dd6 9508      	RET
                 ; .FEND
                 __print_G105:
                 ; .FSTART __print_G105
000dd7 93ba      	ST   -Y,R27
000dd8 93aa      	ST   -Y,R26
000dd9 9726      	SBIW R28,6
000dda 940e 117a 	CALL __SAVELOCR6
000ddc e010      	LDI  R17,0
000ddd 85ac      	LDD  R26,Y+12
000dde 85bd      	LDD  R27,Y+12+1
000ddf e0e0      	LDI  R30,LOW(0)
000de0 e0f0      	LDI  R31,HIGH(0)
000de1 93ed      	ST   X+,R30
000de2 93fc      	ST   X,R31
                 _0x20A0016:
000de3 89ea      	LDD  R30,Y+18
000de4 89fb      	LDD  R31,Y+18+1
000de5 9631      	ADIW R30,1
000de6 8bea      	STD  Y+18,R30
000de7 8bfb      	STD  Y+18+1,R31
000de8 9731      	SBIW R30,1
000de9 91e4      	LPM  R30,Z
000dea 2f2e      	MOV  R18,R30
000deb 30e0      	CPI  R30,0
000dec f409      	BRNE PC+2
000ded c115      	RJMP _0x20A0018
000dee 2fe1      	MOV  R30,R17
000def 30e0      	CPI  R30,0
000df0 f439      	BRNE _0x20A001C
000df1 3225      	CPI  R18,37
000df2 f411      	BRNE _0x20A001D
000df3 e011      	LDI  R17,LOW(1)
000df4 c002      	RJMP _0x20A001E
                 _0x20A001D:
000df5 940e 10e7 	CALL SUBOPT_0x2D
                 _0x20A001E:
000df7 c10a      	RJMP _0x20A001B
                 _0x20A001C:
000df8 30e1      	CPI  R30,LOW(0x1)
000df9 f4a9      	BRNE _0x20A001F
000dfa 3225      	CPI  R18,37
000dfb f419      	BRNE _0x20A0020
000dfc 940e 10e7 	CALL SUBOPT_0x2D
000dfe c102      	RJMP _0x20A00CC
                 _0x20A0020:
000dff e012      	LDI  R17,LOW(2)
000e00 e040      	LDI  R20,LOW(0)
000e01 e000      	LDI  R16,LOW(0)
000e02 322d      	CPI  R18,45
000e03 f411      	BRNE _0x20A0021
000e04 e001      	LDI  R16,LOW(1)
000e05 c0fc      	RJMP _0x20A001B
                 _0x20A0021:
000e06 322b      	CPI  R18,43
000e07 f411      	BRNE _0x20A0022
000e08 e24b      	LDI  R20,LOW(43)
000e09 c0f8      	RJMP _0x20A001B
                 _0x20A0022:
000e0a 3220      	CPI  R18,32
000e0b f411      	BRNE _0x20A0023
000e0c e240      	LDI  R20,LOW(32)
000e0d c0f4      	RJMP _0x20A001B
                 _0x20A0023:
000e0e c002      	RJMP _0x20A0024
                 _0x20A001F:
000e0f 30e2      	CPI  R30,LOW(0x2)
000e10 f439      	BRNE _0x20A0025
                 _0x20A0024:
000e11 e050      	LDI  R21,LOW(0)
000e12 e013      	LDI  R17,LOW(3)
000e13 3320      	CPI  R18,48
000e14 f411      	BRNE _0x20A0026
000e15 6800      	ORI  R16,LOW(128)
000e16 c0eb      	RJMP _0x20A001B
                 _0x20A0026:
000e17 c003      	RJMP _0x20A0027
                 _0x20A0025:
000e18 30e3      	CPI  R30,LOW(0x3)
000e19 f009      	BREQ PC+2
000e1a c0e7      	RJMP _0x20A001B
                 _0x20A0027:
000e1b 3320      	CPI  R18,48
000e1c f010      	BRLO _0x20A002A
000e1d 332a      	CPI  R18,58
000e1e f008      	BRLO _0x20A002B
                 _0x20A002A:
000e1f c007      	RJMP _0x20A0029
                 _0x20A002B:
000e20 e0aa      	LDI  R26,LOW(10)
000e21 9f5a      	MUL  R21,R26
000e22 2d50      	MOV  R21,R0
000e23 2fe2      	MOV  R30,R18
000e24 53e0      	SUBI R30,LOW(48)
000e25 0f5e      	ADD  R21,R30
000e26 c0db      	RJMP _0x20A001B
                 _0x20A0029:
000e27 2fe2      	MOV  R30,R18
000e28 36e3      	CPI  R30,LOW(0x63)
000e29 f449      	BRNE _0x20A002F
000e2a 940e 10ee 	CALL SUBOPT_0x2E
000e2c 89e8      	LDD  R30,Y+16
000e2d 89f9      	LDD  R31,Y+16+1
000e2e 81a4      	LDD  R26,Z+4
000e2f 93aa      	ST   -Y,R26
000e30 940e 10f4 	CALL SUBOPT_0x2F
000e32 c0ce      	RJMP _0x20A0030
                 _0x20A002F:
000e33 37e3      	CPI  R30,LOW(0x73)
000e34 f441      	BRNE _0x20A0032
000e35 940e 10ee 	CALL SUBOPT_0x2E
000e37 940e 10fa 	CALL SUBOPT_0x30
000e39 940e 07b8 	CALL _strlen
000e3b 2f1e      	MOV  R17,R30
000e3c c00a      	RJMP _0x20A0033
                 _0x20A0032:
000e3d 37e0      	CPI  R30,LOW(0x70)
000e3e f461      	BRNE _0x20A0035
000e3f 940e 10ee 	CALL SUBOPT_0x2E
000e41 940e 10fa 	CALL SUBOPT_0x30
000e43 940e 07c4 	CALL _strlenf
000e45 2f1e      	MOV  R17,R30
000e46 6008      	ORI  R16,LOW(8)
                 _0x20A0033:
000e47 6002      	ORI  R16,LOW(2)
000e48 770f      	ANDI R16,LOW(127)
000e49 e030      	LDI  R19,LOW(0)
000e4a c034      	RJMP _0x20A0036
                 _0x20A0035:
000e4b 36e4      	CPI  R30,LOW(0x64)
000e4c f011      	BREQ _0x20A0039
000e4d 36e9      	CPI  R30,LOW(0x69)
000e4e f411      	BRNE _0x20A003A
                 _0x20A0039:
000e4f 6004      	ORI  R16,LOW(4)
000e50 c002      	RJMP _0x20A003B
                 _0x20A003A:
000e51 37e5      	CPI  R30,LOW(0x75)
000e52 f431      	BRNE _0x20A003C
                 _0x20A003B:
000e53 e7ea      	LDI  R30,LOW(_tbl10_G105*2)
000e54 e0f2      	LDI  R31,HIGH(_tbl10_G105*2)
000e55 83ee      	STD  Y+6,R30
000e56 83ff      	STD  Y+6+1,R31
000e57 e015      	LDI  R17,LOW(5)
000e58 c00c      	RJMP _0x20A003D
                 _0x20A003C:
000e59 35e8      	CPI  R30,LOW(0x58)
000e5a f411      	BRNE _0x20A003F
000e5b 6008      	ORI  R16,LOW(8)
000e5c c003      	RJMP _0x20A0040
                 _0x20A003F:
000e5d 37e8      	CPI  R30,LOW(0x78)
000e5e f009      	BREQ PC+2
000e5f c0a1      	RJMP _0x20A0071
                 _0x20A0040:
000e60 e8e4      	LDI  R30,LOW(_tbl16_G105*2)
000e61 e0f2      	LDI  R31,HIGH(_tbl16_G105*2)
000e62 83ee      	STD  Y+6,R30
000e63 83ff      	STD  Y+6+1,R31
000e64 e014      	LDI  R17,LOW(4)
                 _0x20A003D:
000e65 ff02      	SBRS R16,2
000e66 c014      	RJMP _0x20A0042
000e67 940e 10ee 	CALL SUBOPT_0x2E
000e69 940e 1104 	CALL SUBOPT_0x31
000e6b 85ab      	LDD  R26,Y+11
000e6c 23aa      	TST  R26
000e6d f43a      	BRPL _0x20A0043
000e6e 85ea      	LDD  R30,Y+10
000e6f 85fb      	LDD  R31,Y+10+1
000e70 940e 1121 	CALL __ANEGW1
000e72 87ea      	STD  Y+10,R30
000e73 87fb      	STD  Y+10+1,R31
000e74 e24d      	LDI  R20,LOW(45)
                 _0x20A0043:
000e75 3040      	CPI  R20,0
000e76 f011      	BREQ _0x20A0044
000e77 5f1f      	SUBI R17,-LOW(1)
000e78 c001      	RJMP _0x20A0045
                 _0x20A0044:
000e79 7f0b      	ANDI R16,LOW(251)
                 _0x20A0045:
000e7a c004      	RJMP _0x20A0046
                 _0x20A0042:
000e7b 940e 10ee 	CALL SUBOPT_0x2E
000e7d 940e 1104 	CALL SUBOPT_0x31
                 _0x20A0046:
                 _0x20A0036:
000e7f fd00      	SBRC R16,0
000e80 c011      	RJMP _0x20A0047
                 _0x20A0048:
000e81 1715      	CP   R17,R21
000e82 f478      	BRSH _0x20A004A
000e83 ff07      	SBRS R16,7
000e84 c008      	RJMP _0x20A004B
000e85 ff02      	SBRS R16,2
000e86 c004      	RJMP _0x20A004C
000e87 7f0b      	ANDI R16,LOW(251)
000e88 2f24      	MOV  R18,R20
000e89 5011      	SUBI R17,LOW(1)
000e8a c001      	RJMP _0x20A004D
                 _0x20A004C:
000e8b e320      	LDI  R18,LOW(48)
                 _0x20A004D:
000e8c c001      	RJMP _0x20A004E
                 _0x20A004B:
000e8d e220      	LDI  R18,LOW(32)
                 _0x20A004E:
000e8e 940e 10e7 	CALL SUBOPT_0x2D
000e90 5051      	SUBI R21,LOW(1)
000e91 cfef      	RJMP _0x20A0048
                 _0x20A004A:
                 _0x20A0047:
000e92 2f31      	MOV  R19,R17
000e93 ff01      	SBRS R16,1
000e94 c017      	RJMP _0x20A004F
                 _0x20A0050:
000e95 3030      	CPI  R19,0
000e96 f0a1      	BREQ _0x20A0052
000e97 ff03      	SBRS R16,3
000e98 c006      	RJMP _0x20A0053
000e99 81ee      	LDD  R30,Y+6
000e9a 81ff      	LDD  R31,Y+6+1
000e9b 9125      	LPM  R18,Z+
000e9c 83ee      	STD  Y+6,R30
000e9d 83ff      	STD  Y+6+1,R31
000e9e c005      	RJMP _0x20A0054
                 _0x20A0053:
000e9f 81ae      	LDD  R26,Y+6
000ea0 81bf      	LDD  R27,Y+6+1
000ea1 912d      	LD   R18,X+
000ea2 83ae      	STD  Y+6,R26
000ea3 83bf      	STD  Y+6+1,R27
                 _0x20A0054:
000ea4 940e 10e7 	CALL SUBOPT_0x2D
000ea6 3050      	CPI  R21,0
000ea7 f009      	BREQ _0x20A0055
000ea8 5051      	SUBI R21,LOW(1)
                 _0x20A0055:
000ea9 5031      	SUBI R19,LOW(1)
000eaa cfea      	RJMP _0x20A0050
                 _0x20A0052:
000eab c04b      	RJMP _0x20A0056
                 _0x20A004F:
                 _0x20A0058:
000eac e320      	LDI  R18,LOW(48)
000ead 81ee      	LDD  R30,Y+6
000eae 81ff      	LDD  R31,Y+6+1
000eaf 940e 1150 	CALL __GETW1PF
000eb1 87e8      	STD  Y+8,R30
000eb2 87f9      	STD  Y+8+1,R31
000eb3 81ee      	LDD  R30,Y+6
000eb4 81ff      	LDD  R31,Y+6+1
000eb5 9632      	ADIW R30,2
000eb6 83ee      	STD  Y+6,R30
000eb7 83ff      	STD  Y+6+1,R31
                 _0x20A005A:
000eb8 85e8      	LDD  R30,Y+8
000eb9 85f9      	LDD  R31,Y+8+1
000eba 85aa      	LDD  R26,Y+10
000ebb 85bb      	LDD  R27,Y+10+1
000ebc 17ae      	CP   R26,R30
000ebd 07bf      	CPC  R27,R31
000ebe f050      	BRLO _0x20A005C
000ebf 5f2f      	SUBI R18,-LOW(1)
000ec0 85a8      	LDD  R26,Y+8
000ec1 85b9      	LDD  R27,Y+8+1
000ec2 85ea      	LDD  R30,Y+10
000ec3 85fb      	LDD  R31,Y+10+1
000ec4 1bea      	SUB  R30,R26
000ec5 0bfb      	SBC  R31,R27
000ec6 87ea      	STD  Y+10,R30
000ec7 87fb      	STD  Y+10+1,R31
000ec8 cfef      	RJMP _0x20A005A
                 _0x20A005C:
000ec9 332a      	CPI  R18,58
000eca f028      	BRLO _0x20A005D
000ecb ff03      	SBRS R16,3
000ecc c002      	RJMP _0x20A005E
000ecd 5f29      	SUBI R18,-LOW(7)
000ece c001      	RJMP _0x20A005F
                 _0x20A005E:
000ecf 5d29      	SUBI R18,-LOW(39)
                 _0x20A005F:
                 _0x20A005D:
000ed0 fd04      	SBRC R16,4
000ed1 c01a      	RJMP _0x20A0061
000ed2 3321      	CPI  R18,49
000ed3 f420      	BRSH _0x20A0063
000ed4 85a8      	LDD  R26,Y+8
000ed5 85b9      	LDD  R27,Y+8+1
000ed6 9711      	SBIW R26,1
000ed7 f409      	BRNE _0x20A0062
                 _0x20A0063:
000ed8 c009      	RJMP _0x20A00CD
                 _0x20A0062:
000ed9 1753      	CP   R21,R19
000eda f010      	BRLO _0x20A0067
000edb ff00      	SBRS R16,0
000edc c001      	RJMP _0x20A0068
                 _0x20A0067:
000edd c013      	RJMP _0x20A0066
                 _0x20A0068:
000ede e220      	LDI  R18,LOW(32)
000edf ff07      	SBRS R16,7
000ee0 c00b      	RJMP _0x20A0069
000ee1 e320      	LDI  R18,LOW(48)
                 _0x20A00CD:
000ee2 6100      	ORI  R16,LOW(16)
000ee3 ff02      	SBRS R16,2
000ee4 c007      	RJMP _0x20A006A
000ee5 7f0b      	ANDI R16,LOW(251)
000ee6 934a      	ST   -Y,R20
000ee7 940e 10f4 	CALL SUBOPT_0x2F
000ee9 3050      	CPI  R21,0
000eea f009      	BREQ _0x20A006B
000eeb 5051      	SUBI R21,LOW(1)
                 _0x20A006B:
                 _0x20A006A:
                 _0x20A0069:
                 _0x20A0061:
000eec 940e 10e7 	CALL SUBOPT_0x2D
000eee 3050      	CPI  R21,0
000eef f009      	BREQ _0x20A006C
000ef0 5051      	SUBI R21,LOW(1)
                 _0x20A006C:
                 _0x20A0066:
000ef1 5031      	SUBI R19,LOW(1)
000ef2 85a8      	LDD  R26,Y+8
000ef3 85b9      	LDD  R27,Y+8+1
000ef4 9712      	SBIW R26,2
000ef5 f008      	BRLO _0x20A0059
000ef6 cfb5      	RJMP _0x20A0058
                 _0x20A0059:
                 _0x20A0056:
000ef7 ff00      	SBRS R16,0
000ef8 c008      	RJMP _0x20A006D
                 _0x20A006E:
000ef9 3050      	CPI  R21,0
000efa f031      	BREQ _0x20A0070
000efb 5051      	SUBI R21,LOW(1)
000efc e2e0      	LDI  R30,LOW(32)
000efd 93ea      	ST   -Y,R30
000efe 940e 10f4 	CALL SUBOPT_0x2F
000f00 cff8      	RJMP _0x20A006E
                 _0x20A0070:
                 _0x20A006D:
                 _0x20A0071:
                 _0x20A0030:
                 _0x20A00CC:
000f01 e010      	LDI  R17,LOW(0)
                 _0x20A001B:
000f02 cee0      	RJMP _0x20A0016
                 _0x20A0018:
000f03 85ac      	LDD  R26,Y+12
000f04 85bd      	LDD  R27,Y+12+1
000f05 940e 1142 	CALL __GETW1P
000f07 940e 1181 	CALL __LOADLOCR6
000f09 9664      	ADIW R28,20
000f0a 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000f0b 92ff      	PUSH R15
000f0c 2ef8      	MOV  R15,R24
000f0d 9726      	SBIW R28,6
000f0e 940e 117c 	CALL __SAVELOCR4
000f10 940e 110c 	CALL SUBOPT_0x32
000f12 9730      	SBIW R30,0
000f13 f419      	BRNE _0x20A0072
000f14 efef      	LDI  R30,LOW(65535)
000f15 efff      	LDI  R31,HIGH(65535)
000f16 c023      	RJMP _0x2120003
                 _0x20A0072:
000f17 01de      	MOVW R26,R28
000f18 9616      	ADIW R26,6
000f19 940e 111d 	CALL __ADDW2R15
000f1b 018d      	MOVW R16,R26
000f1c 940e 110c 	CALL SUBOPT_0x32
000f1e 83ee      	STD  Y+6,R30
000f1f 83ff      	STD  Y+6+1,R31
000f20 e0e0      	LDI  R30,LOW(0)
000f21 87e8      	STD  Y+8,R30
000f22 87e9      	STD  Y+8+1,R30
000f23 01de      	MOVW R26,R28
000f24 961a      	ADIW R26,10
000f25 940e 111d 	CALL __ADDW2R15
000f27 940e 1142 	CALL __GETW1P
000f29 93fa      	ST   -Y,R31
000f2a 93ea      	ST   -Y,R30
000f2b 931a      	ST   -Y,R17
000f2c 930a      	ST   -Y,R16
000f2d e9ed      	LDI  R30,LOW(_put_buff_G105)
000f2e e0fd      	LDI  R31,HIGH(_put_buff_G105)
000f2f 93fa      	ST   -Y,R31
000f30 93ea      	ST   -Y,R30
000f31 01de      	MOVW R26,R28
000f32 961a      	ADIW R26,10
000f33 dea3      	RCALL __print_G105
000f34 019f      	MOVW R18,R30
000f35 81ae      	LDD  R26,Y+6
000f36 81bf      	LDD  R27,Y+6+1
000f37 e0e0      	LDI  R30,LOW(0)
000f38 93ec      	ST   X,R30
000f39 01f9      	MOVW R30,R18
                 _0x2120003:
000f3a 940e 1183 	CALL __LOADLOCR4
000f3c 962a      	ADIW R28,10
000f3d 90ff      	POP  R15
000f3e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000f3f 93aa      	ST   -Y,R26
000f40 81e8      	LD   R30,Y
000f41 e0f0      	LDI  R31,0
000f42 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000f43 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000f44 91a4      	LPM  R26,Z
000f45 81e9      	LDD  R30,Y+1
000f46 940e 1125 	CALL __LSLB12
                 _0x2120002:
000f48 9622      	ADIW R28,2
000f49 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000f4a 93aa      	ST   -Y,R26
000f4b 931a      	ST   -Y,R17
000f4c 81e9      	LDD  R30,Y+1
000f4d 30e7      	CPI  R30,LOW(0x7)
000f4e f011      	BREQ _0x2100007
000f4f 30ea      	CPI  R30,LOW(0xA)
000f50 f419      	BRNE _0x2100008
                 _0x2100007:
000f51 9110 065e 	LDS  R17,_glcd_state
000f53 c009      	RJMP _0x2100009
                 _0x2100008:
000f54 30e9      	CPI  R30,LOW(0x9)
000f55 f419      	BRNE _0x210000B
                +
000f56 9110 065f+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000f58 c004      	RJMP _0x2100009
                 _0x210000B:
000f59 30e8      	CPI  R30,LOW(0x8)
000f5a f4a1      	BRNE _0x2100005
                +
000f5b 9110 066e+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000f5d 91e0 065f+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000f5f 30e0      	CPI  R30,0
000f60 f049      	BREQ _0x210000E
000f61 3010      	CPI  R17,0
000f62 f019      	BREQ _0x210000F
000f63 efef      	LDI  R30,LOW(255)
000f64 8118      	LDD  R17,Y+0
000f65 c029      	RJMP _0x2120001
                 _0x210000F:
000f66 81ea      	LDD  R30,Y+2
000f67 95e0      	COM  R30
000f68 8118      	LDD  R17,Y+0
000f69 c025      	RJMP _0x2120001
                 _0x210000E:
000f6a 3010      	CPI  R17,0
000f6b f419      	BRNE _0x2100011
000f6c e0e0      	LDI  R30,LOW(0)
000f6d 8118      	LDD  R17,Y+0
000f6e c020      	RJMP _0x2120001
                 _0x2100011:
                 _0x2100005:
000f6f 81ea      	LDD  R30,Y+2
000f70 8118      	LDD  R17,Y+0
000f71 c01d      	RJMP _0x2120001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000f72 93ba      	ST   -Y,R27
000f73 93aa      	ST   -Y,R26
000f74 81ea      	LDD  R30,Y+2
000f75 30e1      	CPI  R30,LOW(0x1)
000f76 f421      	BRNE _0x2100015
000f77 81e8      	LD   R30,Y
000f78 81f9      	LDD  R31,Y+1
000f79 91e4      	LPM  R30,Z
000f7a c014      	RJMP _0x2120001
                 _0x2100015:
000f7b 30e2      	CPI  R30,LOW(0x2)
000f7c f429      	BRNE _0x2100016
000f7d 81a8      	LD   R26,Y
000f7e 81b9      	LDD  R27,Y+1
000f7f 940e 1159 	CALL __EEPROMRDB
000f81 c00d      	RJMP _0x2120001
                 _0x2100016:
000f82 30e3      	CPI  R30,LOW(0x3)
000f83 f441      	BRNE _0x2100018
000f84 81a8      	LD   R26,Y
000f85 81b9      	LDD  R27,Y+1
                +
000f86 91e0 0677+LDS R30 , _glcd_state + ( 25 )
000f88 91f0 0678+LDS R31 , _glcd_state + ( 25 ) + 1
000f8a 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000f8b c003      	RJMP _0x2120001
                 _0x2100018:
000f8c 81a8      	LD   R26,Y
000f8d 81b9      	LDD  R27,Y+1
000f8e 91ec      	LD   R30,X
                 _0x2120001:
000f8f 9623      	ADIW R28,3
000f90 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000f91 93aa      	ST   -Y,R26
000f92 81eb      	LDD  R30,Y+3
000f93 30e0      	CPI  R30,0
000f94 f429      	BRNE _0x210001C
000f95 81e8      	LD   R30,Y
000f96 81a9      	LDD  R26,Y+1
000f97 81ba      	LDD  R27,Y+1+1
000f98 93ec      	ST   X,R30
000f99 c014      	RJMP _0x210001B
                 _0x210001C:
000f9a 30e2      	CPI  R30,LOW(0x2)
000f9b f431      	BRNE _0x210001D
000f9c 81e8      	LD   R30,Y
000f9d 81a9      	LDD  R26,Y+1
000f9e 81ba      	LDD  R27,Y+1+1
000f9f 940e 1165 	CALL __EEPROMWRB
000fa1 c00c      	RJMP _0x210001B
                 _0x210001D:
000fa2 30e3      	CPI  R30,LOW(0x3)
000fa3 f451      	BRNE _0x210001B
000fa4 81e9      	LDD  R30,Y+1
000fa5 81fa      	LDD  R31,Y+1+1
000fa6 93fa      	ST   -Y,R31
000fa7 93ea      	ST   -Y,R30
000fa8 81aa      	LDD  R26,Y+2
                +
000fa9 91e0 0679+LDS R30 , _glcd_state + ( 27 )
000fab 91f0 067a+LDS R31 , _glcd_state + ( 27 ) + 1
000fad 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
000fae 9624      	ADIW R28,4
000faf 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
00065e           	.BYTE 0x1D
                 _key:
00067b           	.BYTE 0x8
                 _dem:
000683           	.BYTE 0x2
                 _rx_buffer0:
000685           	.BYTE 0x40
                 _rx_wr_index0:
0006c5           	.BYTE 0x1
                 _rx_rd_index0:
0006c6           	.BYTE 0x1
                 _rx_counter0:
0006c7           	.BYTE 0x1
                 _buff:
0006c8           	.BYTE 0x104
                 _i:
0007cc           	.BYTE 0x2
                 _time_s:
0007ce           	.BYTE 0x2
                 _time_flow:
0007d0           	.BYTE 0x4
                 _tx_buffer0:
0007d4           	.BYTE 0x40
                 _tx_wr_index0:
000814           	.BYTE 0x1
                 _tx_rd_index0:
000815           	.BYTE 0x1
                 _tx_counter0:
000816           	.BYTE 0x1
                 _station_receive:
000817           	.BYTE 0xC
                 _tay_cam_receive:
000823           	.BYTE 0x8
                 _data_receive:
00082b           	.BYTE 0x12
                 _result:
00083d           	.BYTE 0x1
                 _data_send:
00083e           	.BYTE 0xC
                 __seed_G101:
00084a           	.BYTE 0x4
                 _gfx_addr_G102:
00084e           	.BYTE 0x2
                 _gfx_buffer_G102:
000850           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000fb0 93aa      	ST   -Y,R26
000fb1 93ba      	ST   -Y,R27
000fb2 93ea      	ST   -Y,R30
000fb3 93fa      	ST   -Y,R31
000fb4 b7ef      	IN   R30,SREG
000fb5 93ea      	ST   -Y,R30
000fb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x1:
000fb7 91ed      	LD   R30,X+
000fb8 91fd      	LD   R31,X+
000fb9 9631      	ADIW R30,1
000fba 93fe      	ST   -X,R31
000fbb 93ee      	ST   -X,R30
000fbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
                +
000fbd e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fbe 958a     +DEC R24
000fbf f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fc0 81e9      	LDD  R30,Y+1
000fc1 0fee      	LSL  R30
000fc2 83e9      	STD  Y+1,R30
000fc3 9adc      	SBI  0x1B,4
                +
000fc4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000fc5 958a     +DEC R24
000fc6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000fc7 e0e0      	LDI  R30,0
000fc8 99cd      	SBIC 0x19,5
000fc9 e0e1      	LDI  R30,1
000fca 81a9      	LDD  R26,Y+1
000fcb 2bea      	OR   R30,R26
000fcc 83e9      	STD  Y+1,R30
000fcd 98dc      	CBI  0x1B,4
000fce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000fcf 93aa      	ST   -Y,R26
000fd0 98da      	CBI  0x1B,2
000fd1 81e9      	LDD  R30,Y+1
000fd2 62e0      	ORI  R30,0x20
000fd3 2fae      	MOV  R26,R30
000fd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000fd5 9ada      	SBI  0x1B,2
                +
000fd6 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000fd7 958a     +DEC R24
000fd8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000fd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000fda 940e 03e0 	CALL _SPI_RW_RX
000fdc 81a8      	LD   R26,Y
000fdd 940c 03e0 	JMP  _SPI_RW_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000fdf 940e 042a 	CALL _RF_Write3_RX
000fe1 e1e0      	LDI  R30,LOW(16)
000fe2 93ea      	ST   -Y,R30
000fe3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000fe4 93ea      	ST   -Y,R30
000fe5 e0af      	LDI  R26,LOW(15)
000fe6 940c 0414 	JMP  _RF_Write_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000fe8 e0f0      	LDI  R31,0
000fe9 93ed      	ST   X+,R30
000fea 93fc      	ST   X,R31
000feb 940c 03f3 	JMP  _SPI_Read_RX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000fed 93ba      	ST   -Y,R27
000fee 93aa      	ST   -Y,R26
000fef 81a8      	LD   R26,Y
000ff0 81b9      	LDD  R27,Y+1
000ff1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xA:
000ff2 940e 08fd 	CALL _glcd_clear
000ff4 e0e0      	LDI  R30,LOW(0)
000ff5 93ea      	ST   -Y,R30
000ff6 e0a0      	LDI  R26,LOW(0)
000ff7 940c 0c9b 	JMP  _glcd_moveto
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
000ff9 eca8      	LDI  R26,LOW(_buff)
000ffa e0b6      	LDI  R27,HIGH(_buff)
000ffb 940c 0c71 	JMP  _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000ffd 1ba2      	SUB  R26,R18
000ffe 0bb3      	SBC  R27,R19
000fff a5ee      	LDD  R30,Y+46
001000 a5ff      	LDD  R31,Y+46+1
001001 17ea      	CP   R30,R26
001002 07fb      	CPC  R31,R27
001003 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD:
001004 ece8      	LDI  R30,LOW(_buff)
001005 e0f6      	LDI  R31,HIGH(_buff)
001006 93fa      	ST   -Y,R31
001007 93ea      	ST   -Y,R30
001008 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
                +
001009 01de     +MOVW R26 , R28
00100a 5aaf     +SUBI R26 , LOW ( - 81 )
00100b 4fbf     +SBCI R27 , HIGH ( - 81 )
00100c 900d     +LD R0 , X +
00100d 91bc     +LD R27 , X
00100e 2da0     +MOV R26 , R0
                 	__GETW2SX 81
00100f 91ec      	LD   R30,X
001010 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
001011 940e 04ad 	CALL _put_string
001013 e2ac      	LDI  R26,LOW(300)
001014 e0b1      	LDI  R27,HIGH(300)
001015 940c 1113 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
001017 93fa      	ST   -Y,R31
001018 93ea      	ST   -Y,R30
001019 e0a2      	LDI  R26,LOW(2)
00101a e0b0      	LDI  R27,0
00101b 940e 04d4 	CALL _wait_until
00101d e0a0      	LDI  R26,LOW(0)
00101e e0b0      	LDI  R27,0
00101f 940c 04c2 	JMP  _refresh
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11:
001021 93fa      	ST   -Y,R31
001022 93ea      	ST   -Y,R30
001023 e0aa      	LDI  R26,LOW(10)
001024 e0b0      	LDI  R27,0
001025 940e 04d4 	CALL _wait_until
001027 30e0      	CPI  R30,0
001028 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
001029 01fe      	MOVW R30,R28
00102a 96bc      	ADIW R30,44
00102b 93fa      	ST   -Y,R31
00102c 93ea      	ST   -Y,R30
00102d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
00102e 93fa      	ST   -Y,R31
00102f 93ea      	ST   -Y,R30
001030 01de      	MOVW R26,R28
001031 965a      	ADIW R26,26
001032 940e 07e8 	CALL _itoa
001034 cff4      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
001035 01de      	MOVW R26,R28
001036 965a      	ADIW R26,26
001037 940e 07a7 	CALL _strcat
001039 01de      	MOVW R26,R28
00103a 9658      	ADIW R26,24
00103b 940c 07b8 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
00103d 940e 04ad 	CALL _put_string
00103f eea8      	LDI  R26,LOW(1000)
001040 e0b3      	LDI  R27,HIGH(1000)
001041 940c 1113 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
001043 93ea      	ST   -Y,R30
001044 e3e0      	LDI  R30,LOW(48)
001045 93ea      	ST   -Y,R30
001046 e0af      	LDI  R26,LOW(15)
001047 940e 0ca7 	CALL _glcd_line
001049 e0e0      	LDI  R30,LOW(0)
00104a 93ea      	ST   -Y,R30
00104b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
00104c 93ea      	ST   -Y,R30
00104d e5e4      	LDI  R30,LOW(84)
00104e 93ea      	ST   -Y,R30
00104f e3a0      	LDI  R26,LOW(48)
001050 940e 0ca7 	CALL _glcd_line
001052 e0e0      	LDI  R30,LOW(0)
001053 93ea      	ST   -Y,R30
001054 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
001055 940e 0c71 	CALL _glcd_outtext
001057 e0e4      	LDI  R30,LOW(4)
001058 93ea      	ST   -Y,R30
001059 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
00105a 940e 0c9b 	CALL _glcd_moveto
00105c cfa7      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1A:
00105d 940e 1135 	CALL __CWD1
00105f 940e 1154 	CALL __PUTPARD1
001061 e084      	LDI  R24,4
001062 940e 0f0b 	CALL _sprintf
001064 9628      	ADIW R28,8
001065 cf93      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
001066 e4ae      	LDI  R26,LOW(_gfx_addr_G102)
001067 e0b8      	LDI  R27,HIGH(_gfx_addr_G102)
001068 cf4e      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
001069 0fea      	ADD  R30,R26
00106a 1ffb      	ADC  R31,R27
00106b 83ee      	STD  Y+6,R30
00106c 83ff      	STD  Y+6+1,R31
00106d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1D:
00106e 85ec      	LDD  R30,Y+12
00106f 93ea      	ST   -Y,R30
001070 81ef      	LDD  R30,Y+7
001071 85f8      	LDD  R31,Y+7+1
001072 9631      	ADIW R30,1
001073 83ef      	STD  Y+7,R30
001074 87f8      	STD  Y+7+1,R31
001075 9731      	SBIW R30,1
001076 93fa      	ST   -Y,R31
001077 93ea      	ST   -Y,R30
001078 e0a0      	LDI  R26,LOW(0)
001079 940c 0f91 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
00107b 930a      	ST   -Y,R16
00107c 89a8      	LDD  R26,Y+16
00107d 940c 0838 	JMP  _pcd8544_setaddr_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
00107f 85ec      	LDD  R30,Y+12
001080 93ea      	ST   -Y,R30
001081 81ef      	LDD  R30,Y+7
001082 85f8      	LDD  R31,Y+7+1
001083 9631      	ADIW R30,1
001084 83ef      	STD  Y+7,R30
001085 87f8      	STD  Y+7+1,R31
001086 9731      	SBIW R30,1
001087 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
001088 2766      	CLR  R22
001089 2777      	CLR  R23
00108a 01df      	MOVW R26,R30
00108b 01cb      	MOVW R24,R22
00108c 940c 0f72 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
00108e 935a      	ST   -Y,R21
00108f 85aa      	LDD  R26,Y+10
001090 940c 0f4a 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
001092 930a      	ST   -Y,R16
001093 9503      	INC  R16
001094 89e8      	LDD  R30,Y+16
001095 93ea      	ST   -Y,R30
001096 935a      	ST   -Y,R21
001097 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
001098 2f5e      	MOV  R21,R30
001099 85ec      	LDD  R30,Y+12
00109a 93ea      	ST   -Y,R30
00109b 81af      	LDD  R26,Y+7
00109c 85b8      	LDD  R27,Y+7+1
00109d 2788      	CLR  R24
00109e 2799      	CLR  R25
00109f 940e 0f72 	CALL _glcd_readmem
0010a1 2e1e      	MOV  R1,R30
0010a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24:
0010a3 930a      	ST   -Y,R16
0010a4 9503      	INC  R16
0010a5 89e8      	LDD  R30,Y+16
0010a6 93ea      	ST   -Y,R30
0010a7 85ee      	LDD  R30,Y+14
0010a8 93ea      	ST   -Y,R30
0010a9 85e9      	LDD  R30,Y+9
0010aa 85fa      	LDD  R31,Y+9+1
0010ab 9631      	ADIW R30,1
0010ac 87e9      	STD  Y+9,R30
0010ad 87fa      	STD  Y+9+1,R31
0010ae 9731      	SBIW R30,1
0010af cfd8      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
0010b0 940e 117a 	CALL __SAVELOCR6
                +
0010b2 91e0 0662+LDS R30 , _glcd_state + ( 4 )
0010b4 91f0 0663+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
0010b7 01f8      	MOVW R30,R16
                +
0010b8 5f0f     +SUBI R16 , LOW ( - 1 )
0010b9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0010ba 9004      	LPM  R0,Z
0010bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
                +
0010bc 91e0 0662+LDS R30 , _glcd_state + ( 4 )
0010be 91f0 0663+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0010c0 9631      	ADIW R30,1
0010c1 91e4      	LPM  R30,Z
0010c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
0010c3 93ea      	ST   -Y,R30
0010c4 e0e0      	LDI  R30,LOW(0)
0010c5 93ea      	ST   -Y,R30
0010c6 e0e0      	LDI  R30,LOW(0)
0010c7 e0f0      	LDI  R31,HIGH(0)
0010c8 93fa      	ST   -Y,R31
0010c9 93ea      	ST   -Y,R30
0010ca e0a9      	LDI  R26,LOW(9)
0010cb 940c 0976 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29:
0010cd 81ae      	LDD  R26,Y+6
0010ce 5faf      	SUBI R26,-LOW(1)
0010cf 83ae      	STD  Y+6,R26
0010d0 50a1      	SUBI R26,LOW(1)
                +
0010d1 91e0 0666+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
0010d3 17ae      	CP   R26,R30
0010d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0010d5 933a      	ST   -Y,R19
0010d6 85aa      	LDD  R26,Y+10
0010d7 940c 0c81 	JMP  _glcd_putpixelm_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0010d9 85a9      	LDD  R26,Y+9
0010da 85ba      	LDD  R27,Y+9+1
0010db 0fea      	ADD  R30,R26
0010dc 1ffb      	ADC  R31,R27
0010dd 87e9      	STD  Y+9,R30
0010de 87fa      	STD  Y+9+1,R31
0010df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
0010e0 85e9      	LDD  R30,Y+9
0010e1 85fa      	LDD  R31,Y+9+1
0010e2 1bea      	SUB  R30,R26
0010e3 0bfb      	SBC  R31,R27
0010e4 87e9      	STD  Y+9,R30
0010e5 87fa      	STD  Y+9+1,R31
0010e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2D:
0010e7 932a      	ST   -Y,R18
0010e8 85ad      	LDD  R26,Y+13
0010e9 85be      	LDD  R27,Y+13+1
0010ea 85ef      	LDD  R30,Y+15
0010eb 89f8      	LDD  R31,Y+15+1
0010ec 9509      	ICALL
0010ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2E:
0010ee 89e8      	LDD  R30,Y+16
0010ef 89f9      	LDD  R31,Y+16+1
0010f0 9734      	SBIW R30,4
0010f1 8be8      	STD  Y+16,R30
0010f2 8bf9      	STD  Y+16+1,R31
0010f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
0010f4 85ad      	LDD  R26,Y+13
0010f5 85be      	LDD  R27,Y+13+1
0010f6 85ef      	LDD  R30,Y+15
0010f7 89f8      	LDD  R31,Y+15+1
0010f8 9509      	ICALL
0010f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x30:
0010fa 89a8      	LDD  R26,Y+16
0010fb 89b9      	LDD  R27,Y+16+1
0010fc 9614      	ADIW R26,4
0010fd 940e 1142 	CALL __GETW1P
0010ff 83ee      	STD  Y+6,R30
001100 83ff      	STD  Y+6+1,R31
001101 81ae      	LDD  R26,Y+6
001102 81bf      	LDD  R27,Y+6+1
001103 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31:
001104 89a8      	LDD  R26,Y+16
001105 89b9      	LDD  R27,Y+16+1
001106 9614      	ADIW R26,4
001107 940e 1142 	CALL __GETW1P
001109 87ea      	STD  Y+10,R30
00110a 87fb      	STD  Y+10+1,R31
00110b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
00110c 01de      	MOVW R26,R28
00110d 961c      	ADIW R26,12
00110e 940e 111d 	CALL __ADDW2R15
001110 940e 1142 	CALL __GETW1P
001112 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001113 9610      	adiw r26,0
001114 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001115 ed80     +LDI R24 , LOW ( 0x7D0 )
001116 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
001117 9701     +SBIW R24 , 1
001118 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001119 95a8      	wdr
00111a 9711      	sbiw r26,1
00111b f7c9      	brne __delay_ms0
                 __delay_ms1:
00111c 9508      	ret
                 
                 __ADDW2R15:
00111d 2400      	CLR  R0
00111e 0daf      	ADD  R26,R15
00111f 1db0      	ADC  R27,R0
001120 9508      	RET
                 
                 __ANEGW1:
001121 95f1      	NEG  R31
001122 95e1      	NEG  R30
001123 40f0      	SBCI R31,0
001124 9508      	RET
                 
                 __LSLB12:
001125 23ee      	TST  R30
001126 2e0e      	MOV  R0,R30
001127 2fea      	MOV  R30,R26
001128 f019      	BREQ __LSLB12R
                 __LSLB12L:
001129 0fee      	LSL  R30
00112a 940a      	DEC  R0
00112b f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00112c 9508      	RET
                 
                 __LSRB12:
00112d 23ee      	TST  R30
00112e 2e0e      	MOV  R0,R30
00112f 2fea      	MOV  R30,R26
001130 f019      	BREQ __LSRB12R
                 __LSRB12L:
001131 95e6      	LSR  R30
001132 940a      	DEC  R0
001133 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
001134 9508      	RET
                 
                 __CWD1:
001135 2f6f      	MOV  R22,R31
001136 0f66      	ADD  R22,R22
001137 0b66      	SBC  R22,R22
001138 2f76      	MOV  R23,R22
001139 9508      	RET
                 
                 __MULW12U:
00113a 9ffa      	MUL  R31,R26
00113b 2df0      	MOV  R31,R0
00113c 9feb      	MUL  R30,R27
00113d 0df0      	ADD  R31,R0
00113e 9fea      	MUL  R30,R26
00113f 2de0      	MOV  R30,R0
001140 0df1      	ADD  R31,R1
001141 9508      	RET
                 
                 __GETW1P:
001142 91ed      	LD   R30,X+
001143 91fc      	LD   R31,X
001144 9711      	SBIW R26,1
001145 9508      	RET
                 
                 __GETD1P_INC:
001146 91ed      	LD   R30,X+
001147 91fd      	LD   R31,X+
001148 916d      	LD   R22,X+
001149 917d      	LD   R23,X+
00114a 9508      	RET
                 
                 __PUTDP1_DEC:
00114b 937e      	ST   -X,R23
00114c 936e      	ST   -X,R22
00114d 93fe      	ST   -X,R31
00114e 93ee      	ST   -X,R30
00114f 9508      	RET
                 
                 __GETW1PF:
001150 9005      	LPM  R0,Z+
001151 91f4      	LPM  R31,Z
001152 2de0      	MOV  R30,R0
001153 9508      	RET
                 
                 __PUTPARD1:
001154 937a      	ST   -Y,R23
001155 936a      	ST   -Y,R22
001156 93fa      	ST   -Y,R31
001157 93ea      	ST   -Y,R30
001158 9508      	RET
                 
                 __EEPROMRDB:
001159 99e1      	SBIC EECR,EEWE
00115a cffe      	RJMP __EEPROMRDB
00115b 93ff      	PUSH R31
00115c b7ff      	IN   R31,SREG
00115d 94f8      	CLI
00115e bbae      	OUT  EEARL,R26
00115f bbbf      	OUT  EEARH,R27
001160 9ae0      	SBI  EECR,EERE
001161 b3ed      	IN   R30,EEDR
001162 bfff      	OUT  SREG,R31
001163 91ff      	POP  R31
001164 9508      	RET
                 
                 __EEPROMWRB:
001165 9be1      	SBIS EECR,EEWE
001166 c002      	RJMP __EEPROMWRB1
001167 95a8      	WDR
001168 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001169 b79f      	IN   R25,SREG
00116a 94f8      	CLI
00116b bbae      	OUT  EEARL,R26
00116c bbbf      	OUT  EEARH,R27
00116d 9ae0      	SBI  EECR,EERE
00116e b38d      	IN   R24,EEDR
00116f 17e8      	CP   R30,R24
001170 f019      	BREQ __EEPROMWRB0
001171 bbed      	OUT  EEDR,R30
001172 9ae2      	SBI  EECR,EEMWE
001173 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
001174 bf9f      	OUT  SREG,R25
001175 9508      	RET
                 
                 __CPW02:
001176 2400      	CLR  R0
001177 160a      	CP   R0,R26
001178 060b      	CPC  R0,R27
001179 9508      	RET
                 
                 __SAVELOCR6:
00117a 935a      	ST   -Y,R21
                 __SAVELOCR5:
00117b 934a      	ST   -Y,R20
                 __SAVELOCR4:
00117c 933a      	ST   -Y,R19
                 __SAVELOCR3:
00117d 932a      	ST   -Y,R18
                 __SAVELOCR2:
00117e 931a      	ST   -Y,R17
00117f 930a      	ST   -Y,R16
001180 9508      	RET
                 
                 __LOADLOCR6:
001181 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001182 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001183 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001184 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001185 8119      	LDD  R17,Y+1
001186 8108      	LD   R16,Y
001187 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
001188 0fac      	ADD  R26,R28
001189 1fbd      	ADC  R27,R29
                 __INITLOC0:
00118a 9005      	LPM  R0,Z+
00118b 920d      	ST   X+,R0
00118c 958a      	DEC  R24
00118d f7e1      	BRNE __INITLOC0
00118e 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  38 r1 :   5 r2 :   1 r3 :   0 r4 :   1 r5 :   0 r6 :   1 r7 :   5 
r8 :   0 r9 :   1 r10:   3 r11:   0 r12:  11 r13:   3 r14:   0 r15:   4 
r16: 102 r17: 138 r18:  69 r19:  54 r20:  36 r21:  52 r22:  40 r23:  11 
r24:  50 r25:  16 r26: 540 r27: 199 r28:  59 r29:   2 r30:1107 r31: 257 
x  :  57 y  : 775 z  :  38 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  24 add   :  38 
adiw  :  72 and   :  10 andi  :  19 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  52 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  15 
brlt  :   7 brmi  :   1 brne  : 114 brpl  :   4 brsh  :  26 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 276 
cbi   :  17 cbr   :   0 clc   :   0 clh   :   0 cli   :   4 cln   :   0 
clr   :  34 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :  10 
cp    :  40 cpc   :  21 cpi   : 117 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :   9 inc   :   5 jmp   :  73 ld    :  98 ldd   : 354 
ldi   : 472 lds   :  77 lpm   :  31 lsl   :   8 lsr   :  15 mov   : 115 
movw  :  87 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   8 ori   :  15 out   :  57 pop   :  12 push  :  12 rcall : 103 
ret   :  81 reti  :   3 rjmp  : 175 rol   :   3 ror   :   0 sbc   :   7 
sbci  :  24 sbi   :  25 sbic  :   5 sbis  :   1 sbiw  :  46 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   2 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 286 std   : 111 sts   :  72 sub   :  16 subi  :  73 
swap  :   0 tst   :  13 wdr   :   2 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00231e   7856   1134   8990  131072   6.9%
[.dseg] 0x000100 0x000a48      0   1352   1352    4096  33.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 14 warnings
