
AVRASM ver. 2.1.30  D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm Sun Sep 10 18:02:35 2017

D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1086): warning: Register r5 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1087): warning: Register r4 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1088): warning: Register r7 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1089): warning: Register r6 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1090): warning: Register r9 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1091): warning: Register r8 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1092): warning: Register r11 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1093): warning: Register r10 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1094): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dht_nhiet_do=R5
                 	.DEF _dht_do_am=R4
                 	.DEF _P_Add=R7
                 	.DEF _Code_tay_cam1=R6
                 	.DEF _Code_tay_cam2=R9
                 	.DEF _Code_tay_cam3=R8
                 	.DEF _Code_tay_cam4=R11
                 	.DEF _data_receive_2=R10
                 	.DEF _result=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c14c      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 c27f      	RJMP _timer2_ovf
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _font5x7:
000013 0705
000014 6020
000015 0000
000016 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
000017 0000
000018 5f00
000019 0000
00001a 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00001b 0700
00001c 1400
00001d 147f
00001e 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
00001f 2a24
000020 2a7f
000021 2312
000022 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000023 6264
000024 4936
000025 2255
000026 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
000027 0305
000028 0000
000029 1c00
00002a 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00002b 0000
00002c 2241
00002d 001c
00002e 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
00002f 2a1c
000030 0808
000031 3e08
000032 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000033 5000
000034 0030
000035 0800
000036 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
000037 0808
000038 3000
000039 0030
00003a 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00003b 0810
00003c 0204
00003d 513e
00003e 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
00003f 003e
000040 7f42
000041 0040
000042 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000043 4951
000044 2146
000045 4541
000046 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
000047 1418
000048 7f12
000049 2710
00004a 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00004b 3945
00004c 4a3c
00004d 4949
00004e 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
00004f 0971
000050 0305
000051 4936
000052 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000053 0636
000054 4949
000055 1e29
000056 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
000057 0036
000058 0000
000059 3656
00005a 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00005b 0800
00005c 2214
00005d 1441
00005e 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
00005f 1414
000060 2241
000061 0814
000062 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000063 5101
000064 0609
000065 4932
000066 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
000067 7e3e
000068 1111
000069 7e11
00006a 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00006b 4949
00006c 3e36
00006d 4141
00006e 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
00006f 417f
000070 2241
000071 7f1c
000072 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
000073 4149
000074 097f
000075 0109
000076 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
000077 4141
000078 3251
000079 087f
00007a 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
00007b 007f
00007c 7f41
00007d 0041
00007e 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
00007f 3f41
000080 7f01
000081 1408
000082 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
000083 407f
000084 4040
000085 7f40
000086 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
000087 7f02
000088 047f
000089 1008
00008a 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
00008b 4141
00008c 3e41
00008d 097f
00008e 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
00008f 3e06
000090 5141
000091 5e21
000092 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
000093 2919
000094 4646
000095 4949
000096 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
000097 0101
000098 017f
000099 3f01
00009a 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
00009b 3f40
00009c 201f
00009d 2040
00009e 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
00009f 1820
0000a0 7f20
0000a1 1463
0000a2 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000a3 0363
0000a4 7804
0000a5 0304
0000a6 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000a7 4549
0000a8 0043
0000a9 7f00
0000aa 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000ab 0402
0000ac 1008
0000ad 4120
0000ae 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000af 0000
0000b0 0204
0000b1 0201
0000b2 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000b3 4040
0000b4 4040
0000b5 0100
0000b6 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000b7 2000
0000b8 5454
0000b9 7854
0000ba 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000bb 4444
0000bc 3838
0000bd 4444
0000be 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000bf 4438
0000c0 4844
0000c1 387f
0000c2 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000c3 1854
0000c4 7e08
0000c5 0109
0000c6 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000c7 5414
0000c8 3c54
0000c9 087f
0000ca 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000cb 0078
0000cc 7d44
0000cd 0040
0000ce 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000cf 3d44
0000d0 0000
0000d1 107f
0000d2 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000d3 4100
0000d4 407f
0000d5 7c00
0000d6 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000d7 7804
0000d8 087c
0000d9 0404
0000da 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000db 4444
0000dc 3844
0000dd 147c
0000de 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000df 0808
0000e0 1414
0000e1 7c18
0000e2 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000e3 0404
0000e4 4808
0000e5 5454
0000e6 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000e7 3f04
0000e8 4044
0000e9 3c20
0000ea 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
0000eb 7c20
0000ec 201c
0000ed 2040
0000ee 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
0000ef 3040
0000f0 3c40
0000f1 2844
0000f2 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
0000f3 0c44
0000f4 5050
0000f5 3c50
0000f6 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
0000f7 4c54
0000f8 0044
0000f9 3608
0000fa 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
0000fb 0000
0000fc 007f
0000fd 0000
0000fe 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
0000ff 0008
000100 0102
000101 0402
000102 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000103 4141
000104 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _tbl10_G101:
000105 2710
000106 03e8
000107 0064
000108 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000109 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00010a 1000
00010b 0100
00010c 0010
00010d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
00010e 0100
00010f 0703
000110 1f0f
000111 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1192): warning: .cseg .db misalignment - padding zero byte
000112 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1196): warning: .cseg .db misalignment - padding zero byte
000113 00a2      	.DB  0xA2
                 
                 _0x0:
000114 6f4e
000115 6564
000116 203a
000117 3200      	.DB  0x4E,0x6F,0x64,0x65,0x3A,0x20,0x0,0x32
000118 5400
000119 6d65
00011a 3a70
00011b 0020      	.DB  0x0,0x54,0x65,0x6D,0x70,0x3A,0x20,0x0
00011c 7548
00011d 696d
00011e 3a64
00011f 0020      	.DB  0x48,0x75,0x6D,0x69,0x64,0x3A,0x20,0x0
000120 6157
000121 6574
000122 3a72
000123 0020      	.DB  0x57,0x61,0x74,0x65,0x72,0x3A,0x20,0x0
000124 6d6d
000125 2500
000126 0075
000127 7525      	.DB  0x6D,0x6D,0x0,0x25,0x75,0x0,0x25,0x75
000128 2020
000129 4e00
00012a 4e61
00012b 2500      	.DB  0x20,0x20,0x0,0x4E,0x61,0x4E,0x0,0x25
00012c 2064
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1205): warning: .cseg .db misalignment - padding zero byte
00012d 0000      	.DB  0x64,0x20,0x0
                 _0x2000060:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1207): warning: .cseg .db misalignment - padding zero byte
00012e 0001      	.DB  0x1
                 _0x2000000:
00012f 4e2d
000130 4e41
000131 4900
000132 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\2.asm(1210): warning: .cseg .db misalignment - padding zero byte
000133 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000134 0001      	.DW  0x01
000135 0007      	.DW  0x07
000136 0226      	.DW  __REG_VARS*2
                 
000137 0007      	.DW  0x07
000138 0160      	.DW  _0xD5
000139 0228      	.DW  _0x0*2
                 
00013a 0002      	.DW  0x02
00013b 0167      	.DW  _0xD5+7
00013c 022f      	.DW  _0x0*2+7
                 
00013d 0007      	.DW  0x07
00013e 0169      	.DW  _0xD5+9
00013f 0231      	.DW  _0x0*2+9
                 
000140 0008      	.DW  0x08
000141 0170      	.DW  _0xD5+16
000142 0238      	.DW  _0x0*2+16
                 
000143 0008      	.DW  0x08
000144 0178      	.DW  _0xD5+24
000145 0240      	.DW  _0x0*2+24
                 
000146 0003      	.DW  0x03
000147 0180      	.DW  _0xD5+32
000148 0248      	.DW  _0x0*2+32
                 
000149 0001      	.DW  0x01
00014a 01ee      	.DW  __seed_G100
00014b 025c      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
00014c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00014d 94f8      	CLI
00014e 27ee      	CLR  R30
00014f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000150 e0f1      	LDI  R31,1
000151 bffb      	OUT  GICR,R31
000152 bfeb      	OUT  GICR,R30
000153 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000154 e08d      	LDI  R24,(14-2)+1
000155 e0a2      	LDI  R26,2
000156 27bb      	CLR  R27
                 __CLEAR_REG:
000157 93ed      	ST   X+,R30
000158 958a      	DEC  R24
000159 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00015a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00015b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00015c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00015d 93ed      	ST   X+,R30
00015e 9701      	SBIW R24,1
00015f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000160 e6e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000161 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000162 9185      	LPM  R24,Z+
000163 9195      	LPM  R25,Z+
000164 9700      	SBIW R24,0
000165 f061      	BREQ __GLOBAL_INI_END
000166 91a5      	LPM  R26,Z+
000167 91b5      	LPM  R27,Z+
000168 9005      	LPM  R0,Z+
000169 9015      	LPM  R1,Z+
00016a 01bf      	MOVW R22,R30
00016b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00016c 9005      	LPM  R0,Z+
00016d 920d      	ST   X+,R0
00016e 9701      	SBIW R24,1
00016f f7e1      	BRNE __GLOBAL_INI_LOOP
000170 01fb      	MOVW R30,R22
000171 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000172 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000173 bfed      	OUT  SPL,R30
000174 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000175 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000176 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000177 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000178 c15d      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;//config DHT11
                 ;#define         DHT_DATA_IN     PIND.0
                 ;#define         DHT_DATA_OUT    PORTD.0
                 ;#define         DHT_DDR_DATA    DDRD.0
                 ;
                 ;
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <DHT.h>
                 
                 	.CSEG
                 _DHT_GetTemHumi:
                 ; .FSTART _DHT_GetTemHumi
000179 d903      	RCALL SUBOPT_0x0
00017a 9725      	SBIW R28,5
00017b e0e0      	LDI  R30,LOW(0)
00017c 83e8      	ST   Y,R30
00017d 83e9      	STD  Y+1,R30
00017e 83ea      	STD  Y+2,R30
00017f 83eb      	STD  Y+3,R30
000180 83ec      	STD  Y+4,R30
000181 dba9      	RCALL __SAVELOCR4
                 ;	*tem -> Y+11
                 ;	*humi -> Y+9
                 ;	buffer -> Y+4
                 ;	ii -> R17
                 ;	i -> R16
                 ;	checksum -> R19
000182 9a88      	SBI  0x11,0
000183 9a90      	SBI  0x12,0
000184 d8fb      	RCALL SUBOPT_0x1
000185 9890      	CBI  0x12,0
000186 e1a9      	LDI  R26,LOW(25)
000187 d8fc      	RCALL SUBOPT_0x2
000188 9a90      	SBI  0x12,0
000189 9888      	CBI  0x11,0
00018a d8f5      	RCALL SUBOPT_0x1
00018b 9b80      	SBIS 0x10,0
00018c c002      	RJMP _0xD
00018d e0e0      	LDI  R30,LOW(0)
00018e c03e      	RJMP _0x212000E
                 _0xD:
                 _0xF:
00018f 9b80      	SBIS 0x10,0
000190 cffe      	RJMP _0xF
000191 d8ee      	RCALL SUBOPT_0x1
000192 9980      	SBIC 0x10,0
000193 c002      	RJMP _0x12
000194 e0e0      	LDI  R30,LOW(0)
000195 c037      	RJMP _0x212000E
                 _0x12:
                 _0x14:
000196 9980      	SBIC 0x10,0
000197 cffe      	RJMP _0x14
000198 e000      	LDI  R16,LOW(0)
                 _0x18:
000199 3005      	CPI  R16,5
00019a f4f0      	BRSH _0x19
00019b e010      	LDI  R17,LOW(0)
                 _0x1B:
00019c 3018      	CPI  R17,8
00019d f4c8      	BRSH _0x1C
                 _0x1D:
00019e 9b80      	SBIS 0x10,0
00019f cffe      	RJMP _0x1D
                +
0001a0 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001a1 958a     +DEC R24
0001a2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001a3 9b80      	SBIS 0x10,0
0001a4 c010      	RJMP _0x20
0001a5 2fe0      	MOV  R30,R16
0001a6 e0f0      	LDI  R31,0
0001a7 01de      	MOVW R26,R28
0001a8 9614      	ADIW R26,4
0001a9 d8dc      	RCALL SUBOPT_0x3
0001aa 01bf      	MOVW R22,R30
0001ab 8010      	LD   R1,Z
0001ac e0e7      	LDI  R30,LOW(7)
0001ad 1be1      	SUB  R30,R17
0001ae e0a1      	LDI  R26,LOW(1)
0001af db00      	RCALL __LSLB12
0001b0 29e1      	OR   R30,R1
0001b1 01db      	MOVW R26,R22
0001b2 93ec      	ST   X,R30
                 _0x21:
0001b3 9980      	SBIC 0x10,0
0001b4 cffe      	RJMP _0x21
                 _0x20:
0001b5 5f1f      	SUBI R17,-1
0001b6 cfe5      	RJMP _0x1B
                 _0x1C:
0001b7 5f0f      	SUBI R16,-1
0001b8 cfe0      	RJMP _0x18
                 _0x19:
0001b9 81ed      	LDD  R30,Y+5
0001ba 81ac      	LDD  R26,Y+4
0001bb 0fea      	ADD  R30,R26
0001bc 81ae      	LDD  R26,Y+6
0001bd 0fea      	ADD  R30,R26
0001be 81af      	LDD  R26,Y+7
0001bf 0fea      	ADD  R30,R26
0001c0 2f3e      	MOV  R19,R30
0001c1 85e8      	LDD  R30,Y+8
0001c2 17e3      	CP   R30,R19
0001c3 f011      	BREQ _0x24
0001c4 e0e0      	LDI  R30,LOW(0)
0001c5 c007      	RJMP _0x212000E
                 _0x24:
0001c6 81ee      	LDD  R30,Y+6
0001c7 85ab      	LDD  R26,Y+11
0001c8 85bc      	LDD  R27,Y+11+1
0001c9 93ec      	ST   X,R30
0001ca 81ec      	LDD  R30,Y+4
0001cb d8bd      	RCALL SUBOPT_0x4
0001cc e0e1      	LDI  R30,LOW(1)
                 _0x212000E:
0001cd db64      	RCALL __LOADLOCR4
0001ce 962d      	ADIW R28,13
0001cf 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;
                 ;// Declare your global variables here
                 ;unsigned char buff[20];
                 ;unsigned char dht_nhiet_do,dht_do_am;
                 ;
                 ;// Voltage Reference: AREF pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0020 {
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0021 ADMUX=adc_input | ADC_VREF_TYPE;
0001d0 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
0001d1 81e8      	LD   R30,Y
0001d2 b9e7      	OUT  0x7,R30
                 ; 0000 0022 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0023 delay_us(10);
0001d3 d8b9      	RCALL SUBOPT_0x5
                 ; 0000 0024 // Start the AD conversion
                 ; 0000 0025 ADCSRA|=(1<<ADSC);
0001d4 9a36      	SBI  0x6,6
                 ; 0000 0026 // Wait for the AD conversion to complete
                 ; 0000 0027 while ((ADCSRA & (1<<ADIF))==0);
                 _0x25:
0001d5 9b34      	SBIS 0x6,4
0001d6 cffe      	RJMP _0x25
                 ; 0000 0028 ADCSRA|=(1<<ADIF);
0001d7 9a34      	SBI  0x6,4
                 ; 0000 0029 return ADCW;
0001d8 b1e4      	IN   R30,0x4
0001d9 b1f5      	IN   R31,0x4+1
0001da c40e      	RJMP _0x212000B
                 ; 0000 002A }
                 ; .FEND
                 ;
                 ;
                 ;//config NRF24L01
                 ;#define CE PORTD.3
                 ;#define CSN PORTD.4
                 ;#define SCK PORTD.2
                 ;#define MOSI PORTB.6
                 ;#define MISO PIND.1
                 ;#define IRQ PINB.7
                 ;unsigned char P_Add=0xA2, Code_tay_cam1, Code_tay_cam2, Code_tay_cam3, Code_tay_cam4;
                 ;#include <nrf_code.h>
                 _config:
                 ; .FSTART _config
0001db d8b1      	RCALL SUBOPT_0x5
0001dc d8b4      	RCALL SUBOPT_0x6
0001dd e1af      	LDI  R26,LOW(31)
0001de d02f      	RCALL _RF_Write_TX
0001df e0a2      	LDI  R26,LOW(2)
0001e0 d8a3      	RCALL SUBOPT_0x2
0001e1 d8b2      	RCALL SUBOPT_0x7
0001e2 e1ed      	LDI  R30,LOW(29)
0001e3 93ea      	ST   -Y,R30
0001e4 e0a4      	LDI  R26,LOW(4)
0001e5 d028      	RCALL _RF_Write_TX
0001e6 e0e5      	LDI  R30,LOW(5)
0001e7 93ea      	ST   -Y,R30
0001e8 e0a2      	LDI  R26,LOW(2)
0001e9 d024      	RCALL _RF_Write_TX
0001ea e0e6      	LDI  R30,LOW(6)
0001eb 93ea      	ST   -Y,R30
0001ec e2a0      	LDI  R26,LOW(32)
0001ed c056      	RJMP _0x212000D
                 ; .FEND
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
0001ee d8a9      	RCALL SUBOPT_0x8
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0001ef e010      	LDI  R17,LOW(0)
                 _0x29:
0001f0 3018      	CPI  R17,8
0001f1 f4c8      	BRSH _0x2A
0001f2 81e9      	LDD  R30,Y+1
0001f3 78e0      	ANDI R30,LOW(0x80)
0001f4 f411      	BRNE _0x2B
0001f5 98c6      	CBI  0x18,6
0001f6 c001      	RJMP _0x2C
                 _0x2B:
0001f7 9ac6      	SBI  0x18,6
                 _0x2C:
                +
0001f8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001f9 958a     +DEC R24
0001fa f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001fb 81e9      	LDD  R30,Y+1
0001fc 0fee      	LSL  R30
0001fd 83e9      	STD  Y+1,R30
0001fe 9a92      	SBI  0x12,2
                +
0001ff e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000200 958a     +DEC R24
000201 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000202 e0e0      	LDI  R30,0
000203 9981      	SBIC 0x10,1
000204 e0e1      	LDI  R30,1
000205 81a9      	LDD  R26,Y+1
000206 2bea      	OR   R30,R26
000207 83e9      	STD  Y+1,R30
000208 9892      	CBI  0x12,2
000209 5f1f      	SUBI R17,-1
00020a cfe5      	RJMP _0x29
                 _0x2A:
00020b 81e9      	LDD  R30,Y+1
00020c 8118      	LDD  R17,Y+0
00020d c80f      	RJMP _0x2120003
                 ; .FEND
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
00020e 93aa      	ST   -Y,R26
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00020f 9894      	CBI  0x12,4
000210 81e9      	LDD  R30,Y+1
000211 62e0      	ORI  R30,0x20
000212 2fae      	MOV  R26,R30
000213 dfda      	RCALL _SPI_RW_TX
000214 2ede      	MOV  R13,R30
000215 d885      	RCALL SUBOPT_0x9
000216 d886      	RCALL SUBOPT_0xA
000217 2ded      	MOV  R30,R13
000218 c804      	RJMP _0x2120003
                 ; .FEND
                 _RF_Write_Address_TX:
                 ; .FSTART _RF_Write_Address_TX
000219 93aa      	ST   -Y,R26
                 ;	Address -> Y+0
00021a 9894      	CBI  0x12,4
00021b e0e3      	LDI  R30,LOW(3)
00021c 93ea      	ST   -Y,R30
00021d e0a3      	LDI  R26,LOW(3)
00021e dfef      	RCALL _RF_Write_TX
00021f d87d      	RCALL SUBOPT_0xA
000220 9894      	CBI  0x12,4
000221 e2aa      	LDI  R26,LOW(42)
000222 dfcb      	RCALL _SPI_RW_TX
000223 d877      	RCALL SUBOPT_0x9
000224 d876      	RCALL SUBOPT_0x9
000225 d875      	RCALL SUBOPT_0x9
000226 d874      	RCALL SUBOPT_0x9
000227 d873      	RCALL SUBOPT_0x9
000228 d874      	RCALL SUBOPT_0xA
000229 9894      	CBI  0x12,4
00022a e3a0      	LDI  R26,LOW(48)
00022b dfc2      	RCALL _SPI_RW_TX
00022c d86e      	RCALL SUBOPT_0x9
00022d d86d      	RCALL SUBOPT_0x9
00022e d86c      	RCALL SUBOPT_0x9
00022f d86b      	RCALL SUBOPT_0x9
000230 d86a      	RCALL SUBOPT_0x9
000231 d86b      	RCALL SUBOPT_0xA
000232 c3b6      	RJMP _0x212000B
                 ; .FEND
                 ;	Address -> Y+1
                 ;	Address2 -> Y+0
                 _RF_Mode_TX:
                 ; .FSTART _RF_Mode_TX
000233 9893      	CBI  0x12,3
000234 d85c      	RCALL SUBOPT_0x6
000235 e1ae      	LDI  R26,LOW(30)
000236 c00d      	RJMP _0x212000D
                 ; .FEND
                 _RF_Config_TX:
                 ; .FSTART _RF_Config_TX
000237 e1ec      	LDI  R30,LOW(28)
000238 93ea      	ST   -Y,R30
000239 e0a1      	LDI  R26,LOW(1)
00023a dfd3      	RCALL _RF_Write_TX
00023b 2da7      	MOV  R26,R7
00023c dfdc      	RCALL _RF_Write_Address_TX
00023d e0e2      	LDI  R30,LOW(2)
00023e 93ea      	ST   -Y,R30
00023f e0a1      	LDI  R26,LOW(1)
000240 dfcd      	RCALL _RF_Write_TX
000241 e0e1      	LDI  R30,LOW(1)
000242 93ea      	ST   -Y,R30
000243 e0a1      	LDI  R26,LOW(1)
                 _0x212000D:
000244 dfc9      	RCALL _RF_Write_TX
000245 9508      	RET
                 ; .FEND
                 _RF_Command_TX:
                 ; .FSTART _RF_Command_TX
000246 93aa      	ST   -Y,R26
                 ;	command -> Y+0
000247 9894      	CBI  0x12,4
000248 d852      	RCALL SUBOPT_0x9
000249 d853      	RCALL SUBOPT_0xA
00024a c39e      	RJMP _0x212000B
                 ; .FEND
                 _RF_Send_TX:
                 ; .FSTART _RF_Send_TX
                 ;	send -> Y+0
00024b 2da7      	MOV  R26,R7
00024c dfcc      	RCALL _RF_Write_Address_TX
00024d d84f      	RCALL SUBOPT_0xA
00024e 9894      	CBI  0x12,4
00024f eea1      	LDI  R26,LOW(225)
000250 df9d      	RCALL _SPI_RW_TX
000251 d84b      	RCALL SUBOPT_0xA
000252 9894      	CBI  0x12,4
000253 eaa0      	LDI  R26,LOW(160)
000254 df99      	RCALL _SPI_RW_TX
000255 d845      	RCALL SUBOPT_0x9
000256 81aa      	LDD  R26,Y+2
000257 df96      	RCALL _SPI_RW_TX
000258 81ac      	LDD  R26,Y+4
000259 df94      	RCALL _SPI_RW_TX
00025a 81ae      	LDD  R26,Y+6
00025b df92      	RCALL _SPI_RW_TX
00025c 85a8      	LDD  R26,Y+8
00025d df90      	RCALL _SPI_RW_TX
00025e 85aa      	LDD  R26,Y+10
00025f df8e      	RCALL _SPI_RW_TX
000260 9a94      	SBI  0x12,4
000261 9a93      	SBI  0x12,3
                +
000262 ee88     +LDI R24 , LOW ( 1000 )
000263 e093     +LDI R25 , HIGH ( 1000 )
                +__DELAY_USW_LOOP :
000264 9701     +SBIW R24 , 1
000265 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1000
000266 9893      	CBI  0x12,3
000267 d82c      	RCALL SUBOPT_0x7
000268 2da7      	MOV  R26,R7
000269 dfaf      	RCALL _RF_Write_Address_TX
00026a eea1      	LDI  R26,LOW(225)
00026b dfda      	RCALL _RF_Command_TX
00026c c5f9      	RJMP _0x2120008
                 ; .FEND
                 ;	send -> Y+0
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
00026d 9a93      	SBI  0x12,3
                +
00026e e788     +LDI R24 , LOW ( 1400 )
00026f e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
000270 9701     +SBIW R24 , 1
000271 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
000272 9893      	CBI  0x12,3
000273 9a94      	SBI  0x12,4
000274 9508      	RET
                 ; .FEND
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;	command -> Y+0
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
                 ;	Address1 -> Y+0
                 ;
                 ;station_info data_send;
                 ;
                 ;#define TRIGGER PORTB.5
                 ;#define ECHO PINB.4
                 ;
                 ;int change, dem;
                 ;float distance;
                 ;
                 ;void set_up_sieu_am(){
                 ; 0000 003F void set_up_sieu_am(){
                 _set_up_sieu_am:
                 ; .FSTART _set_up_sieu_am
                 ; 0000 0040     TRIGGER = 0;
000275 98c5      	CBI  0x18,5
                 ; 0000 0041     delay_us(2);
                +
000276 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000277 958a     +DEC R24
000278 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                 ; 0000 0042     TRIGGER = 1;
000279 9ac5      	SBI  0x18,5
                 ; 0000 0043     delay_us(10);
00027a d812      	RCALL SUBOPT_0x5
                 ; 0000 0044     TRIGGER = 0;
00027b 98c5      	CBI  0x18,5
                 ; 0000 0045     while(ECHO == 0);
                 _0xCD:
00027c 9bb4      	SBIS 0x16,4
00027d cffe      	RJMP _0xCD
                 ; 0000 0046     dem = 1;
00027e e0e1      	LDI  R30,LOW(1)
00027f e0f0      	LDI  R31,HIGH(1)
000280 93e0 01e8 	STS  _dem,R30
000282 93f0 01e9 	STS  _dem+1,R31
                 ; 0000 0047     change = 1;
000284 93e0 01e6 	STS  _change,R30
000286 93f0 01e7 	STS  _change+1,R31
                 ; 0000 0048 }
000288 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;interrupt [TIM0_OVF] void timer2_ovf(){
                 ; 0000 004B interrupt [10] void timer2_ovf(){
                 _timer2_ovf:
                 ; .FSTART _timer2_ovf
000289 920a      	ST   -Y,R0
00028a 921a      	ST   -Y,R1
00028b 936a      	ST   -Y,R22
00028c 937a      	ST   -Y,R23
00028d 938a      	ST   -Y,R24
00028e 939a      	ST   -Y,R25
00028f 93aa      	ST   -Y,R26
000290 93ba      	ST   -Y,R27
000291 93ea      	ST   -Y,R30
000292 93fa      	ST   -Y,R31
000293 b7ef      	IN   R30,SREG
000294 93ea      	ST   -Y,R30
                 ; 0000 004C     TCNT0 = 0x9C;
000295 e9ec      	LDI  R30,LOW(156)
000296 bfe2      	OUT  0x32,R30
                 ; 0000 004D     dem++;
000297 eea8      	LDI  R26,LOW(_dem)
000298 e0b1      	LDI  R27,HIGH(_dem)
000299 d805      	RCALL SUBOPT_0xB
                 ; 0000 004E 
                 ; 0000 004F     if(ECHO == 0 && change == 1){
00029a 99b4      	SBIC 0x16,4
00029b c006      	RJMP _0xD1
00029c 91a0 01e6 	LDS  R26,_change
00029e 91b0 01e7 	LDS  R27,_change+1
0002a0 9711      	SBIW R26,1
0002a1 f009      	BREQ _0xD2
                 _0xD1:
0002a2 c026      	RJMP _0xD0
                 _0xD2:
                 ; 0000 0050     distance = dem*0.1*3.432*5;
0002a3 91e0 01e8 	LDS  R30,_dem
0002a5 91f0 01e9 	LDS  R31,_dem+1
0002a7 da18      	RCALL __CWD1
0002a8 d97b      	RCALL __CDF1
                +
0002a9 ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
0002aa ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
0002ab ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
0002ac e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
0002ad d9a4      	RCALL __MULF12
                +
0002ae eea3     +LDI R26 , LOW ( 0x405BA5E3 )
0002af eab5     +LDI R27 , HIGH ( 0x405BA5E3 )
0002b0 e58b     +LDI R24 , BYTE3 ( 0x405BA5E3 )
0002b1 e490     +LDI R25 , BYTE4 ( 0x405BA5E3 )
                 	__GETD2N 0x405BA5E3
0002b2 d99f      	RCALL __MULF12
                +
0002b3 e0a0     +LDI R26 , LOW ( 0x40A00000 )
0002b4 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
0002b5 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
0002b6 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
0002b7 d99a      	RCALL __MULF12
0002b8 93e0 01ea 	STS  _distance,R30
0002ba 93f0 01eb 	STS  _distance+1,R31
0002bc 9360 01ec 	STS  _distance+2,R22
0002be 9370 01ed 	STS  _distance+3,R23
                 ; 0000 0051     dem = 0;
0002c0 e0e0      	LDI  R30,LOW(0)
0002c1 93e0 01e8 	STS  _dem,R30
0002c3 93e0 01e9 	STS  _dem+1,R30
                 ; 0000 0052     change = 0;
0002c5 93e0 01e6 	STS  _change,R30
0002c7 93e0 01e7 	STS  _change+1,R30
                 ; 0000 0053     }
                 ; 0000 0054 }
                 _0xD0:
0002c9 91e9      	LD   R30,Y+
0002ca bfef      	OUT  SREG,R30
0002cb 91f9      	LD   R31,Y+
0002cc 91e9      	LD   R30,Y+
0002cd 91b9      	LD   R27,Y+
0002ce 91a9      	LD   R26,Y+
0002cf 9199      	LD   R25,Y+
0002d0 9189      	LD   R24,Y+
0002d1 9179      	LD   R23,Y+
0002d2 9169      	LD   R22,Y+
0002d3 9019      	LD   R1,Y+
0002d4 9009      	LD   R0,Y+
0002d5 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0059 {
                 _main:
                 ; .FSTART _main
                 ; 0000 005A // Declare your local variables here
                 ; 0000 005B // Variable used to store graphic display
                 ; 0000 005C // controller initialization data
                 ; 0000 005D GLCDINIT_t glcd_init_data;
                 ; 0000 005E 
                 ; 0000 005F // Input/Output Ports initialization
                 ; 0000 0060 // Port B initialization
                 ; 0000 0061 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0062 DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
0002d6 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
0002d7 e6e0      	LDI  R30,LOW(96)
0002d8 bbe7      	OUT  0x17,R30
                 ; 0000 0063 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0064 PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0002d9 efe0      	LDI  R30,LOW(240)
0002da bbe8      	OUT  0x18,R30
                 ; 0000 0065 
                 ; 0000 0066 // Port C initialization
                 ; 0000 0067 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0068 DDRC=(0<<DDC6) | (1<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
0002db e2e0      	LDI  R30,LOW(32)
0002dc bbe4      	OUT  0x14,R30
                 ; 0000 0069 // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 006A PORTC=(0<<PORTC6) | (1<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0002dd bbe5      	OUT  0x15,R30
                 ; 0000 006B 
                 ; 0000 006C // Port D initialization
                 ; 0000 006D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 006E DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (0<<DDD1) | (0<<DDD0);
0002de e1ec      	LDI  R30,LOW(28)
0002df bbe1      	OUT  0x11,R30
                 ; 0000 006F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0070 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (0<<PORTD0);
0002e0 e1ee      	LDI  R30,LOW(30)
0002e1 bbe2      	OUT  0x12,R30
                 ; 0000 0071 
                 ; 0000 0072 // Timer/Counter 0 initialization
                 ; 0000 0073 // Clock source: System Clock
                 ; 0000 0074 // Clock value: Timer 0 Stopped
                 ; 0000 0075 TCCR0=(0<<CS02) | (1<<CS01) | (0<<CS00);
0002e2 e0e2      	LDI  R30,LOW(2)
0002e3 bfe3      	OUT  0x33,R30
                 ; 0000 0076 TCNT0=0x9C;
0002e4 e9ec      	LDI  R30,LOW(156)
0002e5 bfe2      	OUT  0x32,R30
                 ; 0000 0077 
                 ; 0000 0078 // Timer/Counter 1 initialization
                 ; 0000 0079 // Clock source: System Clock
                 ; 0000 007A // Clock value: Timer1 Stopped
                 ; 0000 007B // Mode: Normal top=0xFFFF
                 ; 0000 007C // OC1A output: Disconnected
                 ; 0000 007D // OC1B output: Disconnected
                 ; 0000 007E // Noise Canceler: Off
                 ; 0000 007F // Input Capture on Falling Edge
                 ; 0000 0080 // Timer1 Overflow Interrupt: Off
                 ; 0000 0081 // Input Capture Interrupt: Off
                 ; 0000 0082 // Compare A Match Interrupt: Off
                 ; 0000 0083 // Compare B Match Interrupt: Off
                 ; 0000 0084 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0002e6 e0e0      	LDI  R30,LOW(0)
0002e7 bdef      	OUT  0x2F,R30
                 ; 0000 0085 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
0002e8 bdee      	OUT  0x2E,R30
                 ; 0000 0086 TCNT1H=0x00;
0002e9 bded      	OUT  0x2D,R30
                 ; 0000 0087 TCNT1L=0x00;
0002ea bdec      	OUT  0x2C,R30
                 ; 0000 0088 ICR1H=0x00;
0002eb bde7      	OUT  0x27,R30
                 ; 0000 0089 ICR1L=0x00;
0002ec bde6      	OUT  0x26,R30
                 ; 0000 008A OCR1AH=0x00;
0002ed bdeb      	OUT  0x2B,R30
                 ; 0000 008B OCR1AL=0x00;
0002ee bdea      	OUT  0x2A,R30
                 ; 0000 008C OCR1BH=0x00;
0002ef bde9      	OUT  0x29,R30
                 ; 0000 008D OCR1BL=0x00;
0002f0 bde8      	OUT  0x28,R30
                 ; 0000 008E 
                 ; 0000 008F // Timer/Counter 2 initialization
                 ; 0000 0090 // Clock source: System Clock
                 ; 0000 0091 // Clock value: Timer2 Stopped
                 ; 0000 0092 // Mode: Normal top=0xFF
                 ; 0000 0093 // OC2 output: Disconnected
                 ; 0000 0094 ASSR=0<<AS2;
0002f1 bde2      	OUT  0x22,R30
                 ; 0000 0095 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0002f2 bde5      	OUT  0x25,R30
                 ; 0000 0096 TCNT2=0x00;
0002f3 bde4      	OUT  0x24,R30
                 ; 0000 0097 OCR2=0x00;
0002f4 bde3      	OUT  0x23,R30
                 ; 0000 0098 
                 ; 0000 0099 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 009A TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);
0002f5 e0e1      	LDI  R30,LOW(1)
0002f6 bfe9      	OUT  0x39,R30
                 ; 0000 009B 
                 ; 0000 009C // External Interrupt(s) initialization
                 ; 0000 009D // INT0: Off
                 ; 0000 009E // INT1: Off
                 ; 0000 009F MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0002f7 e0e0      	LDI  R30,LOW(0)
0002f8 bfe5      	OUT  0x35,R30
                 ; 0000 00A0 
                 ; 0000 00A1 // USART initialization
                 ; 0000 00A2 // USART disabled
                 ; 0000 00A3 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0002f9 b9ea      	OUT  0xA,R30
                 ; 0000 00A4 
                 ; 0000 00A5 // Analog Comparator initialization
                 ; 0000 00A6 // Analog Comparator: Off
                 ; 0000 00A7 // The Analog Comparator's positive input is
                 ; 0000 00A8 // connected to the AIN0 pin
                 ; 0000 00A9 // The Analog Comparator's negative input is
                 ; 0000 00AA // connected to the AIN1 pin
                 ; 0000 00AB ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0002fa e8e0      	LDI  R30,LOW(128)
0002fb b9e8      	OUT  0x8,R30
                 ; 0000 00AC 
                 ; 0000 00AD // ADC initialization
                 ; 0000 00AE // ADC Clock frequency: 1000.000 kHz
                 ; 0000 00AF // ADC Voltage Reference: AREF pin
                 ; 0000 00B0 ADMUX=ADC_VREF_TYPE;
0002fc e0e0      	LDI  R30,LOW(0)
0002fd b9e7      	OUT  0x7,R30
                 ; 0000 00B1 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0002fe e8e3      	LDI  R30,LOW(131)
0002ff b9e6      	OUT  0x6,R30
                 ; 0000 00B2 SFIOR=(0<<ACME);
000300 e0e0      	LDI  R30,LOW(0)
000301 bfe0      	OUT  0x30,R30
                 ; 0000 00B3 
                 ; 0000 00B4 // SPI initialization
                 ; 0000 00B5 // SPI disabled
                 ; 0000 00B6 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
000302 b9ed      	OUT  0xD,R30
                 ; 0000 00B7 
                 ; 0000 00B8 // TWI initialization
                 ; 0000 00B9 // TWI disabled
                 ; 0000 00BA TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
000303 bfe6      	OUT  0x36,R30
                 ; 0000 00BB 
                 ; 0000 00BC // Graphic Display Controller initialization
                 ; 0000 00BD // The PCD8544 connections are specified in the
                 ; 0000 00BE // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 00BF // SDIN - PORTC Bit 3
                 ; 0000 00C0 // SCLK - PORTC Bit 4
                 ; 0000 00C1 // D /C - PORTC Bit 2
                 ; 0000 00C2 // /SCE - PORTC Bit 1
                 ; 0000 00C3 // /RES - PORTC Bit 0
                 ; 0000 00C4 
                 ; 0000 00C5 // Specify the current font for displaying text
                 ; 0000 00C6 glcd_init_data.font=font5x7;
000304 e2e6      	LDI  R30,LOW(_font5x7*2)
000305 e0f0      	LDI  R31,HIGH(_font5x7*2)
000306 83e8      	ST   Y,R30
000307 83f9      	STD  Y+1,R31
                 ; 0000 00C7 // No function is used for reading
                 ; 0000 00C8 // image data from external memory
                 ; 0000 00C9 glcd_init_data.readxmem=NULL;
000308 e0e0      	LDI  R30,LOW(0)
000309 83ea      	STD  Y+2,R30
00030a 83eb      	STD  Y+2+1,R30
                 ; 0000 00CA // No function is used for writing
                 ; 0000 00CB // image data to external memory
                 ; 0000 00CC glcd_init_data.writexmem=NULL;
00030b 83ec      	STD  Y+4,R30
00030c 83ed      	STD  Y+4+1,R30
                 ; 0000 00CD // Set the LCD temperature coefficient
                 ; 0000 00CE glcd_init_data.temp_coef=139;
00030d 81ee      	LDD  R30,Y+6
00030e 60e3      	ORI  R30,LOW(0x3)
00030f 83ee      	STD  Y+6,R30
                 ; 0000 00CF // Set the LCD bias
                 ; 0000 00D0 glcd_init_data.bias=4;
000310 7ee3      	ANDI R30,LOW(0xE3)
000311 61e0      	ORI  R30,0x10
000312 83ee      	STD  Y+6,R30
                 ; 0000 00D1 // Set the LCD contrast control voltage VLCD
                 ; 0000 00D2 glcd_init_data.vlcd=69;
000313 81ef      	LDD  R30,Y+7
000314 78e0      	ANDI R30,LOW(0x80)
000315 64e5      	ORI  R30,LOW(0x45)
000316 83ef      	STD  Y+7,R30
                 ; 0000 00D3 
                 ; 0000 00D4 #asm("sei")
000317 9478      	sei
                 ; 0000 00D5 
                 ; 0000 00D6 glcd_init(&glcd_init_data);
000318 01de      	MOVW R26,R28
000319 d262      	RCALL _glcd_init
                 ; 0000 00D7 PORTC.5 = 0;
00031a 98ad      	CBI  0x15,5
                 ; 0000 00D8 
                 ; 0000 00D9 config();
00031b debf      	RCALL _config
                 ; 0000 00DA RF_Init_RX();
00031c df50      	RCALL _RF_Init_RX
                 ; 0000 00DB RF_Config_TX();
00031d df19      	RCALL _RF_Config_TX
                 ; 0000 00DC RF_Mode_TX();
00031e df14      	RCALL _RF_Mode_TX
                 ; 0000 00DD 
                 ; 0000 00DE glcd_line(48,0, 48, 15);
00031f d785      	RCALL SUBOPT_0xC
000320 d770      	RCALL SUBOPT_0x6
000321 d783      	RCALL SUBOPT_0xC
000322 e0af      	LDI  R26,LOW(15)
000323 d784      	RCALL SUBOPT_0xD
                 ; 0000 00DF glcd_line(0, 15, 48, 15);
000324 e0ef      	LDI  R30,LOW(15)
000325 93ea      	ST   -Y,R30
000326 d77e      	RCALL SUBOPT_0xC
000327 e0af      	LDI  R26,LOW(15)
000328 d77f      	RCALL SUBOPT_0xD
                 ; 0000 00E0 glcd_line(0,0,84,0);
000329 d767      	RCALL SUBOPT_0x6
00032a d77f      	RCALL SUBOPT_0xE
00032b e0a0      	LDI  R26,LOW(0)
00032c d5d6      	RCALL _glcd_line
                 ; 0000 00E1 glcd_line(84,0, 84, 48);
00032d d77c      	RCALL SUBOPT_0xE
00032e d762      	RCALL SUBOPT_0x6
00032f d77a      	RCALL SUBOPT_0xE
000330 e3a0      	LDI  R26,LOW(48)
000331 d776      	RCALL SUBOPT_0xD
                 ; 0000 00E2 glcd_line(0, 48, 84, 48);
000332 d772      	RCALL SUBOPT_0xC
000333 d776      	RCALL SUBOPT_0xE
000334 e3a0      	LDI  R26,LOW(48)
000335 d772      	RCALL SUBOPT_0xD
                 ; 0000 00E3 glcd_line(0, 0, 0, 48);
000336 d75a      	RCALL SUBOPT_0x6
000337 d759      	RCALL SUBOPT_0x6
000338 e3a0      	LDI  R26,LOW(48)
000339 d5c9      	RCALL _glcd_line
                 ; 0000 00E4 glcd_moveto(3,3);
00033a e0e3      	LDI  R30,LOW(3)
00033b 93ea      	ST   -Y,R30
00033c e0a3      	LDI  R26,LOW(3)
00033d d5b9      	RCALL _glcd_moveto
                 ; 0000 00E5 glcd_outtext("Node: ");
                +
00033e e6a0     +LDI R26 , LOW ( _0xD5 + ( 0 ) )
00033f e0b1     +LDI R27 , HIGH ( _0xD5 + ( 0 ) )
                 	__POINTW2MN _0xD5,0
000340 d58d      	RCALL _glcd_outtext
                 ; 0000 00E6 glcd_moveto(40, 3);
000341 e2e8      	LDI  R30,LOW(40)
000342 93ea      	ST   -Y,R30
000343 e0a3      	LDI  R26,LOW(3)
000344 d5b2      	RCALL _glcd_moveto
                 ; 0000 00E7 glcd_outtext("2");
                +
000345 e6a7     +LDI R26 , LOW ( _0xD5 + ( 7 ) )
000346 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 7 ) )
                 	__POINTW2MN _0xD5,7
000347 d765      	RCALL SUBOPT_0xF
                 ; 0000 00E8 
                 ; 0000 00E9 glcd_moveto(4, 18);
000348 e1a2      	LDI  R26,LOW(18)
000349 d5ad      	RCALL _glcd_moveto
                 ; 0000 00EA glcd_outtext("Temp: ");
                +
00034a e6a9     +LDI R26 , LOW ( _0xD5 + ( 9 ) )
00034b e0b1     +LDI R27 , HIGH ( _0xD5 + ( 9 ) )
                 	__POINTW2MN _0xD5,9
00034c d760      	RCALL SUBOPT_0xF
                 ; 0000 00EB glcd_moveto(4, 28);
00034d e1ac      	LDI  R26,LOW(28)
00034e d5a8      	RCALL _glcd_moveto
                 ; 0000 00EC glcd_outtext("Humid: ");
                +
00034f e7a0     +LDI R26 , LOW ( _0xD5 + ( 16 ) )
000350 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 16 ) )
                 	__POINTW2MN _0xD5,16
000351 d75b      	RCALL SUBOPT_0xF
                 ; 0000 00ED glcd_moveto(4, 37);
000352 e2a5      	LDI  R26,LOW(37)
000353 d5a3      	RCALL _glcd_moveto
                 ; 0000 00EE glcd_outtext("Water: ");
                +
000354 e7a8     +LDI R26 , LOW ( _0xD5 + ( 24 ) )
000355 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 24 ) )
                 	__POINTW2MN _0xD5,24
000356 d577      	RCALL _glcd_outtext
                 ; 0000 00EF 
                 ; 0000 00F0 glcd_moveto(67, 28);
000357 e4e3      	LDI  R30,LOW(67)
000358 93ea      	ST   -Y,R30
000359 e1ac      	LDI  R26,LOW(28)
00035a d59c      	RCALL _glcd_moveto
                 ; 0000 00F1 glcd_putchar(37);
00035b e2a5      	LDI  R26,LOW(37)
00035c d51a      	RCALL _glcd_putchar
                 ; 0000 00F2 glcd_moveto(67, 37);
00035d e4e3      	LDI  R30,LOW(67)
00035e 93ea      	ST   -Y,R30
00035f e2a5      	LDI  R26,LOW(37)
000360 d596      	RCALL _glcd_moveto
                 ; 0000 00F3 glcd_outtext("mm");
                +
000361 e8a0     +LDI R26 , LOW ( _0xD5 + ( 32 ) )
000362 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 32 ) )
                 	__POINTW2MN _0xD5,32
000363 d56a      	RCALL _glcd_outtext
                 ; 0000 00F4 
                 ; 0000 00F5 while (1){
                 _0xD6:
                 ; 0000 00F6         if(DHT_GetTemHumi(&dht_nhiet_do,&dht_do_am)){
000364 e0e5      	LDI  R30,LOW(5)
000365 e0f0      	LDI  R31,HIGH(5)
000366 d74a      	RCALL SUBOPT_0x10
000367 e0a4      	LDI  R26,LOW(4)
000368 e0b0      	LDI  R27,HIGH(4)
000369 de0f      	RCALL _DHT_GetTemHumi
00036a 30e0      	CPI  R30,0
00036b f081      	BREQ _0xD9
                 ; 0000 00F7             sprintf(buff, "%u", (unsigned int)dht_do_am);
00036c d747      	RCALL SUBOPT_0x11
                +
00036d e4eb     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
00036e e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
                 	__POINTW1FN _0x0,35
00036f d741      	RCALL SUBOPT_0x10
000370 2de4      	MOV  R30,R4
000371 d745      	RCALL SUBOPT_0x12
                 ; 0000 00F8             glcd_moveto(50, 28);
000372 e1ac      	LDI  R26,LOW(28)
000373 d74d      	RCALL SUBOPT_0x13
                 ; 0000 00F9             glcd_outtext(buff);
                 ; 0000 00FA             sprintf(buff, "%u  ", (unsigned int)dht_nhiet_do);
000374 d73f      	RCALL SUBOPT_0x11
                +
000375 e4ee     +LDI R30 , LOW ( 2 * _0x0 + ( 38 ) )
000376 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 38 ) )
                 	__POINTW1FN _0x0,38
000377 d739      	RCALL SUBOPT_0x10
000378 2de5      	MOV  R30,R5
000379 d73d      	RCALL SUBOPT_0x12
                 ; 0000 00FB             glcd_moveto(50, 18);
00037a e1a2      	LDI  R26,LOW(18)
00037b d745      	RCALL SUBOPT_0x13
                 ; 0000 00FC             glcd_outtext(buff);
                 ; 0000 00FD         }
                 ; 0000 00FE 
                 ; 0000 00FF         set_up_sieu_am();
                 _0xD9:
00037c def8      	RCALL _set_up_sieu_am
                 ; 0000 0100         glcd_moveto(50, 37);
00037d e3e2      	LDI  R30,LOW(50)
00037e 93ea      	ST   -Y,R30
00037f e2a5      	LDI  R26,LOW(37)
000380 d576      	RCALL _glcd_moveto
                 ; 0000 0101         if((int)distance > 20)
000381 d743      	RCALL SUBOPT_0x14
000382 9775      	SBIW R30,21
000383 f044      	BRLT _0xDA
                 ; 0000 0102             sprintf(buff, "NaN");
000384 d72f      	RCALL SUBOPT_0x11
                +
000385 e5e3     +LDI R30 , LOW ( 2 * _0x0 + ( 43 ) )
000386 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 43 ) )
                 	__POINTW1FN _0x0,43
000387 d729      	RCALL SUBOPT_0x10
000388 e080      	LDI  R24,0
000389 d178      	RCALL _sprintf
00038a 9624      	ADIW R28,4
                 ; 0000 0103         else
00038b c00a      	RJMP _0xDB
                 _0xDA:
                 ; 0000 0104             sprintf(buff, "%d ", (int)distance);
00038c d727      	RCALL SUBOPT_0x11
                +
00038d e5e7     +LDI R30 , LOW ( 2 * _0x0 + ( 47 ) )
00038e e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 47 ) )
                 	__POINTW1FN _0x0,47
00038f d721      	RCALL SUBOPT_0x10
000390 d734      	RCALL SUBOPT_0x14
000391 d92e      	RCALL __CWD1
000392 d968      	RCALL __PUTPARD1
000393 e084      	LDI  R24,4
000394 d16d      	RCALL _sprintf
000395 9628      	ADIW R28,8
                 ; 0000 0105         glcd_outtext(buff);
                 _0xDB:
000396 eaa0      	LDI  R26,LOW(_buff)
000397 e0b1      	LDI  R27,HIGH(_buff)
000398 d535      	RCALL _glcd_outtext
                 ; 0000 0106 
                 ; 0000 0107         data_send.flag = 2;
000399 e0e2      	LDI  R30,LOW(2)
00039a e0f0      	LDI  R31,HIGH(2)
00039b 93e0 01da 	STS  _data_send,R30
00039d 93f0 01db 	STS  _data_send+1,R31
                 ; 0000 0108         data_send.temp = dht_nhiet_do;
                +
00039f eea0     +LDI R26 , LOW ( _data_send + ( 6 ) )
0003a0 e0b1     +LDI R27 , HIGH ( _data_send + ( 6 ) )
                 	__POINTW2MN _data_send,6
0003a1 2de5      	MOV  R30,R5
0003a2 e0f0      	LDI  R31,0
0003a3 d72b      	RCALL SUBOPT_0x15
                 ; 0000 0109         data_send.humi = dht_do_am;
                +
0003a4 edae     +LDI R26 , LOW ( _data_send + ( 4 ) )
0003a5 e0b1     +LDI R27 , HIGH ( _data_send + ( 4 ) )
                 	__POINTW2MN _data_send,4
0003a6 2de4      	MOV  R30,R4
0003a7 e0f0      	LDI  R31,0
0003a8 d726      	RCALL SUBOPT_0x15
                 ; 0000 010A         data_send.light = (int)read_adc(6)/4;
0003a9 e0a6      	LDI  R26,LOW(6)
0003aa d727      	RCALL SUBOPT_0x16
                +
0003ab 93e0 01dc+STS _data_send + ( 2 ) , R30
0003ad 93f0 01dd+STS _data_send + ( 2 ) + 1 , R31
                 	__PUTW1MN _data_send,2
                 ; 0000 010B         data_send.sm = (int)read_adc(7)/4;
0003af e0a7      	LDI  R26,LOW(7)
0003b0 d721      	RCALL SUBOPT_0x16
                +
0003b1 93e0 01e2+STS _data_send + ( 8 ) , R30
0003b3 93f0 01e3+STS _data_send + ( 8 ) + 1 , R31
                 	__PUTW1MN _data_send,8
                 ; 0000 010C         data_send.water = (int)distance;
0003b5 d70f      	RCALL SUBOPT_0x14
                +
0003b6 93e0 01e4+STS _data_send + ( 10 ) , R30
0003b8 93f0 01e5+STS _data_send + ( 10 ) + 1 , R31
                 	__PUTW1MN _data_send,10
                 ; 0000 010D 
                 ; 0000 010E         RF_Send_TX(data_send);
0003ba edea      	LDI  R30,LOW(_data_send)
0003bb e0f1      	LDI  R31,HIGH(_data_send)
0003bc e0ac      	LDI  R26,12
0003bd d942      	RCALL __PUTPARL
0003be de8c      	RCALL _RF_Send_TX
                 ; 0000 010F 
                 ; 0000 0110         delay_ms(200);
0003bf eca8      	LDI  R26,LOW(200)
0003c0 d6c3      	RCALL SUBOPT_0x2
                 ; 0000 0111 
                 ; 0000 0112         }
0003c1 cfa2      	RJMP _0xD6
                 ; 0000 0113 }
                 _0xDC:
0003c2 cfff      	RJMP _0xDC
                 ; .FEND
                 
                 	.DSEG
                 _0xD5:
000160           	.BYTE 0x23
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0003c3 d6b9      	RCALL SUBOPT_0x0
0003c4 d968      	RCALL __SAVELOCR2
0003c5 d712      	RCALL SUBOPT_0x17
0003c6 9612      	ADIW R26,2
0003c7 d92b      	RCALL __GETW1P
0003c8 9730      	SBIW R30,0
0003c9 f0f1      	BREQ _0x2020010
0003ca d70d      	RCALL SUBOPT_0x17
0003cb d70f      	RCALL SUBOPT_0x18
0003cc 018f      	MOVW R16,R30
0003cd 9730      	SBIW R30,0
0003ce f061      	BREQ _0x2020012
                +
0003cf 3002     +CPI R16 , LOW ( 2 )
0003d0 e0e0     +LDI R30 , HIGH ( 2 )
0003d1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0003d2 f070      	BRLO _0x2020013
0003d3 01f8      	MOVW R30,R16
0003d4 9731      	SBIW R30,1
0003d5 018f      	MOVW R16,R30
                +
0003d6 81aa     +LDD R26 , Y + 2
0003d7 81bb     +LDD R27 , Y + 2 + 1
0003d8 9614     +ADIW R26 , 4
0003d9 93ed     +ST X + , R30
0003da 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0003db d6fc      	RCALL SUBOPT_0x17
0003dc 9612      	ADIW R26,2
0003dd d6c1      	RCALL SUBOPT_0xB
0003de 9731      	SBIW R30,1
0003df 81ac      	LDD  R26,Y+4
0003e0 83a0      	STD  Z+0,R26
                 _0x2020013:
0003e1 d6f6      	RCALL SUBOPT_0x17
0003e2 d910      	RCALL __GETW1P
0003e3 23ff      	TST  R31
0003e4 f012      	BRMI _0x2020014
0003e5 d6f2      	RCALL SUBOPT_0x17
0003e6 d6b8      	RCALL SUBOPT_0xB
                 _0x2020014:
0003e7 c004      	RJMP _0x2020015
                 _0x2020010:
0003e8 d6ef      	RCALL SUBOPT_0x17
0003e9 efef      	LDI  R30,LOW(65535)
0003ea efff      	LDI  R31,HIGH(65535)
0003eb d6e3      	RCALL SUBOPT_0x15
                 _0x2020015:
0003ec d947      	RCALL __LOADLOCR2
0003ed c60e      	RJMP _0x2120004
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0003ee d68e      	RCALL SUBOPT_0x0
0003ef 9726      	SBIW R28,6
0003f0 d938      	RCALL __SAVELOCR6
0003f1 e010      	LDI  R17,0
0003f2 85ac      	LDD  R26,Y+12
0003f3 85bd      	LDD  R27,Y+12+1
0003f4 d6e9      	RCALL SUBOPT_0x19
0003f5 d6d9      	RCALL SUBOPT_0x15
                 _0x2020016:
0003f6 89ea      	LDD  R30,Y+18
0003f7 89fb      	LDD  R31,Y+18+1
0003f8 9631      	ADIW R30,1
0003f9 8bea      	STD  Y+18,R30
0003fa 8bfb      	STD  Y+18+1,R31
0003fb 9731      	SBIW R30,1
0003fc 91e4      	LPM  R30,Z
0003fd 2f2e      	MOV  R18,R30
0003fe 30e0      	CPI  R30,0
0003ff f409      	BRNE PC+2
000400 c0fb      	RJMP _0x2020018
000401 2fe1      	MOV  R30,R17
000402 30e0      	CPI  R30,0
000403 f431      	BRNE _0x202001C
000404 3225      	CPI  R18,37
000405 f411      	BRNE _0x202001D
000406 e011      	LDI  R17,LOW(1)
000407 c001      	RJMP _0x202001E
                 _0x202001D:
000408 d6d8      	RCALL SUBOPT_0x1A
                 _0x202001E:
000409 c0f1      	RJMP _0x202001B
                 _0x202001C:
00040a 30e1      	CPI  R30,LOW(0x1)
00040b f4a1      	BRNE _0x202001F
00040c 3225      	CPI  R18,37
00040d f411      	BRNE _0x2020020
00040e d6d2      	RCALL SUBOPT_0x1A
00040f c0ea      	RJMP _0x20200CC
                 _0x2020020:
000410 e012      	LDI  R17,LOW(2)
000411 e040      	LDI  R20,LOW(0)
000412 e000      	LDI  R16,LOW(0)
000413 322d      	CPI  R18,45
000414 f411      	BRNE _0x2020021
000415 e001      	LDI  R16,LOW(1)
000416 c0e4      	RJMP _0x202001B
                 _0x2020021:
000417 322b      	CPI  R18,43
000418 f411      	BRNE _0x2020022
000419 e24b      	LDI  R20,LOW(43)
00041a c0e0      	RJMP _0x202001B
                 _0x2020022:
00041b 3220      	CPI  R18,32
00041c f411      	BRNE _0x2020023
00041d e240      	LDI  R20,LOW(32)
00041e c0dc      	RJMP _0x202001B
                 _0x2020023:
00041f c002      	RJMP _0x2020024
                 _0x202001F:
000420 30e2      	CPI  R30,LOW(0x2)
000421 f439      	BRNE _0x2020025
                 _0x2020024:
000422 e050      	LDI  R21,LOW(0)
000423 e013      	LDI  R17,LOW(3)
000424 3320      	CPI  R18,48
000425 f411      	BRNE _0x2020026
000426 6800      	ORI  R16,LOW(128)
000427 c0d3      	RJMP _0x202001B
                 _0x2020026:
000428 c003      	RJMP _0x2020027
                 _0x2020025:
000429 30e3      	CPI  R30,LOW(0x3)
00042a f009      	BREQ PC+2
00042b c0cf      	RJMP _0x202001B
                 _0x2020027:
00042c 3320      	CPI  R18,48
00042d f010      	BRLO _0x202002A
00042e 332a      	CPI  R18,58
00042f f008      	BRLO _0x202002B
                 _0x202002A:
000430 c007      	RJMP _0x2020029
                 _0x202002B:
000431 e0aa      	LDI  R26,LOW(10)
000432 9f5a      	MUL  R21,R26
000433 2d50      	MOV  R21,R0
000434 2fe2      	MOV  R30,R18
000435 53e0      	SUBI R30,LOW(48)
000436 0f5e      	ADD  R21,R30
000437 c0c3      	RJMP _0x202001B
                 _0x2020029:
000438 2fe2      	MOV  R30,R18
000439 36e3      	CPI  R30,LOW(0x63)
00043a f439      	BRNE _0x202002F
00043b d6ac      	RCALL SUBOPT_0x1B
00043c d6ae      	RCALL SUBOPT_0x1C
00043d d6aa      	RCALL SUBOPT_0x1B
00043e 81a4      	LDD  R26,Z+4
00043f 93aa      	ST   -Y,R26
000440 d6ae      	RCALL SUBOPT_0x1D
000441 c0b8      	RJMP _0x2020030
                 _0x202002F:
000442 37e3      	CPI  R30,LOW(0x73)
000443 f431      	BRNE _0x2020032
000444 d6b0      	RCALL SUBOPT_0x1E
000445 d6b1      	RCALL SUBOPT_0x1F
000446 d6b3      	RCALL SUBOPT_0x20
000447 d5b6      	RCALL _strlen
000448 2f1e      	MOV  R17,R30
000449 c008      	RJMP _0x2020033
                 _0x2020032:
00044a 37e0      	CPI  R30,LOW(0x70)
00044b f451      	BRNE _0x2020035
00044c d6a8      	RCALL SUBOPT_0x1E
00044d d6a9      	RCALL SUBOPT_0x1F
00044e d6ab      	RCALL SUBOPT_0x20
00044f d5b9      	RCALL _strlenf
000450 2f1e      	MOV  R17,R30
000451 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000452 6002      	ORI  R16,LOW(2)
000453 770f      	ANDI R16,LOW(127)
000454 e030      	LDI  R19,LOW(0)
000455 c02d      	RJMP _0x2020036
                 _0x2020035:
000456 36e4      	CPI  R30,LOW(0x64)
000457 f011      	BREQ _0x2020039
000458 36e9      	CPI  R30,LOW(0x69)
000459 f411      	BRNE _0x202003A
                 _0x2020039:
00045a 6004      	ORI  R16,LOW(4)
00045b c002      	RJMP _0x202003B
                 _0x202003A:
00045c 37e5      	CPI  R30,LOW(0x75)
00045d f429      	BRNE _0x202003C
                 _0x202003B:
00045e e0ea      	LDI  R30,LOW(_tbl10_G101*2)
00045f e0f2      	LDI  R31,HIGH(_tbl10_G101*2)
000460 d69e      	RCALL SUBOPT_0x21
000461 e015      	LDI  R17,LOW(5)
000462 c00b      	RJMP _0x202003D
                 _0x202003C:
000463 35e8      	CPI  R30,LOW(0x58)
000464 f411      	BRNE _0x202003F
000465 6008      	ORI  R16,LOW(8)
000466 c003      	RJMP _0x2020040
                 _0x202003F:
000467 37e8      	CPI  R30,LOW(0x78)
000468 f009      	BREQ PC+2
000469 c090      	RJMP _0x2020071
                 _0x2020040:
00046a e1e4      	LDI  R30,LOW(_tbl16_G101*2)
00046b e0f2      	LDI  R31,HIGH(_tbl16_G101*2)
00046c d692      	RCALL SUBOPT_0x21
00046d e014      	LDI  R17,LOW(4)
                 _0x202003D:
00046e ff02      	SBRS R16,2
00046f c010      	RJMP _0x2020042
000470 d684      	RCALL SUBOPT_0x1E
000471 d685      	RCALL SUBOPT_0x1F
000472 d68f      	RCALL SUBOPT_0x22
000473 85ab      	LDD  R26,Y+11
000474 23aa      	TST  R26
000475 f422      	BRPL _0x2020043
000476 d68e      	RCALL SUBOPT_0x23
000477 d82c      	RCALL __ANEGW1
000478 d689      	RCALL SUBOPT_0x22
000479 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00047a 3040      	CPI  R20,0
00047b f011      	BREQ _0x2020044
00047c 5f1f      	SUBI R17,-LOW(1)
00047d c001      	RJMP _0x2020045
                 _0x2020044:
00047e 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00047f c003      	RJMP _0x2020046
                 _0x2020042:
000480 d674      	RCALL SUBOPT_0x1E
000481 d675      	RCALL SUBOPT_0x1F
000482 d67f      	RCALL SUBOPT_0x22
                 _0x2020046:
                 _0x2020036:
000483 fd00      	SBRC R16,0
000484 c010      	RJMP _0x2020047
                 _0x2020048:
000485 1715      	CP   R17,R21
000486 f470      	BRSH _0x202004A
000487 ff07      	SBRS R16,7
000488 c008      	RJMP _0x202004B
000489 ff02      	SBRS R16,2
00048a c004      	RJMP _0x202004C
00048b 7f0b      	ANDI R16,LOW(251)
00048c 2f24      	MOV  R18,R20
00048d 5011      	SUBI R17,LOW(1)
00048e c001      	RJMP _0x202004D
                 _0x202004C:
00048f e320      	LDI  R18,LOW(48)
                 _0x202004D:
000490 c001      	RJMP _0x202004E
                 _0x202004B:
000491 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000492 d64e      	RCALL SUBOPT_0x1A
000493 5051      	SUBI R21,LOW(1)
000494 cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000495 2f31      	MOV  R19,R17
000496 ff01      	SBRS R16,1
000497 c015      	RJMP _0x202004F
                 _0x2020050:
000498 3030      	CPI  R19,0
000499 f091      	BREQ _0x2020052
00049a ff03      	SBRS R16,3
00049b c005      	RJMP _0x2020053
00049c 81ee      	LDD  R30,Y+6
00049d 81ff      	LDD  R31,Y+6+1
00049e 9125      	LPM  R18,Z+
00049f d65f      	RCALL SUBOPT_0x21
0004a0 c005      	RJMP _0x2020054
                 _0x2020053:
0004a1 81ae      	LDD  R26,Y+6
0004a2 81bf      	LDD  R27,Y+6+1
0004a3 912d      	LD   R18,X+
0004a4 83ae      	STD  Y+6,R26
0004a5 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0004a6 d63a      	RCALL SUBOPT_0x1A
0004a7 3050      	CPI  R21,0
0004a8 f009      	BREQ _0x2020055
0004a9 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0004aa 5031      	SUBI R19,LOW(1)
0004ab cfec      	RJMP _0x2020050
                 _0x2020052:
0004ac c044      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0004ad e320      	LDI  R18,LOW(48)
0004ae 81ee      	LDD  R30,Y+6
0004af 81ff      	LDD  R31,Y+6+1
0004b0 d846      	RCALL __GETW1PF
0004b1 87e8      	STD  Y+8,R30
0004b2 87f9      	STD  Y+8+1,R31
0004b3 81ee      	LDD  R30,Y+6
0004b4 81ff      	LDD  R31,Y+6+1
0004b5 9632      	ADIW R30,2
0004b6 d648      	RCALL SUBOPT_0x21
                 _0x202005A:
0004b7 85e8      	LDD  R30,Y+8
0004b8 85f9      	LDD  R31,Y+8+1
0004b9 d64e      	RCALL SUBOPT_0x24
0004ba 17ae      	CP   R26,R30
0004bb 07bf      	CPC  R27,R31
0004bc f040      	BRLO _0x202005C
0004bd 5f2f      	SUBI R18,-LOW(1)
0004be 85a8      	LDD  R26,Y+8
0004bf 85b9      	LDD  R27,Y+8+1
0004c0 d644      	RCALL SUBOPT_0x23
0004c1 1bea      	SUB  R30,R26
0004c2 0bfb      	SBC  R31,R27
0004c3 d63e      	RCALL SUBOPT_0x22
0004c4 cff2      	RJMP _0x202005A
                 _0x202005C:
0004c5 332a      	CPI  R18,58
0004c6 f028      	BRLO _0x202005D
0004c7 ff03      	SBRS R16,3
0004c8 c002      	RJMP _0x202005E
0004c9 5f29      	SUBI R18,-LOW(7)
0004ca c001      	RJMP _0x202005F
                 _0x202005E:
0004cb 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0004cc fd04      	SBRC R16,4
0004cd c019      	RJMP _0x2020061
0004ce 3321      	CPI  R18,49
0004cf f420      	BRSH _0x2020063
0004d0 85a8      	LDD  R26,Y+8
0004d1 85b9      	LDD  R27,Y+8+1
0004d2 9711      	SBIW R26,1
0004d3 f409      	BRNE _0x2020062
                 _0x2020063:
0004d4 c009      	RJMP _0x20200CD
                 _0x2020062:
0004d5 1753      	CP   R21,R19
0004d6 f010      	BRLO _0x2020067
0004d7 ff00      	SBRS R16,0
0004d8 c001      	RJMP _0x2020068
                 _0x2020067:
0004d9 c011      	RJMP _0x2020066
                 _0x2020068:
0004da e220      	LDI  R18,LOW(32)
0004db ff07      	SBRS R16,7
0004dc c00a      	RJMP _0x2020069
0004dd e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0004de 6100      	ORI  R16,LOW(16)
0004df ff02      	SBRS R16,2
0004e0 c006      	RJMP _0x202006A
0004e1 7f0b      	ANDI R16,LOW(251)
0004e2 934a      	ST   -Y,R20
0004e3 d60b      	RCALL SUBOPT_0x1D
0004e4 3050      	CPI  R21,0
0004e5 f009      	BREQ _0x202006B
0004e6 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0004e7 d5f9      	RCALL SUBOPT_0x1A
0004e8 3050      	CPI  R21,0
0004e9 f009      	BREQ _0x202006C
0004ea 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0004eb 5031      	SUBI R19,LOW(1)
0004ec 85a8      	LDD  R26,Y+8
0004ed 85b9      	LDD  R27,Y+8+1
0004ee 9712      	SBIW R26,2
0004ef f008      	BRLO _0x2020059
0004f0 cfbc      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0004f1 ff00      	SBRS R16,0
0004f2 c007      	RJMP _0x202006D
                 _0x202006E:
0004f3 3050      	CPI  R21,0
0004f4 f029      	BREQ _0x2020070
0004f5 5051      	SUBI R21,LOW(1)
0004f6 e2e0      	LDI  R30,LOW(32)
0004f7 93ea      	ST   -Y,R30
0004f8 d5f6      	RCALL SUBOPT_0x1D
0004f9 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0004fa e010      	LDI  R17,LOW(0)
                 _0x202001B:
0004fb cefa      	RJMP _0x2020016
                 _0x2020018:
0004fc 85ac      	LDD  R26,Y+12
0004fd 85bd      	LDD  R27,Y+12+1
0004fe d7f4      	RCALL __GETW1P
0004ff d830      	RCALL __LOADLOCR6
000500 9664      	ADIW R28,20
000501 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000502 92ff      	PUSH R15
000503 2ef8      	MOV  R15,R24
000504 9726      	SBIW R28,6
000505 d825      	RCALL __SAVELOCR4
000506 d604      	RCALL SUBOPT_0x25
000507 9730      	SBIW R30,0
000508 f419      	BRNE _0x2020072
000509 efef      	LDI  R30,LOW(65535)
00050a efff      	LDI  R31,HIGH(65535)
00050b c01c      	RJMP _0x212000C
                 _0x2020072:
00050c 01de      	MOVW R26,R28
00050d 9616      	ADIW R26,6
00050e d791      	RCALL __ADDW2R15
00050f 018d      	MOVW R16,R26
000510 d5fa      	RCALL SUBOPT_0x25
000511 d5ed      	RCALL SUBOPT_0x21
000512 e0e0      	LDI  R30,LOW(0)
000513 87e8      	STD  Y+8,R30
000514 87e9      	STD  Y+8+1,R30
000515 01de      	MOVW R26,R28
000516 961a      	ADIW R26,10
000517 d788      	RCALL __ADDW2R15
000518 d7da      	RCALL __GETW1P
000519 d597      	RCALL SUBOPT_0x10
00051a 931a      	ST   -Y,R17
00051b 930a      	ST   -Y,R16
00051c ece3      	LDI  R30,LOW(_put_buff_G101)
00051d e0f3      	LDI  R31,HIGH(_put_buff_G101)
00051e d592      	RCALL SUBOPT_0x10
00051f 01de      	MOVW R26,R28
000520 961a      	ADIW R26,10
000521 decc      	RCALL __print_G101
000522 019f      	MOVW R18,R30
000523 81ae      	LDD  R26,Y+6
000524 81bf      	LDD  R27,Y+6+1
000525 e0e0      	LDI  R30,LOW(0)
000526 93ec      	ST   X,R30
000527 01f9      	MOVW R30,R18
                 _0x212000C:
000528 d809      	RCALL __LOADLOCR4
000529 962a      	ADIW R28,10
00052a 90ff      	POP  R15
00052b 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
00052c 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
00052d d56a      	RCALL SUBOPT_0x8
00052e 98a9      	CBI  0x15,1
00052f e018      	LDI  R17,LOW(8)
                 _0x2040004:
000530 dffb      	RCALL _pcd8544_delay_G102
000531 81e9      	LDD  R30,Y+1
000532 78e0      	ANDI R30,LOW(0x80)
000533 f011      	BREQ _0x2040006
000534 9aab      	SBI  0x15,3
000535 c001      	RJMP _0x2040007
                 _0x2040006:
000536 98ab      	CBI  0x15,3
                 _0x2040007:
000537 81e9      	LDD  R30,Y+1
000538 0fee      	LSL  R30
000539 83e9      	STD  Y+1,R30
00053a dff1      	RCALL _pcd8544_delay_G102
00053b 9aac      	SBI  0x15,4
00053c dfef      	RCALL _pcd8544_delay_G102
00053d 98ac      	CBI  0x15,4
00053e 5011      	SUBI R17,LOW(1)
00053f f781      	BRNE _0x2040004
000540 9aa9      	SBI  0x15,1
000541 8118      	LDD  R17,Y+0
000542 c4da      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000543 93aa      	ST   -Y,R26
000544 98aa      	CBI  0x15,2
000545 81a8      	LD   R26,Y
000546 dfe6      	RCALL _pcd8544_wrbus_G102
000547 c0a1      	RJMP _0x212000B
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
000548 93aa      	ST   -Y,R26
000549 9aaa      	SBI  0x15,2
00054a 81a8      	LD   R26,Y
00054b dfe1      	RCALL _pcd8544_wrbus_G102
00054c c09c      	RJMP _0x212000B
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
00054d d54a      	RCALL SUBOPT_0x8
00054e 81e9      	LDD  R30,Y+1
00054f d5c0      	RCALL SUBOPT_0x26
000550 2f1e      	MOV  R17,R30
000551 e5e4      	LDI  R30,LOW(84)
000552 9fe1      	MUL  R30,R17
000553 01f0      	MOVW R30,R0
000554 01df      	MOVW R26,R30
000555 81ea      	LDD  R30,Y+2
000556 d5bd      	RCALL SUBOPT_0x27
000557 93e0 01f2 	STS  _gfx_addr_G102,R30
000559 93f0 01f3 	STS  _gfx_addr_G102+1,R31
00055b 2fe1      	MOV  R30,R17
00055c 8118      	LDD  R17,Y+0
00055d c500      	RJMP _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00055e 93aa      	ST   -Y,R26
00055f 81e9      	LDD  R30,Y+1
000560 68e0      	ORI  R30,0x80
000561 d5b4      	RCALL SUBOPT_0x28
000562 81e9      	LDD  R30,Y+1
000563 93ea      	ST   -Y,R30
000564 81a9      	LDD  R26,Y+1
000565 dfe7      	RCALL _pcd8544_setaddr_G102
000566 64e0      	ORI  R30,0x40
000567 d5ae      	RCALL SUBOPT_0x28
000568 c4b4      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000569 93aa      	ST   -Y,R26
00056a 81e9      	LDD  R30,Y+1
00056b 93ea      	ST   -Y,R30
00056c 81a9      	LDD  R26,Y+1
00056d dff0      	RCALL _pcd8544_gotoxy
00056e 91e0 01f2 	LDS  R30,_gfx_addr_G102
000570 91f0 01f3 	LDS  R31,_gfx_addr_G102+1
000572 d5a5      	RCALL SUBOPT_0x29
000573 81e0      	LD   R30,Z
000574 c4a8      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000575 93aa      	ST   -Y,R26
000576 d5a4      	RCALL SUBOPT_0x2A
000577 d5a6      	RCALL SUBOPT_0x2B
000578 81a8      	LD   R26,Y
000579 83a0      	STD  Z+0,R26
00057a dfcd      	RCALL _pcd8544_wrdata_G102
00057b c06d      	RJMP _0x212000B
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
00057c d500      	RCALL SUBOPT_0x0
00057d d7ad      	RCALL __SAVELOCR4
00057e 9aa1      	SBI  0x14,1
00057f 9aa9      	SBI  0x15,1
000580 9aa4      	SBI  0x14,4
000581 98ac      	CBI  0x15,4
000582 9aa3      	SBI  0x14,3
000583 9aa2      	SBI  0x14,2
000584 9aa0      	SBI  0x14,0
000585 98a8      	CBI  0x15,0
000586 e0aa      	LDI  R26,LOW(10)
000587 d4fc      	RCALL SUBOPT_0x2
000588 9aa8      	SBI  0x15,0
000589 d596      	RCALL SUBOPT_0x2C
00058a 9730      	SBIW R30,0
00058b f0d9      	BREQ _0x2040008
00058c d593      	RCALL SUBOPT_0x2C
00058d 81e6      	LDD  R30,Z+6
00058e 70e3      	ANDI R30,LOW(0x3)
00058f 2f1e      	MOV  R17,R30
000590 d58f      	RCALL SUBOPT_0x2C
000591 81e6      	LDD  R30,Z+6
000592 95e6      	LSR  R30
000593 95e6      	LSR  R30
000594 70e7      	ANDI R30,LOW(0x7)
000595 2f0e      	MOV  R16,R30
000596 d589      	RCALL SUBOPT_0x2C
000597 81e7      	LDD  R30,Z+7
000598 77ef      	ANDI R30,0x7F
000599 2f3e      	MOV  R19,R30
00059a 81ac      	LDD  R26,Y+4
00059b 81bd      	LDD  R27,Y+4+1
00059c d756      	RCALL __GETW1P
00059d d585      	RCALL SUBOPT_0x2D
00059e 81ac      	LDD  R26,Y+4
00059f 81bd      	LDD  R27,Y+4+1
0005a0 9612      	ADIW R26,2
0005a1 d751      	RCALL __GETW1P
0005a2 d585      	RCALL SUBOPT_0x2E
0005a3 81ac      	LDD  R26,Y+4
0005a4 81bd      	LDD  R27,Y+4+1
0005a5 d535      	RCALL SUBOPT_0x18
0005a6 c008      	RJMP _0x20400A0
                 _0x2040008:
0005a7 e010      	LDI  R17,LOW(0)
0005a8 e003      	LDI  R16,LOW(3)
0005a9 e332      	LDI  R19,LOW(50)
0005aa d533      	RCALL SUBOPT_0x19
0005ab d577      	RCALL SUBOPT_0x2D
0005ac d531      	RCALL SUBOPT_0x19
0005ad d57a      	RCALL SUBOPT_0x2E
0005ae d52f      	RCALL SUBOPT_0x19
                 _0x20400A0:
                +
0005af 93e0 019e+STS _glcd_state + ( 27 ) , R30
0005b1 93f0 019f+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0005b3 e2a1      	LDI  R26,LOW(33)
0005b4 df8e      	RCALL _pcd8544_wrcmd
0005b5 2fe1      	MOV  R30,R17
0005b6 60e4      	ORI  R30,4
0005b7 d55e      	RCALL SUBOPT_0x28
0005b8 2fe0      	MOV  R30,R16
0005b9 61e0      	ORI  R30,0x10
0005ba d55b      	RCALL SUBOPT_0x28
0005bb 2fe3      	MOV  R30,R19
0005bc 68e0      	ORI  R30,0x80
0005bd d558      	RCALL SUBOPT_0x28
0005be e2a0      	LDI  R26,LOW(32)
0005bf df83      	RCALL _pcd8544_wrcmd
0005c0 e0a1      	LDI  R26,LOW(1)
0005c1 d01f      	RCALL _glcd_display
0005c2 e0e1      	LDI  R30,LOW(1)
0005c3 93e0 0183 	STS  _glcd_state,R30
0005c5 e0e0      	LDI  R30,LOW(0)
                +
0005c6 93e0 0184+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0005c8 e0e1      	LDI  R30,LOW(1)
                +
0005c9 93e0 0189+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0005cb 93e0 018a+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0005cd 93e0 018b+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0005cf efef      	LDI  R30,LOW(255)
                +
0005d0 93e0 018c+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0005d2 e0e1      	LDI  R30,LOW(1)
                +
0005d3 93e0 0193+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0005d5 e9e4     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0005d6 e0f1     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0005d7 d4d9      	RCALL SUBOPT_0x10
0005d8 efef      	LDI  R30,LOW(255)
0005d9 93ea      	ST   -Y,R30
0005da e0a8      	LDI  R26,LOW(8)
0005db e0b0      	LDI  R27,0
0005dc d412      	RCALL _memset
0005dd d00d      	RCALL _glcd_clear
0005de e0e1      	LDI  R30,LOW(1)
0005df d752      	RCALL __LOADLOCR4
0005e0 c078      	RJMP _0x212000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0005e1 93aa      	ST   -Y,R26
0005e2 81e8      	LD   R30,Y
0005e3 30e0      	CPI  R30,0
0005e4 f011      	BREQ _0x204000A
0005e5 e0ec      	LDI  R30,LOW(12)
0005e6 c001      	RJMP _0x204000B
                 _0x204000A:
0005e7 e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
0005e8 d52d      	RCALL SUBOPT_0x28
                 _0x212000B:
0005e9 9621      	ADIW R28,1
0005ea 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0005eb d73f      	RCALL __SAVELOCR4
0005ec e030      	LDI  R19,0
                +
0005ed 91e0 0184+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0005ef 30e0      	CPI  R30,0
0005f0 f009      	BREQ _0x204000D
0005f1 ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
0005f2 d49e      	RCALL SUBOPT_0x6
0005f3 e0a0      	LDI  R26,LOW(0)
0005f4 df69      	RCALL _pcd8544_gotoxy
                +
0005f5 ef08     +LDI R16 , LOW ( 504 )
0005f6 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
0005f7 01f8      	MOVW R30,R16
                +
0005f8 5001     +SUBI R16 , LOW ( 1 )
0005f9 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0005fa 9730      	SBIW R30,0
0005fb f019      	BREQ _0x2040010
0005fc 2fa3      	MOV  R26,R19
0005fd df77      	RCALL _pcd8544_wrbyte
0005fe cff8      	RJMP _0x204000E
                 _0x2040010:
0005ff d491      	RCALL SUBOPT_0x6
000600 e0a0      	LDI  R26,LOW(0)
000601 d2f5      	RCALL _glcd_moveto
000602 d72f      	RCALL __LOADLOCR4
000603 c477      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000604 93aa      	ST   -Y,R26
000605 d727      	RCALL __SAVELOCR2
000606 81ac      	LDD  R26,Y+4
000607 35a4      	CPI  R26,LOW(0x54)
000608 f418      	BRSH _0x2040012
000609 81ab      	LDD  R26,Y+3
00060a 33a0      	CPI  R26,LOW(0x30)
00060b f010      	BRLO _0x2040011
                 _0x2040012:
00060c d727      	RCALL __LOADLOCR2
00060d c3ee      	RJMP _0x2120004
                 _0x2040011:
00060e 81ec      	LDD  R30,Y+4
00060f 93ea      	ST   -Y,R30
000610 81ac      	LDD  R26,Y+4
000611 df57      	RCALL _pcd8544_rdbyte
000612 2f1e      	MOV  R17,R30
000613 81eb      	LDD  R30,Y+3
000614 70e7      	ANDI R30,LOW(0x7)
000615 e0a1      	LDI  R26,LOW(1)
000616 d699      	RCALL __LSLB12
000617 2f0e      	MOV  R16,R30
000618 81ea      	LDD  R30,Y+2
000619 30e0      	CPI  R30,0
00061a f011      	BREQ _0x2040014
00061b 2b10      	OR   R17,R16
00061c c003      	RJMP _0x2040015
                 _0x2040014:
00061d 2fe0      	MOV  R30,R16
00061e 95e0      	COM  R30
00061f 231e      	AND  R17,R30
                 _0x2040015:
000620 2fa1      	MOV  R26,R17
000621 df53      	RCALL _pcd8544_wrbyte
000622 d711      	RCALL __LOADLOCR2
000623 c3d8      	RJMP _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
000624 d473      	RCALL SUBOPT_0x8
000625 81ed      	LDD  R30,Y+5
000626 93ea      	ST   -Y,R30
000627 81ad      	LDD  R26,Y+5
000628 df40      	RCALL _pcd8544_rdbyte
000629 2f1e      	MOV  R17,R30
00062a 81e9      	LDD  R30,Y+1
00062b 30e7      	CPI  R30,LOW(0x7)
00062c f011      	BREQ _0x2040020
00062d 30e8      	CPI  R30,LOW(0x8)
00062e f431      	BRNE _0x2040021
                 _0x2040020:
00062f 81eb      	LDD  R30,Y+3
000630 93ea      	ST   -Y,R30
000631 81aa      	LDD  R26,Y+2
000632 d3ec      	RCALL _glcd_mappixcolor1bit
000633 83eb      	STD  Y+3,R30
000634 c008      	RJMP _0x2040022
                 _0x2040021:
000635 30e3      	CPI  R30,LOW(0x3)
000636 f421      	BRNE _0x2040024
000637 81eb      	LDD  R30,Y+3
000638 95e0      	COM  R30
000639 83eb      	STD  Y+3,R30
00063a c002      	RJMP _0x2040025
                 _0x2040024:
00063b 30e0      	CPI  R30,0
00063c f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
00063d 81ea      	LDD  R30,Y+2
00063e 95e0      	COM  R30
00063f 231e      	AND  R17,R30
000640 c002      	RJMP _0x2040027
                 _0x2040026:
000641 30e2      	CPI  R30,LOW(0x2)
000642 f429      	BRNE _0x2040028
                 _0x2040027:
000643 81ea      	LDD  R30,Y+2
000644 81ab      	LDD  R26,Y+3
000645 23ea      	AND  R30,R26
000646 2b1e      	OR   R17,R30
000647 c00e      	RJMP _0x204001E
                 _0x2040028:
000648 30e1      	CPI  R30,LOW(0x1)
000649 f429      	BRNE _0x2040029
00064a 81ea      	LDD  R30,Y+2
00064b 81ab      	LDD  R26,Y+3
00064c 23ea      	AND  R30,R26
00064d 271e      	EOR  R17,R30
00064e c007      	RJMP _0x204001E
                 _0x2040029:
00064f 30e4      	CPI  R30,LOW(0x4)
000650 f429      	BRNE _0x204001E
000651 81ea      	LDD  R30,Y+2
000652 95e0      	COM  R30
000653 81ab      	LDD  R26,Y+3
000654 2bea      	OR   R30,R26
000655 231e      	AND  R17,R30
                 _0x204001E:
000656 2fa1      	MOV  R26,R17
000657 df1d      	RCALL _pcd8544_wrbyte
000658 8118      	LDD  R17,Y+0
                 _0x212000A:
000659 9626      	ADIW R28,6
00065a 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
00065b 93aa      	ST   -Y,R26
00065c 9723      	SBIW R28,3
00065d d6cb      	RCALL __SAVELOCR6
00065e 89a8      	LDD  R26,Y+16
00065f 35a4      	CPI  R26,LOW(0x54)
000660 f448      	BRSH _0x204002C
000661 85af      	LDD  R26,Y+15
000662 33a0      	CPI  R26,LOW(0x30)
000663 f430      	BRSH _0x204002C
000664 85ae      	LDD  R26,Y+14
000665 30a0      	CPI  R26,LOW(0x0)
000666 f019      	BREQ _0x204002C
000667 85ad      	LDD  R26,Y+13
000668 30a0      	CPI  R26,LOW(0x0)
000669 f409      	BRNE _0x204002B
                 _0x204002C:
00066a c184      	RJMP _0x2120009
                 _0x204002B:
00066b 85ee      	LDD  R30,Y+14
00066c 87e8      	STD  Y+8,R30
00066d 89a8      	LDD  R26,Y+16
00066e 27bb      	CLR  R27
00066f 85ee      	LDD  R30,Y+14
000670 d4bc      	RCALL SUBOPT_0x2F
000671 35a5      	CPI  R26,LOW(0x55)
000672 e0e0      	LDI  R30,HIGH(0x55)
000673 07be      	CPC  R27,R30
000674 f020      	BRLO _0x204002E
000675 89a8      	LDD  R26,Y+16
000676 e5e4      	LDI  R30,LOW(84)
000677 1bea      	SUB  R30,R26
000678 87ee      	STD  Y+14,R30
                 _0x204002E:
000679 852d      	LDD  R18,Y+13
00067a 85af      	LDD  R26,Y+15
00067b 27bb      	CLR  R27
00067c 85ed      	LDD  R30,Y+13
00067d d4af      	RCALL SUBOPT_0x2F
00067e 97d1      	SBIW R26,49
00067f f020      	BRLO _0x204002F
000680 85af      	LDD  R26,Y+15
000681 e3e0      	LDI  R30,LOW(48)
000682 1bea      	SUB  R30,R26
000683 87ed      	STD  Y+13,R30
                 _0x204002F:
000684 85a9      	LDD  R26,Y+9
000685 30a6      	CPI  R26,LOW(0x6)
000686 f009      	BREQ PC+2
000687 c051      	RJMP _0x2040030
000688 85ec      	LDD  R30,Y+12
000689 30e1      	CPI  R30,LOW(0x1)
00068a f409      	BRNE _0x2040034
00068b c163      	RJMP _0x2120009
                 _0x2040034:
00068c 30e3      	CPI  R30,LOW(0x3)
00068d f439      	BRNE _0x2040037
                +
00068e 91e0 019e+LDS R30 , _glcd_state + ( 27 )
000690 91f0 019f+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000692 9730      	SBIW R30,0
000693 f409      	BRNE _0x2040036
000694 c15a      	RJMP _0x2120009
                 _0x2040036:
                 _0x2040037:
000695 8508      	LDD  R16,Y+8
000696 85ed      	LDD  R30,Y+13
000697 d478      	RCALL SUBOPT_0x26
000698 2f3e      	MOV  R19,R30
000699 2fe2      	MOV  R30,R18
00069a 70e7      	ANDI R30,LOW(0x7)
00069b f419      	BRNE _0x2040039
00069c 85ad      	LDD  R26,Y+13
00069d 172a      	CP   R18,R26
00069e f0c9      	BREQ _0x2040038
                 _0x2040039:
00069f 2fa0      	MOV  R26,R16
0006a0 27bb      	CLR  R27
0006a1 2fe3      	MOV  R30,R19
0006a2 d48e      	RCALL SUBOPT_0x30
0006a3 d464      	RCALL SUBOPT_0x24
0006a4 d3e1      	RCALL SUBOPT_0x3
0006a5 d459      	RCALL SUBOPT_0x21
0006a6 9526      	LSR  R18
0006a7 9526      	LSR  R18
0006a8 9526      	LSR  R18
0006a9 2f53      	MOV  R21,R19
                 _0x204003B:
0006aa 935f      	PUSH R21
0006ab 5f5f      	SUBI R21,-1
0006ac 2fe2      	MOV  R30,R18
0006ad 91af      	POP  R26
0006ae 17ea      	CP   R30,R26
0006af f040      	BRLO _0x204003D
0006b0 2f10      	MOV  R17,R16
                 _0x204003E:
0006b1 2fe1      	MOV  R30,R17
0006b2 5011      	SUBI R17,1
0006b3 30e0      	CPI  R30,0
0006b4 f011      	BREQ _0x2040040
0006b5 d47e      	RCALL SUBOPT_0x31
0006b6 cffa      	RJMP _0x204003E
                 _0x2040040:
0006b7 cff2      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0006b8 85ae      	LDD  R26,Y+14
0006b9 170a      	CP   R16,R26
0006ba f0f1      	BREQ _0x2040041
0006bb 85ee      	LDD  R30,Y+14
0006bc d44b      	RCALL SUBOPT_0x24
0006bd d456      	RCALL SUBOPT_0x27
0006be d440      	RCALL SUBOPT_0x21
0006bf 85ed      	LDD  R30,Y+13
0006c0 70e7      	ANDI R30,LOW(0x7)
0006c1 f009      	BREQ _0x2040042
0006c2 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
0006c3 e020      	LDI  R18,LOW(0)
                 _0x2040043:
0006c4 932f      	PUSH R18
0006c5 5f2f      	SUBI R18,-1
0006c6 2fe3      	MOV  R30,R19
0006c7 91af      	POP  R26
0006c8 17ae      	CP   R26,R30
0006c9 f478      	BRSH _0x2040045
0006ca 851e      	LDD  R17,Y+14
                 _0x2040046:
0006cb 931f      	PUSH R17
0006cc 5f1f      	SUBI R17,-1
0006cd 2fe0      	MOV  R30,R16
0006ce 91af      	POP  R26
0006cf 17ae      	CP   R26,R30
0006d0 f410      	BRSH _0x2040048
0006d1 d462      	RCALL SUBOPT_0x31
0006d2 cff8      	RJMP _0x2040046
                 _0x2040048:
0006d3 85ee      	LDD  R30,Y+14
0006d4 81ae      	LDD  R26,Y+6
0006d5 81bf      	LDD  R27,Y+6+1
0006d6 d43d      	RCALL SUBOPT_0x27
0006d7 d427      	RCALL SUBOPT_0x21
0006d8 cfeb      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
0006d9 85ef      	LDD  R30,Y+15
0006da 70e7      	ANDI R30,LOW(0x7)
0006db 2f3e      	MOV  R19,R30
                 _0x2040049:
0006dc 85ed      	LDD  R30,Y+13
0006dd 30e0      	CPI  R30,0
0006de f409      	BRNE PC+2
0006df c10f      	RJMP _0x204004B
0006e0 d424      	RCALL SUBOPT_0x23
0006e1 d41d      	RCALL SUBOPT_0x21
0006e2 e010      	LDI  R17,LOW(0)
0006e3 8908      	LDD  R16,Y+16
0006e4 3030      	CPI  R19,0
0006e5 f009      	BREQ PC+2
0006e6 c05a      	RJMP _0x204004C
0006e7 85ad      	LDD  R26,Y+13
0006e8 30a8      	CPI  R26,LOW(0x8)
0006e9 f408      	BRSH PC+2
0006ea c051      	RJMP _0x204004D
0006eb 85e9      	LDD  R30,Y+9
0006ec 30e0      	CPI  R30,0
0006ed f011      	BREQ _0x2040052
0006ee 30e3      	CPI  R30,LOW(0x3)
0006ef f409      	BRNE _0x2040053
                 _0x2040052:
0006f0 c002      	RJMP _0x2040054
                 _0x2040053:
0006f1 30e7      	CPI  R30,LOW(0x7)
0006f2 f409      	BRNE _0x2040055
                 _0x2040054:
0006f3 c002      	RJMP _0x2040056
                 _0x2040055:
0006f4 30e8      	CPI  R30,LOW(0x8)
0006f5 f409      	BRNE _0x2040057
                 _0x2040056:
0006f6 c002      	RJMP _0x2040058
                 _0x2040057:
0006f7 30e9      	CPI  R30,LOW(0x9)
0006f8 f409      	BRNE _0x2040059
                 _0x2040058:
0006f9 c002      	RJMP _0x204005A
                 _0x2040059:
0006fa 30ea      	CPI  R30,LOW(0xA)
0006fb f419      	BRNE _0x204005B
                 _0x204005A:
0006fc d442      	RCALL SUBOPT_0x32
0006fd de60      	RCALL _pcd8544_gotoxy
0006fe c004      	RJMP _0x2040050
                 _0x204005B:
0006ff 30e6      	CPI  R30,LOW(0x6)
000700 f411      	BRNE _0x2040050
000701 d43d      	RCALL SUBOPT_0x32
000702 de4a      	RCALL _pcd8544_setaddr_G102
                 _0x2040050:
                 _0x204005D:
000703 931f      	PUSH R17
000704 d43d      	RCALL SUBOPT_0x33
000705 91af      	POP  R26
000706 17ae      	CP   R26,R30
000707 f568      	BRSH _0x204005F
000708 85a9      	LDD  R26,Y+9
000709 30a6      	CPI  R26,LOW(0x6)
00070a f439      	BRNE _0x2040060
00070b d439      	RCALL SUBOPT_0x34
00070c d3a4      	RCALL SUBOPT_0x10
00070d d40d      	RCALL SUBOPT_0x2A
00070e d40f      	RCALL SUBOPT_0x2B
00070f 81a0      	LD   R26,Z
000710 d34f      	RCALL _glcd_writemem
000711 c022      	RJMP _0x2040061
                 _0x2040060:
000712 85e9      	LDD  R30,Y+9
000713 30e9      	CPI  R30,LOW(0x9)
000714 f411      	BRNE _0x2040065
000715 e050      	LDI  R21,LOW(0)
000716 c00c      	RJMP _0x2040066
                 _0x2040065:
000717 30ea      	CPI  R30,LOW(0xA)
000718 f411      	BRNE _0x2040064
000719 ef5f      	LDI  R21,LOW(255)
00071a c008      	RJMP _0x2040066
                 _0x2040064:
00071b d429      	RCALL SUBOPT_0x34
00071c d431      	RCALL SUBOPT_0x35
00071d 2f5e      	MOV  R21,R30
00071e 85e9      	LDD  R30,Y+9
00071f 30e7      	CPI  R30,LOW(0x7)
000720 f011      	BREQ _0x204006D
000721 30e8      	CPI  R30,LOW(0x8)
000722 f419      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
000723 d42f      	RCALL SUBOPT_0x36
000724 2f5e      	MOV  R21,R30
000725 c006      	RJMP _0x204006F
                 _0x204006E:
000726 30e3      	CPI  R30,LOW(0x3)
000727 f411      	BRNE _0x2040071
000728 9550      	COM  R21
000729 c002      	RJMP _0x2040072
                 _0x2040071:
00072a 30e0      	CPI  R30,0
00072b f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
00072c 2fa5      	MOV  R26,R21
00072d de1a      	RCALL _pcd8544_wrdata_G102
00072e c005      	RJMP _0x204006B
                 _0x2040074:
00072f d426      	RCALL SUBOPT_0x37
000730 efef      	LDI  R30,LOW(255)
000731 93ea      	ST   -Y,R30
000732 85ad      	LDD  R26,Y+13
000733 def0      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
000734 cfce      	RJMP _0x204005D
                 _0x204005F:
000735 85ef      	LDD  R30,Y+15
000736 5fe8      	SUBI R30,-LOW(8)
000737 87ef      	STD  Y+15,R30
000738 85ed      	LDD  R30,Y+13
000739 50e8      	SUBI R30,LOW(8)
00073a 87ed      	STD  Y+13,R30
00073b c0ae      	RJMP _0x2040075
                 _0x204004D:
00073c 855d      	LDD  R21,Y+13
00073d e020      	LDI  R18,LOW(0)
00073e e0e0      	LDI  R30,LOW(0)
00073f 87ed      	STD  Y+13,R30
000740 c067      	RJMP _0x2040076
                 _0x204004C:
000741 2fe3      	MOV  R30,R19
000742 85ad      	LDD  R26,Y+13
000743 0fae      	ADD  R26,R30
000744 30a9      	CPI  R26,LOW(0x9)
000745 f420      	BRSH _0x2040077
000746 852d      	LDD  R18,Y+13
000747 e0e0      	LDI  R30,LOW(0)
000748 87ed      	STD  Y+13,R30
000749 c003      	RJMP _0x2040078
                 _0x2040077:
00074a e0e8      	LDI  R30,LOW(8)
00074b 1be3      	SUB  R30,R19
00074c 2f2e      	MOV  R18,R30
                 _0x2040078:
00074d 933a      	ST   -Y,R19
00074e 2fa2      	MOV  R26,R18
00074f d2c5      	RCALL _glcd_getmask
000750 2f4e      	MOV  R20,R30
000751 85e9      	LDD  R30,Y+9
000752 30e6      	CPI  R30,LOW(0x6)
000753 f4c1      	BRNE _0x204007C
000754 d3ea      	RCALL SUBOPT_0x32
000755 ddf7      	RCALL _pcd8544_setaddr_G102
                 _0x204007D:
000756 931f      	PUSH R17
000757 d3ea      	RCALL SUBOPT_0x33
000758 91af      	POP  R26
000759 17ae      	CP   R26,R30
00075a f480      	BRSH _0x204007F
00075b d3bf      	RCALL SUBOPT_0x2A
00075c d3c1      	RCALL SUBOPT_0x2B
00075d 81e0      	LD   R30,Z
00075e 23e4      	AND  R30,R20
00075f 2fae      	MOV  R26,R30
000760 2fe3      	MOV  R30,R19
000761 d556      	RCALL __LSRB12
000762 d3f9      	RCALL SUBOPT_0x38
000763 2fe3      	MOV  R30,R19
000764 2fa4      	MOV  R26,R20
000765 d552      	RCALL __LSRB12
000766 d3ff      	RCALL SUBOPT_0x39
000767 d349      	RCALL SUBOPT_0x10
000768 2fa5      	MOV  R26,R21
000769 d2f6      	RCALL _glcd_writemem
00076a cfeb      	RJMP _0x204007D
                 _0x204007F:
00076b c022      	RJMP _0x204007B
                 _0x204007C:
00076c 30e9      	CPI  R30,LOW(0x9)
00076d f411      	BRNE _0x2040080
00076e e050      	LDI  R21,LOW(0)
00076f c003      	RJMP _0x2040081
                 _0x2040080:
000770 30ea      	CPI  R30,LOW(0xA)
000771 f489      	BRNE _0x2040087
000772 ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
000773 d3df      	RCALL SUBOPT_0x36
000774 2fae      	MOV  R26,R30
000775 2fe3      	MOV  R30,R19
000776 d539      	RCALL __LSLB12
000777 2f5e      	MOV  R21,R30
                 _0x2040084:
000778 931f      	PUSH R17
000779 d3c8      	RCALL SUBOPT_0x33
00077a 91af      	POP  R26
00077b 17ae      	CP   R26,R30
00077c f428      	BRSH _0x2040086
00077d d3d8      	RCALL SUBOPT_0x37
00077e 934a      	ST   -Y,R20
00077f e0a0      	LDI  R26,LOW(0)
000780 dea3      	RCALL _pcd8544_wrmasked_G102
000781 cff6      	RJMP _0x2040084
                 _0x2040086:
000782 c00b      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
000783 931f      	PUSH R17
000784 d3bd      	RCALL SUBOPT_0x33
000785 91af      	POP  R26
000786 17ae      	CP   R26,R30
000787 f430      	BRSH _0x204008A
000788 d3e1      	RCALL SUBOPT_0x3A
000789 2fae      	MOV  R26,R30
00078a 2fe3      	MOV  R30,R19
00078b d524      	RCALL __LSLB12
00078c d3ea      	RCALL SUBOPT_0x3B
00078d cff5      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
00078e 85ed      	LDD  R30,Y+13
00078f 30e0      	CPI  R30,0
000790 f409      	BRNE _0x204008B
000791 c05d      	RJMP _0x204004B
                 _0x204008B:
000792 85ad      	LDD  R26,Y+13
000793 30a8      	CPI  R26,LOW(0x8)
000794 f428      	BRSH _0x204008C
000795 85ed      	LDD  R30,Y+13
000796 1be2      	SUB  R30,R18
000797 2f5e      	MOV  R21,R30
000798 e0e0      	LDI  R30,LOW(0)
000799 c003      	RJMP _0x20400A1
                 _0x204008C:
00079a 2f53      	MOV  R21,R19
00079b 85ed      	LDD  R30,Y+13
00079c 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
00079d 87ed      	STD  Y+13,R30
00079e e010      	LDI  R17,LOW(0)
00079f 85ef      	LDD  R30,Y+15
0007a0 5fe8      	SUBI R30,-LOW(8)
0007a1 87ef      	STD  Y+15,R30
0007a2 e0e8      	LDI  R30,LOW(8)
0007a3 1be3      	SUB  R30,R19
0007a4 2f2e      	MOV  R18,R30
0007a5 8908      	LDD  R16,Y+16
0007a6 d35e      	RCALL SUBOPT_0x23
0007a7 d357      	RCALL SUBOPT_0x21
                 _0x2040076:
0007a8 2fe5      	MOV  R30,R21
0007a9 e0f0      	LDI  R31,0
0007aa 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
0007ab 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0007ac 9144      	LPM  R20,Z
0007ad 85e9      	LDD  R30,Y+9
0007ae 30e6      	CPI  R30,LOW(0x6)
0007af f4c1      	BRNE _0x2040091
0007b0 d38e      	RCALL SUBOPT_0x32
0007b1 dd9b      	RCALL _pcd8544_setaddr_G102
                 _0x2040092:
0007b2 931f      	PUSH R17
0007b3 d38e      	RCALL SUBOPT_0x33
0007b4 91af      	POP  R26
0007b5 17ae      	CP   R26,R30
0007b6 f480      	BRSH _0x2040094
0007b7 d363      	RCALL SUBOPT_0x2A
0007b8 d365      	RCALL SUBOPT_0x2B
0007b9 81e0      	LD   R30,Z
0007ba 23e4      	AND  R30,R20
0007bb 2fae      	MOV  R26,R30
0007bc 2fe2      	MOV  R30,R18
0007bd d4f2      	RCALL __LSLB12
0007be d39d      	RCALL SUBOPT_0x38
0007bf 2fe2      	MOV  R30,R18
0007c0 2fa4      	MOV  R26,R20
0007c1 d4ee      	RCALL __LSLB12
0007c2 d3a3      	RCALL SUBOPT_0x39
0007c3 d2ed      	RCALL SUBOPT_0x10
0007c4 2fa5      	MOV  R26,R21
0007c5 d29a      	RCALL _glcd_writemem
0007c6 cfeb      	RJMP _0x2040092
                 _0x2040094:
0007c7 c022      	RJMP _0x2040090
                 _0x2040091:
0007c8 30e9      	CPI  R30,LOW(0x9)
0007c9 f411      	BRNE _0x2040095
0007ca e050      	LDI  R21,LOW(0)
0007cb c003      	RJMP _0x2040096
                 _0x2040095:
0007cc 30ea      	CPI  R30,LOW(0xA)
0007cd f489      	BRNE _0x204009C
0007ce ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
0007cf d383      	RCALL SUBOPT_0x36
0007d0 2fae      	MOV  R26,R30
0007d1 2fe2      	MOV  R30,R18
0007d2 d4e5      	RCALL __LSRB12
0007d3 2f5e      	MOV  R21,R30
                 _0x2040099:
0007d4 931f      	PUSH R17
0007d5 d36c      	RCALL SUBOPT_0x33
0007d6 91af      	POP  R26
0007d7 17ae      	CP   R26,R30
0007d8 f428      	BRSH _0x204009B
0007d9 d37c      	RCALL SUBOPT_0x37
0007da 934a      	ST   -Y,R20
0007db e0a0      	LDI  R26,LOW(0)
0007dc de47      	RCALL _pcd8544_wrmasked_G102
0007dd cff6      	RJMP _0x2040099
                 _0x204009B:
0007de c00b      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
0007df 931f      	PUSH R17
0007e0 d361      	RCALL SUBOPT_0x33
0007e1 91af      	POP  R26
0007e2 17ae      	CP   R26,R30
0007e3 f430      	BRSH _0x204009F
0007e4 d385      	RCALL SUBOPT_0x3A
0007e5 2fae      	MOV  R26,R30
0007e6 2fe2      	MOV  R30,R18
0007e7 d4d0      	RCALL __LSRB12
0007e8 d38e      	RCALL SUBOPT_0x3B
0007e9 cff5      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
0007ea 85e8      	LDD  R30,Y+8
0007eb d31c      	RCALL SUBOPT_0x24
0007ec d327      	RCALL SUBOPT_0x27
0007ed d314      	RCALL SUBOPT_0x22
0007ee ceed      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120009:
0007ef d540      	RCALL __LOADLOCR6
0007f0 9661      	ADIW R28,17
0007f1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
0007f2 d388      	RCALL SUBOPT_0x3C
0007f3 f014      	BRLT _0x2060003
0007f4 d2e9      	RCALL SUBOPT_0x19
0007f5 c227      	RJMP _0x2120003
                 _0x2060003:
0007f6 d389      	RCALL SUBOPT_0x3D
0007f7 35a4      	CPI  R26,LOW(0x54)
0007f8 e0e0      	LDI  R30,HIGH(0x54)
0007f9 07be      	CPC  R27,R30
0007fa f01c      	BRLT _0x2060004
0007fb e5e3      	LDI  R30,LOW(83)
0007fc e0f0      	LDI  R31,HIGH(83)
0007fd c21f      	RJMP _0x2120003
                 _0x2060004:
0007fe 81e8      	LD   R30,Y
0007ff 81f9      	LDD  R31,Y+1
000800 c21c      	RJMP _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000801 d379      	RCALL SUBOPT_0x3C
000802 f014      	BRLT _0x2060005
000803 d2da      	RCALL SUBOPT_0x19
000804 c218      	RJMP _0x2120003
                 _0x2060005:
000805 d37a      	RCALL SUBOPT_0x3D
000806 97d0      	SBIW R26,48
000807 f01c      	BRLT _0x2060006
000808 e2ef      	LDI  R30,LOW(47)
000809 e0f0      	LDI  R31,HIGH(47)
00080a c212      	RJMP _0x2120003
                 _0x2060006:
00080b 81e8      	LD   R30,Y
00080c 81f9      	LDD  R31,Y+1
00080d c20f      	RJMP _0x2120003
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
00080e d26e      	RCALL SUBOPT_0x0
00080f 9723      	SBIW R28,3
000810 d372      	RCALL SUBOPT_0x3E
000811 018f      	MOVW R16,R30
000812 2e00      	MOV  R0,R16
000813 2a01      	OR   R0,R17
000814 f411      	BRNE _0x206000B
000815 d2c8      	RCALL SUBOPT_0x19
000816 c04e      	RJMP _0x2120007
                 _0x206000B:
000817 d371      	RCALL SUBOPT_0x3F
000818 820f      	STD  Y+7,R0
000819 d36f      	RCALL SUBOPT_0x3F
00081a 820e      	STD  Y+6,R0
00081b d36d      	RCALL SUBOPT_0x3F
00081c 8608      	STD  Y+8,R0
00081d 85eb      	LDD  R30,Y+11
00081e 85a8      	LDD  R26,Y+8
00081f 17ea      	CP   R30,R26
000820 f410      	BRSH _0x206000C
000821 d2bc      	RCALL SUBOPT_0x19
000822 c042      	RJMP _0x2120007
                 _0x206000C:
000823 01f8      	MOVW R30,R16
                +
000824 5f0f     +SUBI R16 , LOW ( - 1 )
000825 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000826 9154      	LPM  R21,Z
000827 85a8      	LDD  R26,Y+8
000828 27bb      	CLR  R27
000829 27ee      	CLR  R30
00082a 0fa5      	ADD  R26,R21
00082b 1fbe      	ADC  R27,R30
00082c 85eb      	LDD  R30,Y+11
00082d e0f0      	LDI  R31,0
00082e 17ea      	CP   R30,R26
00082f 07fb      	CPC  R31,R27
000830 f010      	BRLO _0x206000D
000831 d2ac      	RCALL SUBOPT_0x19
000832 c032      	RJMP _0x2120007
                 _0x206000D:
000833 81ee      	LDD  R30,Y+6
000834 d2db      	RCALL SUBOPT_0x26
000835 2f4e      	MOV  R20,R30
000836 81ee      	LDD  R30,Y+6
000837 70e7      	ANDI R30,LOW(0x7)
000838 f009      	BREQ _0x206000E
000839 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
00083a 81ef      	LDD  R30,Y+7
00083b 30e0      	CPI  R30,0
00083c f071      	BREQ _0x206000F
00083d d24b      	RCALL SUBOPT_0x4
00083e 85a8      	LDD  R26,Y+8
00083f 85eb      	LDD  R30,Y+11
000840 1bea      	SUB  R30,R26
000841 e0f0      	LDI  R31,0
000842 01df      	MOVW R26,R30
000843 81ef      	LDD  R30,Y+7
000844 d2ec      	RCALL SUBOPT_0x30
000845 01df      	MOVW R26,R30
000846 2fe4      	MOV  R30,R20
000847 d2e9      	RCALL SUBOPT_0x30
000848 0fe0      	ADD  R30,R16
000849 1ff1      	ADC  R31,R17
00084a c01a      	RJMP _0x2120007
                 _0x206000F:
00084b 0198      	MOVW R18,R16
00084c 2fe5      	MOV  R30,R21
00084d e0f0      	LDI  R31,0
                +
00084e 0f0e     +ADD R16 , R30
00084f 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
000850 85a8      	LDD  R26,Y+8
000851 5faf      	SUBI R26,-LOW(1)
000852 87a8      	STD  Y+8,R26
000853 50a1      	SUBI R26,LOW(1)
000854 85eb      	LDD  R30,Y+11
000855 17ae      	CP   R26,R30
000856 f450      	BRSH _0x2060012
000857 01f9      	MOVW R30,R18
                +
000858 5f2f     +SUBI R18 , LOW ( - 1 )
000859 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00085a 91a4      	LPM  R26,Z
00085b e0b0      	LDI  R27,0
00085c 2fe4      	MOV  R30,R20
00085d d2d3      	RCALL SUBOPT_0x30
                +
00085e 0f0e     +ADD R16 , R30
00085f 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000860 cfef      	RJMP _0x2060010
                 _0x2060012:
000861 01f9      	MOVW R30,R18
000862 91e4      	LPM  R30,Z
000863 d225      	RCALL SUBOPT_0x4
000864 01f8      	MOVW R30,R16
                 _0x2120007:
000865 d4ca      	RCALL __LOADLOCR6
                 _0x2120008:
000866 962c      	ADIW R28,12
000867 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
000868 e0e0      	LDI  R30,LOW(0)
                +
000869 93e0 0185+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
00086b 91a0 0186+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00086d 27bb      	CLR  R27
00086e d31f      	RCALL SUBOPT_0x40
00086f d2bd      	RCALL SUBOPT_0x2F
                +
000870 91e0 018a+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000872 d2ba      	RCALL SUBOPT_0x2F
000873 df8d      	RCALL _glcd_clipy
                +
000874 93e0 0186+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000876 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000877 93aa      	ST   -Y,R26
000878 9721      	SBIW R28,1
000879 d309      	RCALL SUBOPT_0x3E
00087a 9730      	SBIW R30,0
00087b f409      	BRNE PC+2
00087c c04c      	RJMP _0x206001F
00087d 81af      	LDD  R26,Y+7
00087e 30aa      	CPI  R26,LOW(0xA)
00087f f409      	BRNE _0x2060020
000880 c046      	RJMP _0x2060021
                 _0x2060020:
000881 81ef      	LDD  R30,Y+7
000882 93ea      	ST   -Y,R30
000883 01de      	MOVW R26,R28
000884 9617      	ADIW R26,7
000885 df88      	RCALL _glcd_getcharw_G103
000886 01af      	MOVW R20,R30
000887 9730      	SBIW R30,0
000888 f409      	BRNE _0x2060022
000889 c041      	RJMP _0x2120006
                 _0x2060022:
                +
00088a 91e0 0189+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00088c 81ae      	LDD  R26,Y+6
00088d 0fea      	ADD  R30,R26
00088e 2f3e      	MOV  R19,R30
                +
00088f 91a0 0185+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000891 27bb      	CLR  R27
000892 d281      	RCALL SUBOPT_0x27
000893 018f      	MOVW R16,R30
                +
000894 3505     +CPI R16 , LOW ( 85 )
000895 e0e0     +LDI R30 , HIGH ( 85 )
000896 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000897 f018      	BRLO _0x2060023
000898 2f03      	MOV  R16,R19
000899 2711      	CLR  R17
00089a dfcd      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
00089b 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00089d d2f7      	RCALL SUBOPT_0x41
00089e 85e8      	LDD  R30,Y+8
00089f 93ea      	ST   -Y,R30
0008a0 d2ed      	RCALL SUBOPT_0x40
0008a1 93ea      	ST   -Y,R30
0008a2 e0e1      	LDI  R30,LOW(1)
0008a3 93ea      	ST   -Y,R30
0008a4 935a      	ST   -Y,R21
0008a5 934a      	ST   -Y,R20
0008a6 e0a7      	LDI  R26,LOW(7)
0008a7 ddb3      	RCALL _glcd_block
                +
0008a8 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008aa 81ae      	LDD  R26,Y+6
0008ab 0fea      	ADD  R30,R26
0008ac d2e8      	RCALL SUBOPT_0x41
                +
0008ad 91e0 0189+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0008af 93ea      	ST   -Y,R30
0008b0 d2dd      	RCALL SUBOPT_0x40
0008b1 93ea      	ST   -Y,R30
0008b2 d1de      	RCALL SUBOPT_0x6
0008b3 d2e6      	RCALL SUBOPT_0x42
                +
0008b4 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008b6 93ea      	ST   -Y,R30
                +
0008b7 91a0 0186+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0008b9 d2d4      	RCALL SUBOPT_0x40
0008ba 0fea      	ADD  R30,R26
0008bb 93ea      	ST   -Y,R30
0008bc 933a      	ST   -Y,R19
                +
0008bd 91e0 018a+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0008bf 93ea      	ST   -Y,R30
0008c0 d1d0      	RCALL SUBOPT_0x6
0008c1 d2d8      	RCALL SUBOPT_0x42
0008c2 e5e4      	LDI  R30,LOW(84)
0008c3 e0f0      	LDI  R31,HIGH(84)
0008c4 17e0      	CP   R30,R16
0008c5 07f1      	CPC  R31,R17
0008c6 f411      	BRNE _0x2060024
                 _0x2060021:
0008c7 dfa0      	RCALL _glcd_new_line_G103
0008c8 c002      	RJMP _0x2120006
                 _0x2060024:
                 _0x206001F:
                +
0008c9 9300 0185+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120006:
0008cb d464      	RCALL __LOADLOCR6
0008cc 9628      	ADIW R28,8
0008cd 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
0008ce d1ae      	RCALL SUBOPT_0x0
0008cf 931a      	ST   -Y,R17
                 _0x206002E:
0008d0 81a9      	LDD  R26,Y+1
0008d1 81ba      	LDD  R27,Y+1+1
0008d2 91ed      	LD   R30,X+
0008d3 83a9      	STD  Y+1,R26
0008d4 83ba      	STD  Y+1+1,R27
0008d5 2f1e      	MOV  R17,R30
0008d6 30e0      	CPI  R30,0
0008d7 f019      	BREQ _0x2060030
0008d8 2fa1      	MOV  R26,R17
0008d9 df9d      	RCALL _glcd_putchar
0008da cff5      	RJMP _0x206002E
                 _0x2060030:
0008db 8118      	LDD  R17,Y+0
0008dc c181      	RJMP _0x2120002
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
0008dd 93aa      	ST   -Y,R26
0008de 81ea      	LDD  R30,Y+2
0008df 93ea      	ST   -Y,R30
0008e0 81ea      	LDD  R30,Y+2
0008e1 93ea      	ST   -Y,R30
                +
0008e2 91e0 018c+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
0008e4 81aa      	LDD  R26,Y+2
0008e5 23ea      	AND  R30,R26
0008e6 f019      	BREQ _0x206003E
0008e7 91e0 0183 	LDS  R30,_glcd_state
0008e9 c002      	RJMP _0x206003F
                 _0x206003E:
                +
0008ea 91e0 0184+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
0008ec 2fae      	MOV  R26,R30
0008ed dd16      	RCALL _glcd_putpixel
0008ee 81e8      	LD   R30,Y
0008ef 0fee      	LSL  R30
0008f0 83e8      	ST   Y,R30
0008f1 30e0      	CPI  R30,0
0008f2 f411      	BRNE _0x2060041
0008f3 e0e1      	LDI  R30,LOW(1)
0008f4 83e8      	ST   Y,R30
                 _0x2060041:
0008f5 81e8      	LD   R30,Y
0008f6 c167      	RJMP _0x2120002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
0008f7 93aa      	ST   -Y,R26
0008f8 81a9      	LDD  R26,Y+1
0008f9 27bb      	CLR  R27
0008fa def7      	RCALL _glcd_clipx
                +
0008fb 93e0 0185+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0008fd 81a8      	LD   R26,Y
0008fe 27bb      	CLR  R27
0008ff df01      	RCALL _glcd_clipy
                +
000900 93e0 0186+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000902 c11a      	RJMP _0x2120003
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000903 93aa      	ST   -Y,R26
000904 972b      	SBIW R28,11
000905 d423      	RCALL __SAVELOCR6
000906 89ac      	LDD  R26,Y+20
000907 27bb      	CLR  R27
000908 dee9      	RCALL _glcd_clipx
000909 8bec      	STD  Y+20,R30
00090a 89aa      	LDD  R26,Y+18
00090b 27bb      	CLR  R27
00090c dee5      	RCALL _glcd_clipx
00090d 8bea      	STD  Y+18,R30
00090e 89ab      	LDD  R26,Y+19
00090f 27bb      	CLR  R27
000910 def0      	RCALL _glcd_clipy
000911 8beb      	STD  Y+19,R30
000912 89a9      	LDD  R26,Y+17
000913 27bb      	CLR  R27
000914 deec      	RCALL _glcd_clipy
000915 8be9      	STD  Y+17,R30
000916 89ea      	LDD  R30,Y+18
                +
000917 93e0 0185+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000919 89e9      	LDD  R30,Y+17
                +
00091a 93e0 0186+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00091c e0e1      	LDI  R30,LOW(1)
00091d 87e8      	STD  Y+8,R30
00091e 89e9      	LDD  R30,Y+17
00091f 89ab      	LDD  R26,Y+19
000920 17ea      	CP   R30,R26
000921 f561      	BRNE _0x2060042
000922 891c      	LDD  R17,Y+20
000923 89aa      	LDD  R26,Y+18
000924 171a      	CP   R17,R26
000925 f431      	BRNE _0x2060043
000926 931a      	ST   -Y,R17
000927 89ec      	LDD  R30,Y+20
000928 93ea      	ST   -Y,R30
000929 e0a1      	LDI  R26,LOW(1)
00092a dfb2      	RCALL _glcd_putpixelm_G103
00092b c0c0      	RJMP _0x2120005
                 _0x2060043:
00092c 89aa      	LDD  R26,Y+18
00092d 171a      	CP   R17,R26
00092e f430      	BRSH _0x2060044
00092f 89ea      	LDD  R30,Y+18
000930 1be1      	SUB  R30,R17
000931 2f0e      	MOV  R16,R30
                +
000932 e041     +LDI R20 , LOW ( 1 )
000933 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000934 c006      	RJMP _0x2060045
                 _0x2060044:
000935 89aa      	LDD  R26,Y+18
000936 2fe1      	MOV  R30,R17
000937 1bea      	SUB  R30,R26
000938 2f0e      	MOV  R16,R30
                +
000939 ef4f     +LDI R20 , LOW ( - 1 )
00093a ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
00093b 893b      	LDD  R19,Y+19
00093c e0e0      	LDI  R30,LOW(0)
00093d 83ee      	STD  Y+6,R30
                 _0x2060049:
00093e d25f      	RCALL SUBOPT_0x43
00093f f430      	BRSH _0x206004B
000940 d265      	RCALL SUBOPT_0x44
000941 9533      	INC  R19
000942 85aa      	LDD  R26,Y+10
000943 df99      	RCALL _glcd_putpixelm_G103
000944 83ef      	STD  Y+7,R30
000945 cff8      	RJMP _0x2060049
                 _0x206004B:
000946 81ef      	LDD  R30,Y+7
000947 87e8      	STD  Y+8,R30
000948 0f14      	ADD  R17,R20
000949 2fe0      	MOV  R30,R16
00094a 5001      	SUBI R16,1
00094b 30e0      	CPI  R30,0
00094c f771      	BRNE _0x2060047
00094d c09e      	RJMP _0x206004C
                 _0x2060042:
00094e 89ea      	LDD  R30,Y+18
00094f 89ac      	LDD  R26,Y+20
000950 17ea      	CP   R30,R26
000951 f539      	BRNE _0x206004D
000952 893b      	LDD  R19,Y+19
000953 89a9      	LDD  R26,Y+17
000954 173a      	CP   R19,R26
000955 f430      	BRSH _0x206004E
000956 89e9      	LDD  R30,Y+17
000957 1be3      	SUB  R30,R19
000958 2f2e      	MOV  R18,R30
000959 e0e1      	LDI  R30,LOW(1)
00095a e0f0      	LDI  R31,HIGH(1)
00095b c006      	RJMP _0x206011B
                 _0x206004E:
00095c 89a9      	LDD  R26,Y+17
00095d 2fe3      	MOV  R30,R19
00095e 1bea      	SUB  R30,R26
00095f 2f2e      	MOV  R18,R30
000960 efef      	LDI  R30,LOW(65535)
000961 efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
000962 87ed      	STD  Y+13,R30
000963 87fe      	STD  Y+13+1,R31
                 _0x2060051:
000964 891c      	LDD  R17,Y+20
000965 e0e0      	LDI  R30,LOW(0)
000966 83ee      	STD  Y+6,R30
                 _0x2060053:
000967 d236      	RCALL SUBOPT_0x43
000968 f438      	BRSH _0x2060055
000969 931a      	ST   -Y,R17
00096a 9513      	INC  R17
00096b 933a      	ST   -Y,R19
00096c 85aa      	LDD  R26,Y+10
00096d df6f      	RCALL _glcd_putpixelm_G103
00096e 83ef      	STD  Y+7,R30
00096f cff7      	RJMP _0x2060053
                 _0x2060055:
000970 81ef      	LDD  R30,Y+7
000971 87e8      	STD  Y+8,R30
000972 85ed      	LDD  R30,Y+13
000973 0f3e      	ADD  R19,R30
000974 2fe2      	MOV  R30,R18
000975 5021      	SUBI R18,1
000976 30e0      	CPI  R30,0
000977 f761      	BRNE _0x2060051
000978 c073      	RJMP _0x2060056
                 _0x206004D:
000979 e0e0      	LDI  R30,LOW(0)
00097a 83ee      	STD  Y+6,R30
                 _0x2060057:
00097b d222      	RCALL SUBOPT_0x43
00097c f008      	BRLO PC+2
00097d c06e      	RJMP _0x2060059
00097e 891c      	LDD  R17,Y+20
00097f 893b      	LDD  R19,Y+19
000980 e0e1      	LDI  R30,LOW(1)
000981 2f2e      	MOV  R18,R30
000982 2f0e      	MOV  R16,R30
000983 89aa      	LDD  R26,Y+18
000984 27bb      	CLR  R27
000985 89ec      	LDD  R30,Y+20
000986 e0f0      	LDI  R31,0
000987 1bae      	SUB  R26,R30
000988 0bbf      	SBC  R27,R31
000989 01ad      	MOVW R20,R26
00098a 2355      	TST  R21
00098b f422      	BRPL _0x206005A
00098c ef0f      	LDI  R16,LOW(255)
00098d 01fa      	MOVW R30,R20
00098e d315      	RCALL __ANEGW1
00098f 01af      	MOVW R20,R30
                 _0x206005A:
000990 01fa      	MOVW R30,R20
000991 0fee      	LSL  R30
000992 1fff      	ROL  R31
000993 87ef      	STD  Y+15,R30
000994 8bf8      	STD  Y+15+1,R31
000995 89a9      	LDD  R26,Y+17
000996 27bb      	CLR  R27
000997 89eb      	LDD  R30,Y+19
000998 e0f0      	LDI  R31,0
000999 1bae      	SUB  R26,R30
00099a 0bbf      	SBC  R27,R31
00099b 87ad      	STD  Y+13,R26
00099c 87be      	STD  Y+13+1,R27
00099d 85ae      	LDD  R26,Y+14
00099e 23aa      	TST  R26
00099f f432      	BRPL _0x206005B
0009a0 ef2f      	LDI  R18,LOW(255)
0009a1 85ed      	LDD  R30,Y+13
0009a2 85fe      	LDD  R31,Y+13+1
0009a3 d300      	RCALL __ANEGW1
0009a4 87ed      	STD  Y+13,R30
0009a5 87fe      	STD  Y+13+1,R31
                 _0x206005B:
0009a6 85ed      	LDD  R30,Y+13
0009a7 85fe      	LDD  R31,Y+13+1
0009a8 0fee      	LSL  R30
0009a9 1fff      	ROL  R31
0009aa 87eb      	STD  Y+11,R30
0009ab 87fc      	STD  Y+11+1,R31
0009ac d1f9      	RCALL SUBOPT_0x44
0009ad e0a1      	LDI  R26,LOW(1)
0009ae df2e      	RCALL _glcd_putpixelm_G103
0009af 87e8      	STD  Y+8,R30
0009b0 e0e0      	LDI  R30,LOW(0)
0009b1 87e9      	STD  Y+9,R30
0009b2 87ea      	STD  Y+9+1,R30
0009b3 85ad      	LDD  R26,Y+13
0009b4 85be      	LDD  R27,Y+13+1
0009b5 174a      	CP   R20,R26
0009b6 075b      	CPC  R21,R27
0009b7 f0b4      	BRLT _0x206005C
                 _0x206005E:
0009b8 0f10      	ADD  R17,R16
0009b9 85eb      	LDD  R30,Y+11
0009ba 85fc      	LDD  R31,Y+11+1
0009bb d1ed      	RCALL SUBOPT_0x45
0009bc d0c9      	RCALL SUBOPT_0x3
0009bd d1ee      	RCALL SUBOPT_0x46
0009be d1ea      	RCALL SUBOPT_0x45
0009bf 174a      	CP   R20,R26
0009c0 075b      	CPC  R21,R27
0009c1 f424      	BRGE _0x2060060
0009c2 0f32      	ADD  R19,R18
0009c3 85af      	LDD  R26,Y+15
0009c4 89b8      	LDD  R27,Y+15+1
0009c5 d1e9      	RCALL SUBOPT_0x47
                 _0x2060060:
0009c6 d1df      	RCALL SUBOPT_0x44
0009c7 85aa      	LDD  R26,Y+10
0009c8 df14      	RCALL _glcd_putpixelm_G103
0009c9 87e8      	STD  Y+8,R30
0009ca 89ea      	LDD  R30,Y+18
0009cb 17e1      	CP   R30,R17
0009cc f759      	BRNE _0x206005E
0009cd c017      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
0009ce 0f32      	ADD  R19,R18
0009cf 85ef      	LDD  R30,Y+15
0009d0 89f8      	LDD  R31,Y+15+1
0009d1 d1d7      	RCALL SUBOPT_0x45
0009d2 d0b3      	RCALL SUBOPT_0x3
0009d3 d1d8      	RCALL SUBOPT_0x46
0009d4 85ed      	LDD  R30,Y+13
0009d5 85fe      	LDD  R31,Y+13+1
0009d6 d1d2      	RCALL SUBOPT_0x45
0009d7 17ea      	CP   R30,R26
0009d8 07fb      	CPC  R31,R27
0009d9 f424      	BRGE _0x2060065
0009da 0f10      	ADD  R17,R16
0009db 85ab      	LDD  R26,Y+11
0009dc 85bc      	LDD  R27,Y+11+1
0009dd d1d1      	RCALL SUBOPT_0x47
                 _0x2060065:
0009de d1c7      	RCALL SUBOPT_0x44
0009df 85aa      	LDD  R26,Y+10
0009e0 defc      	RCALL _glcd_putpixelm_G103
0009e1 87e8      	STD  Y+8,R30
0009e2 89e9      	LDD  R30,Y+17
0009e3 17e3      	CP   R30,R19
0009e4 f749      	BRNE _0x2060063
                 _0x2060061:
0009e5 89eb      	LDD  R30,Y+19
0009e6 5fef      	SUBI R30,-LOW(1)
0009e7 8beb      	STD  Y+19,R30
0009e8 89e9      	LDD  R30,Y+17
0009e9 5fef      	SUBI R30,-LOW(1)
0009ea 8be9      	STD  Y+17,R30
0009eb cf8f      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120005:
0009ec d343      	RCALL __LOADLOCR6
0009ed 9665      	ADIW R28,21
0009ee 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0009ef d08d      	RCALL SUBOPT_0x0
0009f0 81b9          ldd  r27,y+1
0009f1 81a8          ld   r26,y
0009f2 9610          adiw r26,0
0009f3 f031          breq memset1
0009f4 81fc          ldd  r31,y+4
0009f5 81eb          ldd  r30,y+3
0009f6 816a          ldd  r22,y+2
                 memset0:
0009f7 9361          st   z+,r22
0009f8 9711          sbiw r26,1
0009f9 f7e9          brne memset0
                 memset1:
0009fa 81eb          ldd  r30,y+3
0009fb 81fc          ldd  r31,y+4
                 _0x2120004:
0009fc 9625      	ADIW R28,5
0009fd 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0009fe d07e      	RCALL SUBOPT_0x0
0009ff 91a9          ld   r26,y+
000a00 91b9          ld   r27,y+
000a01 27ee          clr  r30
000a02 27ff          clr  r31
                 strlen0:
000a03 916d          ld   r22,x+
000a04 2366          tst  r22
000a05 f011          breq strlen1
000a06 9631          adiw r30,1
000a07 cffb          rjmp strlen0
                 strlen1:
000a08 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000a09 d073      	RCALL SUBOPT_0x0
000a0a 27aa          clr  r26
000a0b 27bb          clr  r27
000a0c 91e9          ld   r30,y+
000a0d 91f9          ld   r31,y+
                 strlenf0:
000a0e 9005      	lpm  r0,z+
000a0f 2000          tst  r0
000a10 f011          breq strlenf1
000a11 9611          adiw r26,1
000a12 cffb          rjmp strlenf0
                 strlenf1:
000a13 01fd          movw r30,r26
000a14 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000a15 93aa      	ST   -Y,R26
000a16 81e8      	LD   R30,Y
000a17 e0f0      	LDI  R31,0
000a18 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
000a19 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000a1a 91a4      	LPM  R26,Z
000a1b 81e9      	LDD  R30,Y+1
000a1c d293      	RCALL __LSLB12
                 _0x2120003:
000a1d 9622      	ADIW R28,2
000a1e 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000a1f d078      	RCALL SUBOPT_0x8
000a20 81e9      	LDD  R30,Y+1
000a21 30e7      	CPI  R30,LOW(0x7)
000a22 f011      	BREQ _0x2100007
000a23 30ea      	CPI  R30,LOW(0xA)
000a24 f419      	BRNE _0x2100008
                 _0x2100007:
000a25 9110 0183 	LDS  R17,_glcd_state
000a27 c009      	RJMP _0x2100009
                 _0x2100008:
000a28 30e9      	CPI  R30,LOW(0x9)
000a29 f419      	BRNE _0x210000B
                +
000a2a 9110 0184+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000a2c c004      	RJMP _0x2100009
                 _0x210000B:
000a2d 30e8      	CPI  R30,LOW(0x8)
000a2e f4a1      	BRNE _0x2100005
                +
000a2f 9110 0193+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000a31 91e0 0184+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000a33 30e0      	CPI  R30,0
000a34 f049      	BREQ _0x210000E
000a35 3010      	CPI  R17,0
000a36 f019      	BREQ _0x210000F
000a37 efef      	LDI  R30,LOW(255)
000a38 8118      	LDD  R17,Y+0
000a39 c024      	RJMP _0x2120002
                 _0x210000F:
000a3a 81ea      	LDD  R30,Y+2
000a3b 95e0      	COM  R30
000a3c 8118      	LDD  R17,Y+0
000a3d c020      	RJMP _0x2120002
                 _0x210000E:
000a3e 3010      	CPI  R17,0
000a3f f419      	BRNE _0x2100011
000a40 e0e0      	LDI  R30,LOW(0)
000a41 8118      	LDD  R17,Y+0
000a42 c01b      	RJMP _0x2120002
                 _0x2100011:
                 _0x2100005:
000a43 81ea      	LDD  R30,Y+2
000a44 8118      	LDD  R17,Y+0
000a45 c018      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000a46 d036      	RCALL SUBOPT_0x0
000a47 81ea      	LDD  R30,Y+2
000a48 30e1      	CPI  R30,LOW(0x1)
000a49 f421      	BRNE _0x2100015
000a4a 81e8      	LD   R30,Y
000a4b 81f9      	LDD  R31,Y+1
000a4c 91e4      	LPM  R30,Z
000a4d c010      	RJMP _0x2120002
                 _0x2100015:
000a4e 30e2      	CPI  R30,LOW(0x2)
000a4f f419      	BRNE _0x2100016
000a50 d12f      	RCALL SUBOPT_0x3D
000a51 d2b6      	RCALL __EEPROMRDB
000a52 c00b      	RJMP _0x2120002
                 _0x2100016:
000a53 30e3      	CPI  R30,LOW(0x3)
000a54 f439      	BRNE _0x2100018
000a55 d12a      	RCALL SUBOPT_0x3D
                +
000a56 91e0 019c+LDS R30 , _glcd_state + ( 25 )
000a58 91f0 019d+LDS R31 , _glcd_state + ( 25 ) + 1
000a5a 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000a5b c002      	RJMP _0x2120002
                 _0x2100018:
000a5c d123      	RCALL SUBOPT_0x3D
000a5d 91ec      	LD   R30,X
                 _0x2120002:
000a5e 9623      	ADIW R28,3
000a5f 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000a60 93aa      	ST   -Y,R26
000a61 81eb      	LDD  R30,Y+3
000a62 30e0      	CPI  R30,0
000a63 f429      	BRNE _0x210001C
000a64 81e8      	LD   R30,Y
000a65 81a9      	LDD  R26,Y+1
000a66 81ba      	LDD  R27,Y+1+1
000a67 93ec      	ST   X,R30
000a68 c012      	RJMP _0x210001B
                 _0x210001C:
000a69 30e2      	CPI  R30,LOW(0x2)
000a6a f429      	BRNE _0x210001D
000a6b 81e8      	LD   R30,Y
000a6c 81a9      	LDD  R26,Y+1
000a6d 81ba      	LDD  R27,Y+1+1
000a6e d2a5      	RCALL __EEPROMWRB
000a6f c00b      	RJMP _0x210001B
                 _0x210001D:
000a70 30e3      	CPI  R30,LOW(0x3)
000a71 f449      	BRNE _0x210001B
000a72 81e9      	LDD  R30,Y+1
000a73 81fa      	LDD  R31,Y+1+1
000a74 d03c      	RCALL SUBOPT_0x10
000a75 81aa      	LDD  R26,Y+2
                +
000a76 91e0 019e+LDS R30 , _glcd_state + ( 27 )
000a78 91f0 019f+LDS R31 , _glcd_state + ( 27 ) + 1
000a7a 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
                 _0x2120001:
000a7b 9624      	ADIW R28,4
000a7c 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
000183           	.BYTE 0x1D
                 _buff:
0001a0           	.BYTE 0x14
                 _station_receive:
0001b4           	.BYTE 0xC
                 _tay_cam_receive:
0001c0           	.BYTE 0x8
                 _data_receive:
0001c8           	.BYTE 0x12
                 _data_send:
0001da           	.BYTE 0xC
                 _change:
0001e6           	.BYTE 0x2
                 _dem:
0001e8           	.BYTE 0x2
                 _distance:
0001ea           	.BYTE 0x4
                 __seed_G100:
0001ee           	.BYTE 0x4
                 _gfx_addr_G102:
0001f2           	.BYTE 0x2
                 _gfx_buffer_G102:
0001f4           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000a7d 93ba      	ST   -Y,R27
000a7e 93aa      	ST   -Y,R26
000a7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
                +
000a80 ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
000a81 958a     +DEC R24
000a82 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
000a83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000a84 e0b0      	LDI  R27,0
000a85 c12e      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000a86 0fea      	ADD  R30,R26
000a87 1ffb      	ADC  R31,R27
000a88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000a89 85a9      	LDD  R26,Y+9
000a8a 85ba      	LDD  R27,Y+9+1
000a8b 93ec      	ST   X,R30
000a8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x5:
                +
000a8d e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000a8e 958a     +DEC R24
000a8f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000a90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x6:
000a91 e0e0      	LDI  R30,LOW(0)
000a92 93ea      	ST   -Y,R30
000a93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000a94 e0e7      	LDI  R30,LOW(7)
000a95 93ea      	ST   -Y,R30
000a96 e7ae      	LDI  R26,LOW(126)
000a97 c776      	RJMP _RF_Write_TX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000a98 93aa      	ST   -Y,R26
000a99 931a      	ST   -Y,R17
000a9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x9:
000a9b 81a8      	LD   R26,Y
000a9c c751      	RJMP _SPI_RW_TX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xA:
000a9d 9a94      	SBI  0x12,4
000a9e cfee      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xB:
000a9f 91ed      	LD   R30,X+
000aa0 91fd      	LD   R31,X+
000aa1 9631      	ADIW R30,1
000aa2 93fe      	ST   -X,R31
000aa3 93ee      	ST   -X,R30
000aa4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000aa5 e3e0      	LDI  R30,LOW(48)
000aa6 93ea      	ST   -Y,R30
000aa7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000aa8 de5a      	RCALL _glcd_line
000aa9 cfe7      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000aaa e5e4      	LDI  R30,LOW(84)
000aab 93ea      	ST   -Y,R30
000aac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
000aad de20      	RCALL _glcd_outtext
000aae e0e4      	LDI  R30,LOW(4)
000aaf 93ea      	ST   -Y,R30
000ab0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x10:
000ab1 93fa      	ST   -Y,R31
000ab2 93ea      	ST   -Y,R30
000ab3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x11:
000ab4 eae0      	LDI  R30,LOW(_buff)
000ab5 e0f1      	LDI  R31,HIGH(_buff)
000ab6 cffa      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
000ab7 e0f0      	LDI  R31,0
000ab8 2766      	CLR  R22
000ab9 2777      	CLR  R23
000aba d240      	RCALL __PUTPARD1
000abb e084      	LDI  R24,4
000abc da45      	RCALL _sprintf
000abd 9628      	ADIW R28,8
000abe e3e2      	LDI  R30,LOW(50)
000abf 93ea      	ST   -Y,R30
000ac0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000ac1 de35      	RCALL _glcd_moveto
000ac2 eaa0      	LDI  R26,LOW(_buff)
000ac3 e0b1      	LDI  R27,HIGH(_buff)
000ac4 ce09      	RJMP _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x14:
000ac5 91e0 01ea 	LDS  R30,_distance
000ac7 91f0 01eb 	LDS  R31,_distance+1
000ac9 9160 01ec 	LDS  R22,_distance+2
000acb 9170 01ed 	LDS  R23,_distance+3
000acd d11f      	RCALL __CFD1
000ace 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000acf 93ed      	ST   X+,R30
000ad0 93fc      	ST   X,R31
000ad1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
000ad2 d6fd      	RCALL _read_adc
000ad3 01df      	MOVW R26,R30
000ad4 e0e4      	LDI  R30,LOW(4)
000ad5 e0f0      	LDI  R31,HIGH(4)
000ad6 d209      	RCALL __DIVW21
000ad7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
000ad8 81aa      	LDD  R26,Y+2
000ad9 81bb      	LDD  R27,Y+2+1
000ada 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
000adb 9614      	ADIW R26,4
000adc d216      	RCALL __GETW1P
000add 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x19:
000ade e0e0      	LDI  R30,LOW(0)
000adf e0f0      	LDI  R31,HIGH(0)
000ae0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1A:
000ae1 932a      	ST   -Y,R18
000ae2 85ad      	LDD  R26,Y+13
000ae3 85be      	LDD  R27,Y+13+1
000ae4 85ef      	LDD  R30,Y+15
000ae5 89f8      	LDD  R31,Y+15+1
000ae6 9509      	ICALL
000ae7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
000ae8 89e8      	LDD  R30,Y+16
000ae9 89f9      	LDD  R31,Y+16+1
000aea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
000aeb 9734      	SBIW R30,4
000aec 8be8      	STD  Y+16,R30
000aed 8bf9      	STD  Y+16+1,R31
000aee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
000aef 85ad      	LDD  R26,Y+13
000af0 85be      	LDD  R27,Y+13+1
000af1 85ef      	LDD  R30,Y+15
000af2 89f8      	LDD  R31,Y+15+1
000af3 9509      	ICALL
000af4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
000af5 dff2      	RCALL SUBOPT_0x1B
000af6 cff4      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1F:
000af7 89a8      	LDD  R26,Y+16
000af8 89b9      	LDD  R27,Y+16+1
000af9 cfe1      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
000afa 83ee      	STD  Y+6,R30
000afb 83ff      	STD  Y+6+1,R31
000afc 81ae      	LDD  R26,Y+6
000afd 81bf      	LDD  R27,Y+6+1
000afe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x21:
000aff 83ee      	STD  Y+6,R30
000b00 83ff      	STD  Y+6+1,R31
000b01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x22:
000b02 87ea      	STD  Y+10,R30
000b03 87fb      	STD  Y+10+1,R31
000b04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
000b05 85ea      	LDD  R30,Y+10
000b06 85fb      	LDD  R31,Y+10+1
000b07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000b08 85aa      	LDD  R26,Y+10
000b09 85bb      	LDD  R27,Y+10+1
000b0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000b0b 01de      	MOVW R26,R28
000b0c 961c      	ADIW R26,12
000b0d d192      	RCALL __ADDW2R15
000b0e d1e4      	RCALL __GETW1P
000b0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x26:
000b10 95e6      	LSR  R30
000b11 95e6      	LSR  R30
000b12 95e6      	LSR  R30
000b13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27:
000b14 e0f0      	LDI  R31,0
000b15 cf70      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
000b16 2fae      	MOV  R26,R30
000b17 ca2b      	RJMP _pcd8544_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x29:
000b18 50ec      	SUBI R30,LOW(-_gfx_buffer_G102)
000b19 4ffe      	SBCI R31,HIGH(-_gfx_buffer_G102)
000b1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2A:
000b1b efa2      	LDI  R26,LOW(_gfx_addr_G102)
000b1c e0b1      	LDI  R27,HIGH(_gfx_addr_G102)
000b1d cf81      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000b1e 9731      	SBIW R30,1
000b1f cff8      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000b20 81ec      	LDD  R30,Y+4
000b21 81fd      	LDD  R31,Y+4+1
000b22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
                +
000b23 93e0 0187+STS _glcd_state + ( 4 ) , R30
000b25 93f0 0188+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000b27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
                +
000b28 93e0 019c+STS _glcd_state + ( 25 ) , R30
000b2a 93f0 019d+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000b2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2F:
000b2d e0f0      	LDI  R31,0
000b2e 0fae      	ADD  R26,R30
000b2f 1fbf      	ADC  R27,R31
000b30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
000b31 e0f0      	LDI  R31,0
000b32 d192      	RCALL __MULW12U
000b33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x31:
000b34 85ec      	LDD  R30,Y+12
000b35 93ea      	ST   -Y,R30
000b36 81ef      	LDD  R30,Y+7
000b37 85f8      	LDD  R31,Y+7+1
000b38 9631      	ADIW R30,1
000b39 83ef      	STD  Y+7,R30
000b3a 87f8      	STD  Y+7+1,R31
000b3b 9731      	SBIW R30,1
000b3c df74      	RCALL SUBOPT_0x10
000b3d e0a0      	LDI  R26,LOW(0)
000b3e cf21      	RJMP _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000b3f 930a      	ST   -Y,R16
000b40 89a8      	LDD  R26,Y+16
000b41 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x33:
000b42 5f1f      	SUBI R17,-1
000b43 85ee      	LDD  R30,Y+14
000b44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x34:
000b45 85ec      	LDD  R30,Y+12
000b46 93ea      	ST   -Y,R30
000b47 81ef      	LDD  R30,Y+7
000b48 85f8      	LDD  R31,Y+7+1
000b49 9631      	ADIW R30,1
000b4a 83ef      	STD  Y+7,R30
000b4b 87f8      	STD  Y+7+1,R31
000b4c 9731      	SBIW R30,1
000b4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x35:
000b4e 2766      	CLR  R22
000b4f 2777      	CLR  R23
000b50 01df      	MOVW R26,R30
000b51 01cb      	MOVW R24,R22
000b52 cef3      	RJMP _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x36:
000b53 935a      	ST   -Y,R21
000b54 85aa      	LDD  R26,Y+10
000b55 cec9      	RJMP _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x37:
000b56 930a      	ST   -Y,R16
000b57 9503      	INC  R16
000b58 89e8      	LDD  R30,Y+16
000b59 93ea      	ST   -Y,R30
000b5a 935a      	ST   -Y,R21
000b5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x38:
000b5c 2f5e      	MOV  R21,R30
000b5d 85ec      	LDD  R30,Y+12
000b5e 93ea      	ST   -Y,R30
000b5f 81af      	LDD  R26,Y+7
000b60 85b8      	LDD  R27,Y+7+1
000b61 2788      	CLR  R24
000b62 2799      	CLR  R25
000b63 dee2      	RCALL _glcd_readmem
000b64 2e1e      	MOV  R1,R30
000b65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
000b66 95e0      	COM  R30
000b67 21e1      	AND  R30,R1
000b68 2b5e      	OR   R21,R30
000b69 cfdb      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3A:
000b6a 930a      	ST   -Y,R16
000b6b 9503      	INC  R16
000b6c 89e8      	LDD  R30,Y+16
000b6d 93ea      	ST   -Y,R30
000b6e 85ee      	LDD  R30,Y+14
000b6f 93ea      	ST   -Y,R30
000b70 85e9      	LDD  R30,Y+9
000b71 85fa      	LDD  R31,Y+9+1
000b72 9631      	ADIW R30,1
000b73 87e9      	STD  Y+9,R30
000b74 87fa      	STD  Y+9+1,R31
000b75 9731      	SBIW R30,1
000b76 cfd7      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000b77 93ea      	ST   -Y,R30
000b78 934a      	ST   -Y,R20
000b79 85ad      	LDD  R26,Y+13
000b7a caa9      	RJMP _pcd8544_wrmasked_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
000b7b df01      	RCALL SUBOPT_0x0
000b7c 81a8      	LD   R26,Y
000b7d 81b9      	LDD  R27,Y+1
000b7e d1a6      	RCALL __CPW02
000b7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D:
000b80 81a8      	LD   R26,Y
000b81 81b9      	LDD  R27,Y+1
000b82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E:
000b83 d1a5      	RCALL __SAVELOCR6
                +
000b84 91e0 0187+LDS R30 , _glcd_state + ( 4 )
000b86 91f0 0188+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000b88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3F:
000b89 01f8      	MOVW R30,R16
                +
000b8a 5f0f     +SUBI R16 , LOW ( - 1 )
000b8b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000b8c 9004      	LPM  R0,Z
000b8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x40:
                +
000b8e 91e0 0187+LDS R30 , _glcd_state + ( 4 )
000b90 91f0 0188+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000b92 9631      	ADIW R30,1
000b93 91e4      	LPM  R30,Z
000b94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41:
000b95 93ea      	ST   -Y,R30
                +
000b96 91e0 0186+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000b98 93ea      	ST   -Y,R30
000b99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
000b9a df43      	RCALL SUBOPT_0x19
000b9b df15      	RCALL SUBOPT_0x10
000b9c e0a9      	LDI  R26,LOW(9)
000b9d cabd      	RJMP _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x43:
000b9e 81ae      	LDD  R26,Y+6
000b9f 5faf      	SUBI R26,-LOW(1)
000ba0 83ae      	STD  Y+6,R26
000ba1 50a1      	SUBI R26,LOW(1)
                +
000ba2 91e0 018b+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000ba4 17ae      	CP   R26,R30
000ba5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000ba6 931a      	ST   -Y,R17
000ba7 933a      	ST   -Y,R19
000ba8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
000ba9 85a9      	LDD  R26,Y+9
000baa 85ba      	LDD  R27,Y+9+1
000bab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000bac 87e9      	STD  Y+9,R30
000bad 87fa      	STD  Y+9+1,R31
000bae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x47:
000baf 85e9      	LDD  R30,Y+9
000bb0 85fa      	LDD  R31,Y+9+1
000bb1 1bea      	SUB  R30,R26
000bb2 0bfb      	SBC  R31,R27
000bb3 cff8      	RJMP SUBOPT_0x46
                 
                 
                 	.CSEG
                 _delay_ms:
000bb4 9610      	adiw r26,0
000bb5 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000bb6 ed80     +LDI R24 , LOW ( 0x7D0 )
000bb7 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000bb8 9701     +SBIW R24 , 1
000bb9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000bba 95a8      	wdr
000bbb 9711      	sbiw r26,1
000bbc f7c9      	brne __delay_ms0
                 __delay_ms1:
000bbd 9508      	ret
                 
                 __ROUND_REPACK:
000bbe 2355      	TST  R21
000bbf f442      	BRPL __REPACK
000bc0 3850      	CPI  R21,0x80
000bc1 f411      	BRNE __ROUND_REPACK0
000bc2 ffe0      	SBRS R30,0
000bc3 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000bc4 9631      	ADIW R30,1
000bc5 1f69      	ADC  R22,R25
000bc6 1f79      	ADC  R23,R25
000bc7 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000bc8 e850      	LDI  R21,0x80
000bc9 2757      	EOR  R21,R23
000bca f411      	BRNE __REPACK0
000bcb 935f      	PUSH R21
000bcc c073      	RJMP __ZERORES
                 __REPACK0:
000bcd 3f5f      	CPI  R21,0xFF
000bce f031      	BREQ __REPACK1
000bcf 0f66      	LSL  R22
000bd0 0c00      	LSL  R0
000bd1 9557      	ROR  R21
000bd2 9567      	ROR  R22
000bd3 2f75      	MOV  R23,R21
000bd4 9508      	RET
                 __REPACK1:
000bd5 935f      	PUSH R21
000bd6 2000      	TST  R0
000bd7 f00a      	BRMI __REPACK2
000bd8 c073      	RJMP __MAXRES
                 __REPACK2:
000bd9 c06c      	RJMP __MINRES
                 
                 __UNPACK:
000bda e850      	LDI  R21,0x80
000bdb 2e19      	MOV  R1,R25
000bdc 2215      	AND  R1,R21
000bdd 0f88      	LSL  R24
000bde 1f99      	ROL  R25
000bdf 2795      	EOR  R25,R21
000be0 0f55      	LSL  R21
000be1 9587      	ROR  R24
                 
                 __UNPACK1:
000be2 e850      	LDI  R21,0x80
000be3 2e07      	MOV  R0,R23
000be4 2205      	AND  R0,R21
000be5 0f66      	LSL  R22
000be6 1f77      	ROL  R23
000be7 2775      	EOR  R23,R21
000be8 0f55      	LSL  R21
000be9 9567      	ROR  R22
000bea 9508      	RET
                 
                 __CFD1U:
000beb 9468      	SET
000bec c001      	RJMP __CFD1U0
                 __CFD1:
000bed 94e8      	CLT
                 __CFD1U0:
000bee 935f      	PUSH R21
000bef dff2      	RCALL __UNPACK1
000bf0 3870      	CPI  R23,0x80
000bf1 f018      	BRLO __CFD10
000bf2 3f7f      	CPI  R23,0xFF
000bf3 f408      	BRCC __CFD10
000bf4 c04b      	RJMP __ZERORES
                 __CFD10:
000bf5 e156      	LDI  R21,22
000bf6 1b57      	SUB  R21,R23
000bf7 f4aa      	BRPL __CFD11
000bf8 9551      	NEG  R21
000bf9 3058      	CPI  R21,8
000bfa f40e      	BRTC __CFD19
000bfb 3059      	CPI  R21,9
                 __CFD19:
000bfc f030      	BRLO __CFD17
000bfd efef      	SER  R30
000bfe efff      	SER  R31
000bff ef6f      	SER  R22
000c00 e77f      	LDI  R23,0x7F
000c01 f977      	BLD  R23,7
000c02 c01a      	RJMP __CFD15
                 __CFD17:
000c03 2777      	CLR  R23
000c04 2355      	TST  R21
000c05 f0b9      	BREQ __CFD15
                 __CFD18:
000c06 0fee      	LSL  R30
000c07 1fff      	ROL  R31
000c08 1f66      	ROL  R22
000c09 1f77      	ROL  R23
000c0a 955a      	DEC  R21
000c0b f7d1      	BRNE __CFD18
000c0c c010      	RJMP __CFD15
                 __CFD11:
000c0d 2777      	CLR  R23
                 __CFD12:
000c0e 3058      	CPI  R21,8
000c0f f028      	BRLO __CFD13
000c10 2fef      	MOV  R30,R31
000c11 2ff6      	MOV  R31,R22
000c12 2f67      	MOV  R22,R23
000c13 5058      	SUBI R21,8
000c14 cff9      	RJMP __CFD12
                 __CFD13:
000c15 2355      	TST  R21
000c16 f031      	BREQ __CFD15
                 __CFD14:
000c17 9576      	LSR  R23
000c18 9567      	ROR  R22
000c19 95f7      	ROR  R31
000c1a 95e7      	ROR  R30
000c1b 955a      	DEC  R21
000c1c f7d1      	BRNE __CFD14
                 __CFD15:
000c1d 2000      	TST  R0
000c1e f40a      	BRPL __CFD16
000c1f d088      	RCALL __ANEGD1
                 __CFD16:
000c20 915f      	POP  R21
000c21 9508      	RET
                 
                 __CDF1U:
000c22 9468      	SET
000c23 c001      	RJMP __CDF1U0
                 __CDF1:
000c24 94e8      	CLT
                 __CDF1U0:
000c25 9730      	SBIW R30,0
000c26 4060      	SBCI R22,0
000c27 4070      	SBCI R23,0
000c28 f0b1      	BREQ __CDF10
000c29 2400      	CLR  R0
000c2a f026      	BRTS __CDF11
000c2b 2377      	TST  R23
000c2c f412      	BRPL __CDF11
000c2d 9400      	COM  R0
000c2e d079      	RCALL __ANEGD1
                 __CDF11:
000c2f 2e17      	MOV  R1,R23
000c30 e17e      	LDI  R23,30
000c31 2011      	TST  R1
                 __CDF12:
000c32 f032      	BRMI __CDF13
000c33 957a      	DEC  R23
000c34 0fee      	LSL  R30
000c35 1fff      	ROL  R31
000c36 1f66      	ROL  R22
000c37 1c11      	ROL  R1
000c38 cff9      	RJMP __CDF12
                 __CDF13:
000c39 2fef      	MOV  R30,R31
000c3a 2ff6      	MOV  R31,R22
000c3b 2d61      	MOV  R22,R1
000c3c 935f      	PUSH R21
000c3d df8a      	RCALL __REPACK
000c3e 915f      	POP  R21
                 __CDF10:
000c3f 9508      	RET
                 
                 __ZERORES:
000c40 27ee      	CLR  R30
000c41 27ff      	CLR  R31
000c42 2766      	CLR  R22
000c43 2777      	CLR  R23
000c44 915f      	POP  R21
000c45 9508      	RET
                 
                 __MINRES:
000c46 efef      	SER  R30
000c47 efff      	SER  R31
000c48 e76f      	LDI  R22,0x7F
000c49 ef7f      	SER  R23
000c4a 915f      	POP  R21
000c4b 9508      	RET
                 
                 __MAXRES:
000c4c efef      	SER  R30
000c4d efff      	SER  R31
000c4e e76f      	LDI  R22,0x7F
000c4f e77f      	LDI  R23,0x7F
000c50 915f      	POP  R21
000c51 9508      	RET
                 
                 __MULF12:
000c52 935f      	PUSH R21
000c53 df86      	RCALL __UNPACK
000c54 3870      	CPI  R23,0x80
000c55 f351      	BREQ __ZERORES
000c56 3890      	CPI  R25,0x80
000c57 f341      	BREQ __ZERORES
000c58 2401      	EOR  R0,R1
000c59 9408      	SEC
000c5a 1f79      	ADC  R23,R25
000c5b f423      	BRVC __MULF124
000c5c f31c      	BRLT __ZERORES
                 __MULF125:
000c5d 2000      	TST  R0
000c5e f33a      	BRMI __MINRES
000c5f cfec      	RJMP __MAXRES
                 __MULF124:
000c60 920f      	PUSH R0
000c61 931f      	PUSH R17
000c62 932f      	PUSH R18
000c63 933f      	PUSH R19
000c64 934f      	PUSH R20
000c65 2711      	CLR  R17
000c66 2722      	CLR  R18
000c67 2799      	CLR  R25
000c68 9f68      	MUL  R22,R24
000c69 01a0      	MOVW R20,R0
000c6a 9f8f      	MUL  R24,R31
000c6b 2d30      	MOV  R19,R0
000c6c 0d41      	ADD  R20,R1
000c6d 1f59      	ADC  R21,R25
000c6e 9f6b      	MUL  R22,R27
000c6f 0d30      	ADD  R19,R0
000c70 1d41      	ADC  R20,R1
000c71 1f59      	ADC  R21,R25
000c72 9f8e      	MUL  R24,R30
000c73 d027      	RCALL __MULF126
000c74 9fbf      	MUL  R27,R31
000c75 d025      	RCALL __MULF126
000c76 9f6a      	MUL  R22,R26
000c77 d023      	RCALL __MULF126
000c78 9fbe      	MUL  R27,R30
000c79 d01d      	RCALL __MULF127
000c7a 9faf      	MUL  R26,R31
000c7b d01b      	RCALL __MULF127
000c7c 9fae      	MUL  R26,R30
000c7d 0d11      	ADD  R17,R1
000c7e 1f29      	ADC  R18,R25
000c7f 1f39      	ADC  R19,R25
000c80 1f49      	ADC  R20,R25
000c81 1f59      	ADC  R21,R25
000c82 2fe3      	MOV  R30,R19
000c83 2ff4      	MOV  R31,R20
000c84 2f65      	MOV  R22,R21
000c85 2f52      	MOV  R21,R18
000c86 914f      	POP  R20
000c87 913f      	POP  R19
000c88 912f      	POP  R18
000c89 911f      	POP  R17
000c8a 900f      	POP  R0
000c8b 2366      	TST  R22
000c8c f02a      	BRMI __MULF122
000c8d 0f55      	LSL  R21
000c8e 1fee      	ROL  R30
000c8f 1fff      	ROL  R31
000c90 1f66      	ROL  R22
000c91 c002      	RJMP __MULF123
                 __MULF122:
000c92 9573      	INC  R23
000c93 f24b      	BRVS __MULF125
                 __MULF123:
000c94 df29      	RCALL __ROUND_REPACK
000c95 915f      	POP  R21
000c96 9508      	RET
                 
                 __MULF127:
000c97 0d10      	ADD  R17,R0
000c98 1d21      	ADC  R18,R1
000c99 1f39      	ADC  R19,R25
000c9a c002      	RJMP __MULF128
                 __MULF126:
000c9b 0d20      	ADD  R18,R0
000c9c 1d31      	ADC  R19,R1
                 __MULF128:
000c9d 1f49      	ADC  R20,R25
000c9e 1f59      	ADC  R21,R25
000c9f 9508      	RET
                 
                 __ADDW2R15:
000ca0 2400      	CLR  R0
000ca1 0daf      	ADD  R26,R15
000ca2 1db0      	ADC  R27,R0
000ca3 9508      	RET
                 
                 __ANEGW1:
000ca4 95f1      	NEG  R31
000ca5 95e1      	NEG  R30
000ca6 40f0      	SBCI R31,0
000ca7 9508      	RET
                 
                 __ANEGD1:
000ca8 95f0      	COM  R31
000ca9 9560      	COM  R22
000caa 9570      	COM  R23
000cab 95e1      	NEG  R30
000cac 4fff      	SBCI R31,-1
000cad 4f6f      	SBCI R22,-1
000cae 4f7f      	SBCI R23,-1
000caf 9508      	RET
                 
                 __LSLB12:
000cb0 23ee      	TST  R30
000cb1 2e0e      	MOV  R0,R30
000cb2 2fea      	MOV  R30,R26
000cb3 f019      	BREQ __LSLB12R
                 __LSLB12L:
000cb4 0fee      	LSL  R30
000cb5 940a      	DEC  R0
000cb6 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000cb7 9508      	RET
                 
                 __LSRB12:
000cb8 23ee      	TST  R30
000cb9 2e0e      	MOV  R0,R30
000cba 2fea      	MOV  R30,R26
000cbb f019      	BREQ __LSRB12R
                 __LSRB12L:
000cbc 95e6      	LSR  R30
000cbd 940a      	DEC  R0
000cbe f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000cbf 9508      	RET
                 
                 __CWD1:
000cc0 2f6f      	MOV  R22,R31
000cc1 0f66      	ADD  R22,R22
000cc2 0b66      	SBC  R22,R22
000cc3 2f76      	MOV  R23,R22
000cc4 9508      	RET
                 
                 __MULW12U:
000cc5 9ffa      	MUL  R31,R26
000cc6 2df0      	MOV  R31,R0
000cc7 9feb      	MUL  R30,R27
000cc8 0df0      	ADD  R31,R0
000cc9 9fea      	MUL  R30,R26
000cca 2de0      	MOV  R30,R0
000ccb 0df1      	ADD  R31,R1
000ccc 9508      	RET
                 
                 __DIVW21U:
000ccd 2400      	CLR  R0
000cce 2411      	CLR  R1
000ccf e190      	LDI  R25,16
                 __DIVW21U1:
000cd0 0faa      	LSL  R26
000cd1 1fbb      	ROL  R27
000cd2 1c00      	ROL  R0
000cd3 1c11      	ROL  R1
000cd4 1a0e      	SUB  R0,R30
000cd5 0a1f      	SBC  R1,R31
000cd6 f418      	BRCC __DIVW21U2
000cd7 0e0e      	ADD  R0,R30
000cd8 1e1f      	ADC  R1,R31
000cd9 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000cda 60a1      	SBR  R26,1
                 __DIVW21U3:
000cdb 959a      	DEC  R25
000cdc f799      	BRNE __DIVW21U1
000cdd 01fd      	MOVW R30,R26
000cde 01d0      	MOVW R26,R0
000cdf 9508      	RET
                 
                 __DIVW21:
000ce0 d004      	RCALL __CHKSIGNW
000ce1 dfeb      	RCALL __DIVW21U
000ce2 f40e      	BRTC __DIVW211
000ce3 dfc0      	RCALL __ANEGW1
                 __DIVW211:
000ce4 9508      	RET
                 
                 __CHKSIGNW:
000ce5 94e8      	CLT
000ce6 fff7      	SBRS R31,7
000ce7 c002      	RJMP __CHKSW1
000ce8 dfbb      	RCALL __ANEGW1
000ce9 9468      	SET
                 __CHKSW1:
000cea ffb7      	SBRS R27,7
000ceb c006      	RJMP __CHKSW2
000cec 95a0      	COM  R26
000ced 95b0      	COM  R27
000cee 9611      	ADIW R26,1
000cef f800      	BLD  R0,0
000cf0 9403      	INC  R0
000cf1 fa00      	BST  R0,0
                 __CHKSW2:
000cf2 9508      	RET
                 
                 __GETW1P:
000cf3 91ed      	LD   R30,X+
000cf4 91fc      	LD   R31,X
000cf5 9711      	SBIW R26,1
000cf6 9508      	RET
                 
                 __GETW1PF:
000cf7 9005      	LPM  R0,Z+
000cf8 91f4      	LPM  R31,Z
000cf9 2de0      	MOV  R30,R0
000cfa 9508      	RET
                 
                 __PUTPARD1:
000cfb 937a      	ST   -Y,R23
000cfc 936a      	ST   -Y,R22
000cfd 93fa      	ST   -Y,R31
000cfe 93ea      	ST   -Y,R30
000cff 9508      	RET
                 
                 __PUTPARL:
000d00 27bb      	CLR  R27
                 __PUTPAR:
000d01 0fea      	ADD  R30,R26
000d02 1ffb      	ADC  R31,R27
                 __PUTPAR0:
000d03 9002      	LD   R0,-Z
000d04 920a      	ST   -Y,R0
000d05 9711      	SBIW R26,1
000d06 f7e1      	BRNE __PUTPAR0
000d07 9508      	RET
                 
                 __EEPROMRDB:
000d08 99e1      	SBIC EECR,EEWE
000d09 cffe      	RJMP __EEPROMRDB
000d0a 93ff      	PUSH R31
000d0b b7ff      	IN   R31,SREG
000d0c 94f8      	CLI
000d0d bbae      	OUT  EEARL,R26
000d0e bbbf      	OUT  EEARH,R27
000d0f 9ae0      	SBI  EECR,EERE
000d10 b3ed      	IN   R30,EEDR
000d11 bfff      	OUT  SREG,R31
000d12 91ff      	POP  R31
000d13 9508      	RET
                 
                 __EEPROMWRB:
000d14 9be1      	SBIS EECR,EEWE
000d15 c002      	RJMP __EEPROMWRB1
000d16 95a8      	WDR
000d17 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000d18 b79f      	IN   R25,SREG
000d19 94f8      	CLI
000d1a bbae      	OUT  EEARL,R26
000d1b bbbf      	OUT  EEARH,R27
000d1c 9ae0      	SBI  EECR,EERE
000d1d b38d      	IN   R24,EEDR
000d1e 17e8      	CP   R30,R24
000d1f f019      	BREQ __EEPROMWRB0
000d20 bbed      	OUT  EEDR,R30
000d21 9ae2      	SBI  EECR,EEMWE
000d22 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000d23 bf9f      	OUT  SREG,R25
000d24 9508      	RET
                 
                 __CPW02:
000d25 2400      	CLR  R0
000d26 160a      	CP   R0,R26
000d27 060b      	CPC  R0,R27
000d28 9508      	RET
                 
                 __SAVELOCR6:
000d29 935a      	ST   -Y,R21
                 __SAVELOCR5:
000d2a 934a      	ST   -Y,R20
                 __SAVELOCR4:
000d2b 933a      	ST   -Y,R19
                 __SAVELOCR3:
000d2c 932a      	ST   -Y,R18
                 __SAVELOCR2:
000d2d 931a      	ST   -Y,R17
000d2e 930a      	ST   -Y,R16
000d2f 9508      	RET
                 
                 __LOADLOCR6:
000d30 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000d31 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000d32 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000d33 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000d34 8119      	LDD  R17,Y+1
000d35 8108      	LD   R16,Y
000d36 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  56 r1 :  24 r2 :   0 r3 :   0 r4 :   2 r5 :   2 r6 :   0 r7 :   3 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   2 r14:   0 r15:   4 
r16:  81 r17: 108 r18:  68 r19:  57 r20:  41 r21:  95 r22:  47 r23:  37 
r24:  43 r25:  32 r26: 379 r27: 102 r28:  32 r29:   1 r30: 819 r31: 164 
x  :  22 y  : 535 z  :  33 
Registers used: 26 out of 35 (74.3%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  24 add   :  31 
adiw  :  40 and   :  11 andi  :  16 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  51 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  17 
brlt  :   7 brmi  :   5 brne  :  96 brpl  :   7 brsh  :  26 brtc  :   2 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   1 cbi   :  23 
cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 clr   :  43 
cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :  13 cp    :  33 
cpc   :  11 cpi   : 111 cpse  :   0 dec   :  13 des   :   0 eor   :   5 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 in    :   7 
inc   :   6 ld    :  48 ldd   : 298 ldi   : 320 lds   :  40 lpm   :  30 
lsl   :  16 lsr   :  10 mov   : 126 movw  :  43 mul   :  14 muls  :   0 
mulsu :   0 neg   :   4 nop   :   0 or    :   7 ori   :  15 out   :  47 
pop   :  23 push  :  22 rcall : 469 ret   : 100 reti  :   1 rjmp  : 246 
rol   :  16 ror   :   7 sbc   :   6 sbci  :  13 sbi   :  28 sbic  :   6 
sbis  :   7 sbiw  :  41 sbr   :   1 sbrc  :   2 sbrs  :  13 sec   :   1 
seh   :   0 sei   :   1 sen   :   0 ser   :   8 ses   :   0 set   :   3 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    : 136 std   :  88 
sts   :  42 sub   :  17 subi  :  44 swap  :   0 tst   :  17 wdr   :   2 

Instructions used: 75 out of 114 (65.8%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001a6e   6138    628   6766    8192  82.6%
[.dseg] 0x000060 0x0003ec      0    652    652    1024  63.7%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 14 warnings
