
AVRASM ver. 2.1.30  D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm Sun Sep 10 18:20:15 2017

D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1086): warning: Register r5 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1087): warning: Register r4 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1088): warning: Register r7 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1089): warning: Register r6 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1090): warning: Register r9 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1091): warning: Register r8 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1092): warning: Register r11 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1093): warning: Register r10 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1094): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dht_nhiet_do=R5
                 	.DEF _dht_do_am=R4
                 	.DEF _P_Add=R7
                 	.DEF _Code_tay_cam1=R6
                 	.DEF _Code_tay_cam2=R9
                 	.DEF _Code_tay_cam3=R8
                 	.DEF _Code_tay_cam4=R11
                 	.DEF _data_receive_2=R10
                 	.DEF _result=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c14c      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 c280      	RJMP _timer2_ovf
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _font5x7:
000013 0705
000014 6020
000015 0000
000016 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
000017 0000
000018 5f00
000019 0000
00001a 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00001b 0700
00001c 1400
00001d 147f
00001e 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
00001f 2a24
000020 2a7f
000021 2312
000022 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000023 6264
000024 4936
000025 2255
000026 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
000027 0305
000028 0000
000029 1c00
00002a 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00002b 0000
00002c 2241
00002d 001c
00002e 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
00002f 2a1c
000030 0808
000031 3e08
000032 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000033 5000
000034 0030
000035 0800
000036 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
000037 0808
000038 3000
000039 0030
00003a 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00003b 0810
00003c 0204
00003d 513e
00003e 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
00003f 003e
000040 7f42
000041 0040
000042 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000043 4951
000044 2146
000045 4541
000046 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
000047 1418
000048 7f12
000049 2710
00004a 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00004b 3945
00004c 4a3c
00004d 4949
00004e 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
00004f 0971
000050 0305
000051 4936
000052 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000053 0636
000054 4949
000055 1e29
000056 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
000057 0036
000058 0000
000059 3656
00005a 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00005b 0800
00005c 2214
00005d 1441
00005e 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
00005f 1414
000060 2241
000061 0814
000062 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000063 5101
000064 0609
000065 4932
000066 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
000067 7e3e
000068 1111
000069 7e11
00006a 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00006b 4949
00006c 3e36
00006d 4141
00006e 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
00006f 417f
000070 2241
000071 7f1c
000072 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
000073 4149
000074 097f
000075 0109
000076 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
000077 4141
000078 3251
000079 087f
00007a 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
00007b 007f
00007c 7f41
00007d 0041
00007e 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
00007f 3f41
000080 7f01
000081 1408
000082 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
000083 407f
000084 4040
000085 7f40
000086 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
000087 7f02
000088 047f
000089 1008
00008a 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
00008b 4141
00008c 3e41
00008d 097f
00008e 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
00008f 3e06
000090 5141
000091 5e21
000092 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
000093 2919
000094 4646
000095 4949
000096 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
000097 0101
000098 017f
000099 3f01
00009a 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
00009b 3f40
00009c 201f
00009d 2040
00009e 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
00009f 1820
0000a0 7f20
0000a1 1463
0000a2 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000a3 0363
0000a4 7804
0000a5 0304
0000a6 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000a7 4549
0000a8 0043
0000a9 7f00
0000aa 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000ab 0402
0000ac 1008
0000ad 4120
0000ae 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000af 0000
0000b0 0204
0000b1 0201
0000b2 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000b3 4040
0000b4 4040
0000b5 0100
0000b6 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000b7 2000
0000b8 5454
0000b9 7854
0000ba 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000bb 4444
0000bc 3838
0000bd 4444
0000be 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000bf 4438
0000c0 4844
0000c1 387f
0000c2 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000c3 1854
0000c4 7e08
0000c5 0109
0000c6 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000c7 5414
0000c8 3c54
0000c9 087f
0000ca 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000cb 0078
0000cc 7d44
0000cd 0040
0000ce 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000cf 3d44
0000d0 0000
0000d1 107f
0000d2 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000d3 4100
0000d4 407f
0000d5 7c00
0000d6 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000d7 7804
0000d8 087c
0000d9 0404
0000da 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000db 4444
0000dc 3844
0000dd 147c
0000de 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000df 0808
0000e0 1414
0000e1 7c18
0000e2 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000e3 0404
0000e4 4808
0000e5 5454
0000e6 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000e7 3f04
0000e8 4044
0000e9 3c20
0000ea 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
0000eb 7c20
0000ec 201c
0000ed 2040
0000ee 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
0000ef 3040
0000f0 3c40
0000f1 2844
0000f2 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
0000f3 0c44
0000f4 5050
0000f5 3c50
0000f6 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
0000f7 4c54
0000f8 0044
0000f9 3608
0000fa 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
0000fb 0000
0000fc 007f
0000fd 0000
0000fe 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
0000ff 0008
000100 0102
000101 0402
000102 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000103 4141
000104 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _tbl10_G101:
000105 2710
000106 03e8
000107 0064
000108 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000109 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00010a 1000
00010b 0100
00010c 0010
00010d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
00010e 0100
00010f 0703
000110 1f0f
000111 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1192): warning: .cseg .db misalignment - padding zero byte
000112 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1196): warning: .cseg .db misalignment - padding zero byte
000113 00a1      	.DB  0xA1
                 
                 _0x0:
000114 6f4e
000115 6564
000116 203a
000117 3100      	.DB  0x4E,0x6F,0x64,0x65,0x3A,0x20,0x0,0x31
000118 5400
000119 6d65
00011a 3a70
00011b 0020      	.DB  0x0,0x54,0x65,0x6D,0x70,0x3A,0x20,0x0
00011c 7548
00011d 696d
00011e 3a64
00011f 0020      	.DB  0x48,0x75,0x6D,0x69,0x64,0x3A,0x20,0x0
000120 6157
000121 6574
000122 3a72
000123 0020      	.DB  0x57,0x61,0x74,0x65,0x72,0x3A,0x20,0x0
000124 6d6d
000125 2500
000126 0075
000127 7525      	.DB  0x6D,0x6D,0x0,0x25,0x75,0x0,0x25,0x75
000128 2020
000129 4e00
00012a 4e61
00012b 2500      	.DB  0x20,0x20,0x0,0x4E,0x61,0x4E,0x0,0x25
00012c 2064
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1205): warning: .cseg .db misalignment - padding zero byte
00012d 0000      	.DB  0x64,0x20,0x0
                 _0x2000060:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1207): warning: .cseg .db misalignment - padding zero byte
00012e 0001      	.DB  0x1
                 _0x2000000:
00012f 4e2d
000130 4e41
000131 4900
000132 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1210): warning: .cseg .db misalignment - padding zero byte
000133 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000134 0001      	.DW  0x01
000135 0007      	.DW  0x07
000136 0226      	.DW  __REG_VARS*2
                 
000137 0007      	.DW  0x07
000138 0160      	.DW  _0xD5
000139 0228      	.DW  _0x0*2
                 
00013a 0002      	.DW  0x02
00013b 0167      	.DW  _0xD5+7
00013c 022f      	.DW  _0x0*2+7
                 
00013d 0007      	.DW  0x07
00013e 0169      	.DW  _0xD5+9
00013f 0231      	.DW  _0x0*2+9
                 
000140 0008      	.DW  0x08
000141 0170      	.DW  _0xD5+16
000142 0238      	.DW  _0x0*2+16
                 
000143 0008      	.DW  0x08
000144 0178      	.DW  _0xD5+24
000145 0240      	.DW  _0x0*2+24
                 
000146 0003      	.DW  0x03
000147 0180      	.DW  _0xD5+32
000148 0248      	.DW  _0x0*2+32
                 
000149 0001      	.DW  0x01
00014a 0206      	.DW  __seed_G100
00014b 025c      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
00014c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00014d 94f8      	CLI
00014e 27ee      	CLR  R30
00014f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000150 e0f1      	LDI  R31,1
000151 bffb      	OUT  GICR,R31
000152 bfeb      	OUT  GICR,R30
000153 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000154 e08d      	LDI  R24,(14-2)+1
000155 e0a2      	LDI  R26,2
000156 27bb      	CLR  R27
                 __CLEAR_REG:
000157 93ed      	ST   X+,R30
000158 958a      	DEC  R24
000159 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00015a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00015b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00015c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00015d 93ed      	ST   X+,R30
00015e 9701      	SBIW R24,1
00015f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000160 e6e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000161 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000162 9185      	LPM  R24,Z+
000163 9195      	LPM  R25,Z+
000164 9700      	SBIW R24,0
000165 f061      	BREQ __GLOBAL_INI_END
000166 91a5      	LPM  R26,Z+
000167 91b5      	LPM  R27,Z+
000168 9005      	LPM  R0,Z+
000169 9015      	LPM  R1,Z+
00016a 01bf      	MOVW R22,R30
00016b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00016c 9005      	LPM  R0,Z+
00016d 920d      	ST   X+,R0
00016e 9701      	SBIW R24,1
00016f f7e1      	BRNE __GLOBAL_INI_LOOP
000170 01fb      	MOVW R30,R22
000171 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000172 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000173 bfed      	OUT  SPL,R30
000174 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000175 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000176 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000177 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000178 c15e      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;//config DHT11
                 ;#define         DHT_DATA_IN     PIND.0
                 ;#define         DHT_DATA_OUT    PORTD.0
                 ;#define         DHT_DDR_DATA    DDRD.0
                 ;
                 ;
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <DHT.h>
                 
                 	.CSEG
                 _DHT_GetTemHumi:
                 ; .FSTART _DHT_GetTemHumi
000179 d924      	RCALL SUBOPT_0x0
00017a 9725      	SBIW R28,5
00017b e0e0      	LDI  R30,LOW(0)
00017c 83e8      	ST   Y,R30
00017d 83e9      	STD  Y+1,R30
00017e 83ea      	STD  Y+2,R30
00017f 83eb      	STD  Y+3,R30
000180 83ec      	STD  Y+4,R30
000181 dbe3      	RCALL __SAVELOCR4
                 ;	*tem -> Y+11
                 ;	*humi -> Y+9
                 ;	buffer -> Y+4
                 ;	ii -> R17
                 ;	i -> R16
                 ;	checksum -> R19
000182 9a88      	SBI  0x11,0
000183 9a90      	SBI  0x12,0
000184 d91c      	RCALL SUBOPT_0x1
000185 9890      	CBI  0x12,0
000186 e1a9      	LDI  R26,LOW(25)
000187 d91d      	RCALL SUBOPT_0x2
000188 9a90      	SBI  0x12,0
000189 9888      	CBI  0x11,0
00018a d916      	RCALL SUBOPT_0x1
00018b 9b80      	SBIS 0x10,0
00018c c002      	RJMP _0xD
00018d e0e0      	LDI  R30,LOW(0)
00018e c03e      	RJMP _0x212000D
                 _0xD:
                 _0xF:
00018f 9b80      	SBIS 0x10,0
000190 cffe      	RJMP _0xF
000191 d90f      	RCALL SUBOPT_0x1
000192 9980      	SBIC 0x10,0
000193 c002      	RJMP _0x12
000194 e0e0      	LDI  R30,LOW(0)
000195 c037      	RJMP _0x212000D
                 _0x12:
                 _0x14:
000196 9980      	SBIC 0x10,0
000197 cffe      	RJMP _0x14
000198 e000      	LDI  R16,LOW(0)
                 _0x18:
000199 3005      	CPI  R16,5
00019a f4f0      	BRSH _0x19
00019b e010      	LDI  R17,LOW(0)
                 _0x1B:
00019c 3018      	CPI  R17,8
00019d f4c8      	BRSH _0x1C
                 _0x1D:
00019e 9b80      	SBIS 0x10,0
00019f cffe      	RJMP _0x1D
                +
0001a0 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001a1 958a     +DEC R24
0001a2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001a3 9b80      	SBIS 0x10,0
0001a4 c010      	RJMP _0x20
0001a5 2fe0      	MOV  R30,R16
0001a6 e0f0      	LDI  R31,0
0001a7 01de      	MOVW R26,R28
0001a8 9614      	ADIW R26,4
0001a9 d8fd      	RCALL SUBOPT_0x3
0001aa 01bf      	MOVW R22,R30
0001ab 8010      	LD   R1,Z
0001ac e0e7      	LDI  R30,LOW(7)
0001ad 1be1      	SUB  R30,R17
0001ae e0a1      	LDI  R26,LOW(1)
0001af db23      	RCALL __LSLB12
0001b0 29e1      	OR   R30,R1
0001b1 01db      	MOVW R26,R22
0001b2 93ec      	ST   X,R30
                 _0x21:
0001b3 9980      	SBIC 0x10,0
0001b4 cffe      	RJMP _0x21
                 _0x20:
0001b5 5f1f      	SUBI R17,-1
0001b6 cfe5      	RJMP _0x1B
                 _0x1C:
0001b7 5f0f      	SUBI R16,-1
0001b8 cfe0      	RJMP _0x18
                 _0x19:
0001b9 81ed      	LDD  R30,Y+5
0001ba 81ac      	LDD  R26,Y+4
0001bb 0fea      	ADD  R30,R26
0001bc 81ae      	LDD  R26,Y+6
0001bd 0fea      	ADD  R30,R26
0001be 81af      	LDD  R26,Y+7
0001bf 0fea      	ADD  R30,R26
0001c0 2f3e      	MOV  R19,R30
0001c1 85e8      	LDD  R30,Y+8
0001c2 17e3      	CP   R30,R19
0001c3 f011      	BREQ _0x24
0001c4 e0e0      	LDI  R30,LOW(0)
0001c5 c007      	RJMP _0x212000D
                 _0x24:
0001c6 81ee      	LDD  R30,Y+6
0001c7 85ab      	LDD  R26,Y+11
0001c8 85bc      	LDD  R27,Y+11+1
0001c9 93ec      	ST   X,R30
0001ca 81ec      	LDD  R30,Y+4
0001cb d8de      	RCALL SUBOPT_0x4
0001cc e0e1      	LDI  R30,LOW(1)
                 _0x212000D:
0001cd db9e      	RCALL __LOADLOCR4
0001ce 962d      	ADIW R28,13
0001cf 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;
                 ;// Declare your global variables here
                 ;unsigned char buff[20];
                 ;unsigned char dht_nhiet_do,dht_do_am;
                 ;
                 ;// Voltage Reference: AREF pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0020 {
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0021 ADMUX=adc_input | ADC_VREF_TYPE;
0001d0 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
0001d1 81e8      	LD   R30,Y
0001d2 b9e7      	OUT  0x7,R30
                 ; 0000 0022 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0023 delay_us(10);
0001d3 d8da      	RCALL SUBOPT_0x5
                 ; 0000 0024 // Start the AD conversion
                 ; 0000 0025 ADCSRA|=(1<<ADSC);
0001d4 9a36      	SBI  0x6,6
                 ; 0000 0026 // Wait for the AD conversion to complete
                 ; 0000 0027 while ((ADCSRA & (1<<ADIF))==0);
                 _0x25:
0001d5 9b34      	SBIS 0x6,4
0001d6 cffe      	RJMP _0x25
                 ; 0000 0028 ADCSRA|=(1<<ADIF);
0001d7 9a34      	SBI  0x6,4
                 ; 0000 0029 return ADCW;
0001d8 b1e4      	IN   R30,0x4
0001d9 b1f5      	IN   R31,0x4+1
0001da c42f      	RJMP _0x212000A
                 ; 0000 002A }
                 ; .FEND
                 ;
                 ;
                 ;//config NRF24L01
                 ;#define CE PORTD.3
                 ;#define CSN PORTD.4
                 ;#define SCK PORTD.2
                 ;#define MOSI PORTB.6
                 ;#define MISO PIND.1
                 ;#define IRQ PINB.7
                 ;unsigned char P_Add=0xA1, Code_tay_cam1, Code_tay_cam2, Code_tay_cam3, Code_tay_cam4;
                 ;#include <nrf_code.h>
                 _config:
                 ; .FSTART _config
0001db d8d2      	RCALL SUBOPT_0x5
0001dc d8d5      	RCALL SUBOPT_0x6
0001dd e1af      	LDI  R26,LOW(31)
0001de d02f      	RCALL _RF_Write_TX
0001df e0a2      	LDI  R26,LOW(2)
0001e0 d8c4      	RCALL SUBOPT_0x2
0001e1 d8d3      	RCALL SUBOPT_0x7
0001e2 e1ed      	LDI  R30,LOW(29)
0001e3 93ea      	ST   -Y,R30
0001e4 e0a4      	LDI  R26,LOW(4)
0001e5 d028      	RCALL _RF_Write_TX
0001e6 e0e5      	LDI  R30,LOW(5)
0001e7 93ea      	ST   -Y,R30
0001e8 e0a2      	LDI  R26,LOW(2)
0001e9 d024      	RCALL _RF_Write_TX
0001ea e0e6      	LDI  R30,LOW(6)
0001eb 93ea      	ST   -Y,R30
0001ec e2a0      	LDI  R26,LOW(32)
0001ed c056      	RJMP _0x212000C
                 ; .FEND
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
0001ee d8ca      	RCALL SUBOPT_0x8
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0001ef e010      	LDI  R17,LOW(0)
                 _0x29:
0001f0 3018      	CPI  R17,8
0001f1 f4c8      	BRSH _0x2A
0001f2 81e9      	LDD  R30,Y+1
0001f3 78e0      	ANDI R30,LOW(0x80)
0001f4 f411      	BRNE _0x2B
0001f5 98c6      	CBI  0x18,6
0001f6 c001      	RJMP _0x2C
                 _0x2B:
0001f7 9ac6      	SBI  0x18,6
                 _0x2C:
                +
0001f8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001f9 958a     +DEC R24
0001fa f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001fb 81e9      	LDD  R30,Y+1
0001fc 0fee      	LSL  R30
0001fd 83e9      	STD  Y+1,R30
0001fe 9a92      	SBI  0x12,2
                +
0001ff e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000200 958a     +DEC R24
000201 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000202 e0e0      	LDI  R30,0
000203 9981      	SBIC 0x10,1
000204 e0e1      	LDI  R30,1
000205 81a9      	LDD  R26,Y+1
000206 2bea      	OR   R30,R26
000207 83e9      	STD  Y+1,R30
000208 9892      	CBI  0x12,2
000209 5f1f      	SUBI R17,-1
00020a cfe5      	RJMP _0x29
                 _0x2A:
00020b 81e9      	LDD  R30,Y+1
00020c 8118      	LDD  R17,Y+0
00020d c830      	RJMP _0x2120003
                 ; .FEND
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
00020e 93aa      	ST   -Y,R26
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
00020f 9894      	CBI  0x12,4
000210 81e9      	LDD  R30,Y+1
000211 62e0      	ORI  R30,0x20
000212 2fae      	MOV  R26,R30
000213 dfda      	RCALL _SPI_RW_TX
000214 2ede      	MOV  R13,R30
000215 d8a6      	RCALL SUBOPT_0x9
000216 d8a7      	RCALL SUBOPT_0xA
000217 2ded      	MOV  R30,R13
000218 c825      	RJMP _0x2120003
                 ; .FEND
                 _RF_Write_Address_TX:
                 ; .FSTART _RF_Write_Address_TX
000219 93aa      	ST   -Y,R26
                 ;	Address -> Y+0
00021a 9894      	CBI  0x12,4
00021b e0e3      	LDI  R30,LOW(3)
00021c 93ea      	ST   -Y,R30
00021d e0a3      	LDI  R26,LOW(3)
00021e dfef      	RCALL _RF_Write_TX
00021f d89e      	RCALL SUBOPT_0xA
000220 9894      	CBI  0x12,4
000221 e2aa      	LDI  R26,LOW(42)
000222 dfcb      	RCALL _SPI_RW_TX
000223 d898      	RCALL SUBOPT_0x9
000224 d897      	RCALL SUBOPT_0x9
000225 d896      	RCALL SUBOPT_0x9
000226 d895      	RCALL SUBOPT_0x9
000227 d894      	RCALL SUBOPT_0x9
000228 d895      	RCALL SUBOPT_0xA
000229 9894      	CBI  0x12,4
00022a e3a0      	LDI  R26,LOW(48)
00022b dfc2      	RCALL _SPI_RW_TX
00022c d88f      	RCALL SUBOPT_0x9
00022d d88e      	RCALL SUBOPT_0x9
00022e d88d      	RCALL SUBOPT_0x9
00022f d88c      	RCALL SUBOPT_0x9
000230 d88b      	RCALL SUBOPT_0x9
000231 d88c      	RCALL SUBOPT_0xA
000232 c3d7      	RJMP _0x212000A
                 ; .FEND
                 ;	Address -> Y+1
                 ;	Address2 -> Y+0
                 _RF_Mode_TX:
                 ; .FSTART _RF_Mode_TX
000233 9893      	CBI  0x12,3
000234 d87d      	RCALL SUBOPT_0x6
000235 e1ae      	LDI  R26,LOW(30)
000236 c00d      	RJMP _0x212000C
                 ; .FEND
                 _RF_Config_TX:
                 ; .FSTART _RF_Config_TX
000237 e1ec      	LDI  R30,LOW(28)
000238 93ea      	ST   -Y,R30
000239 e0a1      	LDI  R26,LOW(1)
00023a dfd3      	RCALL _RF_Write_TX
00023b 2da7      	MOV  R26,R7
00023c dfdc      	RCALL _RF_Write_Address_TX
00023d e0e2      	LDI  R30,LOW(2)
00023e 93ea      	ST   -Y,R30
00023f e0a1      	LDI  R26,LOW(1)
000240 dfcd      	RCALL _RF_Write_TX
000241 e0e1      	LDI  R30,LOW(1)
000242 93ea      	ST   -Y,R30
000243 e0a1      	LDI  R26,LOW(1)
                 _0x212000C:
000244 dfc9      	RCALL _RF_Write_TX
000245 9508      	RET
                 ; .FEND
                 _RF_Command_TX:
                 ; .FSTART _RF_Command_TX
000246 93aa      	ST   -Y,R26
                 ;	command -> Y+0
000247 9894      	CBI  0x12,4
000248 d873      	RCALL SUBOPT_0x9
000249 d874      	RCALL SUBOPT_0xA
00024a c3bf      	RJMP _0x212000A
                 ; .FEND
                 _RF_Send_TX:
                 ; .FSTART _RF_Send_TX
                 ;	send -> Y+0
00024b 2da7      	MOV  R26,R7
00024c dfcc      	RCALL _RF_Write_Address_TX
00024d d870      	RCALL SUBOPT_0xA
00024e 9894      	CBI  0x12,4
00024f eea1      	LDI  R26,LOW(225)
000250 df9d      	RCALL _SPI_RW_TX
000251 d86c      	RCALL SUBOPT_0xA
000252 9894      	CBI  0x12,4
000253 eaa0      	LDI  R26,LOW(160)
000254 df99      	RCALL _SPI_RW_TX
000255 d866      	RCALL SUBOPT_0x9
000256 81ac      	LDD  R26,Y+4
000257 df96      	RCALL _SPI_RW_TX
000258 85a8      	LDD  R26,Y+8
000259 df94      	RCALL _SPI_RW_TX
00025a 85ac      	LDD  R26,Y+12
00025b df92      	RCALL _SPI_RW_TX
00025c 89a8      	LDD  R26,Y+16
00025d df90      	RCALL _SPI_RW_TX
00025e 89ac      	LDD  R26,Y+20
00025f df8e      	RCALL _SPI_RW_TX
000260 9a94      	SBI  0x12,4
000261 9a93      	SBI  0x12,3
                +
000262 ee88     +LDI R24 , LOW ( 1000 )
000263 e093     +LDI R25 , HIGH ( 1000 )
                +__DELAY_USW_LOOP :
000264 9701     +SBIW R24 , 1
000265 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1000
000266 9893      	CBI  0x12,3
000267 d84d      	RCALL SUBOPT_0x7
000268 2da7      	MOV  R26,R7
000269 dfaf      	RCALL _RF_Write_Address_TX
00026a eea1      	LDI  R26,LOW(225)
00026b dfda      	RCALL _RF_Command_TX
00026c 9668      	ADIW R28,24
00026d 9508      	RET
                 ; .FEND
                 ;	send -> Y+0
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
00026e 9a93      	SBI  0x12,3
                +
00026f e788     +LDI R24 , LOW ( 1400 )
000270 e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
000271 9701     +SBIW R24 , 1
000272 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
000273 9893      	CBI  0x12,3
000274 9a94      	SBI  0x12,4
000275 9508      	RET
                 ; .FEND
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;	command -> Y+0
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
                 ;	Address1 -> Y+0
                 ;
                 ;station_info data_send;
                 ;
                 ;#define TRIGGER PORTB.5
                 ;#define ECHO PINB.4
                 ;
                 ;int change, dem;
                 ;float distance;
                 ;
                 ;void set_up_sieu_am(){
                 ; 0000 003F void set_up_sieu_am(){
                 _set_up_sieu_am:
                 ; .FSTART _set_up_sieu_am
                 ; 0000 0040     TRIGGER = 0;
000276 98c5      	CBI  0x18,5
                 ; 0000 0041     delay_us(2);
                +
000277 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000278 958a     +DEC R24
000279 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                 ; 0000 0042     TRIGGER = 1;
00027a 9ac5      	SBI  0x18,5
                 ; 0000 0043     delay_us(10);
00027b d832      	RCALL SUBOPT_0x5
                 ; 0000 0044     TRIGGER = 0;
00027c 98c5      	CBI  0x18,5
                 ; 0000 0045     while(ECHO == 0);
                 _0xCD:
00027d 9bb4      	SBIS 0x16,4
00027e cffe      	RJMP _0xCD
                 ; 0000 0046     dem = 1;
00027f e0e1      	LDI  R30,LOW(1)
000280 e0f0      	LDI  R31,HIGH(1)
000281 93e0 0200 	STS  _dem,R30
000283 93f0 0201 	STS  _dem+1,R31
                 ; 0000 0047     change = 1;
000285 93e0 01fe 	STS  _change,R30
000287 93f0 01ff 	STS  _change+1,R31
                 ; 0000 0048 }
000289 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;interrupt [TIM0_OVF] void timer2_ovf(){
                 ; 0000 004B interrupt [10] void timer2_ovf(){
                 _timer2_ovf:
                 ; .FSTART _timer2_ovf
00028a 920a      	ST   -Y,R0
00028b 921a      	ST   -Y,R1
00028c 936a      	ST   -Y,R22
00028d 937a      	ST   -Y,R23
00028e 938a      	ST   -Y,R24
00028f 939a      	ST   -Y,R25
000290 93aa      	ST   -Y,R26
000291 93ba      	ST   -Y,R27
000292 93ea      	ST   -Y,R30
000293 93fa      	ST   -Y,R31
000294 b7ef      	IN   R30,SREG
000295 93ea      	ST   -Y,R30
                 ; 0000 004C     TCNT0 = 0x9C;
000296 e9ec      	LDI  R30,LOW(156)
000297 bfe2      	OUT  0x32,R30
                 ; 0000 004D     dem++;
000298 e0a0      	LDI  R26,LOW(_dem)
000299 e0b2      	LDI  R27,HIGH(_dem)
00029a d825      	RCALL SUBOPT_0xB
                 ; 0000 004E 
                 ; 0000 004F     if(ECHO == 0 && change == 1){
00029b 99b4      	SBIC 0x16,4
00029c c006      	RJMP _0xD1
00029d 91a0 01fe 	LDS  R26,_change
00029f 91b0 01ff 	LDS  R27,_change+1
0002a1 9711      	SBIW R26,1
0002a2 f009      	BREQ _0xD2
                 _0xD1:
0002a3 c026      	RJMP _0xD0
                 _0xD2:
                 ; 0000 0050     distance = dem*0.1*3.432*5;
0002a4 91e0 0200 	LDS  R30,_dem
0002a6 91f0 0201 	LDS  R31,_dem+1
0002a8 da3a      	RCALL __CWD1
0002a9 d99d      	RCALL __CDF1
                +
0002aa ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
0002ab ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
0002ac ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
0002ad e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
0002ae d9c6      	RCALL __MULF12
                +
0002af eea3     +LDI R26 , LOW ( 0x405BA5E3 )
0002b0 eab5     +LDI R27 , HIGH ( 0x405BA5E3 )
0002b1 e58b     +LDI R24 , BYTE3 ( 0x405BA5E3 )
0002b2 e490     +LDI R25 , BYTE4 ( 0x405BA5E3 )
                 	__GETD2N 0x405BA5E3
0002b3 d9c1      	RCALL __MULF12
                +
0002b4 e0a0     +LDI R26 , LOW ( 0x40A00000 )
0002b5 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
0002b6 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
0002b7 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
0002b8 d9bc      	RCALL __MULF12
0002b9 93e0 0202 	STS  _distance,R30
0002bb 93f0 0203 	STS  _distance+1,R31
0002bd 9360 0204 	STS  _distance+2,R22
0002bf 9370 0205 	STS  _distance+3,R23
                 ; 0000 0051     dem = 0;
0002c1 e0e0      	LDI  R30,LOW(0)
0002c2 93e0 0200 	STS  _dem,R30
0002c4 93e0 0201 	STS  _dem+1,R30
                 ; 0000 0052     change = 0;
0002c6 93e0 01fe 	STS  _change,R30
0002c8 93e0 01ff 	STS  _change+1,R30
                 ; 0000 0053     }
                 ; 0000 0054 }
                 _0xD0:
0002ca 91e9      	LD   R30,Y+
0002cb bfef      	OUT  SREG,R30
0002cc 91f9      	LD   R31,Y+
0002cd 91e9      	LD   R30,Y+
0002ce 91b9      	LD   R27,Y+
0002cf 91a9      	LD   R26,Y+
0002d0 9199      	LD   R25,Y+
0002d1 9189      	LD   R24,Y+
0002d2 9179      	LD   R23,Y+
0002d3 9169      	LD   R22,Y+
0002d4 9019      	LD   R1,Y+
0002d5 9009      	LD   R0,Y+
0002d6 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0059 {
                 _main:
                 ; .FSTART _main
                 ; 0000 005A // Declare your local variables here
                 ; 0000 005B // Variable used to store graphic display
                 ; 0000 005C // controller initialization data
                 ; 0000 005D GLCDINIT_t glcd_init_data;
                 ; 0000 005E 
                 ; 0000 005F // Input/Output Ports initialization
                 ; 0000 0060 // Port B initialization
                 ; 0000 0061 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0062 DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
0002d7 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
0002d8 e6e0      	LDI  R30,LOW(96)
0002d9 bbe7      	OUT  0x17,R30
                 ; 0000 0063 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0064 PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0002da efe0      	LDI  R30,LOW(240)
0002db bbe8      	OUT  0x18,R30
                 ; 0000 0065 
                 ; 0000 0066 // Port C initialization
                 ; 0000 0067 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0068 DDRC=(0<<DDC6) | (1<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
0002dc e2e0      	LDI  R30,LOW(32)
0002dd bbe4      	OUT  0x14,R30
                 ; 0000 0069 // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 006A PORTC=(0<<PORTC6) | (1<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0002de bbe5      	OUT  0x15,R30
                 ; 0000 006B 
                 ; 0000 006C // Port D initialization
                 ; 0000 006D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 006E DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (0<<DDD1) | (0<<DDD0);
0002df e1ec      	LDI  R30,LOW(28)
0002e0 bbe1      	OUT  0x11,R30
                 ; 0000 006F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0070 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (0<<PORTD0);
0002e1 e1ee      	LDI  R30,LOW(30)
0002e2 bbe2      	OUT  0x12,R30
                 ; 0000 0071 
                 ; 0000 0072 // Timer/Counter 0 initialization
                 ; 0000 0073 // Clock source: System Clock
                 ; 0000 0074 // Clock value: Timer 0 Stopped
                 ; 0000 0075 TCCR0=(0<<CS02) | (1<<CS01) | (0<<CS00);
0002e3 e0e2      	LDI  R30,LOW(2)
0002e4 bfe3      	OUT  0x33,R30
                 ; 0000 0076 TCNT0=0x9C;
0002e5 e9ec      	LDI  R30,LOW(156)
0002e6 bfe2      	OUT  0x32,R30
                 ; 0000 0077 
                 ; 0000 0078 // Timer/Counter 1 initialization
                 ; 0000 0079 // Clock source: System Clock
                 ; 0000 007A // Clock value: Timer1 Stopped
                 ; 0000 007B // Mode: Normal top=0xFFFF
                 ; 0000 007C // OC1A output: Disconnected
                 ; 0000 007D // OC1B output: Disconnected
                 ; 0000 007E // Noise Canceler: Off
                 ; 0000 007F // Input Capture on Falling Edge
                 ; 0000 0080 // Timer1 Overflow Interrupt: Off
                 ; 0000 0081 // Input Capture Interrupt: Off
                 ; 0000 0082 // Compare A Match Interrupt: Off
                 ; 0000 0083 // Compare B Match Interrupt: Off
                 ; 0000 0084 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0002e7 e0e0      	LDI  R30,LOW(0)
0002e8 bdef      	OUT  0x2F,R30
                 ; 0000 0085 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
0002e9 bdee      	OUT  0x2E,R30
                 ; 0000 0086 TCNT1H=0x00;
0002ea bded      	OUT  0x2D,R30
                 ; 0000 0087 TCNT1L=0x00;
0002eb bdec      	OUT  0x2C,R30
                 ; 0000 0088 ICR1H=0x00;
0002ec bde7      	OUT  0x27,R30
                 ; 0000 0089 ICR1L=0x00;
0002ed bde6      	OUT  0x26,R30
                 ; 0000 008A OCR1AH=0x00;
0002ee bdeb      	OUT  0x2B,R30
                 ; 0000 008B OCR1AL=0x00;
0002ef bdea      	OUT  0x2A,R30
                 ; 0000 008C OCR1BH=0x00;
0002f0 bde9      	OUT  0x29,R30
                 ; 0000 008D OCR1BL=0x00;
0002f1 bde8      	OUT  0x28,R30
                 ; 0000 008E 
                 ; 0000 008F // Timer/Counter 2 initialization
                 ; 0000 0090 // Clock source: System Clock
                 ; 0000 0091 // Clock value: Timer2 Stopped
                 ; 0000 0092 // Mode: Normal top=0xFF
                 ; 0000 0093 // OC2 output: Disconnected
                 ; 0000 0094 ASSR=0<<AS2;
0002f2 bde2      	OUT  0x22,R30
                 ; 0000 0095 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0002f3 bde5      	OUT  0x25,R30
                 ; 0000 0096 TCNT2=0x00;
0002f4 bde4      	OUT  0x24,R30
                 ; 0000 0097 OCR2=0x00;
0002f5 bde3      	OUT  0x23,R30
                 ; 0000 0098 
                 ; 0000 0099 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 009A TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);
0002f6 e0e1      	LDI  R30,LOW(1)
0002f7 bfe9      	OUT  0x39,R30
                 ; 0000 009B 
                 ; 0000 009C // External Interrupt(s) initialization
                 ; 0000 009D // INT0: Off
                 ; 0000 009E // INT1: Off
                 ; 0000 009F MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0002f8 e0e0      	LDI  R30,LOW(0)
0002f9 bfe5      	OUT  0x35,R30
                 ; 0000 00A0 
                 ; 0000 00A1 // USART initialization
                 ; 0000 00A2 // USART disabled
                 ; 0000 00A3 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0002fa b9ea      	OUT  0xA,R30
                 ; 0000 00A4 
                 ; 0000 00A5 // Analog Comparator initialization
                 ; 0000 00A6 // Analog Comparator: Off
                 ; 0000 00A7 // The Analog Comparator's positive input is
                 ; 0000 00A8 // connected to the AIN0 pin
                 ; 0000 00A9 // The Analog Comparator's negative input is
                 ; 0000 00AA // connected to the AIN1 pin
                 ; 0000 00AB ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0002fb e8e0      	LDI  R30,LOW(128)
0002fc b9e8      	OUT  0x8,R30
                 ; 0000 00AC 
                 ; 0000 00AD // ADC initialization
                 ; 0000 00AE // ADC Clock frequency: 1000.000 kHz
                 ; 0000 00AF // ADC Voltage Reference: AREF pin
                 ; 0000 00B0 ADMUX=ADC_VREF_TYPE;
0002fd e0e0      	LDI  R30,LOW(0)
0002fe b9e7      	OUT  0x7,R30
                 ; 0000 00B1 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0002ff e8e3      	LDI  R30,LOW(131)
000300 b9e6      	OUT  0x6,R30
                 ; 0000 00B2 SFIOR=(0<<ACME);
000301 e0e0      	LDI  R30,LOW(0)
000302 bfe0      	OUT  0x30,R30
                 ; 0000 00B3 
                 ; 0000 00B4 // SPI initialization
                 ; 0000 00B5 // SPI disabled
                 ; 0000 00B6 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
000303 b9ed      	OUT  0xD,R30
                 ; 0000 00B7 
                 ; 0000 00B8 // TWI initialization
                 ; 0000 00B9 // TWI disabled
                 ; 0000 00BA TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
000304 bfe6      	OUT  0x36,R30
                 ; 0000 00BB 
                 ; 0000 00BC // Graphic Display Controller initialization
                 ; 0000 00BD // The PCD8544 connections are specified in the
                 ; 0000 00BE // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 00BF // SDIN - PORTC Bit 3
                 ; 0000 00C0 // SCLK - PORTC Bit 4
                 ; 0000 00C1 // D /C - PORTC Bit 2
                 ; 0000 00C2 // /SCE - PORTC Bit 1
                 ; 0000 00C3 // /RES - PORTC Bit 0
                 ; 0000 00C4 
                 ; 0000 00C5 // Specify the current font for displaying text
                 ; 0000 00C6 glcd_init_data.font=font5x7;
000305 e2e6      	LDI  R30,LOW(_font5x7*2)
000306 e0f0      	LDI  R31,HIGH(_font5x7*2)
000307 83e8      	ST   Y,R30
000308 83f9      	STD  Y+1,R31
                 ; 0000 00C7 // No function is used for reading
                 ; 0000 00C8 // image data from external memory
                 ; 0000 00C9 glcd_init_data.readxmem=NULL;
000309 e0e0      	LDI  R30,LOW(0)
00030a 83ea      	STD  Y+2,R30
00030b 83eb      	STD  Y+2+1,R30
                 ; 0000 00CA // No function is used for writing
                 ; 0000 00CB // image data to external memory
                 ; 0000 00CC glcd_init_data.writexmem=NULL;
00030c 83ec      	STD  Y+4,R30
00030d 83ed      	STD  Y+4+1,R30
                 ; 0000 00CD // Set the LCD temperature coefficient
                 ; 0000 00CE glcd_init_data.temp_coef=139;
00030e 81ee      	LDD  R30,Y+6
00030f 60e3      	ORI  R30,LOW(0x3)
000310 83ee      	STD  Y+6,R30
                 ; 0000 00CF // Set the LCD bias
                 ; 0000 00D0 glcd_init_data.bias=4;
000311 7ee3      	ANDI R30,LOW(0xE3)
000312 61e0      	ORI  R30,0x10
000313 83ee      	STD  Y+6,R30
                 ; 0000 00D1 // Set the LCD contrast control voltage VLCD
                 ; 0000 00D2 glcd_init_data.vlcd=69;
000314 81ef      	LDD  R30,Y+7
000315 78e0      	ANDI R30,LOW(0x80)
000316 64e5      	ORI  R30,LOW(0x45)
000317 83ef      	STD  Y+7,R30
                 ; 0000 00D3 
                 ; 0000 00D4 #asm("sei")
000318 9478      	sei
                 ; 0000 00D5 
                 ; 0000 00D6 glcd_init(&glcd_init_data);
000319 01de      	MOVW R26,R28
00031a d282      	RCALL _glcd_init
                 ; 0000 00D7 PORTC.5 = 0;
00031b 98ad      	CBI  0x15,5
                 ; 0000 00D8 
                 ; 0000 00D9 config();
00031c debe      	RCALL _config
                 ; 0000 00DA RF_Init_RX();
00031d df50      	RCALL _RF_Init_RX
                 ; 0000 00DB RF_Config_TX();
00031e df18      	RCALL _RF_Config_TX
                 ; 0000 00DC RF_Mode_TX();
00031f df13      	RCALL _RF_Mode_TX
                 ; 0000 00DD 
                 ; 0000 00DE glcd_line(48,0, 48, 15);
000320 d7a5      	RCALL SUBOPT_0xC
000321 d790      	RCALL SUBOPT_0x6
000322 d7a3      	RCALL SUBOPT_0xC
000323 e0af      	LDI  R26,LOW(15)
000324 d7a4      	RCALL SUBOPT_0xD
                 ; 0000 00DF glcd_line(0, 15, 48, 15);
000325 e0ef      	LDI  R30,LOW(15)
000326 93ea      	ST   -Y,R30
000327 d79e      	RCALL SUBOPT_0xC
000328 e0af      	LDI  R26,LOW(15)
000329 d79f      	RCALL SUBOPT_0xD
                 ; 0000 00E0 glcd_line(0,0,84,0);
00032a d787      	RCALL SUBOPT_0x6
00032b d79f      	RCALL SUBOPT_0xE
00032c e0a0      	LDI  R26,LOW(0)
00032d d5f6      	RCALL _glcd_line
                 ; 0000 00E1 glcd_line(84,0, 84, 48);
00032e d79c      	RCALL SUBOPT_0xE
00032f d782      	RCALL SUBOPT_0x6
000330 d79a      	RCALL SUBOPT_0xE
000331 e3a0      	LDI  R26,LOW(48)
000332 d796      	RCALL SUBOPT_0xD
                 ; 0000 00E2 glcd_line(0, 48, 84, 48);
000333 d792      	RCALL SUBOPT_0xC
000334 d796      	RCALL SUBOPT_0xE
000335 e3a0      	LDI  R26,LOW(48)
000336 d792      	RCALL SUBOPT_0xD
                 ; 0000 00E3 glcd_line(0, 0, 0, 48);
000337 d77a      	RCALL SUBOPT_0x6
000338 d779      	RCALL SUBOPT_0x6
000339 e3a0      	LDI  R26,LOW(48)
00033a d5e9      	RCALL _glcd_line
                 ; 0000 00E4 glcd_moveto(3,3);
00033b e0e3      	LDI  R30,LOW(3)
00033c 93ea      	ST   -Y,R30
00033d e0a3      	LDI  R26,LOW(3)
00033e d5d9      	RCALL _glcd_moveto
                 ; 0000 00E5 glcd_outtext("Node: ");
                +
00033f e6a0     +LDI R26 , LOW ( _0xD5 + ( 0 ) )
000340 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 0 ) )
                 	__POINTW2MN _0xD5,0
000341 d5ad      	RCALL _glcd_outtext
                 ; 0000 00E6 glcd_moveto(40, 3);
000342 e2e8      	LDI  R30,LOW(40)
000343 93ea      	ST   -Y,R30
000344 e0a3      	LDI  R26,LOW(3)
000345 d5d2      	RCALL _glcd_moveto
                 ; 0000 00E7 glcd_outtext("1");
                +
000346 e6a7     +LDI R26 , LOW ( _0xD5 + ( 7 ) )
000347 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 7 ) )
                 	__POINTW2MN _0xD5,7
000348 d785      	RCALL SUBOPT_0xF
                 ; 0000 00E8 
                 ; 0000 00E9 glcd_moveto(4, 18);
000349 e1a2      	LDI  R26,LOW(18)
00034a d5cd      	RCALL _glcd_moveto
                 ; 0000 00EA glcd_outtext("Temp: ");
                +
00034b e6a9     +LDI R26 , LOW ( _0xD5 + ( 9 ) )
00034c e0b1     +LDI R27 , HIGH ( _0xD5 + ( 9 ) )
                 	__POINTW2MN _0xD5,9
00034d d780      	RCALL SUBOPT_0xF
                 ; 0000 00EB glcd_moveto(4, 28);
00034e e1ac      	LDI  R26,LOW(28)
00034f d5c8      	RCALL _glcd_moveto
                 ; 0000 00EC glcd_outtext("Humid: ");
                +
000350 e7a0     +LDI R26 , LOW ( _0xD5 + ( 16 ) )
000351 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 16 ) )
                 	__POINTW2MN _0xD5,16
000352 d77b      	RCALL SUBOPT_0xF
                 ; 0000 00ED glcd_moveto(4, 37);
000353 e2a5      	LDI  R26,LOW(37)
000354 d5c3      	RCALL _glcd_moveto
                 ; 0000 00EE glcd_outtext("Water: ");
                +
000355 e7a8     +LDI R26 , LOW ( _0xD5 + ( 24 ) )
000356 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 24 ) )
                 	__POINTW2MN _0xD5,24
000357 d597      	RCALL _glcd_outtext
                 ; 0000 00EF 
                 ; 0000 00F0 glcd_moveto(67, 28);
000358 e4e3      	LDI  R30,LOW(67)
000359 93ea      	ST   -Y,R30
00035a e1ac      	LDI  R26,LOW(28)
00035b d5bc      	RCALL _glcd_moveto
                 ; 0000 00F1 glcd_putchar(37);
00035c e2a5      	LDI  R26,LOW(37)
00035d d53a      	RCALL _glcd_putchar
                 ; 0000 00F2 glcd_moveto(67, 37);
00035e e4e3      	LDI  R30,LOW(67)
00035f 93ea      	ST   -Y,R30
000360 e2a5      	LDI  R26,LOW(37)
000361 d5b6      	RCALL _glcd_moveto
                 ; 0000 00F3 glcd_outtext("mm");
                +
000362 e8a0     +LDI R26 , LOW ( _0xD5 + ( 32 ) )
000363 e0b1     +LDI R27 , HIGH ( _0xD5 + ( 32 ) )
                 	__POINTW2MN _0xD5,32
000364 d58a      	RCALL _glcd_outtext
                 ; 0000 00F4 
                 ; 0000 00F5 while (1){
                 _0xD6:
                 ; 0000 00F6         if(DHT_GetTemHumi(&dht_nhiet_do,&dht_do_am)){
000365 e0e5      	LDI  R30,LOW(5)
000366 e0f0      	LDI  R31,HIGH(5)
000367 d76a      	RCALL SUBOPT_0x10
000368 e0a4      	LDI  R26,LOW(4)
000369 e0b0      	LDI  R27,HIGH(4)
00036a de0e      	RCALL _DHT_GetTemHumi
00036b 30e0      	CPI  R30,0
00036c f081      	BREQ _0xD9
                 ; 0000 00F7             sprintf(buff, "%u", (unsigned int)dht_do_am);
00036d d767      	RCALL SUBOPT_0x11
                +
00036e e4eb     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
00036f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
                 	__POINTW1FN _0x0,35
000370 d761      	RCALL SUBOPT_0x10
000371 2de4      	MOV  R30,R4
000372 d765      	RCALL SUBOPT_0x12
                 ; 0000 00F8             glcd_moveto(50, 28);
000373 e1ac      	LDI  R26,LOW(28)
000374 d76d      	RCALL SUBOPT_0x13
                 ; 0000 00F9             glcd_outtext(buff);
                 ; 0000 00FA             sprintf(buff, "%u  ", (unsigned int)dht_nhiet_do);
000375 d75f      	RCALL SUBOPT_0x11
                +
000376 e4ee     +LDI R30 , LOW ( 2 * _0x0 + ( 38 ) )
000377 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 38 ) )
                 	__POINTW1FN _0x0,38
000378 d759      	RCALL SUBOPT_0x10
000379 2de5      	MOV  R30,R5
00037a d75d      	RCALL SUBOPT_0x12
                 ; 0000 00FB             glcd_moveto(50, 18);
00037b e1a2      	LDI  R26,LOW(18)
00037c d765      	RCALL SUBOPT_0x13
                 ; 0000 00FC             glcd_outtext(buff);
                 ; 0000 00FD         }
                 ; 0000 00FE 
                 ; 0000 00FF         set_up_sieu_am();
                 _0xD9:
00037d def8      	RCALL _set_up_sieu_am
                 ; 0000 0100         glcd_moveto(50, 37);
00037e e3e2      	LDI  R30,LOW(50)
00037f 93ea      	ST   -Y,R30
000380 e2a5      	LDI  R26,LOW(37)
000381 d596      	RCALL _glcd_moveto
                 ; 0000 0101         if((int)distance > 20)
000382 d763      	RCALL SUBOPT_0x14
000383 9775      	SBIW R30,21
000384 f044      	BRLT _0xDA
                 ; 0000 0102             sprintf(buff, "NaN");
000385 d74f      	RCALL SUBOPT_0x11
                +
000386 e5e3     +LDI R30 , LOW ( 2 * _0x0 + ( 43 ) )
000387 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 43 ) )
                 	__POINTW1FN _0x0,43
000388 d749      	RCALL SUBOPT_0x10
000389 e080      	LDI  R24,0
00038a d198      	RCALL _sprintf
00038b 9624      	ADIW R28,4
                 ; 0000 0103         else
00038c c00a      	RJMP _0xDB
                 _0xDA:
                 ; 0000 0104             sprintf(buff, "%d ", (int)distance);
00038d d747      	RCALL SUBOPT_0x11
                +
00038e e5e7     +LDI R30 , LOW ( 2 * _0x0 + ( 47 ) )
00038f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 47 ) )
                 	__POINTW1FN _0x0,47
000390 d741      	RCALL SUBOPT_0x10
000391 d754      	RCALL SUBOPT_0x14
000392 d950      	RCALL __CWD1
000393 d9a1      	RCALL __PUTPARD1
000394 e084      	LDI  R24,4
000395 d18d      	RCALL _sprintf
000396 9628      	ADIW R28,8
                 ; 0000 0105         glcd_outtext(buff);
                 _0xDB:
000397 eaa0      	LDI  R26,LOW(_buff)
000398 e0b1      	LDI  R27,HIGH(_buff)
000399 d555      	RCALL _glcd_outtext
                 ; 0000 0106 
                 ; 0000 0107         data_send.flag = 1;
                +
00039a e0e1     +LDI R30 , LOW ( 0x1 )
00039b e0f0     +LDI R31 , HIGH ( 0x1 )
00039c e060     +LDI R22 , BYTE3 ( 0x1 )
00039d e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00039e 93e0 01e6 	STS  _data_send,R30
0003a0 93f0 01e7 	STS  _data_send+1,R31
0003a2 9360 01e8 	STS  _data_send+2,R22
0003a4 9370 01e9 	STS  _data_send+3,R23
                 ; 0000 0108         data_send.temp = (long int)dht_nhiet_do;
0003a6 2de5      	MOV  R30,R5
0003a7 e0f0      	LDI  R31,0
0003a8 d93a      	RCALL __CWD1
                +
0003a9 93e0 01f2+STS _data_send + ( 12 ) , R30
0003ab 93f0 01f3+STS _data_send + ( 12 ) + 1 , R31
0003ad 9360 01f4+STS _data_send + ( 12 ) + 2 , R22
0003af 9370 01f5+STS _data_send + ( 12 ) + 3 , R23
                 	__PUTD1MN _data_send,12
                 ; 0000 0109         data_send.humi = (long int)dht_do_am;
0003b1 2de4      	MOV  R30,R4
0003b2 e0f0      	LDI  R31,0
0003b3 d92f      	RCALL __CWD1
                +
0003b4 93e0 01ee+STS _data_send + ( 8 ) , R30
0003b6 93f0 01ef+STS _data_send + ( 8 ) + 1 , R31
0003b8 9360 01f0+STS _data_send + ( 8 ) + 2 , R22
0003ba 9370 01f1+STS _data_send + ( 8 ) + 3 , R23
                 	__PUTD1MN _data_send,8
                 ; 0000 010A         data_send.light = (long int)read_adc(6)/4;
0003bc e0a6      	LDI  R26,LOW(6)
0003bd d732      	RCALL SUBOPT_0x15
                +
0003be 93e0 01ea+STS _data_send + ( 4 ) , R30
0003c0 93f0 01eb+STS _data_send + ( 4 ) + 1 , R31
0003c2 9360 01ec+STS _data_send + ( 4 ) + 2 , R22
0003c4 9370 01ed+STS _data_send + ( 4 ) + 3 , R23
                 	__PUTD1MN _data_send,4
                 ; 0000 010B         data_send.sm = (long int)read_adc(7)/4;
0003c6 e0a7      	LDI  R26,LOW(7)
0003c7 d728      	RCALL SUBOPT_0x15
                +
0003c8 93e0 01f6+STS _data_send + ( 16 ) , R30
0003ca 93f0 01f7+STS _data_send + ( 16 ) + 1 , R31
0003cc 9360 01f8+STS _data_send + ( 16 ) + 2 , R22
0003ce 9370 01f9+STS _data_send + ( 16 ) + 3 , R23
                 	__PUTD1MN _data_send,16
                 ; 0000 010C         data_send.water = (long int)distance;
0003d0 d715      	RCALL SUBOPT_0x14
                +
0003d1 93e0 01fa+STS _data_send + ( 20 ) , R30
0003d3 93f0 01fb+STS _data_send + ( 20 ) + 1 , R31
0003d5 9360 01fc+STS _data_send + ( 20 ) + 2 , R22
0003d7 9370 01fd+STS _data_send + ( 20 ) + 3 , R23
                 	__PUTD1MN _data_send,20
                 ; 0000 010D 
                 ; 0000 010E         RF_Send_TX(data_send);
0003d9 eee6      	LDI  R30,LOW(_data_send)
0003da e0f1      	LDI  R31,HIGH(_data_send)
0003db e1a8      	LDI  R26,24
0003dc d95d      	RCALL __PUTPARL
0003dd de6d      	RCALL _RF_Send_TX
                 ; 0000 010F 
                 ; 0000 0110         delay_ms(200);
0003de eca8      	LDI  R26,LOW(200)
0003df d6c5      	RCALL SUBOPT_0x2
                 ; 0000 0111 
                 ; 0000 0112         }
0003e0 cf84      	RJMP _0xD6
                 ; 0000 0113 }
                 _0xDC:
0003e1 cfff      	RJMP _0xDC
                 ; .FEND
                 
                 	.DSEG
                 _0xD5:
000160           	.BYTE 0x23
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0003e2 d6bb      	RCALL SUBOPT_0x0
0003e3 d983      	RCALL __SAVELOCR2
0003e4 d716      	RCALL SUBOPT_0x16
0003e5 9612      	ADIW R26,2
0003e6 d946      	RCALL __GETW1P
0003e7 9730      	SBIW R30,0
0003e8 f0f1      	BREQ _0x2020010
0003e9 d711      	RCALL SUBOPT_0x16
0003ea d713      	RCALL SUBOPT_0x17
0003eb 018f      	MOVW R16,R30
0003ec 9730      	SBIW R30,0
0003ed f061      	BREQ _0x2020012
                +
0003ee 3002     +CPI R16 , LOW ( 2 )
0003ef e0e0     +LDI R30 , HIGH ( 2 )
0003f0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0003f1 f070      	BRLO _0x2020013
0003f2 01f8      	MOVW R30,R16
0003f3 9731      	SBIW R30,1
0003f4 018f      	MOVW R16,R30
                +
0003f5 81aa     +LDD R26 , Y + 2
0003f6 81bb     +LDD R27 , Y + 2 + 1
0003f7 9614     +ADIW R26 , 4
0003f8 93ed     +ST X + , R30
0003f9 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0003fa d700      	RCALL SUBOPT_0x16
0003fb 9612      	ADIW R26,2
0003fc d6c3      	RCALL SUBOPT_0xB
0003fd 9731      	SBIW R30,1
0003fe 81ac      	LDD  R26,Y+4
0003ff 83a0      	STD  Z+0,R26
                 _0x2020013:
000400 d6fa      	RCALL SUBOPT_0x16
000401 d92b      	RCALL __GETW1P
000402 23ff      	TST  R31
000403 f012      	BRMI _0x2020014
000404 d6f6      	RCALL SUBOPT_0x16
000405 d6ba      	RCALL SUBOPT_0xB
                 _0x2020014:
000406 c005      	RJMP _0x2020015
                 _0x2020010:
000407 d6f3      	RCALL SUBOPT_0x16
000408 efef      	LDI  R30,LOW(65535)
000409 efff      	LDI  R31,HIGH(65535)
00040a 93ed      	ST   X+,R30
00040b 93fc      	ST   X,R31
                 _0x2020015:
00040c d961      	RCALL __LOADLOCR2
00040d c60f      	RJMP _0x2120004
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00040e d68f      	RCALL SUBOPT_0x0
00040f 9726      	SBIW R28,6
000410 d952      	RCALL __SAVELOCR6
000411 e010      	LDI  R17,0
000412 85ac      	LDD  R26,Y+12
000413 85bd      	LDD  R27,Y+12+1
000414 d6ec      	RCALL SUBOPT_0x18
000415 93ed      	ST   X+,R30
000416 93fc      	ST   X,R31
                 _0x2020016:
000417 89ea      	LDD  R30,Y+18
000418 89fb      	LDD  R31,Y+18+1
000419 9631      	ADIW R30,1
00041a 8bea      	STD  Y+18,R30
00041b 8bfb      	STD  Y+18+1,R31
00041c 9731      	SBIW R30,1
00041d 91e4      	LPM  R30,Z
00041e 2f2e      	MOV  R18,R30
00041f 30e0      	CPI  R30,0
000420 f409      	BRNE PC+2
000421 c0fb      	RJMP _0x2020018
000422 2fe1      	MOV  R30,R17
000423 30e0      	CPI  R30,0
000424 f431      	BRNE _0x202001C
000425 3225      	CPI  R18,37
000426 f411      	BRNE _0x202001D
000427 e011      	LDI  R17,LOW(1)
000428 c001      	RJMP _0x202001E
                 _0x202001D:
000429 d6da      	RCALL SUBOPT_0x19
                 _0x202001E:
00042a c0f1      	RJMP _0x202001B
                 _0x202001C:
00042b 30e1      	CPI  R30,LOW(0x1)
00042c f4a1      	BRNE _0x202001F
00042d 3225      	CPI  R18,37
00042e f411      	BRNE _0x2020020
00042f d6d4      	RCALL SUBOPT_0x19
000430 c0ea      	RJMP _0x20200CC
                 _0x2020020:
000431 e012      	LDI  R17,LOW(2)
000432 e040      	LDI  R20,LOW(0)
000433 e000      	LDI  R16,LOW(0)
000434 322d      	CPI  R18,45
000435 f411      	BRNE _0x2020021
000436 e001      	LDI  R16,LOW(1)
000437 c0e4      	RJMP _0x202001B
                 _0x2020021:
000438 322b      	CPI  R18,43
000439 f411      	BRNE _0x2020022
00043a e24b      	LDI  R20,LOW(43)
00043b c0e0      	RJMP _0x202001B
                 _0x2020022:
00043c 3220      	CPI  R18,32
00043d f411      	BRNE _0x2020023
00043e e240      	LDI  R20,LOW(32)
00043f c0dc      	RJMP _0x202001B
                 _0x2020023:
000440 c002      	RJMP _0x2020024
                 _0x202001F:
000441 30e2      	CPI  R30,LOW(0x2)
000442 f439      	BRNE _0x2020025
                 _0x2020024:
000443 e050      	LDI  R21,LOW(0)
000444 e013      	LDI  R17,LOW(3)
000445 3320      	CPI  R18,48
000446 f411      	BRNE _0x2020026
000447 6800      	ORI  R16,LOW(128)
000448 c0d3      	RJMP _0x202001B
                 _0x2020026:
000449 c003      	RJMP _0x2020027
                 _0x2020025:
00044a 30e3      	CPI  R30,LOW(0x3)
00044b f009      	BREQ PC+2
00044c c0cf      	RJMP _0x202001B
                 _0x2020027:
00044d 3320      	CPI  R18,48
00044e f010      	BRLO _0x202002A
00044f 332a      	CPI  R18,58
000450 f008      	BRLO _0x202002B
                 _0x202002A:
000451 c007      	RJMP _0x2020029
                 _0x202002B:
000452 e0aa      	LDI  R26,LOW(10)
000453 9f5a      	MUL  R21,R26
000454 2d50      	MOV  R21,R0
000455 2fe2      	MOV  R30,R18
000456 53e0      	SUBI R30,LOW(48)
000457 0f5e      	ADD  R21,R30
000458 c0c3      	RJMP _0x202001B
                 _0x2020029:
000459 2fe2      	MOV  R30,R18
00045a 36e3      	CPI  R30,LOW(0x63)
00045b f439      	BRNE _0x202002F
00045c d6ae      	RCALL SUBOPT_0x1A
00045d d6b0      	RCALL SUBOPT_0x1B
00045e d6ac      	RCALL SUBOPT_0x1A
00045f 81a4      	LDD  R26,Z+4
000460 93aa      	ST   -Y,R26
000461 d6b0      	RCALL SUBOPT_0x1C
000462 c0b8      	RJMP _0x2020030
                 _0x202002F:
000463 37e3      	CPI  R30,LOW(0x73)
000464 f431      	BRNE _0x2020032
000465 d6b2      	RCALL SUBOPT_0x1D
000466 d6b3      	RCALL SUBOPT_0x1E
000467 d6b5      	RCALL SUBOPT_0x1F
000468 d5b6      	RCALL _strlen
000469 2f1e      	MOV  R17,R30
00046a c008      	RJMP _0x2020033
                 _0x2020032:
00046b 37e0      	CPI  R30,LOW(0x70)
00046c f451      	BRNE _0x2020035
00046d d6aa      	RCALL SUBOPT_0x1D
00046e d6ab      	RCALL SUBOPT_0x1E
00046f d6ad      	RCALL SUBOPT_0x1F
000470 d5b9      	RCALL _strlenf
000471 2f1e      	MOV  R17,R30
000472 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000473 6002      	ORI  R16,LOW(2)
000474 770f      	ANDI R16,LOW(127)
000475 e030      	LDI  R19,LOW(0)
000476 c02d      	RJMP _0x2020036
                 _0x2020035:
000477 36e4      	CPI  R30,LOW(0x64)
000478 f011      	BREQ _0x2020039
000479 36e9      	CPI  R30,LOW(0x69)
00047a f411      	BRNE _0x202003A
                 _0x2020039:
00047b 6004      	ORI  R16,LOW(4)
00047c c002      	RJMP _0x202003B
                 _0x202003A:
00047d 37e5      	CPI  R30,LOW(0x75)
00047e f429      	BRNE _0x202003C
                 _0x202003B:
00047f e0ea      	LDI  R30,LOW(_tbl10_G101*2)
000480 e0f2      	LDI  R31,HIGH(_tbl10_G101*2)
000481 d6a0      	RCALL SUBOPT_0x20
000482 e015      	LDI  R17,LOW(5)
000483 c00b      	RJMP _0x202003D
                 _0x202003C:
000484 35e8      	CPI  R30,LOW(0x58)
000485 f411      	BRNE _0x202003F
000486 6008      	ORI  R16,LOW(8)
000487 c003      	RJMP _0x2020040
                 _0x202003F:
000488 37e8      	CPI  R30,LOW(0x78)
000489 f009      	BREQ PC+2
00048a c090      	RJMP _0x2020071
                 _0x2020040:
00048b e1e4      	LDI  R30,LOW(_tbl16_G101*2)
00048c e0f2      	LDI  R31,HIGH(_tbl16_G101*2)
00048d d694      	RCALL SUBOPT_0x20
00048e e014      	LDI  R17,LOW(4)
                 _0x202003D:
00048f ff02      	SBRS R16,2
000490 c010      	RJMP _0x2020042
000491 d686      	RCALL SUBOPT_0x1D
000492 d687      	RCALL SUBOPT_0x1E
000493 d691      	RCALL SUBOPT_0x21
000494 85ab      	LDD  R26,Y+11
000495 23aa      	TST  R26
000496 f422      	BRPL _0x2020043
000497 d690      	RCALL SUBOPT_0x22
000498 d82e      	RCALL __ANEGW1
000499 d68b      	RCALL SUBOPT_0x21
00049a e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00049b 3040      	CPI  R20,0
00049c f011      	BREQ _0x2020044
00049d 5f1f      	SUBI R17,-LOW(1)
00049e c001      	RJMP _0x2020045
                 _0x2020044:
00049f 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0004a0 c003      	RJMP _0x2020046
                 _0x2020042:
0004a1 d676      	RCALL SUBOPT_0x1D
0004a2 d677      	RCALL SUBOPT_0x1E
0004a3 d681      	RCALL SUBOPT_0x21
                 _0x2020046:
                 _0x2020036:
0004a4 fd00      	SBRC R16,0
0004a5 c010      	RJMP _0x2020047
                 _0x2020048:
0004a6 1715      	CP   R17,R21
0004a7 f470      	BRSH _0x202004A
0004a8 ff07      	SBRS R16,7
0004a9 c008      	RJMP _0x202004B
0004aa ff02      	SBRS R16,2
0004ab c004      	RJMP _0x202004C
0004ac 7f0b      	ANDI R16,LOW(251)
0004ad 2f24      	MOV  R18,R20
0004ae 5011      	SUBI R17,LOW(1)
0004af c001      	RJMP _0x202004D
                 _0x202004C:
0004b0 e320      	LDI  R18,LOW(48)
                 _0x202004D:
0004b1 c001      	RJMP _0x202004E
                 _0x202004B:
0004b2 e220      	LDI  R18,LOW(32)
                 _0x202004E:
0004b3 d650      	RCALL SUBOPT_0x19
0004b4 5051      	SUBI R21,LOW(1)
0004b5 cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0004b6 2f31      	MOV  R19,R17
0004b7 ff01      	SBRS R16,1
0004b8 c015      	RJMP _0x202004F
                 _0x2020050:
0004b9 3030      	CPI  R19,0
0004ba f091      	BREQ _0x2020052
0004bb ff03      	SBRS R16,3
0004bc c005      	RJMP _0x2020053
0004bd 81ee      	LDD  R30,Y+6
0004be 81ff      	LDD  R31,Y+6+1
0004bf 9125      	LPM  R18,Z+
0004c0 d661      	RCALL SUBOPT_0x20
0004c1 c005      	RJMP _0x2020054
                 _0x2020053:
0004c2 81ae      	LDD  R26,Y+6
0004c3 81bf      	LDD  R27,Y+6+1
0004c4 912d      	LD   R18,X+
0004c5 83ae      	STD  Y+6,R26
0004c6 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0004c7 d63c      	RCALL SUBOPT_0x19
0004c8 3050      	CPI  R21,0
0004c9 f009      	BREQ _0x2020055
0004ca 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0004cb 5031      	SUBI R19,LOW(1)
0004cc cfec      	RJMP _0x2020050
                 _0x2020052:
0004cd c044      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0004ce e320      	LDI  R18,LOW(48)
0004cf 81ee      	LDD  R30,Y+6
0004d0 81ff      	LDD  R31,Y+6+1
0004d1 d85f      	RCALL __GETW1PF
0004d2 87e8      	STD  Y+8,R30
0004d3 87f9      	STD  Y+8+1,R31
0004d4 81ee      	LDD  R30,Y+6
0004d5 81ff      	LDD  R31,Y+6+1
0004d6 9632      	ADIW R30,2
0004d7 d64a      	RCALL SUBOPT_0x20
                 _0x202005A:
0004d8 85e8      	LDD  R30,Y+8
0004d9 85f9      	LDD  R31,Y+8+1
0004da d650      	RCALL SUBOPT_0x23
0004db 17ae      	CP   R26,R30
0004dc 07bf      	CPC  R27,R31
0004dd f040      	BRLO _0x202005C
0004de 5f2f      	SUBI R18,-LOW(1)
0004df 85a8      	LDD  R26,Y+8
0004e0 85b9      	LDD  R27,Y+8+1
0004e1 d646      	RCALL SUBOPT_0x22
0004e2 1bea      	SUB  R30,R26
0004e3 0bfb      	SBC  R31,R27
0004e4 d640      	RCALL SUBOPT_0x21
0004e5 cff2      	RJMP _0x202005A
                 _0x202005C:
0004e6 332a      	CPI  R18,58
0004e7 f028      	BRLO _0x202005D
0004e8 ff03      	SBRS R16,3
0004e9 c002      	RJMP _0x202005E
0004ea 5f29      	SUBI R18,-LOW(7)
0004eb c001      	RJMP _0x202005F
                 _0x202005E:
0004ec 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0004ed fd04      	SBRC R16,4
0004ee c019      	RJMP _0x2020061
0004ef 3321      	CPI  R18,49
0004f0 f420      	BRSH _0x2020063
0004f1 85a8      	LDD  R26,Y+8
0004f2 85b9      	LDD  R27,Y+8+1
0004f3 9711      	SBIW R26,1
0004f4 f409      	BRNE _0x2020062
                 _0x2020063:
0004f5 c009      	RJMP _0x20200CD
                 _0x2020062:
0004f6 1753      	CP   R21,R19
0004f7 f010      	BRLO _0x2020067
0004f8 ff00      	SBRS R16,0
0004f9 c001      	RJMP _0x2020068
                 _0x2020067:
0004fa c011      	RJMP _0x2020066
                 _0x2020068:
0004fb e220      	LDI  R18,LOW(32)
0004fc ff07      	SBRS R16,7
0004fd c00a      	RJMP _0x2020069
0004fe e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0004ff 6100      	ORI  R16,LOW(16)
000500 ff02      	SBRS R16,2
000501 c006      	RJMP _0x202006A
000502 7f0b      	ANDI R16,LOW(251)
000503 934a      	ST   -Y,R20
000504 d60d      	RCALL SUBOPT_0x1C
000505 3050      	CPI  R21,0
000506 f009      	BREQ _0x202006B
000507 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000508 d5fb      	RCALL SUBOPT_0x19
000509 3050      	CPI  R21,0
00050a f009      	BREQ _0x202006C
00050b 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
00050c 5031      	SUBI R19,LOW(1)
00050d 85a8      	LDD  R26,Y+8
00050e 85b9      	LDD  R27,Y+8+1
00050f 9712      	SBIW R26,2
000510 f008      	BRLO _0x2020059
000511 cfbc      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000512 ff00      	SBRS R16,0
000513 c007      	RJMP _0x202006D
                 _0x202006E:
000514 3050      	CPI  R21,0
000515 f029      	BREQ _0x2020070
000516 5051      	SUBI R21,LOW(1)
000517 e2e0      	LDI  R30,LOW(32)
000518 93ea      	ST   -Y,R30
000519 d5f8      	RCALL SUBOPT_0x1C
00051a cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
00051b e010      	LDI  R17,LOW(0)
                 _0x202001B:
00051c cefa      	RJMP _0x2020016
                 _0x2020018:
00051d 85ac      	LDD  R26,Y+12
00051e 85bd      	LDD  R27,Y+12+1
00051f d80d      	RCALL __GETW1P
000520 d849      	RCALL __LOADLOCR6
000521 9664      	ADIW R28,20
000522 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000523 92ff      	PUSH R15
000524 2ef8      	MOV  R15,R24
000525 9726      	SBIW R28,6
000526 d83e      	RCALL __SAVELOCR4
000527 d606      	RCALL SUBOPT_0x24
000528 9730      	SBIW R30,0
000529 f419      	BRNE _0x2020072
00052a efef      	LDI  R30,LOW(65535)
00052b efff      	LDI  R31,HIGH(65535)
00052c c01c      	RJMP _0x212000B
                 _0x2020072:
00052d 01de      	MOVW R26,R28
00052e 9616      	ADIW R26,6
00052f d793      	RCALL __ADDW2R15
000530 018d      	MOVW R16,R26
000531 d5fc      	RCALL SUBOPT_0x24
000532 d5ef      	RCALL SUBOPT_0x20
000533 e0e0      	LDI  R30,LOW(0)
000534 87e8      	STD  Y+8,R30
000535 87e9      	STD  Y+8+1,R30
000536 01de      	MOVW R26,R28
000537 961a      	ADIW R26,10
000538 d78a      	RCALL __ADDW2R15
000539 d7f3      	RCALL __GETW1P
00053a d597      	RCALL SUBOPT_0x10
00053b 931a      	ST   -Y,R17
00053c 930a      	ST   -Y,R16
00053d eee2      	LDI  R30,LOW(_put_buff_G101)
00053e e0f3      	LDI  R31,HIGH(_put_buff_G101)
00053f d592      	RCALL SUBOPT_0x10
000540 01de      	MOVW R26,R28
000541 961a      	ADIW R26,10
000542 decb      	RCALL __print_G101
000543 019f      	MOVW R18,R30
000544 81ae      	LDD  R26,Y+6
000545 81bf      	LDD  R27,Y+6+1
000546 e0e0      	LDI  R30,LOW(0)
000547 93ec      	ST   X,R30
000548 01f9      	MOVW R30,R18
                 _0x212000B:
000549 d822      	RCALL __LOADLOCR4
00054a 962a      	ADIW R28,10
00054b 90ff      	POP  R15
00054c 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
00054d 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
00054e d56a      	RCALL SUBOPT_0x8
00054f 98a9      	CBI  0x15,1
000550 e018      	LDI  R17,LOW(8)
                 _0x2040004:
000551 dffb      	RCALL _pcd8544_delay_G102
000552 81e9      	LDD  R30,Y+1
000553 78e0      	ANDI R30,LOW(0x80)
000554 f011      	BREQ _0x2040006
000555 9aab      	SBI  0x15,3
000556 c001      	RJMP _0x2040007
                 _0x2040006:
000557 98ab      	CBI  0x15,3
                 _0x2040007:
000558 81e9      	LDD  R30,Y+1
000559 0fee      	LSL  R30
00055a 83e9      	STD  Y+1,R30
00055b dff1      	RCALL _pcd8544_delay_G102
00055c 9aac      	SBI  0x15,4
00055d dfef      	RCALL _pcd8544_delay_G102
00055e 98ac      	CBI  0x15,4
00055f 5011      	SUBI R17,LOW(1)
000560 f781      	BRNE _0x2040004
000561 9aa9      	SBI  0x15,1
000562 8118      	LDD  R17,Y+0
000563 c4da      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000564 93aa      	ST   -Y,R26
000565 98aa      	CBI  0x15,2
000566 81a8      	LD   R26,Y
000567 dfe6      	RCALL _pcd8544_wrbus_G102
000568 c0a1      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
000569 93aa      	ST   -Y,R26
00056a 9aaa      	SBI  0x15,2
00056b 81a8      	LD   R26,Y
00056c dfe1      	RCALL _pcd8544_wrbus_G102
00056d c09c      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
00056e d54a      	RCALL SUBOPT_0x8
00056f 81e9      	LDD  R30,Y+1
000570 d5c2      	RCALL SUBOPT_0x25
000571 2f1e      	MOV  R17,R30
000572 e5e4      	LDI  R30,LOW(84)
000573 9fe1      	MUL  R30,R17
000574 01f0      	MOVW R30,R0
000575 01df      	MOVW R26,R30
000576 81ea      	LDD  R30,Y+2
000577 d5bf      	RCALL SUBOPT_0x26
000578 93e0 020a 	STS  _gfx_addr_G102,R30
00057a 93f0 020b 	STS  _gfx_addr_G102+1,R31
00057c 2fe1      	MOV  R30,R17
00057d 8118      	LDD  R17,Y+0
00057e c500      	RJMP _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00057f 93aa      	ST   -Y,R26
000580 81e9      	LDD  R30,Y+1
000581 68e0      	ORI  R30,0x80
000582 d5b6      	RCALL SUBOPT_0x27
000583 81e9      	LDD  R30,Y+1
000584 93ea      	ST   -Y,R30
000585 81a9      	LDD  R26,Y+1
000586 dfe7      	RCALL _pcd8544_setaddr_G102
000587 64e0      	ORI  R30,0x40
000588 d5b0      	RCALL SUBOPT_0x27
000589 c4b4      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00058a 93aa      	ST   -Y,R26
00058b 81e9      	LDD  R30,Y+1
00058c 93ea      	ST   -Y,R30
00058d 81a9      	LDD  R26,Y+1
00058e dff0      	RCALL _pcd8544_gotoxy
00058f 91e0 020a 	LDS  R30,_gfx_addr_G102
000591 91f0 020b 	LDS  R31,_gfx_addr_G102+1
000593 d5a7      	RCALL SUBOPT_0x28
000594 81e0      	LD   R30,Z
000595 c4a8      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000596 93aa      	ST   -Y,R26
000597 d5a6      	RCALL SUBOPT_0x29
000598 d5a8      	RCALL SUBOPT_0x2A
000599 81a8      	LD   R26,Y
00059a 83a0      	STD  Z+0,R26
00059b dfcd      	RCALL _pcd8544_wrdata_G102
00059c c06d      	RJMP _0x212000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
00059d d500      	RCALL SUBOPT_0x0
00059e d7c6      	RCALL __SAVELOCR4
00059f 9aa1      	SBI  0x14,1
0005a0 9aa9      	SBI  0x15,1
0005a1 9aa4      	SBI  0x14,4
0005a2 98ac      	CBI  0x15,4
0005a3 9aa3      	SBI  0x14,3
0005a4 9aa2      	SBI  0x14,2
0005a5 9aa0      	SBI  0x14,0
0005a6 98a8      	CBI  0x15,0
0005a7 e0aa      	LDI  R26,LOW(10)
0005a8 d4fc      	RCALL SUBOPT_0x2
0005a9 9aa8      	SBI  0x15,0
0005aa d598      	RCALL SUBOPT_0x2B
0005ab 9730      	SBIW R30,0
0005ac f0d9      	BREQ _0x2040008
0005ad d595      	RCALL SUBOPT_0x2B
0005ae 81e6      	LDD  R30,Z+6
0005af 70e3      	ANDI R30,LOW(0x3)
0005b0 2f1e      	MOV  R17,R30
0005b1 d591      	RCALL SUBOPT_0x2B
0005b2 81e6      	LDD  R30,Z+6
0005b3 95e6      	LSR  R30
0005b4 95e6      	LSR  R30
0005b5 70e7      	ANDI R30,LOW(0x7)
0005b6 2f0e      	MOV  R16,R30
0005b7 d58b      	RCALL SUBOPT_0x2B
0005b8 81e7      	LDD  R30,Z+7
0005b9 77ef      	ANDI R30,0x7F
0005ba 2f3e      	MOV  R19,R30
0005bb 81ac      	LDD  R26,Y+4
0005bc 81bd      	LDD  R27,Y+4+1
0005bd d76f      	RCALL __GETW1P
0005be d587      	RCALL SUBOPT_0x2C
0005bf 81ac      	LDD  R26,Y+4
0005c0 81bd      	LDD  R27,Y+4+1
0005c1 9612      	ADIW R26,2
0005c2 d76a      	RCALL __GETW1P
0005c3 d587      	RCALL SUBOPT_0x2D
0005c4 81ac      	LDD  R26,Y+4
0005c5 81bd      	LDD  R27,Y+4+1
0005c6 d537      	RCALL SUBOPT_0x17
0005c7 c008      	RJMP _0x20400A0
                 _0x2040008:
0005c8 e010      	LDI  R17,LOW(0)
0005c9 e003      	LDI  R16,LOW(3)
0005ca e332      	LDI  R19,LOW(50)
0005cb d535      	RCALL SUBOPT_0x18
0005cc d579      	RCALL SUBOPT_0x2C
0005cd d533      	RCALL SUBOPT_0x18
0005ce d57c      	RCALL SUBOPT_0x2D
0005cf d531      	RCALL SUBOPT_0x18
                 _0x20400A0:
                +
0005d0 93e0 019e+STS _glcd_state + ( 27 ) , R30
0005d2 93f0 019f+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0005d4 e2a1      	LDI  R26,LOW(33)
0005d5 df8e      	RCALL _pcd8544_wrcmd
0005d6 2fe1      	MOV  R30,R17
0005d7 60e4      	ORI  R30,4
0005d8 d560      	RCALL SUBOPT_0x27
0005d9 2fe0      	MOV  R30,R16
0005da 61e0      	ORI  R30,0x10
0005db d55d      	RCALL SUBOPT_0x27
0005dc 2fe3      	MOV  R30,R19
0005dd 68e0      	ORI  R30,0x80
0005de d55a      	RCALL SUBOPT_0x27
0005df e2a0      	LDI  R26,LOW(32)
0005e0 df83      	RCALL _pcd8544_wrcmd
0005e1 e0a1      	LDI  R26,LOW(1)
0005e2 d01f      	RCALL _glcd_display
0005e3 e0e1      	LDI  R30,LOW(1)
0005e4 93e0 0183 	STS  _glcd_state,R30
0005e6 e0e0      	LDI  R30,LOW(0)
                +
0005e7 93e0 0184+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0005e9 e0e1      	LDI  R30,LOW(1)
                +
0005ea 93e0 0189+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0005ec 93e0 018a+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0005ee 93e0 018b+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0005f0 efef      	LDI  R30,LOW(255)
                +
0005f1 93e0 018c+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0005f3 e0e1      	LDI  R30,LOW(1)
                +
0005f4 93e0 0193+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0005f6 e9e4     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0005f7 e0f1     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0005f8 d4d9      	RCALL SUBOPT_0x10
0005f9 efef      	LDI  R30,LOW(255)
0005fa 93ea      	ST   -Y,R30
0005fb e0a8      	LDI  R26,LOW(8)
0005fc e0b0      	LDI  R27,0
0005fd d412      	RCALL _memset
0005fe d00d      	RCALL _glcd_clear
0005ff e0e1      	LDI  R30,LOW(1)
000600 d76b      	RCALL __LOADLOCR4
000601 c078      	RJMP _0x2120009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
000602 93aa      	ST   -Y,R26
000603 81e8      	LD   R30,Y
000604 30e0      	CPI  R30,0
000605 f011      	BREQ _0x204000A
000606 e0ec      	LDI  R30,LOW(12)
000607 c001      	RJMP _0x204000B
                 _0x204000A:
000608 e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
000609 d52f      	RCALL SUBOPT_0x27
                 _0x212000A:
00060a 9621      	ADIW R28,1
00060b 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
00060c d758      	RCALL __SAVELOCR4
00060d e030      	LDI  R19,0
                +
00060e 91e0 0184+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000610 30e0      	CPI  R30,0
000611 f009      	BREQ _0x204000D
000612 ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
000613 d49e      	RCALL SUBOPT_0x6
000614 e0a0      	LDI  R26,LOW(0)
000615 df69      	RCALL _pcd8544_gotoxy
                +
000616 ef08     +LDI R16 , LOW ( 504 )
000617 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
000618 01f8      	MOVW R30,R16
                +
000619 5001     +SUBI R16 , LOW ( 1 )
00061a 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00061b 9730      	SBIW R30,0
00061c f019      	BREQ _0x2040010
00061d 2fa3      	MOV  R26,R19
00061e df77      	RCALL _pcd8544_wrbyte
00061f cff8      	RJMP _0x204000E
                 _0x2040010:
000620 d491      	RCALL SUBOPT_0x6
000621 e0a0      	LDI  R26,LOW(0)
000622 d2f5      	RCALL _glcd_moveto
000623 d748      	RCALL __LOADLOCR4
000624 c477      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000625 93aa      	ST   -Y,R26
000626 d740      	RCALL __SAVELOCR2
000627 81ac      	LDD  R26,Y+4
000628 35a4      	CPI  R26,LOW(0x54)
000629 f418      	BRSH _0x2040012
00062a 81ab      	LDD  R26,Y+3
00062b 33a0      	CPI  R26,LOW(0x30)
00062c f010      	BRLO _0x2040011
                 _0x2040012:
00062d d740      	RCALL __LOADLOCR2
00062e c3ee      	RJMP _0x2120004
                 _0x2040011:
00062f 81ec      	LDD  R30,Y+4
000630 93ea      	ST   -Y,R30
000631 81ac      	LDD  R26,Y+4
000632 df57      	RCALL _pcd8544_rdbyte
000633 2f1e      	MOV  R17,R30
000634 81eb      	LDD  R30,Y+3
000635 70e7      	ANDI R30,LOW(0x7)
000636 e0a1      	LDI  R26,LOW(1)
000637 d69b      	RCALL __LSLB12
000638 2f0e      	MOV  R16,R30
000639 81ea      	LDD  R30,Y+2
00063a 30e0      	CPI  R30,0
00063b f011      	BREQ _0x2040014
00063c 2b10      	OR   R17,R16
00063d c003      	RJMP _0x2040015
                 _0x2040014:
00063e 2fe0      	MOV  R30,R16
00063f 95e0      	COM  R30
000640 231e      	AND  R17,R30
                 _0x2040015:
000641 2fa1      	MOV  R26,R17
000642 df53      	RCALL _pcd8544_wrbyte
000643 d72a      	RCALL __LOADLOCR2
000644 c3d8      	RJMP _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
000645 d473      	RCALL SUBOPT_0x8
000646 81ed      	LDD  R30,Y+5
000647 93ea      	ST   -Y,R30
000648 81ad      	LDD  R26,Y+5
000649 df40      	RCALL _pcd8544_rdbyte
00064a 2f1e      	MOV  R17,R30
00064b 81e9      	LDD  R30,Y+1
00064c 30e7      	CPI  R30,LOW(0x7)
00064d f011      	BREQ _0x2040020
00064e 30e8      	CPI  R30,LOW(0x8)
00064f f431      	BRNE _0x2040021
                 _0x2040020:
000650 81eb      	LDD  R30,Y+3
000651 93ea      	ST   -Y,R30
000652 81aa      	LDD  R26,Y+2
000653 d3ec      	RCALL _glcd_mappixcolor1bit
000654 83eb      	STD  Y+3,R30
000655 c008      	RJMP _0x2040022
                 _0x2040021:
000656 30e3      	CPI  R30,LOW(0x3)
000657 f421      	BRNE _0x2040024
000658 81eb      	LDD  R30,Y+3
000659 95e0      	COM  R30
00065a 83eb      	STD  Y+3,R30
00065b c002      	RJMP _0x2040025
                 _0x2040024:
00065c 30e0      	CPI  R30,0
00065d f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
00065e 81ea      	LDD  R30,Y+2
00065f 95e0      	COM  R30
000660 231e      	AND  R17,R30
000661 c002      	RJMP _0x2040027
                 _0x2040026:
000662 30e2      	CPI  R30,LOW(0x2)
000663 f429      	BRNE _0x2040028
                 _0x2040027:
000664 81ea      	LDD  R30,Y+2
000665 81ab      	LDD  R26,Y+3
000666 23ea      	AND  R30,R26
000667 2b1e      	OR   R17,R30
000668 c00e      	RJMP _0x204001E
                 _0x2040028:
000669 30e1      	CPI  R30,LOW(0x1)
00066a f429      	BRNE _0x2040029
00066b 81ea      	LDD  R30,Y+2
00066c 81ab      	LDD  R26,Y+3
00066d 23ea      	AND  R30,R26
00066e 271e      	EOR  R17,R30
00066f c007      	RJMP _0x204001E
                 _0x2040029:
000670 30e4      	CPI  R30,LOW(0x4)
000671 f429      	BRNE _0x204001E
000672 81ea      	LDD  R30,Y+2
000673 95e0      	COM  R30
000674 81ab      	LDD  R26,Y+3
000675 2bea      	OR   R30,R26
000676 231e      	AND  R17,R30
                 _0x204001E:
000677 2fa1      	MOV  R26,R17
000678 df1d      	RCALL _pcd8544_wrbyte
000679 8118      	LDD  R17,Y+0
                 _0x2120009:
00067a 9626      	ADIW R28,6
00067b 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
00067c 93aa      	ST   -Y,R26
00067d 9723      	SBIW R28,3
00067e d6e4      	RCALL __SAVELOCR6
00067f 89a8      	LDD  R26,Y+16
000680 35a4      	CPI  R26,LOW(0x54)
000681 f448      	BRSH _0x204002C
000682 85af      	LDD  R26,Y+15
000683 33a0      	CPI  R26,LOW(0x30)
000684 f430      	BRSH _0x204002C
000685 85ae      	LDD  R26,Y+14
000686 30a0      	CPI  R26,LOW(0x0)
000687 f019      	BREQ _0x204002C
000688 85ad      	LDD  R26,Y+13
000689 30a0      	CPI  R26,LOW(0x0)
00068a f409      	BRNE _0x204002B
                 _0x204002C:
00068b c184      	RJMP _0x2120008
                 _0x204002B:
00068c 85ee      	LDD  R30,Y+14
00068d 87e8      	STD  Y+8,R30
00068e 89a8      	LDD  R26,Y+16
00068f 27bb      	CLR  R27
000690 85ee      	LDD  R30,Y+14
000691 d4be      	RCALL SUBOPT_0x2E
000692 35a5      	CPI  R26,LOW(0x55)
000693 e0e0      	LDI  R30,HIGH(0x55)
000694 07be      	CPC  R27,R30
000695 f020      	BRLO _0x204002E
000696 89a8      	LDD  R26,Y+16
000697 e5e4      	LDI  R30,LOW(84)
000698 1bea      	SUB  R30,R26
000699 87ee      	STD  Y+14,R30
                 _0x204002E:
00069a 852d      	LDD  R18,Y+13
00069b 85af      	LDD  R26,Y+15
00069c 27bb      	CLR  R27
00069d 85ed      	LDD  R30,Y+13
00069e d4b1      	RCALL SUBOPT_0x2E
00069f 97d1      	SBIW R26,49
0006a0 f020      	BRLO _0x204002F
0006a1 85af      	LDD  R26,Y+15
0006a2 e3e0      	LDI  R30,LOW(48)
0006a3 1bea      	SUB  R30,R26
0006a4 87ed      	STD  Y+13,R30
                 _0x204002F:
0006a5 85a9      	LDD  R26,Y+9
0006a6 30a6      	CPI  R26,LOW(0x6)
0006a7 f009      	BREQ PC+2
0006a8 c051      	RJMP _0x2040030
0006a9 85ec      	LDD  R30,Y+12
0006aa 30e1      	CPI  R30,LOW(0x1)
0006ab f409      	BRNE _0x2040034
0006ac c163      	RJMP _0x2120008
                 _0x2040034:
0006ad 30e3      	CPI  R30,LOW(0x3)
0006ae f439      	BRNE _0x2040037
                +
0006af 91e0 019e+LDS R30 , _glcd_state + ( 27 )
0006b1 91f0 019f+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0006b3 9730      	SBIW R30,0
0006b4 f409      	BRNE _0x2040036
0006b5 c15a      	RJMP _0x2120008
                 _0x2040036:
                 _0x2040037:
0006b6 8508      	LDD  R16,Y+8
0006b7 85ed      	LDD  R30,Y+13
0006b8 d47a      	RCALL SUBOPT_0x25
0006b9 2f3e      	MOV  R19,R30
0006ba 2fe2      	MOV  R30,R18
0006bb 70e7      	ANDI R30,LOW(0x7)
0006bc f419      	BRNE _0x2040039
0006bd 85ad      	LDD  R26,Y+13
0006be 172a      	CP   R18,R26
0006bf f0c9      	BREQ _0x2040038
                 _0x2040039:
0006c0 2fa0      	MOV  R26,R16
0006c1 27bb      	CLR  R27
0006c2 2fe3      	MOV  R30,R19
0006c3 d490      	RCALL SUBOPT_0x2F
0006c4 d466      	RCALL SUBOPT_0x23
0006c5 d3e1      	RCALL SUBOPT_0x3
0006c6 d45b      	RCALL SUBOPT_0x20
0006c7 9526      	LSR  R18
0006c8 9526      	LSR  R18
0006c9 9526      	LSR  R18
0006ca 2f53      	MOV  R21,R19
                 _0x204003B:
0006cb 935f      	PUSH R21
0006cc 5f5f      	SUBI R21,-1
0006cd 2fe2      	MOV  R30,R18
0006ce 91af      	POP  R26
0006cf 17ea      	CP   R30,R26
0006d0 f040      	BRLO _0x204003D
0006d1 2f10      	MOV  R17,R16
                 _0x204003E:
0006d2 2fe1      	MOV  R30,R17
0006d3 5011      	SUBI R17,1
0006d4 30e0      	CPI  R30,0
0006d5 f011      	BREQ _0x2040040
0006d6 d480      	RCALL SUBOPT_0x30
0006d7 cffa      	RJMP _0x204003E
                 _0x2040040:
0006d8 cff2      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0006d9 85ae      	LDD  R26,Y+14
0006da 170a      	CP   R16,R26
0006db f0f1      	BREQ _0x2040041
0006dc 85ee      	LDD  R30,Y+14
0006dd d44d      	RCALL SUBOPT_0x23
0006de d458      	RCALL SUBOPT_0x26
0006df d442      	RCALL SUBOPT_0x20
0006e0 85ed      	LDD  R30,Y+13
0006e1 70e7      	ANDI R30,LOW(0x7)
0006e2 f009      	BREQ _0x2040042
0006e3 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
0006e4 e020      	LDI  R18,LOW(0)
                 _0x2040043:
0006e5 932f      	PUSH R18
0006e6 5f2f      	SUBI R18,-1
0006e7 2fe3      	MOV  R30,R19
0006e8 91af      	POP  R26
0006e9 17ae      	CP   R26,R30
0006ea f478      	BRSH _0x2040045
0006eb 851e      	LDD  R17,Y+14
                 _0x2040046:
0006ec 931f      	PUSH R17
0006ed 5f1f      	SUBI R17,-1
0006ee 2fe0      	MOV  R30,R16
0006ef 91af      	POP  R26
0006f0 17ae      	CP   R26,R30
0006f1 f410      	BRSH _0x2040048
0006f2 d464      	RCALL SUBOPT_0x30
0006f3 cff8      	RJMP _0x2040046
                 _0x2040048:
0006f4 85ee      	LDD  R30,Y+14
0006f5 81ae      	LDD  R26,Y+6
0006f6 81bf      	LDD  R27,Y+6+1
0006f7 d43f      	RCALL SUBOPT_0x26
0006f8 d429      	RCALL SUBOPT_0x20
0006f9 cfeb      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
0006fa 85ef      	LDD  R30,Y+15
0006fb 70e7      	ANDI R30,LOW(0x7)
0006fc 2f3e      	MOV  R19,R30
                 _0x2040049:
0006fd 85ed      	LDD  R30,Y+13
0006fe 30e0      	CPI  R30,0
0006ff f409      	BRNE PC+2
000700 c10f      	RJMP _0x204004B
000701 d426      	RCALL SUBOPT_0x22
000702 d41f      	RCALL SUBOPT_0x20
000703 e010      	LDI  R17,LOW(0)
000704 8908      	LDD  R16,Y+16
000705 3030      	CPI  R19,0
000706 f009      	BREQ PC+2
000707 c05a      	RJMP _0x204004C
000708 85ad      	LDD  R26,Y+13
000709 30a8      	CPI  R26,LOW(0x8)
00070a f408      	BRSH PC+2
00070b c051      	RJMP _0x204004D
00070c 85e9      	LDD  R30,Y+9
00070d 30e0      	CPI  R30,0
00070e f011      	BREQ _0x2040052
00070f 30e3      	CPI  R30,LOW(0x3)
000710 f409      	BRNE _0x2040053
                 _0x2040052:
000711 c002      	RJMP _0x2040054
                 _0x2040053:
000712 30e7      	CPI  R30,LOW(0x7)
000713 f409      	BRNE _0x2040055
                 _0x2040054:
000714 c002      	RJMP _0x2040056
                 _0x2040055:
000715 30e8      	CPI  R30,LOW(0x8)
000716 f409      	BRNE _0x2040057
                 _0x2040056:
000717 c002      	RJMP _0x2040058
                 _0x2040057:
000718 30e9      	CPI  R30,LOW(0x9)
000719 f409      	BRNE _0x2040059
                 _0x2040058:
00071a c002      	RJMP _0x204005A
                 _0x2040059:
00071b 30ea      	CPI  R30,LOW(0xA)
00071c f419      	BRNE _0x204005B
                 _0x204005A:
00071d d444      	RCALL SUBOPT_0x31
00071e de60      	RCALL _pcd8544_gotoxy
00071f c004      	RJMP _0x2040050
                 _0x204005B:
000720 30e6      	CPI  R30,LOW(0x6)
000721 f411      	BRNE _0x2040050
000722 d43f      	RCALL SUBOPT_0x31
000723 de4a      	RCALL _pcd8544_setaddr_G102
                 _0x2040050:
                 _0x204005D:
000724 931f      	PUSH R17
000725 d43f      	RCALL SUBOPT_0x32
000726 91af      	POP  R26
000727 17ae      	CP   R26,R30
000728 f568      	BRSH _0x204005F
000729 85a9      	LDD  R26,Y+9
00072a 30a6      	CPI  R26,LOW(0x6)
00072b f439      	BRNE _0x2040060
00072c d43b      	RCALL SUBOPT_0x33
00072d d3a4      	RCALL SUBOPT_0x10
00072e d40f      	RCALL SUBOPT_0x29
00072f d411      	RCALL SUBOPT_0x2A
000730 81a0      	LD   R26,Z
000731 d34f      	RCALL _glcd_writemem
000732 c022      	RJMP _0x2040061
                 _0x2040060:
000733 85e9      	LDD  R30,Y+9
000734 30e9      	CPI  R30,LOW(0x9)
000735 f411      	BRNE _0x2040065
000736 e050      	LDI  R21,LOW(0)
000737 c00c      	RJMP _0x2040066
                 _0x2040065:
000738 30ea      	CPI  R30,LOW(0xA)
000739 f411      	BRNE _0x2040064
00073a ef5f      	LDI  R21,LOW(255)
00073b c008      	RJMP _0x2040066
                 _0x2040064:
00073c d42b      	RCALL SUBOPT_0x33
00073d d433      	RCALL SUBOPT_0x34
00073e 2f5e      	MOV  R21,R30
00073f 85e9      	LDD  R30,Y+9
000740 30e7      	CPI  R30,LOW(0x7)
000741 f011      	BREQ _0x204006D
000742 30e8      	CPI  R30,LOW(0x8)
000743 f419      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
000744 d431      	RCALL SUBOPT_0x35
000745 2f5e      	MOV  R21,R30
000746 c006      	RJMP _0x204006F
                 _0x204006E:
000747 30e3      	CPI  R30,LOW(0x3)
000748 f411      	BRNE _0x2040071
000749 9550      	COM  R21
00074a c002      	RJMP _0x2040072
                 _0x2040071:
00074b 30e0      	CPI  R30,0
00074c f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
00074d 2fa5      	MOV  R26,R21
00074e de1a      	RCALL _pcd8544_wrdata_G102
00074f c005      	RJMP _0x204006B
                 _0x2040074:
000750 d428      	RCALL SUBOPT_0x36
000751 efef      	LDI  R30,LOW(255)
000752 93ea      	ST   -Y,R30
000753 85ad      	LDD  R26,Y+13
000754 def0      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
000755 cfce      	RJMP _0x204005D
                 _0x204005F:
000756 85ef      	LDD  R30,Y+15
000757 5fe8      	SUBI R30,-LOW(8)
000758 87ef      	STD  Y+15,R30
000759 85ed      	LDD  R30,Y+13
00075a 50e8      	SUBI R30,LOW(8)
00075b 87ed      	STD  Y+13,R30
00075c c0ae      	RJMP _0x2040075
                 _0x204004D:
00075d 855d      	LDD  R21,Y+13
00075e e020      	LDI  R18,LOW(0)
00075f e0e0      	LDI  R30,LOW(0)
000760 87ed      	STD  Y+13,R30
000761 c067      	RJMP _0x2040076
                 _0x204004C:
000762 2fe3      	MOV  R30,R19
000763 85ad      	LDD  R26,Y+13
000764 0fae      	ADD  R26,R30
000765 30a9      	CPI  R26,LOW(0x9)
000766 f420      	BRSH _0x2040077
000767 852d      	LDD  R18,Y+13
000768 e0e0      	LDI  R30,LOW(0)
000769 87ed      	STD  Y+13,R30
00076a c003      	RJMP _0x2040078
                 _0x2040077:
00076b e0e8      	LDI  R30,LOW(8)
00076c 1be3      	SUB  R30,R19
00076d 2f2e      	MOV  R18,R30
                 _0x2040078:
00076e 933a      	ST   -Y,R19
00076f 2fa2      	MOV  R26,R18
000770 d2c5      	RCALL _glcd_getmask
000771 2f4e      	MOV  R20,R30
000772 85e9      	LDD  R30,Y+9
000773 30e6      	CPI  R30,LOW(0x6)
000774 f4c1      	BRNE _0x204007C
000775 d3ec      	RCALL SUBOPT_0x31
000776 ddf7      	RCALL _pcd8544_setaddr_G102
                 _0x204007D:
000777 931f      	PUSH R17
000778 d3ec      	RCALL SUBOPT_0x32
000779 91af      	POP  R26
00077a 17ae      	CP   R26,R30
00077b f480      	BRSH _0x204007F
00077c d3c1      	RCALL SUBOPT_0x29
00077d d3c3      	RCALL SUBOPT_0x2A
00077e 81e0      	LD   R30,Z
00077f 23e4      	AND  R30,R20
000780 2fae      	MOV  R26,R30
000781 2fe3      	MOV  R30,R19
000782 d558      	RCALL __LSRB12
000783 d3fb      	RCALL SUBOPT_0x37
000784 2fe3      	MOV  R30,R19
000785 2fa4      	MOV  R26,R20
000786 d554      	RCALL __LSRB12
000787 d401      	RCALL SUBOPT_0x38
000788 d349      	RCALL SUBOPT_0x10
000789 2fa5      	MOV  R26,R21
00078a d2f6      	RCALL _glcd_writemem
00078b cfeb      	RJMP _0x204007D
                 _0x204007F:
00078c c022      	RJMP _0x204007B
                 _0x204007C:
00078d 30e9      	CPI  R30,LOW(0x9)
00078e f411      	BRNE _0x2040080
00078f e050      	LDI  R21,LOW(0)
000790 c003      	RJMP _0x2040081
                 _0x2040080:
000791 30ea      	CPI  R30,LOW(0xA)
000792 f489      	BRNE _0x2040087
000793 ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
000794 d3e1      	RCALL SUBOPT_0x35
000795 2fae      	MOV  R26,R30
000796 2fe3      	MOV  R30,R19
000797 d53b      	RCALL __LSLB12
000798 2f5e      	MOV  R21,R30
                 _0x2040084:
000799 931f      	PUSH R17
00079a d3ca      	RCALL SUBOPT_0x32
00079b 91af      	POP  R26
00079c 17ae      	CP   R26,R30
00079d f428      	BRSH _0x2040086
00079e d3da      	RCALL SUBOPT_0x36
00079f 934a      	ST   -Y,R20
0007a0 e0a0      	LDI  R26,LOW(0)
0007a1 dea3      	RCALL _pcd8544_wrmasked_G102
0007a2 cff6      	RJMP _0x2040084
                 _0x2040086:
0007a3 c00b      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
0007a4 931f      	PUSH R17
0007a5 d3bf      	RCALL SUBOPT_0x32
0007a6 91af      	POP  R26
0007a7 17ae      	CP   R26,R30
0007a8 f430      	BRSH _0x204008A
0007a9 d3e3      	RCALL SUBOPT_0x39
0007aa 2fae      	MOV  R26,R30
0007ab 2fe3      	MOV  R30,R19
0007ac d526      	RCALL __LSLB12
0007ad d3ec      	RCALL SUBOPT_0x3A
0007ae cff5      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
0007af 85ed      	LDD  R30,Y+13
0007b0 30e0      	CPI  R30,0
0007b1 f409      	BRNE _0x204008B
0007b2 c05d      	RJMP _0x204004B
                 _0x204008B:
0007b3 85ad      	LDD  R26,Y+13
0007b4 30a8      	CPI  R26,LOW(0x8)
0007b5 f428      	BRSH _0x204008C
0007b6 85ed      	LDD  R30,Y+13
0007b7 1be2      	SUB  R30,R18
0007b8 2f5e      	MOV  R21,R30
0007b9 e0e0      	LDI  R30,LOW(0)
0007ba c003      	RJMP _0x20400A1
                 _0x204008C:
0007bb 2f53      	MOV  R21,R19
0007bc 85ed      	LDD  R30,Y+13
0007bd 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
0007be 87ed      	STD  Y+13,R30
0007bf e010      	LDI  R17,LOW(0)
0007c0 85ef      	LDD  R30,Y+15
0007c1 5fe8      	SUBI R30,-LOW(8)
0007c2 87ef      	STD  Y+15,R30
0007c3 e0e8      	LDI  R30,LOW(8)
0007c4 1be3      	SUB  R30,R19
0007c5 2f2e      	MOV  R18,R30
0007c6 8908      	LDD  R16,Y+16
0007c7 d360      	RCALL SUBOPT_0x22
0007c8 d359      	RCALL SUBOPT_0x20
                 _0x2040076:
0007c9 2fe5      	MOV  R30,R21
0007ca e0f0      	LDI  R31,0
0007cb 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
0007cc 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0007cd 9144      	LPM  R20,Z
0007ce 85e9      	LDD  R30,Y+9
0007cf 30e6      	CPI  R30,LOW(0x6)
0007d0 f4c1      	BRNE _0x2040091
0007d1 d390      	RCALL SUBOPT_0x31
0007d2 dd9b      	RCALL _pcd8544_setaddr_G102
                 _0x2040092:
0007d3 931f      	PUSH R17
0007d4 d390      	RCALL SUBOPT_0x32
0007d5 91af      	POP  R26
0007d6 17ae      	CP   R26,R30
0007d7 f480      	BRSH _0x2040094
0007d8 d365      	RCALL SUBOPT_0x29
0007d9 d367      	RCALL SUBOPT_0x2A
0007da 81e0      	LD   R30,Z
0007db 23e4      	AND  R30,R20
0007dc 2fae      	MOV  R26,R30
0007dd 2fe2      	MOV  R30,R18
0007de d4f4      	RCALL __LSLB12
0007df d39f      	RCALL SUBOPT_0x37
0007e0 2fe2      	MOV  R30,R18
0007e1 2fa4      	MOV  R26,R20
0007e2 d4f0      	RCALL __LSLB12
0007e3 d3a5      	RCALL SUBOPT_0x38
0007e4 d2ed      	RCALL SUBOPT_0x10
0007e5 2fa5      	MOV  R26,R21
0007e6 d29a      	RCALL _glcd_writemem
0007e7 cfeb      	RJMP _0x2040092
                 _0x2040094:
0007e8 c022      	RJMP _0x2040090
                 _0x2040091:
0007e9 30e9      	CPI  R30,LOW(0x9)
0007ea f411      	BRNE _0x2040095
0007eb e050      	LDI  R21,LOW(0)
0007ec c003      	RJMP _0x2040096
                 _0x2040095:
0007ed 30ea      	CPI  R30,LOW(0xA)
0007ee f489      	BRNE _0x204009C
0007ef ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
0007f0 d385      	RCALL SUBOPT_0x35
0007f1 2fae      	MOV  R26,R30
0007f2 2fe2      	MOV  R30,R18
0007f3 d4e7      	RCALL __LSRB12
0007f4 2f5e      	MOV  R21,R30
                 _0x2040099:
0007f5 931f      	PUSH R17
0007f6 d36e      	RCALL SUBOPT_0x32
0007f7 91af      	POP  R26
0007f8 17ae      	CP   R26,R30
0007f9 f428      	BRSH _0x204009B
0007fa d37e      	RCALL SUBOPT_0x36
0007fb 934a      	ST   -Y,R20
0007fc e0a0      	LDI  R26,LOW(0)
0007fd de47      	RCALL _pcd8544_wrmasked_G102
0007fe cff6      	RJMP _0x2040099
                 _0x204009B:
0007ff c00b      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
000800 931f      	PUSH R17
000801 d363      	RCALL SUBOPT_0x32
000802 91af      	POP  R26
000803 17ae      	CP   R26,R30
000804 f430      	BRSH _0x204009F
000805 d387      	RCALL SUBOPT_0x39
000806 2fae      	MOV  R26,R30
000807 2fe2      	MOV  R30,R18
000808 d4d2      	RCALL __LSRB12
000809 d390      	RCALL SUBOPT_0x3A
00080a cff5      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
00080b 85e8      	LDD  R30,Y+8
00080c d31e      	RCALL SUBOPT_0x23
00080d d329      	RCALL SUBOPT_0x26
00080e d316      	RCALL SUBOPT_0x21
00080f ceed      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120008:
000810 d559      	RCALL __LOADLOCR6
000811 9661      	ADIW R28,17
000812 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000813 d38a      	RCALL SUBOPT_0x3B
000814 f014      	BRLT _0x2060003
000815 d2eb      	RCALL SUBOPT_0x18
000816 c227      	RJMP _0x2120003
                 _0x2060003:
000817 d38b      	RCALL SUBOPT_0x3C
000818 35a4      	CPI  R26,LOW(0x54)
000819 e0e0      	LDI  R30,HIGH(0x54)
00081a 07be      	CPC  R27,R30
00081b f01c      	BRLT _0x2060004
00081c e5e3      	LDI  R30,LOW(83)
00081d e0f0      	LDI  R31,HIGH(83)
00081e c21f      	RJMP _0x2120003
                 _0x2060004:
00081f 81e8      	LD   R30,Y
000820 81f9      	LDD  R31,Y+1
000821 c21c      	RJMP _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000822 d37b      	RCALL SUBOPT_0x3B
000823 f014      	BRLT _0x2060005
000824 d2dc      	RCALL SUBOPT_0x18
000825 c218      	RJMP _0x2120003
                 _0x2060005:
000826 d37c      	RCALL SUBOPT_0x3C
000827 97d0      	SBIW R26,48
000828 f01c      	BRLT _0x2060006
000829 e2ef      	LDI  R30,LOW(47)
00082a e0f0      	LDI  R31,HIGH(47)
00082b c212      	RJMP _0x2120003
                 _0x2060006:
00082c 81e8      	LD   R30,Y
00082d 81f9      	LDD  R31,Y+1
00082e c20f      	RJMP _0x2120003
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
00082f d26e      	RCALL SUBOPT_0x0
000830 9723      	SBIW R28,3
000831 d374      	RCALL SUBOPT_0x3D
000832 018f      	MOVW R16,R30
000833 2e00      	MOV  R0,R16
000834 2a01      	OR   R0,R17
000835 f411      	BRNE _0x206000B
000836 d2ca      	RCALL SUBOPT_0x18
000837 c04e      	RJMP _0x2120007
                 _0x206000B:
000838 d373      	RCALL SUBOPT_0x3E
000839 820f      	STD  Y+7,R0
00083a d371      	RCALL SUBOPT_0x3E
00083b 820e      	STD  Y+6,R0
00083c d36f      	RCALL SUBOPT_0x3E
00083d 8608      	STD  Y+8,R0
00083e 85eb      	LDD  R30,Y+11
00083f 85a8      	LDD  R26,Y+8
000840 17ea      	CP   R30,R26
000841 f410      	BRSH _0x206000C
000842 d2be      	RCALL SUBOPT_0x18
000843 c042      	RJMP _0x2120007
                 _0x206000C:
000844 01f8      	MOVW R30,R16
                +
000845 5f0f     +SUBI R16 , LOW ( - 1 )
000846 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000847 9154      	LPM  R21,Z
000848 85a8      	LDD  R26,Y+8
000849 27bb      	CLR  R27
00084a 27ee      	CLR  R30
00084b 0fa5      	ADD  R26,R21
00084c 1fbe      	ADC  R27,R30
00084d 85eb      	LDD  R30,Y+11
00084e e0f0      	LDI  R31,0
00084f 17ea      	CP   R30,R26
000850 07fb      	CPC  R31,R27
000851 f010      	BRLO _0x206000D
000852 d2ae      	RCALL SUBOPT_0x18
000853 c032      	RJMP _0x2120007
                 _0x206000D:
000854 81ee      	LDD  R30,Y+6
000855 d2dd      	RCALL SUBOPT_0x25
000856 2f4e      	MOV  R20,R30
000857 81ee      	LDD  R30,Y+6
000858 70e7      	ANDI R30,LOW(0x7)
000859 f009      	BREQ _0x206000E
00085a 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
00085b 81ef      	LDD  R30,Y+7
00085c 30e0      	CPI  R30,0
00085d f071      	BREQ _0x206000F
00085e d24b      	RCALL SUBOPT_0x4
00085f 85a8      	LDD  R26,Y+8
000860 85eb      	LDD  R30,Y+11
000861 1bea      	SUB  R30,R26
000862 e0f0      	LDI  R31,0
000863 01df      	MOVW R26,R30
000864 81ef      	LDD  R30,Y+7
000865 d2ee      	RCALL SUBOPT_0x2F
000866 01df      	MOVW R26,R30
000867 2fe4      	MOV  R30,R20
000868 d2eb      	RCALL SUBOPT_0x2F
000869 0fe0      	ADD  R30,R16
00086a 1ff1      	ADC  R31,R17
00086b c01a      	RJMP _0x2120007
                 _0x206000F:
00086c 0198      	MOVW R18,R16
00086d 2fe5      	MOV  R30,R21
00086e e0f0      	LDI  R31,0
                +
00086f 0f0e     +ADD R16 , R30
000870 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
000871 85a8      	LDD  R26,Y+8
000872 5faf      	SUBI R26,-LOW(1)
000873 87a8      	STD  Y+8,R26
000874 50a1      	SUBI R26,LOW(1)
000875 85eb      	LDD  R30,Y+11
000876 17ae      	CP   R26,R30
000877 f450      	BRSH _0x2060012
000878 01f9      	MOVW R30,R18
                +
000879 5f2f     +SUBI R18 , LOW ( - 1 )
00087a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00087b 91a4      	LPM  R26,Z
00087c e0b0      	LDI  R27,0
00087d 2fe4      	MOV  R30,R20
00087e d2d5      	RCALL SUBOPT_0x2F
                +
00087f 0f0e     +ADD R16 , R30
000880 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000881 cfef      	RJMP _0x2060010
                 _0x2060012:
000882 01f9      	MOVW R30,R18
000883 91e4      	LPM  R30,Z
000884 d225      	RCALL SUBOPT_0x4
000885 01f8      	MOVW R30,R16
                 _0x2120007:
000886 d4e3      	RCALL __LOADLOCR6
000887 962c      	ADIW R28,12
000888 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
000889 e0e0      	LDI  R30,LOW(0)
                +
00088a 93e0 0185+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
00088c 91a0 0186+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00088e 27bb      	CLR  R27
00088f d321      	RCALL SUBOPT_0x3F
000890 d2bf      	RCALL SUBOPT_0x2E
                +
000891 91e0 018a+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000893 d2bc      	RCALL SUBOPT_0x2E
000894 df8d      	RCALL _glcd_clipy
                +
000895 93e0 0186+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000897 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000898 93aa      	ST   -Y,R26
000899 9721      	SBIW R28,1
00089a d30b      	RCALL SUBOPT_0x3D
00089b 9730      	SBIW R30,0
00089c f409      	BRNE PC+2
00089d c04c      	RJMP _0x206001F
00089e 81af      	LDD  R26,Y+7
00089f 30aa      	CPI  R26,LOW(0xA)
0008a0 f409      	BRNE _0x2060020
0008a1 c046      	RJMP _0x2060021
                 _0x2060020:
0008a2 81ef      	LDD  R30,Y+7
0008a3 93ea      	ST   -Y,R30
0008a4 01de      	MOVW R26,R28
0008a5 9617      	ADIW R26,7
0008a6 df88      	RCALL _glcd_getcharw_G103
0008a7 01af      	MOVW R20,R30
0008a8 9730      	SBIW R30,0
0008a9 f409      	BRNE _0x2060022
0008aa c041      	RJMP _0x2120006
                 _0x2060022:
                +
0008ab 91e0 0189+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0008ad 81ae      	LDD  R26,Y+6
0008ae 0fea      	ADD  R30,R26
0008af 2f3e      	MOV  R19,R30
                +
0008b0 91a0 0185+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0008b2 27bb      	CLR  R27
0008b3 d283      	RCALL SUBOPT_0x26
0008b4 018f      	MOVW R16,R30
                +
0008b5 3505     +CPI R16 , LOW ( 85 )
0008b6 e0e0     +LDI R30 , HIGH ( 85 )
0008b7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
0008b8 f018      	BRLO _0x2060023
0008b9 2f03      	MOV  R16,R19
0008ba 2711      	CLR  R17
0008bb dfcd      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
0008bc 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008be d2f9      	RCALL SUBOPT_0x40
0008bf 85e8      	LDD  R30,Y+8
0008c0 93ea      	ST   -Y,R30
0008c1 d2ef      	RCALL SUBOPT_0x3F
0008c2 93ea      	ST   -Y,R30
0008c3 e0e1      	LDI  R30,LOW(1)
0008c4 93ea      	ST   -Y,R30
0008c5 935a      	ST   -Y,R21
0008c6 934a      	ST   -Y,R20
0008c7 e0a7      	LDI  R26,LOW(7)
0008c8 ddb3      	RCALL _glcd_block
                +
0008c9 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008cb 81ae      	LDD  R26,Y+6
0008cc 0fea      	ADD  R30,R26
0008cd d2ea      	RCALL SUBOPT_0x40
                +
0008ce 91e0 0189+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0008d0 93ea      	ST   -Y,R30
0008d1 d2df      	RCALL SUBOPT_0x3F
0008d2 93ea      	ST   -Y,R30
0008d3 d1de      	RCALL SUBOPT_0x6
0008d4 d2e8      	RCALL SUBOPT_0x41
                +
0008d5 91e0 0185+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008d7 93ea      	ST   -Y,R30
                +
0008d8 91a0 0186+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0008da d2d6      	RCALL SUBOPT_0x3F
0008db 0fea      	ADD  R30,R26
0008dc 93ea      	ST   -Y,R30
0008dd 933a      	ST   -Y,R19
                +
0008de 91e0 018a+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0008e0 93ea      	ST   -Y,R30
0008e1 d1d0      	RCALL SUBOPT_0x6
0008e2 d2da      	RCALL SUBOPT_0x41
0008e3 e5e4      	LDI  R30,LOW(84)
0008e4 e0f0      	LDI  R31,HIGH(84)
0008e5 17e0      	CP   R30,R16
0008e6 07f1      	CPC  R31,R17
0008e7 f411      	BRNE _0x2060024
                 _0x2060021:
0008e8 dfa0      	RCALL _glcd_new_line_G103
0008e9 c002      	RJMP _0x2120006
                 _0x2060024:
                 _0x206001F:
                +
0008ea 9300 0185+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120006:
0008ec d47d      	RCALL __LOADLOCR6
0008ed 9628      	ADIW R28,8
0008ee 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
0008ef d1ae      	RCALL SUBOPT_0x0
0008f0 931a      	ST   -Y,R17
                 _0x206002E:
0008f1 81a9      	LDD  R26,Y+1
0008f2 81ba      	LDD  R27,Y+1+1
0008f3 91ed      	LD   R30,X+
0008f4 83a9      	STD  Y+1,R26
0008f5 83ba      	STD  Y+1+1,R27
0008f6 2f1e      	MOV  R17,R30
0008f7 30e0      	CPI  R30,0
0008f8 f019      	BREQ _0x2060030
0008f9 2fa1      	MOV  R26,R17
0008fa df9d      	RCALL _glcd_putchar
0008fb cff5      	RJMP _0x206002E
                 _0x2060030:
0008fc 8118      	LDD  R17,Y+0
0008fd c181      	RJMP _0x2120002
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
0008fe 93aa      	ST   -Y,R26
0008ff 81ea      	LDD  R30,Y+2
000900 93ea      	ST   -Y,R30
000901 81ea      	LDD  R30,Y+2
000902 93ea      	ST   -Y,R30
                +
000903 91e0 018c+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000905 81aa      	LDD  R26,Y+2
000906 23ea      	AND  R30,R26
000907 f019      	BREQ _0x206003E
000908 91e0 0183 	LDS  R30,_glcd_state
00090a c002      	RJMP _0x206003F
                 _0x206003E:
                +
00090b 91e0 0184+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
00090d 2fae      	MOV  R26,R30
00090e dd16      	RCALL _glcd_putpixel
00090f 81e8      	LD   R30,Y
000910 0fee      	LSL  R30
000911 83e8      	ST   Y,R30
000912 30e0      	CPI  R30,0
000913 f411      	BRNE _0x2060041
000914 e0e1      	LDI  R30,LOW(1)
000915 83e8      	ST   Y,R30
                 _0x2060041:
000916 81e8      	LD   R30,Y
000917 c167      	RJMP _0x2120002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000918 93aa      	ST   -Y,R26
000919 81a9      	LDD  R26,Y+1
00091a 27bb      	CLR  R27
00091b def7      	RCALL _glcd_clipx
                +
00091c 93e0 0185+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00091e 81a8      	LD   R26,Y
00091f 27bb      	CLR  R27
000920 df01      	RCALL _glcd_clipy
                +
000921 93e0 0186+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000923 c11a      	RJMP _0x2120003
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000924 93aa      	ST   -Y,R26
000925 972b      	SBIW R28,11
000926 d43c      	RCALL __SAVELOCR6
000927 89ac      	LDD  R26,Y+20
000928 27bb      	CLR  R27
000929 dee9      	RCALL _glcd_clipx
00092a 8bec      	STD  Y+20,R30
00092b 89aa      	LDD  R26,Y+18
00092c 27bb      	CLR  R27
00092d dee5      	RCALL _glcd_clipx
00092e 8bea      	STD  Y+18,R30
00092f 89ab      	LDD  R26,Y+19
000930 27bb      	CLR  R27
000931 def0      	RCALL _glcd_clipy
000932 8beb      	STD  Y+19,R30
000933 89a9      	LDD  R26,Y+17
000934 27bb      	CLR  R27
000935 deec      	RCALL _glcd_clipy
000936 8be9      	STD  Y+17,R30
000937 89ea      	LDD  R30,Y+18
                +
000938 93e0 0185+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00093a 89e9      	LDD  R30,Y+17
                +
00093b 93e0 0186+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00093d e0e1      	LDI  R30,LOW(1)
00093e 87e8      	STD  Y+8,R30
00093f 89e9      	LDD  R30,Y+17
000940 89ab      	LDD  R26,Y+19
000941 17ea      	CP   R30,R26
000942 f561      	BRNE _0x2060042
000943 891c      	LDD  R17,Y+20
000944 89aa      	LDD  R26,Y+18
000945 171a      	CP   R17,R26
000946 f431      	BRNE _0x2060043
000947 931a      	ST   -Y,R17
000948 89ec      	LDD  R30,Y+20
000949 93ea      	ST   -Y,R30
00094a e0a1      	LDI  R26,LOW(1)
00094b dfb2      	RCALL _glcd_putpixelm_G103
00094c c0c0      	RJMP _0x2120005
                 _0x2060043:
00094d 89aa      	LDD  R26,Y+18
00094e 171a      	CP   R17,R26
00094f f430      	BRSH _0x2060044
000950 89ea      	LDD  R30,Y+18
000951 1be1      	SUB  R30,R17
000952 2f0e      	MOV  R16,R30
                +
000953 e041     +LDI R20 , LOW ( 1 )
000954 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000955 c006      	RJMP _0x2060045
                 _0x2060044:
000956 89aa      	LDD  R26,Y+18
000957 2fe1      	MOV  R30,R17
000958 1bea      	SUB  R30,R26
000959 2f0e      	MOV  R16,R30
                +
00095a ef4f     +LDI R20 , LOW ( - 1 )
00095b ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
00095c 893b      	LDD  R19,Y+19
00095d e0e0      	LDI  R30,LOW(0)
00095e 83ee      	STD  Y+6,R30
                 _0x2060049:
00095f d261      	RCALL SUBOPT_0x42
000960 f430      	BRSH _0x206004B
000961 d267      	RCALL SUBOPT_0x43
000962 9533      	INC  R19
000963 85aa      	LDD  R26,Y+10
000964 df99      	RCALL _glcd_putpixelm_G103
000965 83ef      	STD  Y+7,R30
000966 cff8      	RJMP _0x2060049
                 _0x206004B:
000967 81ef      	LDD  R30,Y+7
000968 87e8      	STD  Y+8,R30
000969 0f14      	ADD  R17,R20
00096a 2fe0      	MOV  R30,R16
00096b 5001      	SUBI R16,1
00096c 30e0      	CPI  R30,0
00096d f771      	BRNE _0x2060047
00096e c09e      	RJMP _0x206004C
                 _0x2060042:
00096f 89ea      	LDD  R30,Y+18
000970 89ac      	LDD  R26,Y+20
000971 17ea      	CP   R30,R26
000972 f539      	BRNE _0x206004D
000973 893b      	LDD  R19,Y+19
000974 89a9      	LDD  R26,Y+17
000975 173a      	CP   R19,R26
000976 f430      	BRSH _0x206004E
000977 89e9      	LDD  R30,Y+17
000978 1be3      	SUB  R30,R19
000979 2f2e      	MOV  R18,R30
00097a e0e1      	LDI  R30,LOW(1)
00097b e0f0      	LDI  R31,HIGH(1)
00097c c006      	RJMP _0x206011B
                 _0x206004E:
00097d 89a9      	LDD  R26,Y+17
00097e 2fe3      	MOV  R30,R19
00097f 1bea      	SUB  R30,R26
000980 2f2e      	MOV  R18,R30
000981 efef      	LDI  R30,LOW(65535)
000982 efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
000983 87ed      	STD  Y+13,R30
000984 87fe      	STD  Y+13+1,R31
                 _0x2060051:
000985 891c      	LDD  R17,Y+20
000986 e0e0      	LDI  R30,LOW(0)
000987 83ee      	STD  Y+6,R30
                 _0x2060053:
000988 d238      	RCALL SUBOPT_0x42
000989 f438      	BRSH _0x2060055
00098a 931a      	ST   -Y,R17
00098b 9513      	INC  R17
00098c 933a      	ST   -Y,R19
00098d 85aa      	LDD  R26,Y+10
00098e df6f      	RCALL _glcd_putpixelm_G103
00098f 83ef      	STD  Y+7,R30
000990 cff7      	RJMP _0x2060053
                 _0x2060055:
000991 81ef      	LDD  R30,Y+7
000992 87e8      	STD  Y+8,R30
000993 85ed      	LDD  R30,Y+13
000994 0f3e      	ADD  R19,R30
000995 2fe2      	MOV  R30,R18
000996 5021      	SUBI R18,1
000997 30e0      	CPI  R30,0
000998 f761      	BRNE _0x2060051
000999 c073      	RJMP _0x2060056
                 _0x206004D:
00099a e0e0      	LDI  R30,LOW(0)
00099b 83ee      	STD  Y+6,R30
                 _0x2060057:
00099c d224      	RCALL SUBOPT_0x42
00099d f008      	BRLO PC+2
00099e c06e      	RJMP _0x2060059
00099f 891c      	LDD  R17,Y+20
0009a0 893b      	LDD  R19,Y+19
0009a1 e0e1      	LDI  R30,LOW(1)
0009a2 2f2e      	MOV  R18,R30
0009a3 2f0e      	MOV  R16,R30
0009a4 89aa      	LDD  R26,Y+18
0009a5 27bb      	CLR  R27
0009a6 89ec      	LDD  R30,Y+20
0009a7 e0f0      	LDI  R31,0
0009a8 1bae      	SUB  R26,R30
0009a9 0bbf      	SBC  R27,R31
0009aa 01ad      	MOVW R20,R26
0009ab 2355      	TST  R21
0009ac f422      	BRPL _0x206005A
0009ad ef0f      	LDI  R16,LOW(255)
0009ae 01fa      	MOVW R30,R20
0009af d317      	RCALL __ANEGW1
0009b0 01af      	MOVW R20,R30
                 _0x206005A:
0009b1 01fa      	MOVW R30,R20
0009b2 0fee      	LSL  R30
0009b3 1fff      	ROL  R31
0009b4 87ef      	STD  Y+15,R30
0009b5 8bf8      	STD  Y+15+1,R31
0009b6 89a9      	LDD  R26,Y+17
0009b7 27bb      	CLR  R27
0009b8 89eb      	LDD  R30,Y+19
0009b9 e0f0      	LDI  R31,0
0009ba 1bae      	SUB  R26,R30
0009bb 0bbf      	SBC  R27,R31
0009bc 87ad      	STD  Y+13,R26
0009bd 87be      	STD  Y+13+1,R27
0009be 85ae      	LDD  R26,Y+14
0009bf 23aa      	TST  R26
0009c0 f432      	BRPL _0x206005B
0009c1 ef2f      	LDI  R18,LOW(255)
0009c2 85ed      	LDD  R30,Y+13
0009c3 85fe      	LDD  R31,Y+13+1
0009c4 d302      	RCALL __ANEGW1
0009c5 87ed      	STD  Y+13,R30
0009c6 87fe      	STD  Y+13+1,R31
                 _0x206005B:
0009c7 85ed      	LDD  R30,Y+13
0009c8 85fe      	LDD  R31,Y+13+1
0009c9 0fee      	LSL  R30
0009ca 1fff      	ROL  R31
0009cb 87eb      	STD  Y+11,R30
0009cc 87fc      	STD  Y+11+1,R31
0009cd d1fb      	RCALL SUBOPT_0x43
0009ce e0a1      	LDI  R26,LOW(1)
0009cf df2e      	RCALL _glcd_putpixelm_G103
0009d0 87e8      	STD  Y+8,R30
0009d1 e0e0      	LDI  R30,LOW(0)
0009d2 87e9      	STD  Y+9,R30
0009d3 87ea      	STD  Y+9+1,R30
0009d4 85ad      	LDD  R26,Y+13
0009d5 85be      	LDD  R27,Y+13+1
0009d6 174a      	CP   R20,R26
0009d7 075b      	CPC  R21,R27
0009d8 f0b4      	BRLT _0x206005C
                 _0x206005E:
0009d9 0f10      	ADD  R17,R16
0009da 85eb      	LDD  R30,Y+11
0009db 85fc      	LDD  R31,Y+11+1
0009dc d1ef      	RCALL SUBOPT_0x44
0009dd d0c9      	RCALL SUBOPT_0x3
0009de d1f0      	RCALL SUBOPT_0x45
0009df d1ec      	RCALL SUBOPT_0x44
0009e0 174a      	CP   R20,R26
0009e1 075b      	CPC  R21,R27
0009e2 f424      	BRGE _0x2060060
0009e3 0f32      	ADD  R19,R18
0009e4 85af      	LDD  R26,Y+15
0009e5 89b8      	LDD  R27,Y+15+1
0009e6 d1eb      	RCALL SUBOPT_0x46
                 _0x2060060:
0009e7 d1e1      	RCALL SUBOPT_0x43
0009e8 85aa      	LDD  R26,Y+10
0009e9 df14      	RCALL _glcd_putpixelm_G103
0009ea 87e8      	STD  Y+8,R30
0009eb 89ea      	LDD  R30,Y+18
0009ec 17e1      	CP   R30,R17
0009ed f759      	BRNE _0x206005E
0009ee c017      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
0009ef 0f32      	ADD  R19,R18
0009f0 85ef      	LDD  R30,Y+15
0009f1 89f8      	LDD  R31,Y+15+1
0009f2 d1d9      	RCALL SUBOPT_0x44
0009f3 d0b3      	RCALL SUBOPT_0x3
0009f4 d1da      	RCALL SUBOPT_0x45
0009f5 85ed      	LDD  R30,Y+13
0009f6 85fe      	LDD  R31,Y+13+1
0009f7 d1d4      	RCALL SUBOPT_0x44
0009f8 17ea      	CP   R30,R26
0009f9 07fb      	CPC  R31,R27
0009fa f424      	BRGE _0x2060065
0009fb 0f10      	ADD  R17,R16
0009fc 85ab      	LDD  R26,Y+11
0009fd 85bc      	LDD  R27,Y+11+1
0009fe d1d3      	RCALL SUBOPT_0x46
                 _0x2060065:
0009ff d1c9      	RCALL SUBOPT_0x43
000a00 85aa      	LDD  R26,Y+10
000a01 defc      	RCALL _glcd_putpixelm_G103
000a02 87e8      	STD  Y+8,R30
000a03 89e9      	LDD  R30,Y+17
000a04 17e3      	CP   R30,R19
000a05 f749      	BRNE _0x2060063
                 _0x2060061:
000a06 89eb      	LDD  R30,Y+19
000a07 5fef      	SUBI R30,-LOW(1)
000a08 8beb      	STD  Y+19,R30
000a09 89e9      	LDD  R30,Y+17
000a0a 5fef      	SUBI R30,-LOW(1)
000a0b 8be9      	STD  Y+17,R30
000a0c cf8f      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120005:
000a0d d35c      	RCALL __LOADLOCR6
000a0e 9665      	ADIW R28,21
000a0f 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000a10 d08d      	RCALL SUBOPT_0x0
000a11 81b9          ldd  r27,y+1
000a12 81a8          ld   r26,y
000a13 9610          adiw r26,0
000a14 f031          breq memset1
000a15 81fc          ldd  r31,y+4
000a16 81eb          ldd  r30,y+3
000a17 816a          ldd  r22,y+2
                 memset0:
000a18 9361          st   z+,r22
000a19 9711          sbiw r26,1
000a1a f7e9          brne memset0
                 memset1:
000a1b 81eb          ldd  r30,y+3
000a1c 81fc          ldd  r31,y+4
                 _0x2120004:
000a1d 9625      	ADIW R28,5
000a1e 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000a1f d07e      	RCALL SUBOPT_0x0
000a20 91a9          ld   r26,y+
000a21 91b9          ld   r27,y+
000a22 27ee          clr  r30
000a23 27ff          clr  r31
                 strlen0:
000a24 916d          ld   r22,x+
000a25 2366          tst  r22
000a26 f011          breq strlen1
000a27 9631          adiw r30,1
000a28 cffb          rjmp strlen0
                 strlen1:
000a29 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000a2a d073      	RCALL SUBOPT_0x0
000a2b 27aa          clr  r26
000a2c 27bb          clr  r27
000a2d 91e9          ld   r30,y+
000a2e 91f9          ld   r31,y+
                 strlenf0:
000a2f 9005      	lpm  r0,z+
000a30 2000          tst  r0
000a31 f011          breq strlenf1
000a32 9611          adiw r26,1
000a33 cffb          rjmp strlenf0
                 strlenf1:
000a34 01fd          movw r30,r26
000a35 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000a36 93aa      	ST   -Y,R26
000a37 81e8      	LD   R30,Y
000a38 e0f0      	LDI  R31,0
000a39 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
000a3a 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000a3b 91a4      	LPM  R26,Z
000a3c 81e9      	LDD  R30,Y+1
000a3d d295      	RCALL __LSLB12
                 _0x2120003:
000a3e 9622      	ADIW R28,2
000a3f 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000a40 d078      	RCALL SUBOPT_0x8
000a41 81e9      	LDD  R30,Y+1
000a42 30e7      	CPI  R30,LOW(0x7)
000a43 f011      	BREQ _0x2100007
000a44 30ea      	CPI  R30,LOW(0xA)
000a45 f419      	BRNE _0x2100008
                 _0x2100007:
000a46 9110 0183 	LDS  R17,_glcd_state
000a48 c009      	RJMP _0x2100009
                 _0x2100008:
000a49 30e9      	CPI  R30,LOW(0x9)
000a4a f419      	BRNE _0x210000B
                +
000a4b 9110 0184+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000a4d c004      	RJMP _0x2100009
                 _0x210000B:
000a4e 30e8      	CPI  R30,LOW(0x8)
000a4f f4a1      	BRNE _0x2100005
                +
000a50 9110 0193+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000a52 91e0 0184+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000a54 30e0      	CPI  R30,0
000a55 f049      	BREQ _0x210000E
000a56 3010      	CPI  R17,0
000a57 f019      	BREQ _0x210000F
000a58 efef      	LDI  R30,LOW(255)
000a59 8118      	LDD  R17,Y+0
000a5a c024      	RJMP _0x2120002
                 _0x210000F:
000a5b 81ea      	LDD  R30,Y+2
000a5c 95e0      	COM  R30
000a5d 8118      	LDD  R17,Y+0
000a5e c020      	RJMP _0x2120002
                 _0x210000E:
000a5f 3010      	CPI  R17,0
000a60 f419      	BRNE _0x2100011
000a61 e0e0      	LDI  R30,LOW(0)
000a62 8118      	LDD  R17,Y+0
000a63 c01b      	RJMP _0x2120002
                 _0x2100011:
                 _0x2100005:
000a64 81ea      	LDD  R30,Y+2
000a65 8118      	LDD  R17,Y+0
000a66 c018      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000a67 d036      	RCALL SUBOPT_0x0
000a68 81ea      	LDD  R30,Y+2
000a69 30e1      	CPI  R30,LOW(0x1)
000a6a f421      	BRNE _0x2100015
000a6b 81e8      	LD   R30,Y
000a6c 81f9      	LDD  R31,Y+1
000a6d 91e4      	LPM  R30,Z
000a6e c010      	RJMP _0x2120002
                 _0x2100015:
000a6f 30e2      	CPI  R30,LOW(0x2)
000a70 f419      	BRNE _0x2100016
000a71 d131      	RCALL SUBOPT_0x3C
000a72 d2cf      	RCALL __EEPROMRDB
000a73 c00b      	RJMP _0x2120002
                 _0x2100016:
000a74 30e3      	CPI  R30,LOW(0x3)
000a75 f439      	BRNE _0x2100018
000a76 d12c      	RCALL SUBOPT_0x3C
                +
000a77 91e0 019c+LDS R30 , _glcd_state + ( 25 )
000a79 91f0 019d+LDS R31 , _glcd_state + ( 25 ) + 1
000a7b 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000a7c c002      	RJMP _0x2120002
                 _0x2100018:
000a7d d125      	RCALL SUBOPT_0x3C
000a7e 91ec      	LD   R30,X
                 _0x2120002:
000a7f 9623      	ADIW R28,3
000a80 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000a81 93aa      	ST   -Y,R26
000a82 81eb      	LDD  R30,Y+3
000a83 30e0      	CPI  R30,0
000a84 f429      	BRNE _0x210001C
000a85 81e8      	LD   R30,Y
000a86 81a9      	LDD  R26,Y+1
000a87 81ba      	LDD  R27,Y+1+1
000a88 93ec      	ST   X,R30
000a89 c012      	RJMP _0x210001B
                 _0x210001C:
000a8a 30e2      	CPI  R30,LOW(0x2)
000a8b f429      	BRNE _0x210001D
000a8c 81e8      	LD   R30,Y
000a8d 81a9      	LDD  R26,Y+1
000a8e 81ba      	LDD  R27,Y+1+1
000a8f d2be      	RCALL __EEPROMWRB
000a90 c00b      	RJMP _0x210001B
                 _0x210001D:
000a91 30e3      	CPI  R30,LOW(0x3)
000a92 f449      	BRNE _0x210001B
000a93 81e9      	LDD  R30,Y+1
000a94 81fa      	LDD  R31,Y+1+1
000a95 d03c      	RCALL SUBOPT_0x10
000a96 81aa      	LDD  R26,Y+2
                +
000a97 91e0 019e+LDS R30 , _glcd_state + ( 27 )
000a99 91f0 019f+LDS R31 , _glcd_state + ( 27 ) + 1
000a9b 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
                 _0x2120001:
000a9c 9624      	ADIW R28,4
000a9d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
000183           	.BYTE 0x1D
                 _buff:
0001a0           	.BYTE 0x14
                 _station_receive:
0001b4           	.BYTE 0x18
                 _tay_cam_receive:
0001cc           	.BYTE 0x8
                 _data_receive:
0001d4           	.BYTE 0x12
                 _data_send:
0001e6           	.BYTE 0x18
                 _change:
0001fe           	.BYTE 0x2
                 _dem:
000200           	.BYTE 0x2
                 _distance:
000202           	.BYTE 0x4
                 __seed_G100:
000206           	.BYTE 0x4
                 _gfx_addr_G102:
00020a           	.BYTE 0x2
                 _gfx_buffer_G102:
00020c           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000a9e 93ba      	ST   -Y,R27
000a9f 93aa      	ST   -Y,R26
000aa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
                +
000aa1 ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
000aa2 958a     +DEC R24
000aa3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
000aa4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000aa5 e0b0      	LDI  R27,0
000aa6 c130      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000aa7 0fea      	ADD  R30,R26
000aa8 1ffb      	ADC  R31,R27
000aa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000aaa 85a9      	LDD  R26,Y+9
000aab 85ba      	LDD  R27,Y+9+1
000aac 93ec      	ST   X,R30
000aad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x5:
                +
000aae e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000aaf 958a     +DEC R24
000ab0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000ab1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x6:
000ab2 e0e0      	LDI  R30,LOW(0)
000ab3 93ea      	ST   -Y,R30
000ab4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000ab5 e0e7      	LDI  R30,LOW(7)
000ab6 93ea      	ST   -Y,R30
000ab7 e7ae      	LDI  R26,LOW(126)
000ab8 c755      	RJMP _RF_Write_TX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000ab9 93aa      	ST   -Y,R26
000aba 931a      	ST   -Y,R17
000abb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x9:
000abc 81a8      	LD   R26,Y
000abd c730      	RJMP _SPI_RW_TX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xA:
000abe 9a94      	SBI  0x12,4
000abf cfee      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xB:
000ac0 91ed      	LD   R30,X+
000ac1 91fd      	LD   R31,X+
000ac2 9631      	ADIW R30,1
000ac3 93fe      	ST   -X,R31
000ac4 93ee      	ST   -X,R30
000ac5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000ac6 e3e0      	LDI  R30,LOW(48)
000ac7 93ea      	ST   -Y,R30
000ac8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000ac9 de5a      	RCALL _glcd_line
000aca cfe7      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000acb e5e4      	LDI  R30,LOW(84)
000acc 93ea      	ST   -Y,R30
000acd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
000ace de20      	RCALL _glcd_outtext
000acf e0e4      	LDI  R30,LOW(4)
000ad0 93ea      	ST   -Y,R30
000ad1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x10:
000ad2 93fa      	ST   -Y,R31
000ad3 93ea      	ST   -Y,R30
000ad4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x11:
000ad5 eae0      	LDI  R30,LOW(_buff)
000ad6 e0f1      	LDI  R31,HIGH(_buff)
000ad7 cffa      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
000ad8 e0f0      	LDI  R31,0
000ad9 2766      	CLR  R22
000ada 2777      	CLR  R23
000adb d259      	RCALL __PUTPARD1
000adc e084      	LDI  R24,4
000add da45      	RCALL _sprintf
000ade 9628      	ADIW R28,8
000adf e3e2      	LDI  R30,LOW(50)
000ae0 93ea      	ST   -Y,R30
000ae1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000ae2 de35      	RCALL _glcd_moveto
000ae3 eaa0      	LDI  R26,LOW(_buff)
000ae4 e0b1      	LDI  R27,HIGH(_buff)
000ae5 ce09      	RJMP _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x14:
000ae6 91e0 0202 	LDS  R30,_distance
000ae8 91f0 0203 	LDS  R31,_distance+1
000aea 9160 0204 	LDS  R22,_distance+2
000aec 9170 0205 	LDS  R23,_distance+3
000aee d121      	RCALL __CFD1
000aef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
000af0 d6df      	RCALL _read_adc
000af1 2766      	CLR  R22
000af2 2777      	CLR  R23
000af3 01df      	MOVW R26,R30
000af4 01cb      	MOVW R24,R22
                +
000af5 e0e4     +LDI R30 , LOW ( 0x4 )
000af6 e0f0     +LDI R31 , HIGH ( 0x4 )
000af7 e060     +LDI R22 , BYTE3 ( 0x4 )
000af8 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
000af9 d21b      	RCALL __DIVD21
000afa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
000afb 81aa      	LDD  R26,Y+2
000afc 81bb      	LDD  R27,Y+2+1
000afd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
000afe 9614      	ADIW R26,4
000aff d22d      	RCALL __GETW1P
000b00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x18:
000b01 e0e0      	LDI  R30,LOW(0)
000b02 e0f0      	LDI  R31,HIGH(0)
000b03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x19:
000b04 932a      	ST   -Y,R18
000b05 85ad      	LDD  R26,Y+13
000b06 85be      	LDD  R27,Y+13+1
000b07 85ef      	LDD  R30,Y+15
000b08 89f8      	LDD  R31,Y+15+1
000b09 9509      	ICALL
000b0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
000b0b 89e8      	LDD  R30,Y+16
000b0c 89f9      	LDD  R31,Y+16+1
000b0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
000b0e 9734      	SBIW R30,4
000b0f 8be8      	STD  Y+16,R30
000b10 8bf9      	STD  Y+16+1,R31
000b11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
000b12 85ad      	LDD  R26,Y+13
000b13 85be      	LDD  R27,Y+13+1
000b14 85ef      	LDD  R30,Y+15
000b15 89f8      	LDD  R31,Y+15+1
000b16 9509      	ICALL
000b17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000b18 dff2      	RCALL SUBOPT_0x1A
000b19 cff4      	RJMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1E:
000b1a 89a8      	LDD  R26,Y+16
000b1b 89b9      	LDD  R27,Y+16+1
000b1c cfe1      	RJMP SUBOPT_0x17
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000b1d 83ee      	STD  Y+6,R30
000b1e 83ff      	STD  Y+6+1,R31
000b1f 81ae      	LDD  R26,Y+6
000b20 81bf      	LDD  R27,Y+6+1
000b21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
000b22 83ee      	STD  Y+6,R30
000b23 83ff      	STD  Y+6+1,R31
000b24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x21:
000b25 87ea      	STD  Y+10,R30
000b26 87fb      	STD  Y+10+1,R31
000b27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000b28 85ea      	LDD  R30,Y+10
000b29 85fb      	LDD  R31,Y+10+1
000b2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
000b2b 85aa      	LDD  R26,Y+10
000b2c 85bb      	LDD  R27,Y+10+1
000b2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000b2e 01de      	MOVW R26,R28
000b2f 961c      	ADIW R26,12
000b30 d192      	RCALL __ADDW2R15
000b31 d1fb      	RCALL __GETW1P
000b32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x25:
000b33 95e6      	LSR  R30
000b34 95e6      	LSR  R30
000b35 95e6      	LSR  R30
000b36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x26:
000b37 e0f0      	LDI  R31,0
000b38 cf6e      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27:
000b39 2fae      	MOV  R26,R30
000b3a ca29      	RJMP _pcd8544_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x28:
000b3b 5fe4      	SUBI R30,LOW(-_gfx_buffer_G102)
000b3c 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G102)
000b3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x29:
000b3e e0aa      	LDI  R26,LOW(_gfx_addr_G102)
000b3f e0b2      	LDI  R27,HIGH(_gfx_addr_G102)
000b40 cf7f      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000b41 9731      	SBIW R30,1
000b42 cff8      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000b43 81ec      	LDD  R30,Y+4
000b44 81fd      	LDD  R31,Y+4+1
000b45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
                +
000b46 93e0 0187+STS _glcd_state + ( 4 ) , R30
000b48 93f0 0188+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000b4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
                +
000b4b 93e0 019c+STS _glcd_state + ( 25 ) , R30
000b4d 93f0 019d+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000b4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E:
000b50 e0f0      	LDI  R31,0
000b51 0fae      	ADD  R26,R30
000b52 1fbf      	ADC  R27,R31
000b53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
000b54 e0f0      	LDI  R31,0
000b55 d192      	RCALL __MULW12U
000b56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x30:
000b57 85ec      	LDD  R30,Y+12
000b58 93ea      	ST   -Y,R30
000b59 81ef      	LDD  R30,Y+7
000b5a 85f8      	LDD  R31,Y+7+1
000b5b 9631      	ADIW R30,1
000b5c 83ef      	STD  Y+7,R30
000b5d 87f8      	STD  Y+7+1,R31
000b5e 9731      	SBIW R30,1
000b5f df72      	RCALL SUBOPT_0x10
000b60 e0a0      	LDI  R26,LOW(0)
000b61 cf1f      	RJMP _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
000b62 930a      	ST   -Y,R16
000b63 89a8      	LDD  R26,Y+16
000b64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x32:
000b65 5f1f      	SUBI R17,-1
000b66 85ee      	LDD  R30,Y+14
000b67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x33:
000b68 85ec      	LDD  R30,Y+12
000b69 93ea      	ST   -Y,R30
000b6a 81ef      	LDD  R30,Y+7
000b6b 85f8      	LDD  R31,Y+7+1
000b6c 9631      	ADIW R30,1
000b6d 83ef      	STD  Y+7,R30
000b6e 87f8      	STD  Y+7+1,R31
000b6f 9731      	SBIW R30,1
000b70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x34:
000b71 2766      	CLR  R22
000b72 2777      	CLR  R23
000b73 01df      	MOVW R26,R30
000b74 01cb      	MOVW R24,R22
000b75 cef1      	RJMP _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x35:
000b76 935a      	ST   -Y,R21
000b77 85aa      	LDD  R26,Y+10
000b78 cec7      	RJMP _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x36:
000b79 930a      	ST   -Y,R16
000b7a 9503      	INC  R16
000b7b 89e8      	LDD  R30,Y+16
000b7c 93ea      	ST   -Y,R30
000b7d 935a      	ST   -Y,R21
000b7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x37:
000b7f 2f5e      	MOV  R21,R30
000b80 85ec      	LDD  R30,Y+12
000b81 93ea      	ST   -Y,R30
000b82 81af      	LDD  R26,Y+7
000b83 85b8      	LDD  R27,Y+7+1
000b84 2788      	CLR  R24
000b85 2799      	CLR  R25
000b86 dee0      	RCALL _glcd_readmem
000b87 2e1e      	MOV  R1,R30
000b88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
000b89 95e0      	COM  R30
000b8a 21e1      	AND  R30,R1
000b8b 2b5e      	OR   R21,R30
000b8c cfdb      	RJMP SUBOPT_0x33
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x39:
000b8d 930a      	ST   -Y,R16
000b8e 9503      	INC  R16
000b8f 89e8      	LDD  R30,Y+16
000b90 93ea      	ST   -Y,R30
000b91 85ee      	LDD  R30,Y+14
000b92 93ea      	ST   -Y,R30
000b93 85e9      	LDD  R30,Y+9
000b94 85fa      	LDD  R31,Y+9+1
000b95 9631      	ADIW R30,1
000b96 87e9      	STD  Y+9,R30
000b97 87fa      	STD  Y+9+1,R31
000b98 9731      	SBIW R30,1
000b99 cfd7      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
000b9a 93ea      	ST   -Y,R30
000b9b 934a      	ST   -Y,R20
000b9c 85ad      	LDD  R26,Y+13
000b9d caa7      	RJMP _pcd8544_wrmasked_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000b9e deff      	RCALL SUBOPT_0x0
000b9f 81a8      	LD   R26,Y
000ba0 81b9      	LDD  R27,Y+1
000ba1 d1bd      	RCALL __CPW02
000ba2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3C:
000ba3 81a8      	LD   R26,Y
000ba4 81b9      	LDD  R27,Y+1
000ba5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D:
000ba6 d1bc      	RCALL __SAVELOCR6
                +
000ba7 91e0 0187+LDS R30 , _glcd_state + ( 4 )
000ba9 91f0 0188+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000bab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3E:
000bac 01f8      	MOVW R30,R16
                +
000bad 5f0f     +SUBI R16 , LOW ( - 1 )
000bae 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000baf 9004      	LPM  R0,Z
000bb0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3F:
                +
000bb1 91e0 0187+LDS R30 , _glcd_state + ( 4 )
000bb3 91f0 0188+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000bb5 9631      	ADIW R30,1
000bb6 91e4      	LPM  R30,Z
000bb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
000bb8 93ea      	ST   -Y,R30
                +
000bb9 91e0 0186+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000bbb 93ea      	ST   -Y,R30
000bbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41:
000bbd df43      	RCALL SUBOPT_0x18
000bbe df13      	RCALL SUBOPT_0x10
000bbf e0a9      	LDI  R26,LOW(9)
000bc0 cabb      	RJMP _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x42:
000bc1 81ae      	LDD  R26,Y+6
000bc2 5faf      	SUBI R26,-LOW(1)
000bc3 83ae      	STD  Y+6,R26
000bc4 50a1      	SUBI R26,LOW(1)
                +
000bc5 91e0 018b+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000bc7 17ae      	CP   R26,R30
000bc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
000bc9 931a      	ST   -Y,R17
000bca 933a      	ST   -Y,R19
000bcb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000bcc 85a9      	LDD  R26,Y+9
000bcd 85ba      	LDD  R27,Y+9+1
000bce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
000bcf 87e9      	STD  Y+9,R30
000bd0 87fa      	STD  Y+9+1,R31
000bd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x46:
000bd2 85e9      	LDD  R30,Y+9
000bd3 85fa      	LDD  R31,Y+9+1
000bd4 1bea      	SUB  R30,R26
000bd5 0bfb      	SBC  R31,R27
000bd6 cff8      	RJMP SUBOPT_0x45
                 
                 
                 	.CSEG
                 _delay_ms:
000bd7 9610      	adiw r26,0
000bd8 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000bd9 ed80     +LDI R24 , LOW ( 0x7D0 )
000bda e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000bdb 9701     +SBIW R24 , 1
000bdc f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000bdd 95a8      	wdr
000bde 9711      	sbiw r26,1
000bdf f7c9      	brne __delay_ms0
                 __delay_ms1:
000be0 9508      	ret
                 
                 __ROUND_REPACK:
000be1 2355      	TST  R21
000be2 f442      	BRPL __REPACK
000be3 3850      	CPI  R21,0x80
000be4 f411      	BRNE __ROUND_REPACK0
000be5 ffe0      	SBRS R30,0
000be6 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000be7 9631      	ADIW R30,1
000be8 1f69      	ADC  R22,R25
000be9 1f79      	ADC  R23,R25
000bea f06b      	BRVS __REPACK1
                 
                 __REPACK:
000beb e850      	LDI  R21,0x80
000bec 2757      	EOR  R21,R23
000bed f411      	BRNE __REPACK0
000bee 935f      	PUSH R21
000bef c073      	RJMP __ZERORES
                 __REPACK0:
000bf0 3f5f      	CPI  R21,0xFF
000bf1 f031      	BREQ __REPACK1
000bf2 0f66      	LSL  R22
000bf3 0c00      	LSL  R0
000bf4 9557      	ROR  R21
000bf5 9567      	ROR  R22
000bf6 2f75      	MOV  R23,R21
000bf7 9508      	RET
                 __REPACK1:
000bf8 935f      	PUSH R21
000bf9 2000      	TST  R0
000bfa f00a      	BRMI __REPACK2
000bfb c073      	RJMP __MAXRES
                 __REPACK2:
000bfc c06c      	RJMP __MINRES
                 
                 __UNPACK:
000bfd e850      	LDI  R21,0x80
000bfe 2e19      	MOV  R1,R25
000bff 2215      	AND  R1,R21
000c00 0f88      	LSL  R24
000c01 1f99      	ROL  R25
000c02 2795      	EOR  R25,R21
000c03 0f55      	LSL  R21
000c04 9587      	ROR  R24
                 
                 __UNPACK1:
000c05 e850      	LDI  R21,0x80
000c06 2e07      	MOV  R0,R23
000c07 2205      	AND  R0,R21
000c08 0f66      	LSL  R22
000c09 1f77      	ROL  R23
000c0a 2775      	EOR  R23,R21
000c0b 0f55      	LSL  R21
000c0c 9567      	ROR  R22
000c0d 9508      	RET
                 
                 __CFD1U:
000c0e 9468      	SET
000c0f c001      	RJMP __CFD1U0
                 __CFD1:
000c10 94e8      	CLT
                 __CFD1U0:
000c11 935f      	PUSH R21
000c12 dff2      	RCALL __UNPACK1
000c13 3870      	CPI  R23,0x80
000c14 f018      	BRLO __CFD10
000c15 3f7f      	CPI  R23,0xFF
000c16 f408      	BRCC __CFD10
000c17 c04b      	RJMP __ZERORES
                 __CFD10:
000c18 e156      	LDI  R21,22
000c19 1b57      	SUB  R21,R23
000c1a f4aa      	BRPL __CFD11
000c1b 9551      	NEG  R21
000c1c 3058      	CPI  R21,8
000c1d f40e      	BRTC __CFD19
000c1e 3059      	CPI  R21,9
                 __CFD19:
000c1f f030      	BRLO __CFD17
000c20 efef      	SER  R30
000c21 efff      	SER  R31
000c22 ef6f      	SER  R22
000c23 e77f      	LDI  R23,0x7F
000c24 f977      	BLD  R23,7
000c25 c01a      	RJMP __CFD15
                 __CFD17:
000c26 2777      	CLR  R23
000c27 2355      	TST  R21
000c28 f0b9      	BREQ __CFD15
                 __CFD18:
000c29 0fee      	LSL  R30
000c2a 1fff      	ROL  R31
000c2b 1f66      	ROL  R22
000c2c 1f77      	ROL  R23
000c2d 955a      	DEC  R21
000c2e f7d1      	BRNE __CFD18
000c2f c010      	RJMP __CFD15
                 __CFD11:
000c30 2777      	CLR  R23
                 __CFD12:
000c31 3058      	CPI  R21,8
000c32 f028      	BRLO __CFD13
000c33 2fef      	MOV  R30,R31
000c34 2ff6      	MOV  R31,R22
000c35 2f67      	MOV  R22,R23
000c36 5058      	SUBI R21,8
000c37 cff9      	RJMP __CFD12
                 __CFD13:
000c38 2355      	TST  R21
000c39 f031      	BREQ __CFD15
                 __CFD14:
000c3a 9576      	LSR  R23
000c3b 9567      	ROR  R22
000c3c 95f7      	ROR  R31
000c3d 95e7      	ROR  R30
000c3e 955a      	DEC  R21
000c3f f7d1      	BRNE __CFD14
                 __CFD15:
000c40 2000      	TST  R0
000c41 f40a      	BRPL __CFD16
000c42 d088      	RCALL __ANEGD1
                 __CFD16:
000c43 915f      	POP  R21
000c44 9508      	RET
                 
                 __CDF1U:
000c45 9468      	SET
000c46 c001      	RJMP __CDF1U0
                 __CDF1:
000c47 94e8      	CLT
                 __CDF1U0:
000c48 9730      	SBIW R30,0
000c49 4060      	SBCI R22,0
000c4a 4070      	SBCI R23,0
000c4b f0b1      	BREQ __CDF10
000c4c 2400      	CLR  R0
000c4d f026      	BRTS __CDF11
000c4e 2377      	TST  R23
000c4f f412      	BRPL __CDF11
000c50 9400      	COM  R0
000c51 d079      	RCALL __ANEGD1
                 __CDF11:
000c52 2e17      	MOV  R1,R23
000c53 e17e      	LDI  R23,30
000c54 2011      	TST  R1
                 __CDF12:
000c55 f032      	BRMI __CDF13
000c56 957a      	DEC  R23
000c57 0fee      	LSL  R30
000c58 1fff      	ROL  R31
000c59 1f66      	ROL  R22
000c5a 1c11      	ROL  R1
000c5b cff9      	RJMP __CDF12
                 __CDF13:
000c5c 2fef      	MOV  R30,R31
000c5d 2ff6      	MOV  R31,R22
000c5e 2d61      	MOV  R22,R1
000c5f 935f      	PUSH R21
000c60 df8a      	RCALL __REPACK
000c61 915f      	POP  R21
                 __CDF10:
000c62 9508      	RET
                 
                 __ZERORES:
000c63 27ee      	CLR  R30
000c64 27ff      	CLR  R31
000c65 2766      	CLR  R22
000c66 2777      	CLR  R23
000c67 915f      	POP  R21
000c68 9508      	RET
                 
                 __MINRES:
000c69 efef      	SER  R30
000c6a efff      	SER  R31
000c6b e76f      	LDI  R22,0x7F
000c6c ef7f      	SER  R23
000c6d 915f      	POP  R21
000c6e 9508      	RET
                 
                 __MAXRES:
000c6f efef      	SER  R30
000c70 efff      	SER  R31
000c71 e76f      	LDI  R22,0x7F
000c72 e77f      	LDI  R23,0x7F
000c73 915f      	POP  R21
000c74 9508      	RET
                 
                 __MULF12:
000c75 935f      	PUSH R21
000c76 df86      	RCALL __UNPACK
000c77 3870      	CPI  R23,0x80
000c78 f351      	BREQ __ZERORES
000c79 3890      	CPI  R25,0x80
000c7a f341      	BREQ __ZERORES
000c7b 2401      	EOR  R0,R1
000c7c 9408      	SEC
000c7d 1f79      	ADC  R23,R25
000c7e f423      	BRVC __MULF124
000c7f f31c      	BRLT __ZERORES
                 __MULF125:
000c80 2000      	TST  R0
000c81 f33a      	BRMI __MINRES
000c82 cfec      	RJMP __MAXRES
                 __MULF124:
000c83 920f      	PUSH R0
000c84 931f      	PUSH R17
000c85 932f      	PUSH R18
000c86 933f      	PUSH R19
000c87 934f      	PUSH R20
000c88 2711      	CLR  R17
000c89 2722      	CLR  R18
000c8a 2799      	CLR  R25
000c8b 9f68      	MUL  R22,R24
000c8c 01a0      	MOVW R20,R0
000c8d 9f8f      	MUL  R24,R31
000c8e 2d30      	MOV  R19,R0
000c8f 0d41      	ADD  R20,R1
000c90 1f59      	ADC  R21,R25
000c91 9f6b      	MUL  R22,R27
000c92 0d30      	ADD  R19,R0
000c93 1d41      	ADC  R20,R1
000c94 1f59      	ADC  R21,R25
000c95 9f8e      	MUL  R24,R30
000c96 d027      	RCALL __MULF126
000c97 9fbf      	MUL  R27,R31
000c98 d025      	RCALL __MULF126
000c99 9f6a      	MUL  R22,R26
000c9a d023      	RCALL __MULF126
000c9b 9fbe      	MUL  R27,R30
000c9c d01d      	RCALL __MULF127
000c9d 9faf      	MUL  R26,R31
000c9e d01b      	RCALL __MULF127
000c9f 9fae      	MUL  R26,R30
000ca0 0d11      	ADD  R17,R1
000ca1 1f29      	ADC  R18,R25
000ca2 1f39      	ADC  R19,R25
000ca3 1f49      	ADC  R20,R25
000ca4 1f59      	ADC  R21,R25
000ca5 2fe3      	MOV  R30,R19
000ca6 2ff4      	MOV  R31,R20
000ca7 2f65      	MOV  R22,R21
000ca8 2f52      	MOV  R21,R18
000ca9 914f      	POP  R20
000caa 913f      	POP  R19
000cab 912f      	POP  R18
000cac 911f      	POP  R17
000cad 900f      	POP  R0
000cae 2366      	TST  R22
000caf f02a      	BRMI __MULF122
000cb0 0f55      	LSL  R21
000cb1 1fee      	ROL  R30
000cb2 1fff      	ROL  R31
000cb3 1f66      	ROL  R22
000cb4 c002      	RJMP __MULF123
                 __MULF122:
000cb5 9573      	INC  R23
000cb6 f24b      	BRVS __MULF125
                 __MULF123:
000cb7 df29      	RCALL __ROUND_REPACK
000cb8 915f      	POP  R21
000cb9 9508      	RET
                 
                 __MULF127:
000cba 0d10      	ADD  R17,R0
000cbb 1d21      	ADC  R18,R1
000cbc 1f39      	ADC  R19,R25
000cbd c002      	RJMP __MULF128
                 __MULF126:
000cbe 0d20      	ADD  R18,R0
000cbf 1d31      	ADC  R19,R1
                 __MULF128:
000cc0 1f49      	ADC  R20,R25
000cc1 1f59      	ADC  R21,R25
000cc2 9508      	RET
                 
                 __ADDW2R15:
000cc3 2400      	CLR  R0
000cc4 0daf      	ADD  R26,R15
000cc5 1db0      	ADC  R27,R0
000cc6 9508      	RET
                 
                 __ANEGW1:
000cc7 95f1      	NEG  R31
000cc8 95e1      	NEG  R30
000cc9 40f0      	SBCI R31,0
000cca 9508      	RET
                 
                 __ANEGD1:
000ccb 95f0      	COM  R31
000ccc 9560      	COM  R22
000ccd 9570      	COM  R23
000cce 95e1      	NEG  R30
000ccf 4fff      	SBCI R31,-1
000cd0 4f6f      	SBCI R22,-1
000cd1 4f7f      	SBCI R23,-1
000cd2 9508      	RET
                 
                 __LSLB12:
000cd3 23ee      	TST  R30
000cd4 2e0e      	MOV  R0,R30
000cd5 2fea      	MOV  R30,R26
000cd6 f019      	BREQ __LSLB12R
                 __LSLB12L:
000cd7 0fee      	LSL  R30
000cd8 940a      	DEC  R0
000cd9 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000cda 9508      	RET
                 
                 __LSRB12:
000cdb 23ee      	TST  R30
000cdc 2e0e      	MOV  R0,R30
000cdd 2fea      	MOV  R30,R26
000cde f019      	BREQ __LSRB12R
                 __LSRB12L:
000cdf 95e6      	LSR  R30
000ce0 940a      	DEC  R0
000ce1 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000ce2 9508      	RET
                 
                 __CWD1:
000ce3 2f6f      	MOV  R22,R31
000ce4 0f66      	ADD  R22,R22
000ce5 0b66      	SBC  R22,R22
000ce6 2f76      	MOV  R23,R22
000ce7 9508      	RET
                 
                 __MULW12U:
000ce8 9ffa      	MUL  R31,R26
000ce9 2df0      	MOV  R31,R0
000cea 9feb      	MUL  R30,R27
000ceb 0df0      	ADD  R31,R0
000cec 9fea      	MUL  R30,R26
000ced 2de0      	MOV  R30,R0
000cee 0df1      	ADD  R31,R1
000cef 9508      	RET
                 
                 __DIVD21U:
000cf0 933f      	PUSH R19
000cf1 934f      	PUSH R20
000cf2 935f      	PUSH R21
000cf3 2400      	CLR  R0
000cf4 2411      	CLR  R1
000cf5 2744      	CLR  R20
000cf6 2755      	CLR  R21
000cf7 e230      	LDI  R19,32
                 __DIVD21U1:
000cf8 0faa      	LSL  R26
000cf9 1fbb      	ROL  R27
000cfa 1f88      	ROL  R24
000cfb 1f99      	ROL  R25
000cfc 1c00      	ROL  R0
000cfd 1c11      	ROL  R1
000cfe 1f44      	ROL  R20
000cff 1f55      	ROL  R21
000d00 1a0e      	SUB  R0,R30
000d01 0a1f      	SBC  R1,R31
000d02 0b46      	SBC  R20,R22
000d03 0b57      	SBC  R21,R23
000d04 f428      	BRCC __DIVD21U2
000d05 0e0e      	ADD  R0,R30
000d06 1e1f      	ADC  R1,R31
000d07 1f46      	ADC  R20,R22
000d08 1f57      	ADC  R21,R23
000d09 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000d0a 60a1      	SBR  R26,1
                 __DIVD21U3:
000d0b 953a      	DEC  R19
000d0c f759      	BRNE __DIVD21U1
000d0d 01fd      	MOVW R30,R26
000d0e 01bc      	MOVW R22,R24
000d0f 01d0      	MOVW R26,R0
000d10 01ca      	MOVW R24,R20
000d11 915f      	POP  R21
000d12 914f      	POP  R20
000d13 913f      	POP  R19
000d14 9508      	RET
                 
                 __DIVD21:
000d15 d004      	RCALL __CHKSIGND
000d16 dfd9      	RCALL __DIVD21U
000d17 f40e      	BRTC __DIVD211
000d18 dfb2      	RCALL __ANEGD1
                 __DIVD211:
000d19 9508      	RET
                 
                 __CHKSIGND:
000d1a 94e8      	CLT
000d1b ff77      	SBRS R23,7
000d1c c002      	RJMP __CHKSD1
000d1d dfad      	RCALL __ANEGD1
000d1e 9468      	SET
                 __CHKSD1:
000d1f ff97      	SBRS R25,7
000d20 c00b      	RJMP __CHKSD2
000d21 2400      	CLR  R0
000d22 95a0      	COM  R26
000d23 95b0      	COM  R27
000d24 9580      	COM  R24
000d25 9590      	COM  R25
000d26 9611      	ADIW R26,1
000d27 1d80      	ADC  R24,R0
000d28 1d90      	ADC  R25,R0
000d29 f800      	BLD  R0,0
000d2a 9403      	INC  R0
000d2b fa00      	BST  R0,0
                 __CHKSD2:
000d2c 9508      	RET
                 
                 __GETW1P:
000d2d 91ed      	LD   R30,X+
000d2e 91fc      	LD   R31,X
000d2f 9711      	SBIW R26,1
000d30 9508      	RET
                 
                 __GETW1PF:
000d31 9005      	LPM  R0,Z+
000d32 91f4      	LPM  R31,Z
000d33 2de0      	MOV  R30,R0
000d34 9508      	RET
                 
                 __PUTPARD1:
000d35 937a      	ST   -Y,R23
000d36 936a      	ST   -Y,R22
000d37 93fa      	ST   -Y,R31
000d38 93ea      	ST   -Y,R30
000d39 9508      	RET
                 
                 __PUTPARL:
000d3a 27bb      	CLR  R27
                 __PUTPAR:
000d3b 0fea      	ADD  R30,R26
000d3c 1ffb      	ADC  R31,R27
                 __PUTPAR0:
000d3d 9002      	LD   R0,-Z
000d3e 920a      	ST   -Y,R0
000d3f 9711      	SBIW R26,1
000d40 f7e1      	BRNE __PUTPAR0
000d41 9508      	RET
                 
                 __EEPROMRDB:
000d42 99e1      	SBIC EECR,EEWE
000d43 cffe      	RJMP __EEPROMRDB
000d44 93ff      	PUSH R31
000d45 b7ff      	IN   R31,SREG
000d46 94f8      	CLI
000d47 bbae      	OUT  EEARL,R26
000d48 bbbf      	OUT  EEARH,R27
000d49 9ae0      	SBI  EECR,EERE
000d4a b3ed      	IN   R30,EEDR
000d4b bfff      	OUT  SREG,R31
000d4c 91ff      	POP  R31
000d4d 9508      	RET
                 
                 __EEPROMWRB:
000d4e 9be1      	SBIS EECR,EEWE
000d4f c002      	RJMP __EEPROMWRB1
000d50 95a8      	WDR
000d51 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000d52 b79f      	IN   R25,SREG
000d53 94f8      	CLI
000d54 bbae      	OUT  EEARL,R26
000d55 bbbf      	OUT  EEARH,R27
000d56 9ae0      	SBI  EECR,EERE
000d57 b38d      	IN   R24,EEDR
000d58 17e8      	CP   R30,R24
000d59 f019      	BREQ __EEPROMWRB0
000d5a bbed      	OUT  EEDR,R30
000d5b 9ae2      	SBI  EECR,EEMWE
000d5c 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000d5d bf9f      	OUT  SREG,R25
000d5e 9508      	RET
                 
                 __CPW02:
000d5f 2400      	CLR  R0
000d60 160a      	CP   R0,R26
000d61 060b      	CPC  R0,R27
000d62 9508      	RET
                 
                 __SAVELOCR6:
000d63 935a      	ST   -Y,R21
                 __SAVELOCR5:
000d64 934a      	ST   -Y,R20
                 __SAVELOCR4:
000d65 933a      	ST   -Y,R19
                 __SAVELOCR3:
000d66 932a      	ST   -Y,R18
                 __SAVELOCR2:
000d67 931a      	ST   -Y,R17
000d68 930a      	ST   -Y,R16
000d69 9508      	RET
                 
                 __LOADLOCR6:
000d6a 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000d6b 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000d6c 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000d6d 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000d6e 8119      	LDD  R17,Y+1
000d6f 8108      	LD   R16,Y
000d70 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  59 r1 :  24 r2 :   0 r3 :   0 r4 :   2 r5 :   2 r6 :   0 r7 :   3 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   2 r14:   0 r15:   4 
r16:  81 r17: 108 r18:  68 r19:  61 r20:  48 r21: 101 r22:  60 r23:  49 
r24:  49 r25:  34 r26: 377 r27:  99 r28:  33 r29:   1 r30: 822 r31: 166 
x  :  24 y  : 535 z  :  33 
Registers used: 26 out of 35 (74.3%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  28 add   :  31 
adiw  :  41 and   :  11 andi  :  16 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  51 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  17 
brlt  :   7 brmi  :   5 brne  :  96 brpl  :   7 brsh  :  26 brtc  :   2 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   1 cbi   :  23 
cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 clr   :  48 
cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :  15 cp    :  33 
cpc   :  11 cpi   : 111 cpse  :   0 dec   :  13 des   :   0 eor   :   5 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 in    :   7 
inc   :   6 ld    :  48 ldd   : 298 ldi   : 320 lds   :  40 lpm   :  30 
lsl   :  16 lsr   :  10 mov   : 126 movw  :  46 mul   :  14 muls  :   0 
mulsu :   0 neg   :   4 nop   :   0 or    :   7 ori   :  15 out   :  47 
pop   :  26 push  :  25 rcall : 467 ret   : 100 reti  :   1 rjmp  : 245 
rol   :  20 ror   :   7 sbc   :   8 sbci  :  13 sbi   :  28 sbic  :   6 
sbis  :   7 sbiw  :  41 sbr   :   1 sbrc  :   2 sbrs  :  13 sec   :   1 
seh   :   0 sei   :   1 sen   :   0 ser   :   8 ses   :   0 set   :   3 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    : 138 std   :  88 
sts   :  58 sub   :  17 subi  :  44 swap  :   0 tst   :  17 wdr   :   2 

Instructions used: 75 out of 114 (65.8%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001ae2   6254    628   6882    8192  84.0%
[.dseg] 0x000060 0x000404      0    676    676    1024  66.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 14 warnings
