
AVRASM ver. 2.1.30  D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm Tue Sep 12 18:54:52 2017

D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1086): warning: Register r5 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1087): warning: Register r4 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1088): warning: Register r7 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1089): warning: Register r6 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1090): warning: Register r9 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1091): warning: Register r8 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1092): warning: Register r11 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1093): warning: Register r10 already defined by the .DEF directive
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1094): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dht_nhiet_do=R5
                 	.DEF _dht_do_am=R4
                 	.DEF _P_Add=R7
                 	.DEF _Code_tay_cam1=R6
                 	.DEF _Code_tay_cam2=R9
                 	.DEF _Code_tay_cam3=R8
                 	.DEF _Code_tay_cam4=R11
                 	.DEF _data_receive_2=R10
                 	.DEF _result=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c15b      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 c29c      	RJMP _timer2_ovf
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _font5x7:
000013 0705
000014 6020
000015 0000
000016 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
000017 0000
000018 5f00
000019 0000
00001a 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00001b 0700
00001c 1400
00001d 147f
00001e 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
00001f 2a24
000020 2a7f
000021 2312
000022 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000023 6264
000024 4936
000025 2255
000026 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
000027 0305
000028 0000
000029 1c00
00002a 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00002b 0000
00002c 2241
00002d 001c
00002e 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
00002f 2a1c
000030 0808
000031 3e08
000032 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000033 5000
000034 0030
000035 0800
000036 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
000037 0808
000038 3000
000039 0030
00003a 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00003b 0810
00003c 0204
00003d 513e
00003e 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
00003f 003e
000040 7f42
000041 0040
000042 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000043 4951
000044 2146
000045 4541
000046 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
000047 1418
000048 7f12
000049 2710
00004a 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00004b 3945
00004c 4a3c
00004d 4949
00004e 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
00004f 0971
000050 0305
000051 4936
000052 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000053 0636
000054 4949
000055 1e29
000056 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
000057 0036
000058 0000
000059 3656
00005a 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00005b 0800
00005c 2214
00005d 1441
00005e 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
00005f 1414
000060 2241
000061 0814
000062 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000063 5101
000064 0609
000065 4932
000066 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
000067 7e3e
000068 1111
000069 7e11
00006a 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00006b 4949
00006c 3e36
00006d 4141
00006e 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
00006f 417f
000070 2241
000071 7f1c
000072 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
000073 4149
000074 097f
000075 0109
000076 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
000077 4141
000078 3251
000079 087f
00007a 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
00007b 007f
00007c 7f41
00007d 0041
00007e 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
00007f 3f41
000080 7f01
000081 1408
000082 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
000083 407f
000084 4040
000085 7f40
000086 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
000087 7f02
000088 047f
000089 1008
00008a 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
00008b 4141
00008c 3e41
00008d 097f
00008e 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
00008f 3e06
000090 5141
000091 5e21
000092 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
000093 2919
000094 4646
000095 4949
000096 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
000097 0101
000098 017f
000099 3f01
00009a 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
00009b 3f40
00009c 201f
00009d 2040
00009e 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
00009f 1820
0000a0 7f20
0000a1 1463
0000a2 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000a3 0363
0000a4 7804
0000a5 0304
0000a6 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000a7 4549
0000a8 0043
0000a9 7f00
0000aa 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000ab 0402
0000ac 1008
0000ad 4120
0000ae 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000af 0000
0000b0 0204
0000b1 0201
0000b2 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000b3 4040
0000b4 4040
0000b5 0100
0000b6 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000b7 2000
0000b8 5454
0000b9 7854
0000ba 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000bb 4444
0000bc 3838
0000bd 4444
0000be 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000bf 4438
0000c0 4844
0000c1 387f
0000c2 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000c3 1854
0000c4 7e08
0000c5 0109
0000c6 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000c7 5414
0000c8 3c54
0000c9 087f
0000ca 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000cb 0078
0000cc 7d44
0000cd 0040
0000ce 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000cf 3d44
0000d0 0000
0000d1 107f
0000d2 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000d3 4100
0000d4 407f
0000d5 7c00
0000d6 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000d7 7804
0000d8 087c
0000d9 0404
0000da 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000db 4444
0000dc 3844
0000dd 147c
0000de 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000df 0808
0000e0 1414
0000e1 7c18
0000e2 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000e3 0404
0000e4 4808
0000e5 5454
0000e6 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000e7 3f04
0000e8 4044
0000e9 3c20
0000ea 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
0000eb 7c20
0000ec 201c
0000ed 2040
0000ee 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
0000ef 3040
0000f0 3c40
0000f1 2844
0000f2 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
0000f3 0c44
0000f4 5050
0000f5 3c50
0000f6 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
0000f7 4c54
0000f8 0044
0000f9 3608
0000fa 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
0000fb 0000
0000fc 007f
0000fd 0000
0000fe 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
0000ff 0008
000100 0102
000101 0402
000102 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000103 4141
000104 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _tbl10_G101:
000105 2710
000106 03e8
000107 0064
000108 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000109 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00010a 1000
00010b 0100
00010c 0010
00010d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
00010e 0100
00010f 0703
000110 1f0f
000111 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1192): warning: .cseg .db misalignment - padding zero byte
000112 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1196): warning: .cseg .db misalignment - padding zero byte
000113 00a1      	.DB  0xA1
                 
                 _0x0:
000114 6f4e
000115 6564
000116 203a
000117 3100      	.DB  0x4E,0x6F,0x64,0x65,0x3A,0x20,0x0,0x31
000118 5400
000119 6d65
00011a 3a70
00011b 0020      	.DB  0x0,0x54,0x65,0x6D,0x70,0x3A,0x20,0x0
00011c 7548
00011d 696d
00011e 3a64
00011f 0020      	.DB  0x48,0x75,0x6D,0x69,0x64,0x3A,0x20,0x0
000120 6157
000121 6574
000122 3a72
000123 0020      	.DB  0x57,0x61,0x74,0x65,0x72,0x3A,0x20,0x0
000124 4321
000125 6300
000126 006d
000127 7525      	.DB  0x21,0x43,0x0,0x63,0x6D,0x0,0x25,0x75
000128 2500
000129 2075
00012a 0020
00012b 202a      	.DB  0x0,0x25,0x75,0x20,0x20,0x0,0x2A,0x20
00012c 2500
00012d 2064
00012e 5200
00012f 6961      	.DB  0x0,0x25,0x64,0x20,0x0,0x52,0x61,0x69
000130 206e
000131 5300
000132 6e75
000133 0020      	.DB  0x6E,0x20,0x0,0x53,0x75,0x6E,0x20,0x0
                 _0x2000060:
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1208): warning: .cseg .db misalignment - padding zero byte
000134 0001      	.DB  0x1
                 _0x2000000:
000135 4e2d
000136 4e41
000137 4900
000138 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Embedded Project\Recovery\ATmega128 project\canh bao lu\tram con\Debug\List\1.asm(1211): warning: .cseg .db misalignment - padding zero byte
000139 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00013a 0001      	.DW  0x01
00013b 0007      	.DW  0x07
00013c 0226      	.DW  __REG_VARS*2
                 
00013d 0007      	.DW  0x07
00013e 0160      	.DW  _0xD3
00013f 0228      	.DW  _0x0*2
                 
000140 0002      	.DW  0x02
000141 0167      	.DW  _0xD3+7
000142 022f      	.DW  _0x0*2+7
                 
000143 0007      	.DW  0x07
000144 0169      	.DW  _0xD3+9
000145 0231      	.DW  _0x0*2+9
                 
000146 0008      	.DW  0x08
000147 0170      	.DW  _0xD3+16
000148 0238      	.DW  _0x0*2+16
                 
000149 0008      	.DW  0x08
00014a 0178      	.DW  _0xD3+24
00014b 0240      	.DW  _0x0*2+24
                 
00014c 0003      	.DW  0x03
00014d 0180      	.DW  _0xD3+32
00014e 0248      	.DW  _0x0*2+32
                 
00014f 0003      	.DW  0x03
000150 0183      	.DW  _0xD3+35
000151 024b      	.DW  _0x0*2+35
                 
000152 0006      	.DW  0x06
000153 0186      	.DW  _0xDD
000154 025d      	.DW  _0x0*2+53
                 
000155 0005      	.DW  0x05
000156 018c      	.DW  _0xDD+6
000157 0263      	.DW  _0x0*2+59
                 
000158 0001      	.DW  0x01
000159 01f8      	.DW  __seed_G100
00015a 0268      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
00015b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00015c 94f8      	CLI
00015d 27ee      	CLR  R30
00015e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00015f e0f1      	LDI  R31,1
000160 bffb      	OUT  GICR,R31
000161 bfeb      	OUT  GICR,R30
000162 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000163 e08d      	LDI  R24,(14-2)+1
000164 e0a2      	LDI  R26,2
000165 27bb      	CLR  R27
                 __CLEAR_REG:
000166 93ed      	ST   X+,R30
000167 958a      	DEC  R24
000168 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000169 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00016a e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00016b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00016c 93ed      	ST   X+,R30
00016d 9701      	SBIW R24,1
00016e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00016f e7e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000170 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000171 9185      	LPM  R24,Z+
000172 9195      	LPM  R25,Z+
000173 9700      	SBIW R24,0
000174 f061      	BREQ __GLOBAL_INI_END
000175 91a5      	LPM  R26,Z+
000176 91b5      	LPM  R27,Z+
000177 9005      	LPM  R0,Z+
000178 9015      	LPM  R1,Z+
000179 01bf      	MOVW R22,R30
00017a 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00017b 9005      	LPM  R0,Z+
00017c 920d      	ST   X+,R0
00017d 9701      	SBIW R24,1
00017e f7e1      	BRNE __GLOBAL_INI_LOOP
00017f 01fb      	MOVW R30,R22
000180 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000181 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000182 bfed      	OUT  SPL,R30
000183 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000184 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000185 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000186 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000187 c1b6      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;//config DHT11
                 ;#define         DHT_DATA_IN     PIND.0
                 ;#define         DHT_DATA_OUT    PORTD.0
                 ;#define         DHT_DDR_DATA    DDRD.0
                 ;
                 ;
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <DHT.h>
                 
                 	.CSEG
                 _DHT_GetTemHumi:
                 ; .FSTART _DHT_GetTemHumi
000188 d92f      	RCALL SUBOPT_0x0
000189 9725      	SBIW R28,5
00018a e0e0      	LDI  R30,LOW(0)
00018b 83e8      	ST   Y,R30
00018c 83e9      	STD  Y+1,R30
00018d 83ea      	STD  Y+2,R30
00018e 83eb      	STD  Y+3,R30
00018f 83ec      	STD  Y+4,R30
000190 dc28      	RCALL __SAVELOCR4
                 ;	*tem -> Y+11
                 ;	*humi -> Y+9
                 ;	buffer -> Y+4
                 ;	ii -> R17
                 ;	i -> R16
                 ;	checksum -> R19
000191 9a88      	SBI  0x11,0
000192 9a90      	SBI  0x12,0
000193 d927      	RCALL SUBOPT_0x1
000194 9890      	CBI  0x12,0
000195 e1a9      	LDI  R26,LOW(25)
000196 d928      	RCALL SUBOPT_0x2
000197 9a90      	SBI  0x12,0
000198 9888      	CBI  0x11,0
000199 d921      	RCALL SUBOPT_0x1
00019a 9b80      	SBIS 0x10,0
00019b c002      	RJMP _0xD
00019c e0e0      	LDI  R30,LOW(0)
00019d c03e      	RJMP _0x212000D
                 _0xD:
                 _0xF:
00019e 9b80      	SBIS 0x10,0
00019f cffe      	RJMP _0xF
0001a0 d91a      	RCALL SUBOPT_0x1
0001a1 9980      	SBIC 0x10,0
0001a2 c002      	RJMP _0x12
0001a3 e0e0      	LDI  R30,LOW(0)
0001a4 c037      	RJMP _0x212000D
                 _0x12:
                 _0x14:
0001a5 9980      	SBIC 0x10,0
0001a6 cffe      	RJMP _0x14
0001a7 e000      	LDI  R16,LOW(0)
                 _0x18:
0001a8 3005      	CPI  R16,5
0001a9 f4f0      	BRSH _0x19
0001aa e010      	LDI  R17,LOW(0)
                 _0x1B:
0001ab 3018      	CPI  R17,8
0001ac f4c8      	BRSH _0x1C
                 _0x1D:
0001ad 9b80      	SBIS 0x10,0
0001ae cffe      	RJMP _0x1D
                +
0001af e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001b0 958a     +DEC R24
0001b1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001b2 9b80      	SBIS 0x10,0
0001b3 c010      	RJMP _0x20
0001b4 2fe0      	MOV  R30,R16
0001b5 e0f0      	LDI  R31,0
0001b6 01de      	MOVW R26,R28
0001b7 9614      	ADIW R26,4
0001b8 d908      	RCALL SUBOPT_0x3
0001b9 01bf      	MOVW R22,R30
0001ba 8010      	LD   R1,Z
0001bb e0e7      	LDI  R30,LOW(7)
0001bc 1be1      	SUB  R30,R17
0001bd e0a1      	LDI  R26,LOW(1)
0001be db42      	RCALL __LSLB12
0001bf 29e1      	OR   R30,R1
0001c0 01db      	MOVW R26,R22
0001c1 93ec      	ST   X,R30
                 _0x21:
0001c2 9980      	SBIC 0x10,0
0001c3 cffe      	RJMP _0x21
                 _0x20:
0001c4 5f1f      	SUBI R17,-1
0001c5 cfe5      	RJMP _0x1B
                 _0x1C:
0001c6 5f0f      	SUBI R16,-1
0001c7 cfe0      	RJMP _0x18
                 _0x19:
0001c8 81ed      	LDD  R30,Y+5
0001c9 81ac      	LDD  R26,Y+4
0001ca 0fea      	ADD  R30,R26
0001cb 81ae      	LDD  R26,Y+6
0001cc 0fea      	ADD  R30,R26
0001cd 81af      	LDD  R26,Y+7
0001ce 0fea      	ADD  R30,R26
0001cf 2f3e      	MOV  R19,R30
0001d0 85e8      	LDD  R30,Y+8
0001d1 17e3      	CP   R30,R19
0001d2 f011      	BREQ _0x24
0001d3 e0e0      	LDI  R30,LOW(0)
0001d4 c007      	RJMP _0x212000D
                 _0x24:
0001d5 81ee      	LDD  R30,Y+6
0001d6 85ab      	LDD  R26,Y+11
0001d7 85bc      	LDD  R27,Y+11+1
0001d8 93ec      	ST   X,R30
0001d9 81ec      	LDD  R30,Y+4
0001da d8e9      	RCALL SUBOPT_0x4
0001db e0e1      	LDI  R30,LOW(1)
                 _0x212000D:
0001dc dbe3      	RCALL __LOADLOCR4
0001dd 962d      	ADIW R28,13
0001de 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;
                 ;// Declare your global variables here
                 ;unsigned char buff[20];
                 ;unsigned char dht_nhiet_do,dht_do_am;
                 ;
                 ;// Voltage Reference: AREF pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0020 {
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0021 ADMUX=adc_input | ADC_VREF_TYPE;
0001df 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
0001e0 81e8      	LD   R30,Y
0001e1 b9e7      	OUT  0x7,R30
                 ; 0000 0022 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0023 delay_us(10);
0001e2 d8e5      	RCALL SUBOPT_0x5
                 ; 0000 0024 // Start the AD conversion
                 ; 0000 0025 ADCSRA|=(1<<ADSC);
0001e3 9a36      	SBI  0x6,6
                 ; 0000 0026 // Wait for the AD conversion to complete
                 ; 0000 0027 while ((ADCSRA & (1<<ADIF))==0);
                 _0x25:
0001e4 9b34      	SBIS 0x6,4
0001e5 cffe      	RJMP _0x25
                 ; 0000 0028 ADCSRA|=(1<<ADIF);
0001e6 9a34      	SBI  0x6,4
                 ; 0000 0029 return ADCW;
0001e7 b1e4      	IN   R30,0x4
0001e8 b1f5      	IN   R31,0x4+1
0001e9 c438      	RJMP _0x212000A
                 ; 0000 002A }
                 ; .FEND
                 ;
                 ;
                 ;//config NRF24L01
                 ;#define CE PORTD.3
                 ;#define CSN PORTD.4
                 ;#define SCK PORTD.2
                 ;#define MOSI PORTB.6
                 ;#define MISO PIND.1
                 ;#define IRQ PINB.7
                 ;unsigned char P_Add=0xA1, Code_tay_cam1, Code_tay_cam2, Code_tay_cam3, Code_tay_cam4;
                 ;#include "nrf_code.c"
                 ;#define _BV(x) (1<<(x))
                 ;#define RX_DR       6
                 ;#define TX_DS       5
                 ;#define MAX_RT      4
                 ;#define STATUS      0x07
                 ;
                 ;typedef struct
                 ;{
                 ;    int flag;
                 ;    float a;
                 ;    float b;
                 ;    float c;
                 ;    float d;
                 ;}data;
                 ;
                 ;
                 ;typedef struct
                 ;{
                 ;    int flag;
                 ;    int light;
                 ;    int humi;
                 ;    int temp;
                 ;    int sm;
                 ;}station_info;
                 ;
                 ;typedef struct
                 ;{
                 ;    int analog_l;
                 ;    int analog_r;
                 ;    int digital_l;
                 ;    int digital_r;
                 ;}tay_cam_info;
                 ;
                 ;station_info station_receive;
                 ;tay_cam_info tay_cam_receive;
                 ;
                 ;data data_receive;
                 ;unsigned char data_receive_2;
                 ;unsigned char result;
                 ;
                 ;
                 ;void config();
                 ;
                 ;
                 ;//-----------------------------TX Mode -----------------------------------------------//
                 ;unsigned char SPI_RW_TX(unsigned char Buff);                                       //Function used for text moving
                 ;void RF_Init_TX();                                                                 //Function allow to Initialize RF dev ...
                 ;unsigned char RF_Write_TX(unsigned char Reg_Add, unsigned char Value);                      //Function to write a value  ...
                 ;void RF_Write_Address_TX(unsigned char Address);                                   //Function to write TX address for pi ...
                 ;void RF_Write_Address_2_TX(unsigned char Address);                                 //Function to write TX address for pi ...
                 ;void RX_Mode_Active_TX();                                                          //Function to put nRF in RX mode
                 ;void TX_Mode_Active_TX();                                                          //Function to put nRF in TX mode
                 ;void RF_Config_TX();                                                               //Function to config the nRF
                 ;void RF_TX_Send_TX(data send);                                                     //Function to send data Value to RX A ...
                 ;void RF_TX_Send_2_TX(data send);                                                   //Function to send data Value to RX a ...
                 ;
                 ;
                 ;//---------------------------------RX Mode----------------------------------------------//
                 ;unsigned char SPI_RW_RX(unsigned char Buff);                                       //Function used for text moving
                 ;unsigned char SPI_Read_RX(void);
                 ;void RF_Init_RX();                                                                 //Function allow to Initialize RF dev ...
                 ;void RF_Write_RX(unsigned char Reg_Add, unsigned char Value);                      //Function to write a value to a regi ...
                 ;void RF_Command_RX(unsigned char command);                                         //Function to write a command
                 ;void RF_Write_Address_RX(unsigned char Address1, unsigned char Address2, unsigned char Address3, unsigned char Address4) ...
                 ;void RX_Mode_RX();                                                          //Function to put nRF in RX mode
                 ;void RF_Config_RX();                                                               //Function to config the nRF
                 ;void RF_Read_RX();                                                     //Function to read the data from RX FIFO
                 ;void RF_Write2_RX(unsigned char Reg_Add, unsigned char Value);
                 ;void RF_Write3_RX(unsigned char Reg_Add, unsigned char Value);
                 ;void RF_Read_RX_2();
                 ;
                 ;
                 ;
                 ;
                 ;void config()
                 ; 0000 0035 {
                 _config:
                 ; .FSTART _config
                 ;RF_Write_RX(0x07,0b01111110);  // Clear flag
0001ea d8e1      	RCALL SUBOPT_0x6
0001eb d098      	RCALL _RF_Write_RX
                 ;RF_Command_RX(0b11100010);     //Flush RX
0001ec eea2      	LDI  R26,LOW(226)
0001ed d09f      	RCALL _RF_Command_RX
                 ;delay_us(10);
0001ee d8d9      	RCALL SUBOPT_0x5
                 ;RF_Write_TX(0x00,0b00011111);     //CONFIG 0x00
0001ef d8e0      	RCALL SUBOPT_0x7
0001f0 e1af      	LDI  R26,LOW(31)
0001f1 d01e      	RCALL _RF_Write_TX
                 ;delay_ms(2);
0001f2 e0a2      	LDI  R26,LOW(2)
0001f3 d8cb      	RCALL SUBOPT_0x2
                 ;RF_Write_TX(0x07,0b01111110);
0001f4 d8d7      	RCALL SUBOPT_0x6
0001f5 d01a      	RCALL _RF_Write_TX
                 ;RF_Write_TX(0x1D, 0b00000100);
0001f6 e1ed      	LDI  R30,LOW(29)
0001f7 93ea      	ST   -Y,R30
0001f8 e0a4      	LDI  R26,LOW(4)
0001f9 d016      	RCALL _RF_Write_TX
                 ;RF_Write_TX(0x05,0b00000010);     //RF_CH 0x05        Choose frequency channel
0001fa e0e5      	LDI  R30,LOW(5)
0001fb 93ea      	ST   -Y,R30
0001fc e0a2      	LDI  R26,LOW(2)
0001fd c045      	RJMP _0x212000C
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;
                 ;unsigned char SPI_RW_TX(unsigned char Buff){
                 _SPI_RW_TX:
                 ; .FSTART _SPI_RW_TX
                 ;    unsigned char bit_ctr;
                 ;       for(bit_ctr=0;bit_ctr<8;bit_ctr++) // output 8-bit
0001fe 93aa      	ST   -Y,R26
0001ff 931a      	ST   -Y,R17
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
000200 e010      	LDI  R17,LOW(0)
                 _0x29:
000201 3018      	CPI  R17,8
000202 f450      	BRSH _0x2A
                 ;       {
                 ;        MOSI = (Buff & 0x80);         // output 'uchar', MSB to MOSI
000203 81e9      	LDD  R30,Y+1
000204 78e0      	ANDI R30,LOW(0x80)
000205 f411      	BRNE _0x2B
000206 98c6      	CBI  0x18,6
000207 c001      	RJMP _0x2C
                 _0x2B:
000208 9ac6      	SBI  0x18,6
                 _0x2C:
                 ;        delay_us(5);
000209 d8c9      	RCALL SUBOPT_0x8
                 ;        Buff = (Buff << 1);           // shift next bit into MSB..
00020a d8cc      	RCALL SUBOPT_0x9
                 ;        SCK = 1;                      // Set SCK high..
                 ;        delay_us(5);
                 ;        Buff |= MISO;                 // capture current MISO bit
                 ;        SCK = 0;                      // ..then set SCK low again
                 ;       }
00020b 5f1f      	SUBI R17,-1
00020c cff4      	RJMP _0x29
                 _0x2A:
                 ;    return(Buff);                     // return read uchar
00020d 81e9      	LDD  R30,Y+1
00020e 8118      	LDD  R17,Y+0
00020f c848      	RJMP _0x2120003
                 ;}
                 ; .FEND
                 ;
                 ;void RF_Init_TX()                                                    //Function allow to Initialize RF device
                 ;{
                 ;    CE=1;
                 ;    delay_us(700);
                 ;    CE=0;
                 ;    CSN=1;
                 ;}
                 ;
                 ;unsigned char RF_Write_TX(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register  ...
                 ;{
                 _RF_Write_TX:
                 ; .FSTART _RF_Write_TX
                 ;
                 ;    CSN=0;
000210 d8d3      	RCALL SUBOPT_0xA
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;    result = SPI_RW_TX(0b00100000|Reg_Add);
000211 81e9      	LDD  R30,Y+1
000212 62e0      	ORI  R30,0x20
000213 2fae      	MOV  R26,R30
000214 dfe9      	RCALL _SPI_RW_TX
000215 2ede      	MOV  R13,R30
                 ;    SPI_RW_TX(Value);
000216 d8d0      	RCALL SUBOPT_0xB
                 ;    CSN=1;
000217 d8d1      	RCALL SUBOPT_0xC
                 ;    delay_us(10);
                 ;	return result;
000218 2ded      	MOV  R30,R13
000219 c83e      	RJMP _0x2120003
                 ;}
                 ; .FEND
                 ;
                 ;void RF_Write_Address_TX(unsigned char Address)                      //Function to write TX and RX address
                 ;{
                 _RF_Write_Address_TX:
                 ; .FSTART _RF_Write_Address_TX
                 ;    CSN=0;
00021a d8c9      	RCALL SUBOPT_0xA
                 ;	Address -> Y+0
                 ;    RF_Write_TX(0x03,0b00000011);
00021b e0e3      	LDI  R30,LOW(3)
00021c d8ce      	RCALL SUBOPT_0xD
00021d dff2      	RCALL _RF_Write_TX
                 ;    CSN=1;
00021e d8ca      	RCALL SUBOPT_0xC
                 ;    delay_us(10);
                 ;    CSN=0;
00021f 9894      	CBI  0x12,4
                 ;    SPI_RW_TX(0b00100000|0x0A);
000220 e2aa      	LDI  R26,LOW(42)
000221 dfdc      	RCALL _SPI_RW_TX
                 ;    SPI_RW_TX(Address);
000222 d8c4      	RCALL SUBOPT_0xB
                 ;    SPI_RW_TX(Address);
000223 d8c3      	RCALL SUBOPT_0xB
                 ;    SPI_RW_TX(Address);
000224 d8c2      	RCALL SUBOPT_0xB
                 ;    SPI_RW_TX(Address);
000225 d8c1      	RCALL SUBOPT_0xB
                 ;    SPI_RW_TX(Address);
000226 d8c0      	RCALL SUBOPT_0xB
                 ;    CSN=1;
000227 d8c1      	RCALL SUBOPT_0xC
                 ;    delay_us(10);
                 ;    CSN=0;
000228 9894      	CBI  0x12,4
                 ;    SPI_RW_TX(0b00100000|0x10);
000229 e3a0      	LDI  R26,LOW(48)
00022a dfd3      	RCALL _SPI_RW_TX
                 ;    SPI_RW_TX(Address);
00022b d8bb      	RCALL SUBOPT_0xB
                 ;    SPI_RW_TX(Address);
00022c d8ba      	RCALL SUBOPT_0xB
                 ;    SPI_RW_TX(Address);
00022d d8b9      	RCALL SUBOPT_0xB
                 ;    SPI_RW_TX(Address);
00022e d8b8      	RCALL SUBOPT_0xB
                 ;    SPI_RW_TX(Address);
00022f d8b7      	RCALL SUBOPT_0xB
                 ;
                 ;    CSN=1;
000230 d8b8      	RCALL SUBOPT_0xC
                 ;    delay_us(10);
                 ;}
000231 c3f0      	RJMP _0x212000A
                 ; .FEND
                 ;
                 ;void RF_Write_Address_TX_2(unsigned char Address)                      //Function to write TX and RX address
                 ;{
                 ;    CSN=0;
                 ;	Address -> Y+0
                 ;    RF_Write_TX(0x03,0b00000011);
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;    SPI_RW_TX(0b00100000|0x0A);
                 ;    SPI_RW_TX(Address);
                 ;    SPI_RW_TX(0x02);
                 ;    SPI_RW_TX(0x02);
                 ;    SPI_RW_TX(0x02);
                 ;    SPI_RW_TX(0x02);
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;    SPI_RW_TX(0b00100000|0x10);
                 ;    SPI_RW_TX(Address);
                 ;    SPI_RW_TX(0x02);
                 ;    SPI_RW_TX(0x02);
                 ;    SPI_RW_TX(0x02);
                 ;    SPI_RW_TX(0x02);
                 ;
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;}
                 ;
                 ;void RF_Mode_TX()                                             //Function to put nRF in TX mode
                 ;{
                 _RF_Mode_TX:
                 ; .FSTART _RF_Mode_TX
                 ;    CE=0;
000232 9893      	CBI  0x12,3
                 ;    RF_Write_TX(0x00,0b00011110);     //CONFIG 0x00
000233 d89c      	RCALL SUBOPT_0x7
000234 e1ae      	LDI  R26,LOW(30)
000235 c00d      	RJMP _0x212000C
                 ;}
                 ; .FEND
                 ;
                 ;void RF_Config_TX()                                                  //Function to config the nRF
                 ;{
                 _RF_Config_TX:
                 ; .FSTART _RF_Config_TX
                 ;
                 ;RF_Write_TX(0x1C,0b00000001);
000236 e1ec      	LDI  R30,LOW(28)
000237 93ea      	ST   -Y,R30
000238 e0a1      	LDI  R26,LOW(1)
000239 dfd6      	RCALL _RF_Write_TX
                 ;RF_Write_Address_TX(P_Add);
00023a 2da7      	MOV  R26,R7
00023b dfde      	RCALL _RF_Write_Address_TX
                 ;RF_Write_TX(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
00023c e0e2      	LDI  R30,LOW(2)
00023d 93ea      	ST   -Y,R30
00023e e0a1      	LDI  R26,LOW(1)
00023f dfd0      	RCALL _RF_Write_TX
                 ;RF_Write_TX(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
000240 e0e1      	LDI  R30,LOW(1)
000241 93ea      	ST   -Y,R30
000242 e0a1      	LDI  R26,LOW(1)
                 _0x212000C:
000243 dfcc      	RCALL _RF_Write_TX
                 ;}
000244 9508      	RET
                 ; .FEND
                 ;
                 ;void RF_Config_TX_2()                                                  //Function to config the nRF
                 ;{
                 ;
                 ;RF_Write_TX(0x1C,0b00000001);
                 ;RF_Write_Address_TX_2(P_Add);
                 ;RF_Write_TX(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
                 ;RF_Write_TX(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
                 ;}
                 ;
                 ;void RF_Command_TX(unsigned char command)                            //Function to write a command
                 ;{
                 _RF_Command_TX:
                 ; .FSTART _RF_Command_TX
                 ;    CSN=0;
000245 d89e      	RCALL SUBOPT_0xA
                 ;	command -> Y+0
                 ;    SPI_RW_TX(command);
000246 d8a0      	RCALL SUBOPT_0xB
                 ;    CSN=1;
000247 d8a1      	RCALL SUBOPT_0xC
                 ;    delay_us(10);
                 ;}
000248 c3d9      	RJMP _0x212000A
                 ; .FEND
                 ;
                 ;void RF_Send_TX(station_info send)     //Function to send data Value to a specify RX Address
                 ;{
                 _RF_Send_TX:
                 ; .FSTART _RF_Send_TX
                 ;
                 ;  RF_Write_Address_TX(P_Add);
                 ;	send -> Y+0
000249 2da7      	MOV  R26,R7
00024a dfcf      	RCALL _RF_Write_Address_TX
                 ;  CSN=1;
00024b d89d      	RCALL SUBOPT_0xC
                 ;  delay_us(10);
                 ;  CSN=0;
00024c 9894      	CBI  0x12,4
                 ;  SPI_RW_TX(0b11100001);
00024d eea1      	LDI  R26,LOW(225)
00024e dfaf      	RCALL _SPI_RW_TX
                 ;  CSN=1;
00024f d899      	RCALL SUBOPT_0xC
                 ;  delay_us(10);
                 ;  CSN=0;
000250 9894      	CBI  0x12,4
                 ;  SPI_RW_TX(0b10100000);
000251 eaa0      	LDI  R26,LOW(160)
000252 dfab      	RCALL _SPI_RW_TX
                 ;  SPI_RW_TX(send.flag);
000253 d893      	RCALL SUBOPT_0xB
                 ;  SPI_RW_TX(send.light);
000254 81aa      	LDD  R26,Y+2
000255 dfa8      	RCALL _SPI_RW_TX
                 ;  SPI_RW_TX(send.humi);
000256 81ac      	LDD  R26,Y+4
000257 dfa6      	RCALL _SPI_RW_TX
                 ;  SPI_RW_TX(send.temp);
000258 81ae      	LDD  R26,Y+6
000259 dfa4      	RCALL _SPI_RW_TX
                 ;  SPI_RW_TX(send.sm);
00025a 85a8      	LDD  R26,Y+8
00025b dfa2      	RCALL _SPI_RW_TX
                 ;  CSN=1;
00025c 9a94      	SBI  0x12,4
                 ;  CE=1;
00025d 9a93      	SBI  0x12,3
                 ;  delay_us(500);
                +
00025e ee88     +LDI R24 , LOW ( 1000 )
00025f e093     +LDI R25 , HIGH ( 1000 )
                +__DELAY_USW_LOOP :
000260 9701     +SBIW R24 , 1
000261 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1000
                 ;  CE=0;
000262 9893      	CBI  0x12,3
                 ;  RF_Write_TX(0x07,0b01111110);
000263 d868      	RCALL SUBOPT_0x6
000264 dfab      	RCALL _RF_Write_TX
                 ;  RF_Write_Address_TX(P_Add);
000265 2da7      	MOV  R26,R7
000266 dfb3      	RCALL _RF_Write_Address_TX
                 ;  RF_Command_TX(0b11100001);
000267 eea1      	LDI  R26,LOW(225)
000268 dfdc      	RCALL _RF_Command_TX
                 ;
                 ;  /*status = RF_Write_TX(0x07,0b00111000); //0b00111000
                 ;  tx_ok = status & 0b00010000;
                 ;  return tx_ok; */
                 ;}
000269 962a      	ADIW R28,10
00026a 9508      	RET
                 ; .FEND
                 ;
                 ;void RF_Send_TX_2(data send)     //Function to send data Value to a specify RX Address
                 ;{
                 ;
                 ;  RF_Write_Address_TX_2(P_Add);
                 ;	send -> Y+0
                 ;  CSN=1;
                 ;  delay_us(10);
                 ;  CSN=0;
                 ;  SPI_RW_TX(0b11100001);
                 ;  CSN=1;
                 ;  delay_us(10);
                 ;  CSN=0;
                 ;  SPI_RW_TX(0b10100000);
                 ;  SPI_RW_TX(send.flag);
                 ;  SPI_RW_TX(send.a);
                 ;  SPI_RW_TX(send.b);
                 ;  SPI_RW_TX(send.c);
                 ;  SPI_RW_TX(send.d);
                 ;  CSN=1;
                 ;  CE=1;
                 ;  delay_us(500);
                 ;  CE=0;
                 ;  RF_Write_TX(0x07,0b01111110);
                 ;  RF_Write_Address_TX_2(P_Add);
                 ;  RF_Command_TX(0b11100001);
                 ;
                 ;  /*status = RF_Write_TX(0x07,0b00111000); //0b00111000
                 ;  tx_ok = status & 0b00010000;
                 ;  return tx_ok; */
                 ;}
                 ;
                 ;
                 ;
                 ;//--------------------------------------------RX function------------------------------------//
                 ;unsigned char SPI_RW_RX(unsigned char Buff)
                 ;{
                 _SPI_RW_RX:
                 ; .FSTART _SPI_RW_RX
                 ;    unsigned char bit_ctr;
                 ;       for(bit_ctr=0;bit_ctr<8;bit_ctr++) // output 8-bit
00026b d882      	RCALL SUBOPT_0xE
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
00026c e010      	LDI  R17,LOW(0)
                 _0x76:
00026d 3018      	CPI  R17,8
00026e f450      	BRSH _0x77
                 ;       {
                 ;        MOSI = (Buff & 0x80);         // output 'uchar', MSB to MOSI
00026f 81e9      	LDD  R30,Y+1
000270 78e0      	ANDI R30,LOW(0x80)
000271 f411      	BRNE _0x78
000272 98c6      	CBI  0x18,6
000273 c001      	RJMP _0x79
                 _0x78:
000274 9ac6      	SBI  0x18,6
                 _0x79:
                 ;        delay_us(5);
000275 d85d      	RCALL SUBOPT_0x8
                 ;        Buff = (Buff << 1);           // shift next bit into MSB..
000276 d860      	RCALL SUBOPT_0x9
                 ;        SCK = 1;                      // Set SCK high..
                 ;        delay_us(5);
                 ;        Buff |= MISO;                 // capture current MISO bit
                 ;        SCK = 0;                      // ..then set SCK low again
                 ;       }
000277 5f1f      	SUBI R17,-1
000278 cff4      	RJMP _0x76
                 _0x77:
                 ;    return(Buff);                     // return read uchar
000279 81e9      	LDD  R30,Y+1
00027a 8118      	LDD  R17,Y+0
00027b c7dc      	RJMP _0x2120003
                 ;}
                 ; .FEND
                 ;
                 ;unsigned char SPI_Read_RX(void)
                 ;{   unsigned char Buff=0;
                 ;    unsigned char bit_ctr;
                 ;       for(bit_ctr=0;bit_ctr<8;bit_ctr++) // output 8-bit
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
                 ;       {
                 ;        delay_us(5);
                 ;        Buff = (Buff << 1);           // shift next bit into MSB..
                 ;        SCK = 1;                      // Set SCK high..
                 ;        delay_us(5);
                 ;        Buff |= MISO;                 // capture current MISO bit
                 ;        SCK = 0;                      // ..then set SCK low again
                 ;       }
                 ;    return(Buff);                     // return read uchar
                 ;}
                 ;
                 ;void RF_Init_RX()                                                    //Function allow to Initialize RF device
                 ;{
                 _RF_Init_RX:
                 ; .FSTART _RF_Init_RX
                 ;    CE=1;
00027c 9a93      	SBI  0x12,3
                 ;    delay_us(700);
                +
00027d e788     +LDI R24 , LOW ( 1400 )
00027e e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
00027f 9701     +SBIW R24 , 1
000280 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
                 ;    CE=0;
000281 9893      	CBI  0x12,3
                 ;    CSN=1;
000282 9a94      	SBI  0x12,4
                 ;}
000283 9508      	RET
                 ; .FEND
                 ;
                 ;void RF_Write_RX(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
                 ;{
                 _RF_Write_RX:
                 ; .FSTART _RF_Write_RX
                 ;    CSN=0;
000284 d85f      	RCALL SUBOPT_0xA
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;    SPI_RW_RX(0b00100000|Reg_Add);
000285 81e9      	LDD  R30,Y+1
000286 62e0      	ORI  R30,0x20
000287 2fae      	MOV  R26,R30
000288 dfe2      	RCALL _SPI_RW_RX
                 ;    SPI_RW_RX(Value);
000289 81a8      	LD   R26,Y
00028a dfe0      	RCALL _SPI_RW_RX
                 ;    CSN=1;
00028b d85d      	RCALL SUBOPT_0xC
                 ;    delay_us(10);
                 ;}
00028c c7cb      	RJMP _0x2120003
                 ; .FEND
                 ;
                 ;void RF_Write2_RX(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
                 ;{
                 ;    CSN=0;
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;    SPI_RW_RX(0b00100000|Reg_Add);
                 ;    SPI_RW_RX(Value);
                 ;    SPI_RW_RX(Value);
                 ;    SPI_RW_RX(Value);
                 ;    SPI_RW_RX(Value);
                 ;    SPI_RW_RX(Value);
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;}
                 ;
                 ;void RF_Write3_RX(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
                 ;{
                 ;    CSN=0;
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
                 ;    SPI_RW_RX(0b00100000|Reg_Add);
                 ;    SPI_RW_RX(Code_tay_cam2);
                 ;    SPI_RW_RX(Code_tay_cam2);
                 ;    SPI_RW_RX(Code_tay_cam2);
                 ;    SPI_RW_RX(Code_tay_cam2);
                 ;    SPI_RW_RX(Value);
                 ;
                 ;
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;}
                 ;
                 ;void RF_Command_RX(unsigned char command)                            //Function to write a command
                 ;{
                 _RF_Command_RX:
                 ; .FSTART _RF_Command_RX
                 ;    CSN=0;
00028d d856      	RCALL SUBOPT_0xA
                 ;	command -> Y+0
                 ;    SPI_RW_RX(command);
00028e 81a8      	LD   R26,Y
00028f dfdb      	RCALL _SPI_RW_RX
                 ;    CSN=1;
000290 d858      	RCALL SUBOPT_0xC
                 ;    delay_us(10);
                 ;}
000291 c390      	RJMP _0x212000A
                 ; .FEND
                 ;
                 ;void RF_Write_Address_RX(unsigned char Address1, unsigned char Address2, unsigned char Address3, unsigned char Address4) ...
                 ;{
                 ;    CSN=0;
                 ;	Address1 -> Y+3
                 ;	Address2 -> Y+2
                 ;	Address3 -> Y+1
                 ;	Address4 -> Y+0
                 ;    RF_Write_RX(0x03,0b00000011);
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;    RF_Write2_RX(0x0A, Address1);
                 ;    RF_Write2_RX(0x10, Address1);
                 ;
                 ;    RF_Write3_RX(0x0B, Address2);
                 ;    RF_Write3_RX(0x10, Address2);
                 ;
                 ;    RF_Write3_RX(0x0C, Address3);
                 ;    RF_Write3_RX(0x10, Address3);
                 ;
                 ;    RF_Write3_RX(0x0D, Address4);
                 ;    RF_Write3_RX(0x10, Address4);
                 ;
                 ;}
                 ;
                 ;void RF_Write_Address_RX_2(unsigned char Address1){
                 ;    CSN=0;
                 ;	Address1 -> Y+0
                 ;    RF_Write_RX(0x03,0b00000011);
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;
                 ;    RF_Write2_RX(0x0A, Address1);
                 ;    RF_Write2_RX(0x10, Address1);
                 ;}
                 ;
                 ;
                 ;void RF_Mode_RX()                                             //Function to put nRF in RX mode
                 ;{
                 ;    RF_Write_RX(0x00,0b00011111);     //CONFIG 0x00
                 ;    CE=1;
                 ;}
                 ;
                 ;void RF_Config_RX()                                                  //Function to config the nRF
                 ;{
                 ;RF_Write_RX(0x1C,0b00001111);
                 ;RF_Write_Address_RX(Code_tay_cam1, Code_tay_cam2, Code_tay_cam3, Code_tay_cam4);
                 ;RF_Write_RX(0x02,0b00001111);     //EX_RXADDR 0x02    enable data pipe 0;
                 ;RF_Write_RX(0x01,0b00001111);     //EN_AA 0x01        enable auto-acknowledgment
                 ;}
                 ;
                 ;void RF_Config_RX_2(){
                 ;    RF_Write_RX(0x1C,0b00001111);
                 ;    RF_Write_Address_RX_2(Code_tay_cam1);
                 ;    RF_Write_RX(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
                 ;    RF_Write_RX(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
                 ;}
                 ;
                 ;void RF_Config_RX_3(){
                 ;RF_Write_RX(0x11,0b00000001);     //RX_PW_P0 0x11     Payload size
                 ;RF_Write_Address_RX_2(Code_tay_cam1);
                 ;RF_Write_RX(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
                 ;RF_Write_RX(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
                 ;RF_Write_RX(0x04,0b00000000);     //SETUP_RETR 0x04   Setup retry time
                 ;}
                 ;
                 ;void RF_Read_RX()                                         //Function to read the data from RX FIFO
                 ;{
                 ;   CE=0;
                 ;   CSN=1;
                 ;   delay_us(10);
                 ;   CSN=0;
                 ;   SPI_RW_RX(0b01100001);
                 ;   delay_us(10);
                 ;   data_receive.flag = SPI_Read_RX();
                 ;   data_receive.a = SPI_Read_RX();
                 ;   data_receive.b = SPI_Read_RX();
                 ;   data_receive.c = SPI_Read_RX();
                 ;   data_receive.d = SPI_Read_RX();
                 ;   CSN=1;
                 ;   CE=1;
                 ;   RF_Write_RX(0x07,0b01111110);  // Clear flag
                 ;   RF_Command_RX(0b11100010);     //Flush RX
                 ;}
                 ;
                 ;void RF_Read_RX_2(){
                 ;    CE=0;
                 ;    CSN=1;
                 ;    delay_us(10);
                 ;    CSN=0;
                 ;    SPI_RW_RX(0b01100001);
                 ;    delay_us(10);
                 ;    tay_cam_receive.analog_l = SPI_Read_RX();
                 ;    tay_cam_receive.analog_r = SPI_Read_RX();
                 ;    tay_cam_receive.digital_l = SPI_Read_RX();
                 ;    tay_cam_receive.digital_r = SPI_Read_RX();
                 ;    CSN=1;
                 ;    CE=1;
                 ;    RF_Write_RX(0x07,0b01111110);  // Clear flag
                 ;    RF_Command_RX(0b11100010);     //Flush RX
                 ;}
                 ;
                 ;void RF_Read_RX_3()                                         //Function to read the data from RX FIFO
                 ;{
                 ;   CE=0;
                 ;   CSN=1;
                 ;   delay_us(10);
                 ;   CSN=0;
                 ;   SPI_RW_RX(0b01100001);
                 ;   delay_us(10);
                 ;   station_receive.flag = SPI_Read_RX();
                 ;   station_receive.light = SPI_Read_RX();
                 ;   station_receive.humi = SPI_Read_RX();
                 ;   station_receive.temp = SPI_Read_RX();
                 ;   station_receive.sm = SPI_Read_RX();
                 ;   CSN=1;
                 ;   CE=1;
                 ;   RF_Write_RX(0x07,0b01111110);  // Clear flag
                 ;   RF_Command_RX(0b11100010);     //Flush RX
                 ;}
                 ;
                 ;station_info data_send;
                 ;
                 ;#define TRIGGER PORTB.5
                 ;#define ECHO PINB.4
                 ;
                 ;int change, dem;
                 ;float distance;
                 ;
                 ;void set_up_sieu_am(){
                 ; 0000 003F void set_up_sieu_am(){
                 _set_up_sieu_am:
                 ; .FSTART _set_up_sieu_am
                 ; 0000 0040     TRIGGER = 0;
000292 98c5      	CBI  0x18,5
                 ; 0000 0041     delay_us(2);
                +
000293 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000294 958a     +DEC R24
000295 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                 ; 0000 0042     TRIGGER = 1;
000296 9ac5      	SBI  0x18,5
                 ; 0000 0043     delay_us(10);
000297 d830      	RCALL SUBOPT_0x5
                 ; 0000 0044     TRIGGER = 0;
000298 98c5      	CBI  0x18,5
                 ; 0000 0045     while(ECHO == 0);
                 _0xCD:
000299 9bb4      	SBIS 0x16,4
00029a cffe      	RJMP _0xCD
                 ; 0000 0046     dem = 1;
00029b d855      	RCALL SUBOPT_0xF
00029c 93e0 01f2 	STS  _dem,R30
00029e 93f0 01f3 	STS  _dem+1,R31
                 ; 0000 0047     change = 1;
0002a0 d850      	RCALL SUBOPT_0xF
0002a1 93e0 01f0 	STS  _change,R30
0002a3 93f0 01f1 	STS  _change+1,R31
                 ; 0000 0048 }
0002a5 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;interrupt [TIM0_OVF] void timer2_ovf(){
                 ; 0000 004B interrupt [10] void timer2_ovf(){
                 _timer2_ovf:
                 ; .FSTART _timer2_ovf
0002a6 920a      	ST   -Y,R0
0002a7 921a      	ST   -Y,R1
0002a8 936a      	ST   -Y,R22
0002a9 937a      	ST   -Y,R23
0002aa 938a      	ST   -Y,R24
0002ab 939a      	ST   -Y,R25
0002ac 93aa      	ST   -Y,R26
0002ad 93ba      	ST   -Y,R27
0002ae 93ea      	ST   -Y,R30
0002af 93fa      	ST   -Y,R31
0002b0 b7ef      	IN   R30,SREG
0002b1 93ea      	ST   -Y,R30
                 ; 0000 004C     TCNT0 = 0x9C;
0002b2 e9ec      	LDI  R30,LOW(156)
0002b3 bfe2      	OUT  0x32,R30
                 ; 0000 004D     dem++;
0002b4 efa2      	LDI  R26,LOW(_dem)
0002b5 e0b1      	LDI  R27,HIGH(_dem)
0002b6 d83d      	RCALL SUBOPT_0x10
                 ; 0000 004E 
                 ; 0000 004F     if(ECHO == 0 && change == 1){
0002b7 99b4      	SBIC 0x16,4
0002b8 c006      	RJMP _0xD1
0002b9 91a0 01f0 	LDS  R26,_change
0002bb 91b0 01f1 	LDS  R27,_change+1
0002bd 9711      	SBIW R26,1
0002be f009      	BREQ _0xD2
                 _0xD1:
0002bf c026      	RJMP _0xD0
                 _0xD2:
                 ; 0000 0050     distance = dem*0.1*3.432*0.5;
0002c0 91e0 01f2 	LDS  R30,_dem
0002c2 91f0 01f3 	LDS  R31,_dem+1
0002c4 da4c      	RCALL __CWD1
0002c5 d9af      	RCALL __CDF1
                +
0002c6 ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
0002c7 ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
0002c8 ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
0002c9 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
0002ca d9d8      	RCALL __MULF12
                +
0002cb eea3     +LDI R26 , LOW ( 0x405BA5E3 )
0002cc eab5     +LDI R27 , HIGH ( 0x405BA5E3 )
0002cd e58b     +LDI R24 , BYTE3 ( 0x405BA5E3 )
0002ce e490     +LDI R25 , BYTE4 ( 0x405BA5E3 )
                 	__GETD2N 0x405BA5E3
0002cf d9d3      	RCALL __MULF12
                +
0002d0 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0002d1 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0002d2 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0002d3 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0002d4 d9ce      	RCALL __MULF12
0002d5 93e0 01f4 	STS  _distance,R30
0002d7 93f0 01f5 	STS  _distance+1,R31
0002d9 9360 01f6 	STS  _distance+2,R22
0002db 9370 01f7 	STS  _distance+3,R23
                 ; 0000 0051     dem = 0;
0002dd e0e0      	LDI  R30,LOW(0)
0002de 93e0 01f2 	STS  _dem,R30
0002e0 93e0 01f3 	STS  _dem+1,R30
                 ; 0000 0052     change = 0;
0002e2 93e0 01f0 	STS  _change,R30
0002e4 93e0 01f1 	STS  _change+1,R30
                 ; 0000 0053     }
                 ; 0000 0054 }
                 _0xD0:
0002e6 91e9      	LD   R30,Y+
0002e7 bfef      	OUT  SREG,R30
0002e8 91f9      	LD   R31,Y+
0002e9 91e9      	LD   R30,Y+
0002ea 91b9      	LD   R27,Y+
0002eb 91a9      	LD   R26,Y+
0002ec 9199      	LD   R25,Y+
0002ed 9189      	LD   R24,Y+
0002ee 9179      	LD   R23,Y+
0002ef 9169      	LD   R22,Y+
0002f0 9019      	LD   R1,Y+
0002f1 9009      	LD   R0,Y+
0002f2 9518      	RETI
                 ; .FEND
                 ;
                 ;void border()
                 ; 0000 0057 {
                 _border:
                 ; .FSTART _border
                 ; 0000 0058     glcd_line(48,0, 48, 15);
0002f3 d806      	RCALL SUBOPT_0x11
0002f4 d7db      	RCALL SUBOPT_0x7
0002f5 d804      	RCALL SUBOPT_0x11
0002f6 e0af      	LDI  R26,LOW(15)
0002f7 d805      	RCALL SUBOPT_0x12
                 ; 0000 0059     glcd_line(0, 15, 48, 15);
0002f8 e0ef      	LDI  R30,LOW(15)
0002f9 93ea      	ST   -Y,R30
0002fa d7ff      	RCALL SUBOPT_0x11
0002fb e0af      	LDI  R26,LOW(15)
0002fc d800      	RCALL SUBOPT_0x12
                 ; 0000 005A     glcd_line(0,0,84,0);
0002fd d7d2      	RCALL SUBOPT_0x7
0002fe d800      	RCALL SUBOPT_0x13
0002ff e0a0      	LDI  R26,LOW(0)
000300 d63e      	RCALL _glcd_line
                 ; 0000 005B     glcd_line(84,0, 84, 48);
000301 d7fd      	RCALL SUBOPT_0x13
000302 d7cd      	RCALL SUBOPT_0x7
000303 d7fb      	RCALL SUBOPT_0x13
000304 e3a0      	LDI  R26,LOW(48)
000305 d7f7      	RCALL SUBOPT_0x12
                 ; 0000 005C     glcd_line(0, 48, 84, 48);
000306 d7f3      	RCALL SUBOPT_0x11
000307 d7f7      	RCALL SUBOPT_0x13
000308 e3a0      	LDI  R26,LOW(48)
000309 d7f3      	RCALL SUBOPT_0x12
                 ; 0000 005D     glcd_line(0, 0, 0, 48);
00030a d7c5      	RCALL SUBOPT_0x7
00030b d7c4      	RCALL SUBOPT_0x7
00030c e3a0      	LDI  R26,LOW(48)
00030d d631      	RCALL _glcd_line
                 ; 0000 005E     glcd_moveto(3,3);
00030e e0e3      	LDI  R30,LOW(3)
00030f d7db      	RCALL SUBOPT_0xD
000310 d622      	RCALL _glcd_moveto
                 ; 0000 005F     glcd_outtext("Node: ");
                +
000311 e6a0     +LDI R26 , LOW ( _0xD3 + ( 0 ) )
000312 e0b1     +LDI R27 , HIGH ( _0xD3 + ( 0 ) )
                 	__POINTW2MN _0xD3,0
000313 d5f6      	RCALL _glcd_outtext
                 ; 0000 0060     glcd_moveto(40, 3);
000314 e2e8      	LDI  R30,LOW(40)
000315 d7d5      	RCALL SUBOPT_0xD
000316 d61c      	RCALL _glcd_moveto
                 ; 0000 0061     glcd_outtext("1");
                +
000317 e6a7     +LDI R26 , LOW ( _0xD3 + ( 7 ) )
000318 e0b1     +LDI R27 , HIGH ( _0xD3 + ( 7 ) )
                 	__POINTW2MN _0xD3,7
000319 d7e8      	RCALL SUBOPT_0x14
                 ; 0000 0062 
                 ; 0000 0063     glcd_moveto(4, 18);
00031a e1a2      	LDI  R26,LOW(18)
00031b d617      	RCALL _glcd_moveto
                 ; 0000 0064     glcd_outtext("Temp: ");
                +
00031c e6a9     +LDI R26 , LOW ( _0xD3 + ( 9 ) )
00031d e0b1     +LDI R27 , HIGH ( _0xD3 + ( 9 ) )
                 	__POINTW2MN _0xD3,9
00031e d7e3      	RCALL SUBOPT_0x14
                 ; 0000 0065     glcd_moveto(4, 28);
00031f e1ac      	LDI  R26,LOW(28)
000320 d612      	RCALL _glcd_moveto
                 ; 0000 0066     glcd_outtext("Humid: ");
                +
000321 e7a0     +LDI R26 , LOW ( _0xD3 + ( 16 ) )
000322 e0b1     +LDI R27 , HIGH ( _0xD3 + ( 16 ) )
                 	__POINTW2MN _0xD3,16
000323 d7de      	RCALL SUBOPT_0x14
                 ; 0000 0067     glcd_moveto(4, 37);
000324 e2a5      	LDI  R26,LOW(37)
000325 d60d      	RCALL _glcd_moveto
                 ; 0000 0068     glcd_outtext("Water: ");
                +
000326 e7a8     +LDI R26 , LOW ( _0xD3 + ( 24 ) )
000327 e0b1     +LDI R27 , HIGH ( _0xD3 + ( 24 ) )
                 	__POINTW2MN _0xD3,24
000328 d5e1      	RCALL _glcd_outtext
                 ; 0000 0069     glcd_moveto(68, 18);
000329 e4e4      	LDI  R30,LOW(68)
00032a 93ea      	ST   -Y,R30
00032b e1a2      	LDI  R26,LOW(18)
00032c d606      	RCALL _glcd_moveto
                 ; 0000 006A     glcd_outtext("!C");
                +
00032d e8a0     +LDI R26 , LOW ( _0xD3 + ( 32 ) )
00032e e0b1     +LDI R27 , HIGH ( _0xD3 + ( 32 ) )
                 	__POINTW2MN _0xD3,32
00032f d5da      	RCALL _glcd_outtext
                 ; 0000 006B     glcd_moveto(69, 28);
000330 e4e5      	LDI  R30,LOW(69)
000331 93ea      	ST   -Y,R30
000332 e1ac      	LDI  R26,LOW(28)
000333 d5ff      	RCALL _glcd_moveto
                 ; 0000 006C     glcd_putchar(37);
000334 e2a5      	LDI  R26,LOW(37)
000335 d57d      	RCALL _glcd_putchar
                 ; 0000 006D     glcd_moveto(69, 37);
000336 e4e5      	LDI  R30,LOW(69)
000337 93ea      	ST   -Y,R30
000338 e2a5      	LDI  R26,LOW(37)
000339 d5f9      	RCALL _glcd_moveto
                 ; 0000 006E     glcd_outtext("cm");
                +
00033a e8a3     +LDI R26 , LOW ( _0xD3 + ( 35 ) )
00033b e0b1     +LDI R27 , HIGH ( _0xD3 + ( 35 ) )
                 	__POINTW2MN _0xD3,35
00033c d5cd      	RCALL _glcd_outtext
                 ; 0000 006F }
00033d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xD3:
000160           	.BYTE 0x26
                 ;
                 ;void main(void)
                 ; 0000 0072 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0073 // Declare your local variables here
                 ; 0000 0074 // Variable used to store graphic display
                 ; 0000 0075 // controller initialization data
                 ; 0000 0076 GLCDINIT_t glcd_init_data;
                 ; 0000 0077 
                 ; 0000 0078 // Input/Output Ports initialization
                 ; 0000 0079 // Port B initialization
                 ; 0000 007A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 007B DDRB=(0<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00033e 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
00033f e6e0      	LDI  R30,LOW(96)
000340 bbe7      	OUT  0x17,R30
                 ; 0000 007C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 007D PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000341 efe0      	LDI  R30,LOW(240)
000342 bbe8      	OUT  0x18,R30
                 ; 0000 007E 
                 ; 0000 007F // Port C initialization
                 ; 0000 0080 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0081 DDRC=(0<<DDC6) | (1<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000343 e2e0      	LDI  R30,LOW(32)
000344 bbe4      	OUT  0x14,R30
                 ; 0000 0082 // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0083 PORTC=(0<<PORTC6) | (1<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000345 bbe5      	OUT  0x15,R30
                 ; 0000 0084 
                 ; 0000 0085 // Port D initialization
                 ; 0000 0086 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0087 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (0<<DDD1) | (0<<DDD0);
000346 e1ec      	LDI  R30,LOW(28)
000347 bbe1      	OUT  0x11,R30
                 ; 0000 0088 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0089 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (0<<PORTD0);
000348 e1ee      	LDI  R30,LOW(30)
000349 bbe2      	OUT  0x12,R30
                 ; 0000 008A 
                 ; 0000 008B // Timer/Counter 0 initialization
                 ; 0000 008C // Clock source: System Clock
                 ; 0000 008D // Clock value: Timer 0 Stopped
                 ; 0000 008E TCCR0=(0<<CS02) | (1<<CS01) | (0<<CS00);
00034a e0e2      	LDI  R30,LOW(2)
00034b bfe3      	OUT  0x33,R30
                 ; 0000 008F TCNT0=0x9C;
00034c e9ec      	LDI  R30,LOW(156)
00034d bfe2      	OUT  0x32,R30
                 ; 0000 0090 
                 ; 0000 0091 // Timer/Counter 1 initialization
                 ; 0000 0092 // Clock source: System Clock
                 ; 0000 0093 // Clock value: Timer1 Stopped
                 ; 0000 0094 // Mode: Normal top=0xFFFF
                 ; 0000 0095 // OC1A output: Disconnected
                 ; 0000 0096 // OC1B output: Disconnected
                 ; 0000 0097 // Noise Canceler: Off
                 ; 0000 0098 // Input Capture on Falling Edge
                 ; 0000 0099 // Timer1 Overflow Interrupt: Off
                 ; 0000 009A // Input Capture Interrupt: Off
                 ; 0000 009B // Compare A Match Interrupt: Off
                 ; 0000 009C // Compare B Match Interrupt: Off
                 ; 0000 009D TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
00034e e0e0      	LDI  R30,LOW(0)
00034f bdef      	OUT  0x2F,R30
                 ; 0000 009E TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000350 bdee      	OUT  0x2E,R30
                 ; 0000 009F TCNT1H=0x00;
000351 bded      	OUT  0x2D,R30
                 ; 0000 00A0 TCNT1L=0x00;
000352 bdec      	OUT  0x2C,R30
                 ; 0000 00A1 ICR1H=0x00;
000353 bde7      	OUT  0x27,R30
                 ; 0000 00A2 ICR1L=0x00;
000354 bde6      	OUT  0x26,R30
                 ; 0000 00A3 OCR1AH=0x00;
000355 bdeb      	OUT  0x2B,R30
                 ; 0000 00A4 OCR1AL=0x00;
000356 bdea      	OUT  0x2A,R30
                 ; 0000 00A5 OCR1BH=0x00;
000357 bde9      	OUT  0x29,R30
                 ; 0000 00A6 OCR1BL=0x00;
000358 bde8      	OUT  0x28,R30
                 ; 0000 00A7 
                 ; 0000 00A8 // Timer/Counter 2 initialization
                 ; 0000 00A9 // Clock source: System Clock
                 ; 0000 00AA // Clock value: Timer2 Stopped
                 ; 0000 00AB // Mode: Normal top=0xFF
                 ; 0000 00AC // OC2 output: Disconnected
                 ; 0000 00AD ASSR=0<<AS2;
000359 bde2      	OUT  0x22,R30
                 ; 0000 00AE TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
00035a bde5      	OUT  0x25,R30
                 ; 0000 00AF TCNT2=0x00;
00035b bde4      	OUT  0x24,R30
                 ; 0000 00B0 OCR2=0x00;
00035c bde3      	OUT  0x23,R30
                 ; 0000 00B1 
                 ; 0000 00B2 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00B3 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);
00035d e0e1      	LDI  R30,LOW(1)
00035e bfe9      	OUT  0x39,R30
                 ; 0000 00B4 
                 ; 0000 00B5 // External Interrupt(s) initialization
                 ; 0000 00B6 // INT0: Off
                 ; 0000 00B7 // INT1: Off
                 ; 0000 00B8 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
00035f e0e0      	LDI  R30,LOW(0)
000360 bfe5      	OUT  0x35,R30
                 ; 0000 00B9 
                 ; 0000 00BA // USART initialization
                 ; 0000 00BB // USART disabled
                 ; 0000 00BC UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000361 b9ea      	OUT  0xA,R30
                 ; 0000 00BD 
                 ; 0000 00BE // Analog Comparator initialization
                 ; 0000 00BF // Analog Comparator: Off
                 ; 0000 00C0 // The Analog Comparator's positive input is
                 ; 0000 00C1 // connected to the AIN0 pin
                 ; 0000 00C2 // The Analog Comparator's negative input is
                 ; 0000 00C3 // connected to the AIN1 pin
                 ; 0000 00C4 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000362 e8e0      	LDI  R30,LOW(128)
000363 b9e8      	OUT  0x8,R30
                 ; 0000 00C5 
                 ; 0000 00C6 // ADC initialization
                 ; 0000 00C7 // ADC Clock frequency: 1000.000 kHz
                 ; 0000 00C8 // ADC Voltage Reference: AREF pin
                 ; 0000 00C9 ADMUX=ADC_VREF_TYPE;
000364 e0e0      	LDI  R30,LOW(0)
000365 b9e7      	OUT  0x7,R30
                 ; 0000 00CA ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
000366 e8e3      	LDI  R30,LOW(131)
000367 b9e6      	OUT  0x6,R30
                 ; 0000 00CB SFIOR=(0<<ACME);
000368 e0e0      	LDI  R30,LOW(0)
000369 bfe0      	OUT  0x30,R30
                 ; 0000 00CC 
                 ; 0000 00CD // SPI initialization
                 ; 0000 00CE // SPI disabled
                 ; 0000 00CF SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00036a b9ed      	OUT  0xD,R30
                 ; 0000 00D0 
                 ; 0000 00D1 // TWI initialization
                 ; 0000 00D2 // TWI disabled
                 ; 0000 00D3 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
00036b bfe6      	OUT  0x36,R30
                 ; 0000 00D4 
                 ; 0000 00D5 // Graphic Display Controller initialization
                 ; 0000 00D6 // The PCD8544 connections are specified in the
                 ; 0000 00D7 // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 00D8 // SDIN - PORTC Bit 3
                 ; 0000 00D9 // SCLK - PORTC Bit 4
                 ; 0000 00DA // D /C - PORTC Bit 2
                 ; 0000 00DB // /SCE - PORTC Bit 1
                 ; 0000 00DC // /RES - PORTC Bit 0
                 ; 0000 00DD 
                 ; 0000 00DE // Specify the current font for displaying text
                 ; 0000 00DF glcd_init_data.font=font5x7;
00036c e2e6      	LDI  R30,LOW(_font5x7*2)
00036d e0f0      	LDI  R31,HIGH(_font5x7*2)
00036e 83e8      	ST   Y,R30
00036f 83f9      	STD  Y+1,R31
                 ; 0000 00E0 // No function is used for reading
                 ; 0000 00E1 // image data from external memory
                 ; 0000 00E2 glcd_init_data.readxmem=NULL;
000370 e0e0      	LDI  R30,LOW(0)
000371 83ea      	STD  Y+2,R30
000372 83eb      	STD  Y+2+1,R30
                 ; 0000 00E3 // No function is used for writing
                 ; 0000 00E4 // image data to external memory
                 ; 0000 00E5 glcd_init_data.writexmem=NULL;
000373 83ec      	STD  Y+4,R30
000374 83ed      	STD  Y+4+1,R30
                 ; 0000 00E6 // Set the LCD temperature coefficient
                 ; 0000 00E7 glcd_init_data.temp_coef=139;
000375 81ee      	LDD  R30,Y+6
000376 60e3      	ORI  R30,LOW(0x3)
000377 83ee      	STD  Y+6,R30
                 ; 0000 00E8 // Set the LCD bias
                 ; 0000 00E9 glcd_init_data.bias=4;
000378 7ee3      	ANDI R30,LOW(0xE3)
000379 61e0      	ORI  R30,0x10
00037a 83ee      	STD  Y+6,R30
                 ; 0000 00EA // Set the LCD contrast control voltage VLCD
                 ; 0000 00EB glcd_init_data.vlcd=69;
00037b 81ef      	LDD  R30,Y+7
00037c 78e0      	ANDI R30,LOW(0x80)
00037d 64e5      	ORI  R30,LOW(0x45)
00037e 83ef      	STD  Y+7,R30
                 ; 0000 00EC 
                 ; 0000 00ED #asm("sei")
00037f 9478      	sei
                 ; 0000 00EE 
                 ; 0000 00EF glcd_init(&glcd_init_data);
000380 01de      	MOVW R26,R28
000381 d233      	RCALL _glcd_init
                 ; 0000 00F0 PORTC.5 = 0;
000382 98ad      	CBI  0x15,5
                 ; 0000 00F1 
                 ; 0000 00F2 
                 ; 0000 00F3 RF_Init_RX();
000383 def8      	RCALL _RF_Init_RX
                 ; 0000 00F4 config();
000384 de65      	RCALL _config
                 ; 0000 00F5 RF_Config_TX();
000385 deb0      	RCALL _RF_Config_TX
                 ; 0000 00F6 
                 ; 0000 00F7 border();
000386 df6c      	RCALL _border
                 ; 0000 00F8 while (1){
                 _0xD6:
                 ; 0000 00F9         if(DHT_GetTemHumi(&dht_nhiet_do,&dht_do_am)){
000387 e0e5      	LDI  R30,LOW(5)
000388 e0f0      	LDI  R31,HIGH(5)
000389 d77c      	RCALL SUBOPT_0x15
00038a e0a4      	LDI  R26,LOW(4)
00038b e0b0      	LDI  R27,HIGH(4)
00038c ddfb      	RCALL _DHT_GetTemHumi
00038d 30e0      	CPI  R30,0
00038e f081      	BREQ _0xD9
                 ; 0000 00FA             sprintf(buff, "%u", (unsigned int)dht_do_am);
00038f d779      	RCALL SUBOPT_0x16
                +
000390 e4ee     +LDI R30 , LOW ( 2 * _0x0 + ( 38 ) )
000391 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 38 ) )
                 	__POINTW1FN _0x0,38
000392 d773      	RCALL SUBOPT_0x15
000393 2de4      	MOV  R30,R4
000394 d777      	RCALL SUBOPT_0x17
                 ; 0000 00FB             glcd_moveto(50, 28);
000395 e1ac      	LDI  R26,LOW(28)
000396 d77f      	RCALL SUBOPT_0x18
                 ; 0000 00FC             glcd_outtext(buff);
                 ; 0000 00FD             sprintf(buff, "%u  ", (unsigned int)dht_nhiet_do);
000397 d771      	RCALL SUBOPT_0x16
                +
000398 e5e1     +LDI R30 , LOW ( 2 * _0x0 + ( 41 ) )
000399 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 41 ) )
                 	__POINTW1FN _0x0,41
00039a d76b      	RCALL SUBOPT_0x15
00039b 2de5      	MOV  R30,R5
00039c d76f      	RCALL SUBOPT_0x17
                 ; 0000 00FE             glcd_moveto(50, 18);
00039d e1a2      	LDI  R26,LOW(18)
00039e d777      	RCALL SUBOPT_0x18
                 ; 0000 00FF             glcd_outtext(buff);
                 ; 0000 0100         }
                 ; 0000 0101         RF_Mode_TX();
                 _0xD9:
00039f de92      	RCALL _RF_Mode_TX
                 ; 0000 0102 
                 ; 0000 0103         set_up_sieu_am();
0003a0 def1      	RCALL _set_up_sieu_am
                 ; 0000 0104         glcd_moveto(50, 37);
0003a1 e3e2      	LDI  R30,LOW(50)
0003a2 93ea      	ST   -Y,R30
0003a3 e2a5      	LDI  R26,LOW(37)
0003a4 d58e      	RCALL _glcd_moveto
                 ; 0000 0105         if((int)distance > 20)
0003a5 d774      	RCALL SUBOPT_0x19
0003a6 9775      	SBIW R30,21
0003a7 f044      	BRLT _0xDA
                 ; 0000 0106             sprintf(buff, "* ");
0003a8 d760      	RCALL SUBOPT_0x16
                +
0003a9 e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 46 ) )
0003aa e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 46 ) )
                 	__POINTW1FN _0x0,46
0003ab d75a      	RCALL SUBOPT_0x15
0003ac e080      	LDI  R24,0
0003ad d18d      	RCALL _sprintf
0003ae 9624      	ADIW R28,4
                 ; 0000 0107         else
0003af c00a      	RJMP _0xDB
                 _0xDA:
                 ; 0000 0108             sprintf(buff, "%d ", (int)distance);
0003b0 d758      	RCALL SUBOPT_0x16
                +
0003b1 e5e9     +LDI R30 , LOW ( 2 * _0x0 + ( 49 ) )
0003b2 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 49 ) )
                 	__POINTW1FN _0x0,49
0003b3 d752      	RCALL SUBOPT_0x15
0003b4 d765      	RCALL SUBOPT_0x19
0003b5 d95b      	RCALL __CWD1
0003b6 d9d2      	RCALL __PUTPARD1
0003b7 e084      	LDI  R24,4
0003b8 d182      	RCALL _sprintf
0003b9 9628      	ADIW R28,8
                 ; 0000 0109         glcd_outtext(buff);
                 _0xDB:
0003ba eaae      	LDI  R26,LOW(_buff)
0003bb e0b1      	LDI  R27,HIGH(_buff)
0003bc d54d      	RCALL _glcd_outtext
                 ; 0000 010A 
                 ; 0000 010B         glcd_moveto(55, 3);
0003bd e3e7      	LDI  R30,LOW(55)
0003be d72c      	RCALL SUBOPT_0xD
0003bf d573      	RCALL _glcd_moveto
                 ; 0000 010C         //sprintf(buff, "%d ", (int)read_adc(6)/3);
                 ; 0000 010D         //glcd_outtext(buff);
                 ; 0000 010E 
                 ; 0000 010F         data_send.flag = 1;
0003c0 d730      	RCALL SUBOPT_0xF
0003c1 93e0 01e6 	STS  _data_send,R30
0003c3 93f0 01e7 	STS  _data_send+1,R31
                 ; 0000 0110         if((int)read_adc(6)/3 < 200){
0003c5 e0a6      	LDI  R26,LOW(6)
0003c6 de18      	RCALL _read_adc
0003c7 01df      	MOVW R26,R30
0003c8 e0e3      	LDI  R30,LOW(3)
0003c9 e0f0      	LDI  R31,HIGH(3)
0003ca d966      	RCALL __DIVW21
0003cb 3ce8      	CPI  R30,LOW(0xC8)
0003cc e0a0      	LDI  R26,HIGH(0xC8)
0003cd 07fa      	CPC  R31,R26
0003ce f42c      	BRGE _0xDC
                 ; 0000 0111             data_send.light = 1;
0003cf d721      	RCALL SUBOPT_0xF
0003d0 d753      	RCALL SUBOPT_0x1A
                 ; 0000 0112             glcd_outtext("Rain ");
                +
0003d1 e8a6     +LDI R26 , LOW ( _0xDD + ( 0 ) )
0003d2 e0b1     +LDI R27 , HIGH ( _0xDD + ( 0 ) )
                 	__POINTW2MN _0xDD,0
0003d3 c004      	RJMP _0xE0
                 ; 0000 0113         }
                 ; 0000 0114         else{
                 _0xDC:
                 ; 0000 0115             data_send.light = 0;
0003d4 d754      	RCALL SUBOPT_0x1B
0003d5 d74e      	RCALL SUBOPT_0x1A
                 ; 0000 0116             glcd_outtext("Sun ");
                +
0003d6 e8ac     +LDI R26 , LOW ( _0xDD + ( 6 ) )
0003d7 e0b1     +LDI R27 , HIGH ( _0xDD + ( 6 ) )
                 	__POINTW2MN _0xDD,6
                 _0xE0:
0003d8 d531      	RCALL _glcd_outtext
                 ; 0000 0117         }
                 ; 0000 0118 
                 ; 0000 0119        // data_send.light = 100;
                 ; 0000 011A         data_send.temp = (long int)dht_nhiet_do;
0003d9 2de5      	MOV  R30,R5
0003da e0f0      	LDI  R31,0
                +
0003db 93e0 01ec+STS _data_send + ( 6 ) , R30
0003dd 93f0 01ed+STS _data_send + ( 6 ) + 1 , R31
                 	__PUTW1MN _data_send,6
                 ; 0000 011B         data_send.humi = (long int)dht_do_am;
0003df 2de4      	MOV  R30,R4
0003e0 e0f0      	LDI  R31,0
                +
0003e1 93e0 01ea+STS _data_send + ( 4 ) , R30
0003e3 93f0 01eb+STS _data_send + ( 4 ) + 1 , R31
                 	__PUTW1MN _data_send,4
                 ; 0000 011C 
                 ; 0000 011D         data_send.sm = (long int)read_adc(7)/4;
0003e5 e0a7      	LDI  R26,LOW(7)
0003e6 ddf8      	RCALL _read_adc
0003e7 d744      	RCALL SUBOPT_0x1C
                +
0003e8 e0e4     +LDI R30 , LOW ( 0x4 )
0003e9 e0f0     +LDI R31 , HIGH ( 0x4 )
0003ea e060     +LDI R22 , BYTE3 ( 0x4 )
0003eb e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
0003ec d96e      	RCALL __DIVD21
                +
0003ed 93e0 01ee+STS _data_send + ( 8 ) , R30
0003ef 93f0 01ef+STS _data_send + ( 8 ) + 1 , R31
                 	__PUTW1MN _data_send,8
                 ; 0000 011E        // data_send.sm = (long int)distance;
                 ; 0000 011F 
                 ; 0000 0120         RF_Send_TX(data_send);
0003f1 eee6      	LDI  R30,LOW(_data_send)
0003f2 e0f1      	LDI  R31,HIGH(_data_send)
0003f3 e0aa      	LDI  R26,10
0003f4 d999      	RCALL __PUTPARL
0003f5 de53      	RCALL _RF_Send_TX
                 ; 0000 0121         delay_ms(200);
0003f6 eca8      	LDI  R26,LOW(200)
0003f7 d6c7      	RCALL SUBOPT_0x2
                 ; 0000 0122         }
0003f8 cf8e      	RJMP _0xD6
                 ; 0000 0123 }
                 _0xDF:
0003f9 cfff      	RJMP _0xDF
                 ; .FEND
                 
                 	.DSEG
                 _0xDD:
000186           	.BYTE 0xB
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0003fa d6bd      	RCALL SUBOPT_0x0
0003fb d9bf      	RCALL __SAVELOCR2
0003fc d734      	RCALL SUBOPT_0x1D
0003fd 9612      	ADIW R26,2
0003fe d982      	RCALL __GETW1P
0003ff 9730      	SBIW R30,0
000400 f0f1      	BREQ _0x2020010
000401 d72f      	RCALL SUBOPT_0x1D
000402 d731      	RCALL SUBOPT_0x1E
000403 018f      	MOVW R16,R30
000404 9730      	SBIW R30,0
000405 f061      	BREQ _0x2020012
                +
000406 3002     +CPI R16 , LOW ( 2 )
000407 e0e0     +LDI R30 , HIGH ( 2 )
000408 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000409 f070      	BRLO _0x2020013
00040a 01f8      	MOVW R30,R16
00040b 9731      	SBIW R30,1
00040c 018f      	MOVW R16,R30
                +
00040d 81aa     +LDD R26 , Y + 2
00040e 81bb     +LDD R27 , Y + 2 + 1
00040f 9614     +ADIW R26 , 4
000410 93ed     +ST X + , R30
000411 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000412 d71e      	RCALL SUBOPT_0x1D
000413 9612      	ADIW R26,2
000414 d6df      	RCALL SUBOPT_0x10
000415 9731      	SBIW R30,1
000416 81ac      	LDD  R26,Y+4
000417 83a0      	STD  Z+0,R26
                 _0x2020013:
000418 d718      	RCALL SUBOPT_0x1D
000419 d967      	RCALL __GETW1P
00041a 23ff      	TST  R31
00041b f012      	BRMI _0x2020014
00041c d714      	RCALL SUBOPT_0x1D
00041d d6d6      	RCALL SUBOPT_0x10
                 _0x2020014:
00041e c005      	RJMP _0x2020015
                 _0x2020010:
00041f d711      	RCALL SUBOPT_0x1D
000420 efef      	LDI  R30,LOW(65535)
000421 efff      	LDI  R31,HIGH(65535)
000422 93ed      	ST   X+,R30
000423 93fc      	ST   X,R31
                 _0x2020015:
000424 d99d      	RCALL __LOADLOCR2
000425 c611      	RJMP _0x2120004
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000426 d691      	RCALL SUBOPT_0x0
000427 9726      	SBIW R28,6
000428 d98e      	RCALL __SAVELOCR6
000429 e010      	LDI  R17,0
00042a 85ac      	LDD  R26,Y+12
00042b 85bd      	LDD  R27,Y+12+1
00042c d6fc      	RCALL SUBOPT_0x1B
00042d 93ed      	ST   X+,R30
00042e 93fc      	ST   X,R31
                 _0x2020016:
00042f 89ea      	LDD  R30,Y+18
000430 89fb      	LDD  R31,Y+18+1
000431 9631      	ADIW R30,1
000432 8bea      	STD  Y+18,R30
000433 8bfb      	STD  Y+18+1,R31
000434 9731      	SBIW R30,1
000435 91e4      	LPM  R30,Z
000436 2f2e      	MOV  R18,R30
000437 30e0      	CPI  R30,0
000438 f409      	BRNE PC+2
000439 c0fb      	RJMP _0x2020018
00043a 2fe1      	MOV  R30,R17
00043b 30e0      	CPI  R30,0
00043c f431      	BRNE _0x202001C
00043d 3225      	CPI  R18,37
00043e f411      	BRNE _0x202001D
00043f e011      	LDI  R17,LOW(1)
000440 c001      	RJMP _0x202001E
                 _0x202001D:
000441 d6f5      	RCALL SUBOPT_0x1F
                 _0x202001E:
000442 c0f1      	RJMP _0x202001B
                 _0x202001C:
000443 30e1      	CPI  R30,LOW(0x1)
000444 f4a1      	BRNE _0x202001F
000445 3225      	CPI  R18,37
000446 f411      	BRNE _0x2020020
000447 d6ef      	RCALL SUBOPT_0x1F
000448 c0ea      	RJMP _0x20200CC
                 _0x2020020:
000449 e012      	LDI  R17,LOW(2)
00044a e040      	LDI  R20,LOW(0)
00044b e000      	LDI  R16,LOW(0)
00044c 322d      	CPI  R18,45
00044d f411      	BRNE _0x2020021
00044e e001      	LDI  R16,LOW(1)
00044f c0e4      	RJMP _0x202001B
                 _0x2020021:
000450 322b      	CPI  R18,43
000451 f411      	BRNE _0x2020022
000452 e24b      	LDI  R20,LOW(43)
000453 c0e0      	RJMP _0x202001B
                 _0x2020022:
000454 3220      	CPI  R18,32
000455 f411      	BRNE _0x2020023
000456 e240      	LDI  R20,LOW(32)
000457 c0dc      	RJMP _0x202001B
                 _0x2020023:
000458 c002      	RJMP _0x2020024
                 _0x202001F:
000459 30e2      	CPI  R30,LOW(0x2)
00045a f439      	BRNE _0x2020025
                 _0x2020024:
00045b e050      	LDI  R21,LOW(0)
00045c e013      	LDI  R17,LOW(3)
00045d 3320      	CPI  R18,48
00045e f411      	BRNE _0x2020026
00045f 6800      	ORI  R16,LOW(128)
000460 c0d3      	RJMP _0x202001B
                 _0x2020026:
000461 c003      	RJMP _0x2020027
                 _0x2020025:
000462 30e3      	CPI  R30,LOW(0x3)
000463 f009      	BREQ PC+2
000464 c0cf      	RJMP _0x202001B
                 _0x2020027:
000465 3320      	CPI  R18,48
000466 f010      	BRLO _0x202002A
000467 332a      	CPI  R18,58
000468 f008      	BRLO _0x202002B
                 _0x202002A:
000469 c007      	RJMP _0x2020029
                 _0x202002B:
00046a e0aa      	LDI  R26,LOW(10)
00046b 9f5a      	MUL  R21,R26
00046c 2d50      	MOV  R21,R0
00046d 2fe2      	MOV  R30,R18
00046e 53e0      	SUBI R30,LOW(48)
00046f 0f5e      	ADD  R21,R30
000470 c0c3      	RJMP _0x202001B
                 _0x2020029:
000471 2fe2      	MOV  R30,R18
000472 36e3      	CPI  R30,LOW(0x63)
000473 f439      	BRNE _0x202002F
000474 d6c9      	RCALL SUBOPT_0x20
000475 d6cb      	RCALL SUBOPT_0x21
000476 d6c7      	RCALL SUBOPT_0x20
000477 81a4      	LDD  R26,Z+4
000478 93aa      	ST   -Y,R26
000479 d6cb      	RCALL SUBOPT_0x22
00047a c0b8      	RJMP _0x2020030
                 _0x202002F:
00047b 37e3      	CPI  R30,LOW(0x73)
00047c f431      	BRNE _0x2020032
00047d d6cd      	RCALL SUBOPT_0x23
00047e d6ce      	RCALL SUBOPT_0x24
00047f d6d0      	RCALL SUBOPT_0x25
000480 d5b8      	RCALL _strlen
000481 2f1e      	MOV  R17,R30
000482 c008      	RJMP _0x2020033
                 _0x2020032:
000483 37e0      	CPI  R30,LOW(0x70)
000484 f451      	BRNE _0x2020035
000485 d6c5      	RCALL SUBOPT_0x23
000486 d6c6      	RCALL SUBOPT_0x24
000487 d6c8      	RCALL SUBOPT_0x25
000488 d5bb      	RCALL _strlenf
000489 2f1e      	MOV  R17,R30
00048a 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00048b 6002      	ORI  R16,LOW(2)
00048c 770f      	ANDI R16,LOW(127)
00048d e030      	LDI  R19,LOW(0)
00048e c02d      	RJMP _0x2020036
                 _0x2020035:
00048f 36e4      	CPI  R30,LOW(0x64)
000490 f011      	BREQ _0x2020039
000491 36e9      	CPI  R30,LOW(0x69)
000492 f411      	BRNE _0x202003A
                 _0x2020039:
000493 6004      	ORI  R16,LOW(4)
000494 c002      	RJMP _0x202003B
                 _0x202003A:
000495 37e5      	CPI  R30,LOW(0x75)
000496 f429      	BRNE _0x202003C
                 _0x202003B:
000497 e0ea      	LDI  R30,LOW(_tbl10_G101*2)
000498 e0f2      	LDI  R31,HIGH(_tbl10_G101*2)
000499 d6bb      	RCALL SUBOPT_0x26
00049a e015      	LDI  R17,LOW(5)
00049b c00b      	RJMP _0x202003D
                 _0x202003C:
00049c 35e8      	CPI  R30,LOW(0x58)
00049d f411      	BRNE _0x202003F
00049e 6008      	ORI  R16,LOW(8)
00049f c003      	RJMP _0x2020040
                 _0x202003F:
0004a0 37e8      	CPI  R30,LOW(0x78)
0004a1 f009      	BREQ PC+2
0004a2 c090      	RJMP _0x2020071
                 _0x2020040:
0004a3 e1e4      	LDI  R30,LOW(_tbl16_G101*2)
0004a4 e0f2      	LDI  R31,HIGH(_tbl16_G101*2)
0004a5 d6af      	RCALL SUBOPT_0x26
0004a6 e014      	LDI  R17,LOW(4)
                 _0x202003D:
0004a7 ff02      	SBRS R16,2
0004a8 c010      	RJMP _0x2020042
0004a9 d6a1      	RCALL SUBOPT_0x23
0004aa d6a2      	RCALL SUBOPT_0x24
0004ab d6ac      	RCALL SUBOPT_0x27
0004ac 85ab      	LDD  R26,Y+11
0004ad 23aa      	TST  R26
0004ae f422      	BRPL _0x2020043
0004af d6ab      	RCALL SUBOPT_0x28
0004b0 d844      	RCALL __ANEGW1
0004b1 d6a6      	RCALL SUBOPT_0x27
0004b2 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0004b3 3040      	CPI  R20,0
0004b4 f011      	BREQ _0x2020044
0004b5 5f1f      	SUBI R17,-LOW(1)
0004b6 c001      	RJMP _0x2020045
                 _0x2020044:
0004b7 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0004b8 c003      	RJMP _0x2020046
                 _0x2020042:
0004b9 d691      	RCALL SUBOPT_0x23
0004ba d692      	RCALL SUBOPT_0x24
0004bb d69c      	RCALL SUBOPT_0x27
                 _0x2020046:
                 _0x2020036:
0004bc fd00      	SBRC R16,0
0004bd c010      	RJMP _0x2020047
                 _0x2020048:
0004be 1715      	CP   R17,R21
0004bf f470      	BRSH _0x202004A
0004c0 ff07      	SBRS R16,7
0004c1 c008      	RJMP _0x202004B
0004c2 ff02      	SBRS R16,2
0004c3 c004      	RJMP _0x202004C
0004c4 7f0b      	ANDI R16,LOW(251)
0004c5 2f24      	MOV  R18,R20
0004c6 5011      	SUBI R17,LOW(1)
0004c7 c001      	RJMP _0x202004D
                 _0x202004C:
0004c8 e320      	LDI  R18,LOW(48)
                 _0x202004D:
0004c9 c001      	RJMP _0x202004E
                 _0x202004B:
0004ca e220      	LDI  R18,LOW(32)
                 _0x202004E:
0004cb d66b      	RCALL SUBOPT_0x1F
0004cc 5051      	SUBI R21,LOW(1)
0004cd cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0004ce 2f31      	MOV  R19,R17
0004cf ff01      	SBRS R16,1
0004d0 c015      	RJMP _0x202004F
                 _0x2020050:
0004d1 3030      	CPI  R19,0
0004d2 f091      	BREQ _0x2020052
0004d3 ff03      	SBRS R16,3
0004d4 c005      	RJMP _0x2020053
0004d5 81ee      	LDD  R30,Y+6
0004d6 81ff      	LDD  R31,Y+6+1
0004d7 9125      	LPM  R18,Z+
0004d8 d67c      	RCALL SUBOPT_0x26
0004d9 c005      	RJMP _0x2020054
                 _0x2020053:
0004da 81ae      	LDD  R26,Y+6
0004db 81bf      	LDD  R27,Y+6+1
0004dc 912d      	LD   R18,X+
0004dd 83ae      	STD  Y+6,R26
0004de 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0004df d657      	RCALL SUBOPT_0x1F
0004e0 3050      	CPI  R21,0
0004e1 f009      	BREQ _0x2020055
0004e2 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0004e3 5031      	SUBI R19,LOW(1)
0004e4 cfec      	RJMP _0x2020050
                 _0x2020052:
0004e5 c044      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0004e6 e320      	LDI  R18,LOW(48)
0004e7 81ee      	LDD  R30,Y+6
0004e8 81ff      	LDD  R31,Y+6+1
0004e9 d89b      	RCALL __GETW1PF
0004ea 87e8      	STD  Y+8,R30
0004eb 87f9      	STD  Y+8+1,R31
0004ec 81ee      	LDD  R30,Y+6
0004ed 81ff      	LDD  R31,Y+6+1
0004ee 9632      	ADIW R30,2
0004ef d665      	RCALL SUBOPT_0x26
                 _0x202005A:
0004f0 85e8      	LDD  R30,Y+8
0004f1 85f9      	LDD  R31,Y+8+1
0004f2 d66b      	RCALL SUBOPT_0x29
0004f3 17ae      	CP   R26,R30
0004f4 07bf      	CPC  R27,R31
0004f5 f040      	BRLO _0x202005C
0004f6 5f2f      	SUBI R18,-LOW(1)
0004f7 85a8      	LDD  R26,Y+8
0004f8 85b9      	LDD  R27,Y+8+1
0004f9 d661      	RCALL SUBOPT_0x28
0004fa 1bea      	SUB  R30,R26
0004fb 0bfb      	SBC  R31,R27
0004fc d65b      	RCALL SUBOPT_0x27
0004fd cff2      	RJMP _0x202005A
                 _0x202005C:
0004fe 332a      	CPI  R18,58
0004ff f028      	BRLO _0x202005D
000500 ff03      	SBRS R16,3
000501 c002      	RJMP _0x202005E
000502 5f29      	SUBI R18,-LOW(7)
000503 c001      	RJMP _0x202005F
                 _0x202005E:
000504 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000505 fd04      	SBRC R16,4
000506 c019      	RJMP _0x2020061
000507 3321      	CPI  R18,49
000508 f420      	BRSH _0x2020063
000509 85a8      	LDD  R26,Y+8
00050a 85b9      	LDD  R27,Y+8+1
00050b 9711      	SBIW R26,1
00050c f409      	BRNE _0x2020062
                 _0x2020063:
00050d c009      	RJMP _0x20200CD
                 _0x2020062:
00050e 1753      	CP   R21,R19
00050f f010      	BRLO _0x2020067
000510 ff00      	SBRS R16,0
000511 c001      	RJMP _0x2020068
                 _0x2020067:
000512 c011      	RJMP _0x2020066
                 _0x2020068:
000513 e220      	LDI  R18,LOW(32)
000514 ff07      	SBRS R16,7
000515 c00a      	RJMP _0x2020069
000516 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000517 6100      	ORI  R16,LOW(16)
000518 ff02      	SBRS R16,2
000519 c006      	RJMP _0x202006A
00051a 7f0b      	ANDI R16,LOW(251)
00051b 934a      	ST   -Y,R20
00051c d628      	RCALL SUBOPT_0x22
00051d 3050      	CPI  R21,0
00051e f009      	BREQ _0x202006B
00051f 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000520 d616      	RCALL SUBOPT_0x1F
000521 3050      	CPI  R21,0
000522 f009      	BREQ _0x202006C
000523 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000524 5031      	SUBI R19,LOW(1)
000525 85a8      	LDD  R26,Y+8
000526 85b9      	LDD  R27,Y+8+1
000527 9712      	SBIW R26,2
000528 f008      	BRLO _0x2020059
000529 cfbc      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00052a ff00      	SBRS R16,0
00052b c007      	RJMP _0x202006D
                 _0x202006E:
00052c 3050      	CPI  R21,0
00052d f029      	BREQ _0x2020070
00052e 5051      	SUBI R21,LOW(1)
00052f e2e0      	LDI  R30,LOW(32)
000530 93ea      	ST   -Y,R30
000531 d613      	RCALL SUBOPT_0x22
000532 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000533 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000534 cefa      	RJMP _0x2020016
                 _0x2020018:
000535 85ac      	LDD  R26,Y+12
000536 85bd      	LDD  R27,Y+12+1
000537 d849      	RCALL __GETW1P
000538 d885      	RCALL __LOADLOCR6
000539 9664      	ADIW R28,20
00053a 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00053b 92ff      	PUSH R15
00053c 2ef8      	MOV  R15,R24
00053d 9726      	SBIW R28,6
00053e d87a      	RCALL __SAVELOCR4
00053f d621      	RCALL SUBOPT_0x2A
000540 9730      	SBIW R30,0
000541 f419      	BRNE _0x2020072
000542 efef      	LDI  R30,LOW(65535)
000543 efff      	LDI  R31,HIGH(65535)
000544 c01c      	RJMP _0x212000B
                 _0x2020072:
000545 01de      	MOVW R26,R28
000546 9616      	ADIW R26,6
000547 d7a9      	RCALL __ADDW2R15
000548 018d      	MOVW R16,R26
000549 d617      	RCALL SUBOPT_0x2A
00054a d60a      	RCALL SUBOPT_0x26
00054b e0e0      	LDI  R30,LOW(0)
00054c 87e8      	STD  Y+8,R30
00054d 87e9      	STD  Y+8+1,R30
00054e 01de      	MOVW R26,R28
00054f 961a      	ADIW R26,10
000550 d7a0      	RCALL __ADDW2R15
000551 d82f      	RCALL __GETW1P
000552 d5b3      	RCALL SUBOPT_0x15
000553 931a      	ST   -Y,R17
000554 930a      	ST   -Y,R16
000555 efea      	LDI  R30,LOW(_put_buff_G101)
000556 e0f3      	LDI  R31,HIGH(_put_buff_G101)
000557 d5ae      	RCALL SUBOPT_0x15
000558 01de      	MOVW R26,R28
000559 961a      	ADIW R26,10
00055a decb      	RCALL __print_G101
00055b 019f      	MOVW R18,R30
00055c 81ae      	LDD  R26,Y+6
00055d 81bf      	LDD  R27,Y+6+1
00055e e0e0      	LDI  R30,LOW(0)
00055f 93ec      	ST   X,R30
000560 01f9      	MOVW R30,R18
                 _0x212000B:
000561 d85e      	RCALL __LOADLOCR4
000562 962a      	ADIW R28,10
000563 90ff      	POP  R15
000564 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
000565 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
000566 d587      	RCALL SUBOPT_0xE
000567 98a9      	CBI  0x15,1
000568 e018      	LDI  R17,LOW(8)
                 _0x2040004:
000569 dffb      	RCALL _pcd8544_delay_G102
00056a 81e9      	LDD  R30,Y+1
00056b 78e0      	ANDI R30,LOW(0x80)
00056c f011      	BREQ _0x2040006
00056d 9aab      	SBI  0x15,3
00056e c001      	RJMP _0x2040007
                 _0x2040006:
00056f 98ab      	CBI  0x15,3
                 _0x2040007:
000570 81e9      	LDD  R30,Y+1
000571 0fee      	LSL  R30
000572 83e9      	STD  Y+1,R30
000573 dff1      	RCALL _pcd8544_delay_G102
000574 9aac      	SBI  0x15,4
000575 dfef      	RCALL _pcd8544_delay_G102
000576 98ac      	CBI  0x15,4
000577 5011      	SUBI R17,LOW(1)
000578 f781      	BRNE _0x2040004
000579 9aa9      	SBI  0x15,1
00057a 8118      	LDD  R17,Y+0
00057b c4dc      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
00057c 93aa      	ST   -Y,R26
00057d 98aa      	CBI  0x15,2
00057e 81a8      	LD   R26,Y
00057f dfe6      	RCALL _pcd8544_wrbus_G102
000580 c0a1      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
000581 93aa      	ST   -Y,R26
000582 9aaa      	SBI  0x15,2
000583 81a8      	LD   R26,Y
000584 dfe1      	RCALL _pcd8544_wrbus_G102
000585 c09c      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
000586 d567      	RCALL SUBOPT_0xE
000587 81e9      	LDD  R30,Y+1
000588 d5dd      	RCALL SUBOPT_0x2B
000589 2f1e      	MOV  R17,R30
00058a e5e4      	LDI  R30,LOW(84)
00058b 9fe1      	MUL  R30,R17
00058c 01f0      	MOVW R30,R0
00058d 01df      	MOVW R26,R30
00058e 81ea      	LDD  R30,Y+2
00058f d5da      	RCALL SUBOPT_0x2C
000590 93e0 01fc 	STS  _gfx_addr_G102,R30
000592 93f0 01fd 	STS  _gfx_addr_G102+1,R31
000594 2fe1      	MOV  R30,R17
000595 8118      	LDD  R17,Y+0
000596 c502      	RJMP _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000597 93aa      	ST   -Y,R26
000598 81e9      	LDD  R30,Y+1
000599 68e0      	ORI  R30,0x80
00059a d5d1      	RCALL SUBOPT_0x2D
00059b 81e9      	LDD  R30,Y+1
00059c 93ea      	ST   -Y,R30
00059d 81a9      	LDD  R26,Y+1
00059e dfe7      	RCALL _pcd8544_setaddr_G102
00059f 64e0      	ORI  R30,0x40
0005a0 d5cb      	RCALL SUBOPT_0x2D
0005a1 c4b6      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
0005a2 93aa      	ST   -Y,R26
0005a3 81e9      	LDD  R30,Y+1
0005a4 93ea      	ST   -Y,R30
0005a5 81a9      	LDD  R26,Y+1
0005a6 dff0      	RCALL _pcd8544_gotoxy
0005a7 91e0 01fc 	LDS  R30,_gfx_addr_G102
0005a9 91f0 01fd 	LDS  R31,_gfx_addr_G102+1
0005ab d5c2      	RCALL SUBOPT_0x2E
0005ac 81e0      	LD   R30,Z
0005ad c4aa      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
0005ae 93aa      	ST   -Y,R26
0005af d5c1      	RCALL SUBOPT_0x2F
0005b0 d5c3      	RCALL SUBOPT_0x30
0005b1 81a8      	LD   R26,Y
0005b2 83a0      	STD  Z+0,R26
0005b3 dfcd      	RCALL _pcd8544_wrdata_G102
0005b4 c06d      	RJMP _0x212000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0005b5 d502      	RCALL SUBOPT_0x0
0005b6 d802      	RCALL __SAVELOCR4
0005b7 9aa1      	SBI  0x14,1
0005b8 9aa9      	SBI  0x15,1
0005b9 9aa4      	SBI  0x14,4
0005ba 98ac      	CBI  0x15,4
0005bb 9aa3      	SBI  0x14,3
0005bc 9aa2      	SBI  0x14,2
0005bd 9aa0      	SBI  0x14,0
0005be 98a8      	CBI  0x15,0
0005bf e0aa      	LDI  R26,LOW(10)
0005c0 d4fe      	RCALL SUBOPT_0x2
0005c1 9aa8      	SBI  0x15,0
0005c2 d5b3      	RCALL SUBOPT_0x31
0005c3 9730      	SBIW R30,0
0005c4 f0d9      	BREQ _0x2040008
0005c5 d5b0      	RCALL SUBOPT_0x31
0005c6 81e6      	LDD  R30,Z+6
0005c7 70e3      	ANDI R30,LOW(0x3)
0005c8 2f1e      	MOV  R17,R30
0005c9 d5ac      	RCALL SUBOPT_0x31
0005ca 81e6      	LDD  R30,Z+6
0005cb 95e6      	LSR  R30
0005cc 95e6      	LSR  R30
0005cd 70e7      	ANDI R30,LOW(0x7)
0005ce 2f0e      	MOV  R16,R30
0005cf d5a6      	RCALL SUBOPT_0x31
0005d0 81e7      	LDD  R30,Z+7
0005d1 77ef      	ANDI R30,0x7F
0005d2 2f3e      	MOV  R19,R30
0005d3 81ac      	LDD  R26,Y+4
0005d4 81bd      	LDD  R27,Y+4+1
0005d5 d7ab      	RCALL __GETW1P
0005d6 d5a2      	RCALL SUBOPT_0x32
0005d7 81ac      	LDD  R26,Y+4
0005d8 81bd      	LDD  R27,Y+4+1
0005d9 9612      	ADIW R26,2
0005da d7a6      	RCALL __GETW1P
0005db d5a2      	RCALL SUBOPT_0x33
0005dc 81ac      	LDD  R26,Y+4
0005dd 81bd      	LDD  R27,Y+4+1
0005de d555      	RCALL SUBOPT_0x1E
0005df c008      	RJMP _0x20400A0
                 _0x2040008:
0005e0 e010      	LDI  R17,LOW(0)
0005e1 e003      	LDI  R16,LOW(3)
0005e2 e332      	LDI  R19,LOW(50)
0005e3 d545      	RCALL SUBOPT_0x1B
0005e4 d594      	RCALL SUBOPT_0x32
0005e5 d543      	RCALL SUBOPT_0x1B
0005e6 d597      	RCALL SUBOPT_0x33
0005e7 d541      	RCALL SUBOPT_0x1B
                 _0x20400A0:
                +
0005e8 93e0 01ac+STS _glcd_state + ( 27 ) , R30
0005ea 93f0 01ad+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0005ec e2a1      	LDI  R26,LOW(33)
0005ed df8e      	RCALL _pcd8544_wrcmd
0005ee 2fe1      	MOV  R30,R17
0005ef 60e4      	ORI  R30,4
0005f0 d57b      	RCALL SUBOPT_0x2D
0005f1 2fe0      	MOV  R30,R16
0005f2 61e0      	ORI  R30,0x10
0005f3 d578      	RCALL SUBOPT_0x2D
0005f4 2fe3      	MOV  R30,R19
0005f5 68e0      	ORI  R30,0x80
0005f6 d575      	RCALL SUBOPT_0x2D
0005f7 e2a0      	LDI  R26,LOW(32)
0005f8 df83      	RCALL _pcd8544_wrcmd
0005f9 e0a1      	LDI  R26,LOW(1)
0005fa d01f      	RCALL _glcd_display
0005fb e0e1      	LDI  R30,LOW(1)
0005fc 93e0 0191 	STS  _glcd_state,R30
0005fe e0e0      	LDI  R30,LOW(0)
                +
0005ff 93e0 0192+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000601 e0e1      	LDI  R30,LOW(1)
                +
000602 93e0 0197+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000604 93e0 0198+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000606 93e0 0199+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000608 efef      	LDI  R30,LOW(255)
                +
000609 93e0 019a+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00060b e0e1      	LDI  R30,LOW(1)
                +
00060c 93e0 01a1+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
00060e eae2     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
00060f e0f1     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000610 d4f5      	RCALL SUBOPT_0x15
000611 efef      	LDI  R30,LOW(255)
000612 93ea      	ST   -Y,R30
000613 e0a8      	LDI  R26,LOW(8)
000614 e0b0      	LDI  R27,0
000615 d414      	RCALL _memset
000616 d00d      	RCALL _glcd_clear
000617 e0e1      	LDI  R30,LOW(1)
000618 d7a7      	RCALL __LOADLOCR4
000619 c078      	RJMP _0x2120009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00061a 93aa      	ST   -Y,R26
00061b 81e8      	LD   R30,Y
00061c 30e0      	CPI  R30,0
00061d f011      	BREQ _0x204000A
00061e e0ec      	LDI  R30,LOW(12)
00061f c001      	RJMP _0x204000B
                 _0x204000A:
000620 e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
000621 d54a      	RCALL SUBOPT_0x2D
                 _0x212000A:
000622 9621      	ADIW R28,1
000623 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000624 d794      	RCALL __SAVELOCR4
000625 e030      	LDI  R19,0
                +
000626 91e0 0192+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000628 30e0      	CPI  R30,0
000629 f009      	BREQ _0x204000D
00062a ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
00062b d4a4      	RCALL SUBOPT_0x7
00062c e0a0      	LDI  R26,LOW(0)
00062d df69      	RCALL _pcd8544_gotoxy
                +
00062e ef08     +LDI R16 , LOW ( 504 )
00062f e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
000630 01f8      	MOVW R30,R16
                +
000631 5001     +SUBI R16 , LOW ( 1 )
000632 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000633 9730      	SBIW R30,0
000634 f019      	BREQ _0x2040010
000635 2fa3      	MOV  R26,R19
000636 df77      	RCALL _pcd8544_wrbyte
000637 cff8      	RJMP _0x204000E
                 _0x2040010:
000638 d497      	RCALL SUBOPT_0x7
000639 e0a0      	LDI  R26,LOW(0)
00063a d2f8      	RCALL _glcd_moveto
00063b d784      	RCALL __LOADLOCR4
00063c c479      	RJMP _0x2120001
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
00063d 93aa      	ST   -Y,R26
00063e d77c      	RCALL __SAVELOCR2
00063f 81ac      	LDD  R26,Y+4
000640 35a4      	CPI  R26,LOW(0x54)
000641 f418      	BRSH _0x2040012
000642 81ab      	LDD  R26,Y+3
000643 33a0      	CPI  R26,LOW(0x30)
000644 f010      	BRLO _0x2040011
                 _0x2040012:
000645 d77c      	RCALL __LOADLOCR2
000646 c3f0      	RJMP _0x2120004
                 _0x2040011:
000647 81ec      	LDD  R30,Y+4
000648 93ea      	ST   -Y,R30
000649 81ac      	LDD  R26,Y+4
00064a df57      	RCALL _pcd8544_rdbyte
00064b 2f1e      	MOV  R17,R30
00064c 81eb      	LDD  R30,Y+3
00064d 70e7      	ANDI R30,LOW(0x7)
00064e e0a1      	LDI  R26,LOW(1)
00064f d6b1      	RCALL __LSLB12
000650 2f0e      	MOV  R16,R30
000651 81ea      	LDD  R30,Y+2
000652 30e0      	CPI  R30,0
000653 f011      	BREQ _0x2040014
000654 2b10      	OR   R17,R16
000655 c003      	RJMP _0x2040015
                 _0x2040014:
000656 2fe0      	MOV  R30,R16
000657 95e0      	COM  R30
000658 231e      	AND  R17,R30
                 _0x2040015:
000659 2fa1      	MOV  R26,R17
00065a df53      	RCALL _pcd8544_wrbyte
00065b d766      	RCALL __LOADLOCR2
00065c c3da      	RJMP _0x2120004
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
00065d d490      	RCALL SUBOPT_0xE
00065e 81ed      	LDD  R30,Y+5
00065f 93ea      	ST   -Y,R30
000660 81ad      	LDD  R26,Y+5
000661 df40      	RCALL _pcd8544_rdbyte
000662 2f1e      	MOV  R17,R30
000663 81e9      	LDD  R30,Y+1
000664 30e7      	CPI  R30,LOW(0x7)
000665 f011      	BREQ _0x2040020
000666 30e8      	CPI  R30,LOW(0x8)
000667 f431      	BRNE _0x2040021
                 _0x2040020:
000668 81eb      	LDD  R30,Y+3
000669 93ea      	ST   -Y,R30
00066a 81aa      	LDD  R26,Y+2
00066b d3ee      	RCALL _glcd_mappixcolor1bit
00066c 83eb      	STD  Y+3,R30
00066d c008      	RJMP _0x2040022
                 _0x2040021:
00066e 30e3      	CPI  R30,LOW(0x3)
00066f f421      	BRNE _0x2040024
000670 81eb      	LDD  R30,Y+3
000671 95e0      	COM  R30
000672 83eb      	STD  Y+3,R30
000673 c002      	RJMP _0x2040025
                 _0x2040024:
000674 30e0      	CPI  R30,0
000675 f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
000676 81ea      	LDD  R30,Y+2
000677 95e0      	COM  R30
000678 231e      	AND  R17,R30
000679 c002      	RJMP _0x2040027
                 _0x2040026:
00067a 30e2      	CPI  R30,LOW(0x2)
00067b f429      	BRNE _0x2040028
                 _0x2040027:
00067c 81ea      	LDD  R30,Y+2
00067d 81ab      	LDD  R26,Y+3
00067e 23ea      	AND  R30,R26
00067f 2b1e      	OR   R17,R30
000680 c00e      	RJMP _0x204001E
                 _0x2040028:
000681 30e1      	CPI  R30,LOW(0x1)
000682 f429      	BRNE _0x2040029
000683 81ea      	LDD  R30,Y+2
000684 81ab      	LDD  R26,Y+3
000685 23ea      	AND  R30,R26
000686 271e      	EOR  R17,R30
000687 c007      	RJMP _0x204001E
                 _0x2040029:
000688 30e4      	CPI  R30,LOW(0x4)
000689 f429      	BRNE _0x204001E
00068a 81ea      	LDD  R30,Y+2
00068b 95e0      	COM  R30
00068c 81ab      	LDD  R26,Y+3
00068d 2bea      	OR   R30,R26
00068e 231e      	AND  R17,R30
                 _0x204001E:
00068f 2fa1      	MOV  R26,R17
000690 df1d      	RCALL _pcd8544_wrbyte
000691 8118      	LDD  R17,Y+0
                 _0x2120009:
000692 9626      	ADIW R28,6
000693 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000694 93aa      	ST   -Y,R26
000695 9723      	SBIW R28,3
000696 d720      	RCALL __SAVELOCR6
000697 89a8      	LDD  R26,Y+16
000698 35a4      	CPI  R26,LOW(0x54)
000699 f448      	BRSH _0x204002C
00069a 85af      	LDD  R26,Y+15
00069b 33a0      	CPI  R26,LOW(0x30)
00069c f430      	BRSH _0x204002C
00069d 85ae      	LDD  R26,Y+14
00069e 30a0      	CPI  R26,LOW(0x0)
00069f f019      	BREQ _0x204002C
0006a0 85ad      	LDD  R26,Y+13
0006a1 30a0      	CPI  R26,LOW(0x0)
0006a2 f409      	BRNE _0x204002B
                 _0x204002C:
0006a3 c187      	RJMP _0x2120008
                 _0x204002B:
0006a4 85ee      	LDD  R30,Y+14
0006a5 87e8      	STD  Y+8,R30
0006a6 89a8      	LDD  R26,Y+16
0006a7 27bb      	CLR  R27
0006a8 85ee      	LDD  R30,Y+14
0006a9 d4d9      	RCALL SUBOPT_0x34
0006aa 35a5      	CPI  R26,LOW(0x55)
0006ab e0e0      	LDI  R30,HIGH(0x55)
0006ac 07be      	CPC  R27,R30
0006ad f020      	BRLO _0x204002E
0006ae 89a8      	LDD  R26,Y+16
0006af e5e4      	LDI  R30,LOW(84)
0006b0 1bea      	SUB  R30,R26
0006b1 87ee      	STD  Y+14,R30
                 _0x204002E:
0006b2 852d      	LDD  R18,Y+13
0006b3 85af      	LDD  R26,Y+15
0006b4 27bb      	CLR  R27
0006b5 85ed      	LDD  R30,Y+13
0006b6 d4cc      	RCALL SUBOPT_0x34
0006b7 97d1      	SBIW R26,49
0006b8 f020      	BRLO _0x204002F
0006b9 85af      	LDD  R26,Y+15
0006ba e3e0      	LDI  R30,LOW(48)
0006bb 1bea      	SUB  R30,R26
0006bc 87ed      	STD  Y+13,R30
                 _0x204002F:
0006bd 85a9      	LDD  R26,Y+9
0006be 30a6      	CPI  R26,LOW(0x6)
0006bf f009      	BREQ PC+2
0006c0 c051      	RJMP _0x2040030
0006c1 85ec      	LDD  R30,Y+12
0006c2 30e1      	CPI  R30,LOW(0x1)
0006c3 f409      	BRNE _0x2040034
0006c4 c166      	RJMP _0x2120008
                 _0x2040034:
0006c5 30e3      	CPI  R30,LOW(0x3)
0006c6 f439      	BRNE _0x2040037
                +
0006c7 91e0 01ac+LDS R30 , _glcd_state + ( 27 )
0006c9 91f0 01ad+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0006cb 9730      	SBIW R30,0
0006cc f409      	BRNE _0x2040036
0006cd c15d      	RJMP _0x2120008
                 _0x2040036:
                 _0x2040037:
0006ce 8508      	LDD  R16,Y+8
0006cf 85ed      	LDD  R30,Y+13
0006d0 d495      	RCALL SUBOPT_0x2B
0006d1 2f3e      	MOV  R19,R30
0006d2 2fe2      	MOV  R30,R18
0006d3 70e7      	ANDI R30,LOW(0x7)
0006d4 f419      	BRNE _0x2040039
0006d5 85ad      	LDD  R26,Y+13
0006d6 172a      	CP   R18,R26
0006d7 f0c9      	BREQ _0x2040038
                 _0x2040039:
0006d8 2fa0      	MOV  R26,R16
0006d9 27bb      	CLR  R27
0006da 2fe3      	MOV  R30,R19
0006db d4ab      	RCALL SUBOPT_0x35
0006dc d481      	RCALL SUBOPT_0x29
0006dd d3e3      	RCALL SUBOPT_0x3
0006de d476      	RCALL SUBOPT_0x26
0006df 9526      	LSR  R18
0006e0 9526      	LSR  R18
0006e1 9526      	LSR  R18
0006e2 2f53      	MOV  R21,R19
                 _0x204003B:
0006e3 935f      	PUSH R21
0006e4 5f5f      	SUBI R21,-1
0006e5 2fe2      	MOV  R30,R18
0006e6 91af      	POP  R26
0006e7 17ea      	CP   R30,R26
0006e8 f040      	BRLO _0x204003D
0006e9 2f10      	MOV  R17,R16
                 _0x204003E:
0006ea 2fe1      	MOV  R30,R17
0006eb 5011      	SUBI R17,1
0006ec 30e0      	CPI  R30,0
0006ed f011      	BREQ _0x2040040
0006ee d49b      	RCALL SUBOPT_0x36
0006ef cffa      	RJMP _0x204003E
                 _0x2040040:
0006f0 cff2      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
0006f1 85ae      	LDD  R26,Y+14
0006f2 170a      	CP   R16,R26
0006f3 f0f1      	BREQ _0x2040041
0006f4 85ee      	LDD  R30,Y+14
0006f5 d468      	RCALL SUBOPT_0x29
0006f6 d473      	RCALL SUBOPT_0x2C
0006f7 d45d      	RCALL SUBOPT_0x26
0006f8 85ed      	LDD  R30,Y+13
0006f9 70e7      	ANDI R30,LOW(0x7)
0006fa f009      	BREQ _0x2040042
0006fb 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
0006fc e020      	LDI  R18,LOW(0)
                 _0x2040043:
0006fd 932f      	PUSH R18
0006fe 5f2f      	SUBI R18,-1
0006ff 2fe3      	MOV  R30,R19
000700 91af      	POP  R26
000701 17ae      	CP   R26,R30
000702 f478      	BRSH _0x2040045
000703 851e      	LDD  R17,Y+14
                 _0x2040046:
000704 931f      	PUSH R17
000705 5f1f      	SUBI R17,-1
000706 2fe0      	MOV  R30,R16
000707 91af      	POP  R26
000708 17ae      	CP   R26,R30
000709 f410      	BRSH _0x2040048
00070a d47f      	RCALL SUBOPT_0x36
00070b cff8      	RJMP _0x2040046
                 _0x2040048:
00070c 85ee      	LDD  R30,Y+14
00070d 81ae      	LDD  R26,Y+6
00070e 81bf      	LDD  R27,Y+6+1
00070f d45a      	RCALL SUBOPT_0x2C
000710 d444      	RCALL SUBOPT_0x26
000711 cfeb      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
000712 85ef      	LDD  R30,Y+15
000713 70e7      	ANDI R30,LOW(0x7)
000714 2f3e      	MOV  R19,R30
                 _0x2040049:
000715 85ed      	LDD  R30,Y+13
000716 30e0      	CPI  R30,0
000717 f409      	BRNE PC+2
000718 c112      	RJMP _0x204004B
000719 d441      	RCALL SUBOPT_0x28
00071a d43a      	RCALL SUBOPT_0x26
00071b e010      	LDI  R17,LOW(0)
00071c 8908      	LDD  R16,Y+16
00071d 3030      	CPI  R19,0
00071e f009      	BREQ PC+2
00071f c05b      	RJMP _0x204004C
000720 85ad      	LDD  R26,Y+13
000721 30a8      	CPI  R26,LOW(0x8)
000722 f408      	BRSH PC+2
000723 c052      	RJMP _0x204004D
000724 85e9      	LDD  R30,Y+9
000725 30e0      	CPI  R30,0
000726 f011      	BREQ _0x2040052
000727 30e3      	CPI  R30,LOW(0x3)
000728 f409      	BRNE _0x2040053
                 _0x2040052:
000729 c002      	RJMP _0x2040054
                 _0x2040053:
00072a 30e7      	CPI  R30,LOW(0x7)
00072b f409      	BRNE _0x2040055
                 _0x2040054:
00072c c002      	RJMP _0x2040056
                 _0x2040055:
00072d 30e8      	CPI  R30,LOW(0x8)
00072e f409      	BRNE _0x2040057
                 _0x2040056:
00072f c002      	RJMP _0x2040058
                 _0x2040057:
000730 30e9      	CPI  R30,LOW(0x9)
000731 f409      	BRNE _0x2040059
                 _0x2040058:
000732 c002      	RJMP _0x204005A
                 _0x2040059:
000733 30ea      	CPI  R30,LOW(0xA)
000734 f419      	BRNE _0x204005B
                 _0x204005A:
000735 d45f      	RCALL SUBOPT_0x37
000736 de60      	RCALL _pcd8544_gotoxy
000737 c004      	RJMP _0x2040050
                 _0x204005B:
000738 30e6      	CPI  R30,LOW(0x6)
000739 f411      	BRNE _0x2040050
00073a d45a      	RCALL SUBOPT_0x37
00073b de4a      	RCALL _pcd8544_setaddr_G102
                 _0x2040050:
                 _0x204005D:
00073c 931f      	PUSH R17
00073d d45a      	RCALL SUBOPT_0x38
00073e 91af      	POP  R26
00073f 17ae      	CP   R26,R30
000740 f570      	BRSH _0x204005F
000741 85a9      	LDD  R26,Y+9
000742 30a6      	CPI  R26,LOW(0x6)
000743 f439      	BRNE _0x2040060
000744 d456      	RCALL SUBOPT_0x39
000745 d3c0      	RCALL SUBOPT_0x15
000746 d42a      	RCALL SUBOPT_0x2F
000747 d42c      	RCALL SUBOPT_0x30
000748 81a0      	LD   R26,Z
000749 d351      	RCALL _glcd_writemem
00074a c023      	RJMP _0x2040061
                 _0x2040060:
00074b 85e9      	LDD  R30,Y+9
00074c 30e9      	CPI  R30,LOW(0x9)
00074d f411      	BRNE _0x2040065
00074e e050      	LDI  R21,LOW(0)
00074f c00d      	RJMP _0x2040066
                 _0x2040065:
000750 30ea      	CPI  R30,LOW(0xA)
000751 f411      	BRNE _0x2040064
000752 ef5f      	LDI  R21,LOW(255)
000753 c009      	RJMP _0x2040066
                 _0x2040064:
000754 d446      	RCALL SUBOPT_0x39
000755 d3d6      	RCALL SUBOPT_0x1C
000756 d32a      	RCALL _glcd_readmem
000757 2f5e      	MOV  R21,R30
000758 85e9      	LDD  R30,Y+9
000759 30e7      	CPI  R30,LOW(0x7)
00075a f011      	BREQ _0x204006D
00075b 30e8      	CPI  R30,LOW(0x8)
00075c f419      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
00075d d446      	RCALL SUBOPT_0x3A
00075e 2f5e      	MOV  R21,R30
00075f c006      	RJMP _0x204006F
                 _0x204006E:
000760 30e3      	CPI  R30,LOW(0x3)
000761 f411      	BRNE _0x2040071
000762 9550      	COM  R21
000763 c002      	RJMP _0x2040072
                 _0x2040071:
000764 30e0      	CPI  R30,0
000765 f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
000766 2fa5      	MOV  R26,R21
000767 de19      	RCALL _pcd8544_wrdata_G102
000768 c005      	RJMP _0x204006B
                 _0x2040074:
000769 d43d      	RCALL SUBOPT_0x3B
00076a efef      	LDI  R30,LOW(255)
00076b 93ea      	ST   -Y,R30
00076c 85ad      	LDD  R26,Y+13
00076d deef      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
00076e cfcd      	RJMP _0x204005D
                 _0x204005F:
00076f 85ef      	LDD  R30,Y+15
000770 5fe8      	SUBI R30,-LOW(8)
000771 87ef      	STD  Y+15,R30
000772 85ed      	LDD  R30,Y+13
000773 50e8      	SUBI R30,LOW(8)
000774 87ed      	STD  Y+13,R30
000775 c0b0      	RJMP _0x2040075
                 _0x204004D:
000776 855d      	LDD  R21,Y+13
000777 e020      	LDI  R18,LOW(0)
000778 e0e0      	LDI  R30,LOW(0)
000779 87ed      	STD  Y+13,R30
00077a c068      	RJMP _0x2040076
                 _0x204004C:
00077b 2fe3      	MOV  R30,R19
00077c 85ad      	LDD  R26,Y+13
00077d 0fae      	ADD  R26,R30
00077e 30a9      	CPI  R26,LOW(0x9)
00077f f420      	BRSH _0x2040077
000780 852d      	LDD  R18,Y+13
000781 e0e0      	LDI  R30,LOW(0)
000782 87ed      	STD  Y+13,R30
000783 c003      	RJMP _0x2040078
                 _0x2040077:
000784 e0e8      	LDI  R30,LOW(8)
000785 1be3      	SUB  R30,R19
000786 2f2e      	MOV  R18,R30
                 _0x2040078:
000787 933a      	ST   -Y,R19
000788 2fa2      	MOV  R26,R18
000789 d2c6      	RCALL _glcd_getmask
00078a 2f4e      	MOV  R20,R30
00078b 85e9      	LDD  R30,Y+9
00078c 30e6      	CPI  R30,LOW(0x6)
00078d f4c1      	BRNE _0x204007C
00078e d406      	RCALL SUBOPT_0x37
00078f ddf6      	RCALL _pcd8544_setaddr_G102
                 _0x204007D:
000790 931f      	PUSH R17
000791 d406      	RCALL SUBOPT_0x38
000792 91af      	POP  R26
000793 17ae      	CP   R26,R30
000794 f480      	BRSH _0x204007F
000795 d3db      	RCALL SUBOPT_0x2F
000796 d3dd      	RCALL SUBOPT_0x30
000797 81e0      	LD   R30,Z
000798 23e4      	AND  R30,R20
000799 2fae      	MOV  R26,R30
00079a 2fe3      	MOV  R30,R19
00079b d56d      	RCALL __LSRB12
00079c d410      	RCALL SUBOPT_0x3C
00079d 2fe3      	MOV  R30,R19
00079e 2fa4      	MOV  R26,R20
00079f d569      	RCALL __LSRB12
0007a0 d416      	RCALL SUBOPT_0x3D
0007a1 d364      	RCALL SUBOPT_0x15
0007a2 2fa5      	MOV  R26,R21
0007a3 d2f7      	RCALL _glcd_writemem
0007a4 cfeb      	RJMP _0x204007D
                 _0x204007F:
0007a5 c023      	RJMP _0x204007B
                 _0x204007C:
0007a6 30e9      	CPI  R30,LOW(0x9)
0007a7 f411      	BRNE _0x2040080
0007a8 e050      	LDI  R21,LOW(0)
0007a9 c003      	RJMP _0x2040081
                 _0x2040080:
0007aa 30ea      	CPI  R30,LOW(0xA)
0007ab f489      	BRNE _0x2040087
0007ac ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
0007ad d3f6      	RCALL SUBOPT_0x3A
0007ae 2fae      	MOV  R26,R30
0007af 2fe3      	MOV  R30,R19
0007b0 d550      	RCALL __LSLB12
0007b1 2f5e      	MOV  R21,R30
                 _0x2040084:
0007b2 931f      	PUSH R17
0007b3 d3e4      	RCALL SUBOPT_0x38
0007b4 91af      	POP  R26
0007b5 17ae      	CP   R26,R30
0007b6 f428      	BRSH _0x2040086
0007b7 d3ef      	RCALL SUBOPT_0x3B
0007b8 934a      	ST   -Y,R20
0007b9 e0a0      	LDI  R26,LOW(0)
0007ba dea2      	RCALL _pcd8544_wrmasked_G102
0007bb cff6      	RJMP _0x2040084
                 _0x2040086:
0007bc c00c      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
0007bd 931f      	PUSH R17
0007be d3d9      	RCALL SUBOPT_0x38
0007bf 91af      	POP  R26
0007c0 17ae      	CP   R26,R30
0007c1 f438      	BRSH _0x204008A
0007c2 d3f8      	RCALL SUBOPT_0x3E
0007c3 d2bd      	RCALL _glcd_readmem
0007c4 2fae      	MOV  R26,R30
0007c5 2fe3      	MOV  R30,R19
0007c6 d53a      	RCALL __LSLB12
0007c7 d400      	RCALL SUBOPT_0x3F
0007c8 cff4      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
0007c9 85ed      	LDD  R30,Y+13
0007ca 30e0      	CPI  R30,0
0007cb f409      	BRNE _0x204008B
0007cc c05e      	RJMP _0x204004B
                 _0x204008B:
0007cd 85ad      	LDD  R26,Y+13
0007ce 30a8      	CPI  R26,LOW(0x8)
0007cf f428      	BRSH _0x204008C
0007d0 85ed      	LDD  R30,Y+13
0007d1 1be2      	SUB  R30,R18
0007d2 2f5e      	MOV  R21,R30
0007d3 e0e0      	LDI  R30,LOW(0)
0007d4 c003      	RJMP _0x20400A1
                 _0x204008C:
0007d5 2f53      	MOV  R21,R19
0007d6 85ed      	LDD  R30,Y+13
0007d7 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
0007d8 87ed      	STD  Y+13,R30
0007d9 e010      	LDI  R17,LOW(0)
0007da 85ef      	LDD  R30,Y+15
0007db 5fe8      	SUBI R30,-LOW(8)
0007dc 87ef      	STD  Y+15,R30
0007dd e0e8      	LDI  R30,LOW(8)
0007de 1be3      	SUB  R30,R19
0007df 2f2e      	MOV  R18,R30
0007e0 8908      	LDD  R16,Y+16
0007e1 d379      	RCALL SUBOPT_0x28
0007e2 d372      	RCALL SUBOPT_0x26
                 _0x2040076:
0007e3 2fe5      	MOV  R30,R21
0007e4 e0f0      	LDI  R31,0
0007e5 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
0007e6 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0007e7 9144      	LPM  R20,Z
0007e8 85e9      	LDD  R30,Y+9
0007e9 30e6      	CPI  R30,LOW(0x6)
0007ea f4c1      	BRNE _0x2040091
0007eb d3a9      	RCALL SUBOPT_0x37
0007ec dd99      	RCALL _pcd8544_setaddr_G102
                 _0x2040092:
0007ed 931f      	PUSH R17
0007ee d3a9      	RCALL SUBOPT_0x38
0007ef 91af      	POP  R26
0007f0 17ae      	CP   R26,R30
0007f1 f480      	BRSH _0x2040094
0007f2 d37e      	RCALL SUBOPT_0x2F
0007f3 d380      	RCALL SUBOPT_0x30
0007f4 81e0      	LD   R30,Z
0007f5 23e4      	AND  R30,R20
0007f6 2fae      	MOV  R26,R30
0007f7 2fe2      	MOV  R30,R18
0007f8 d508      	RCALL __LSLB12
0007f9 d3b3      	RCALL SUBOPT_0x3C
0007fa 2fe2      	MOV  R30,R18
0007fb 2fa4      	MOV  R26,R20
0007fc d504      	RCALL __LSLB12
0007fd d3b9      	RCALL SUBOPT_0x3D
0007fe d307      	RCALL SUBOPT_0x15
0007ff 2fa5      	MOV  R26,R21
000800 d29a      	RCALL _glcd_writemem
000801 cfeb      	RJMP _0x2040092
                 _0x2040094:
000802 c023      	RJMP _0x2040090
                 _0x2040091:
000803 30e9      	CPI  R30,LOW(0x9)
000804 f411      	BRNE _0x2040095
000805 e050      	LDI  R21,LOW(0)
000806 c003      	RJMP _0x2040096
                 _0x2040095:
000807 30ea      	CPI  R30,LOW(0xA)
000808 f489      	BRNE _0x204009C
000809 ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
00080a d399      	RCALL SUBOPT_0x3A
00080b 2fae      	MOV  R26,R30
00080c 2fe2      	MOV  R30,R18
00080d d4fb      	RCALL __LSRB12
00080e 2f5e      	MOV  R21,R30
                 _0x2040099:
00080f 931f      	PUSH R17
000810 d387      	RCALL SUBOPT_0x38
000811 91af      	POP  R26
000812 17ae      	CP   R26,R30
000813 f428      	BRSH _0x204009B
000814 d392      	RCALL SUBOPT_0x3B
000815 934a      	ST   -Y,R20
000816 e0a0      	LDI  R26,LOW(0)
000817 de45      	RCALL _pcd8544_wrmasked_G102
000818 cff6      	RJMP _0x2040099
                 _0x204009B:
000819 c00c      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
00081a 931f      	PUSH R17
00081b d37c      	RCALL SUBOPT_0x38
00081c 91af      	POP  R26
00081d 17ae      	CP   R26,R30
00081e f438      	BRSH _0x204009F
00081f d39b      	RCALL SUBOPT_0x3E
000820 d260      	RCALL _glcd_readmem
000821 2fae      	MOV  R26,R30
000822 2fe2      	MOV  R30,R18
000823 d4e5      	RCALL __LSRB12
000824 d3a3      	RCALL SUBOPT_0x3F
000825 cff4      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
000826 85e8      	LDD  R30,Y+8
000827 d336      	RCALL SUBOPT_0x29
000828 d341      	RCALL SUBOPT_0x2C
000829 d32e      	RCALL SUBOPT_0x27
00082a ceea      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120008:
00082b d592      	RCALL __LOADLOCR6
00082c 9661      	ADIW R28,17
00082d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
00082e d39d      	RCALL SUBOPT_0x40
00082f f014      	BRLT _0x2060003
000830 d2f8      	RCALL SUBOPT_0x1B
000831 c226      	RJMP _0x2120003
                 _0x2060003:
000832 d39e      	RCALL SUBOPT_0x41
000833 35a4      	CPI  R26,LOW(0x54)
000834 e0e0      	LDI  R30,HIGH(0x54)
000835 07be      	CPC  R27,R30
000836 f01c      	BRLT _0x2060004
000837 e5e3      	LDI  R30,LOW(83)
000838 e0f0      	LDI  R31,HIGH(83)
000839 c21e      	RJMP _0x2120003
                 _0x2060004:
00083a 81e8      	LD   R30,Y
00083b 81f9      	LDD  R31,Y+1
00083c c21b      	RJMP _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
00083d d38e      	RCALL SUBOPT_0x40
00083e f014      	BRLT _0x2060005
00083f d2e9      	RCALL SUBOPT_0x1B
000840 c217      	RJMP _0x2120003
                 _0x2060005:
000841 d38f      	RCALL SUBOPT_0x41
000842 97d0      	SBIW R26,48
000843 f01c      	BRLT _0x2060006
000844 e2ef      	LDI  R30,LOW(47)
000845 e0f0      	LDI  R31,HIGH(47)
000846 c211      	RJMP _0x2120003
                 _0x2060006:
000847 81e8      	LD   R30,Y
000848 81f9      	LDD  R31,Y+1
000849 c20e      	RJMP _0x2120003
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
00084a d26d      	RCALL SUBOPT_0x0
00084b 9723      	SBIW R28,3
00084c d387      	RCALL SUBOPT_0x42
00084d 018f      	MOVW R16,R30
00084e 2e00      	MOV  R0,R16
00084f 2a01      	OR   R0,R17
000850 f411      	BRNE _0x206000B
000851 d2d7      	RCALL SUBOPT_0x1B
000852 c04e      	RJMP _0x2120007
                 _0x206000B:
000853 d386      	RCALL SUBOPT_0x43
000854 820f      	STD  Y+7,R0
000855 d384      	RCALL SUBOPT_0x43
000856 820e      	STD  Y+6,R0
000857 d382      	RCALL SUBOPT_0x43
000858 8608      	STD  Y+8,R0
000859 85eb      	LDD  R30,Y+11
00085a 85a8      	LDD  R26,Y+8
00085b 17ea      	CP   R30,R26
00085c f410      	BRSH _0x206000C
00085d d2cb      	RCALL SUBOPT_0x1B
00085e c042      	RJMP _0x2120007
                 _0x206000C:
00085f 01f8      	MOVW R30,R16
                +
000860 5f0f     +SUBI R16 , LOW ( - 1 )
000861 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000862 9154      	LPM  R21,Z
000863 85a8      	LDD  R26,Y+8
000864 27bb      	CLR  R27
000865 27ee      	CLR  R30
000866 0fa5      	ADD  R26,R21
000867 1fbe      	ADC  R27,R30
000868 85eb      	LDD  R30,Y+11
000869 e0f0      	LDI  R31,0
00086a 17ea      	CP   R30,R26
00086b 07fb      	CPC  R31,R27
00086c f010      	BRLO _0x206000D
00086d d2bb      	RCALL SUBOPT_0x1B
00086e c032      	RJMP _0x2120007
                 _0x206000D:
00086f 81ee      	LDD  R30,Y+6
000870 d2f5      	RCALL SUBOPT_0x2B
000871 2f4e      	MOV  R20,R30
000872 81ee      	LDD  R30,Y+6
000873 70e7      	ANDI R30,LOW(0x7)
000874 f009      	BREQ _0x206000E
000875 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
000876 81ef      	LDD  R30,Y+7
000877 30e0      	CPI  R30,0
000878 f071      	BREQ _0x206000F
000879 d24a      	RCALL SUBOPT_0x4
00087a 85a8      	LDD  R26,Y+8
00087b 85eb      	LDD  R30,Y+11
00087c 1bea      	SUB  R30,R26
00087d e0f0      	LDI  R31,0
00087e 01df      	MOVW R26,R30
00087f 81ef      	LDD  R30,Y+7
000880 d306      	RCALL SUBOPT_0x35
000881 01df      	MOVW R26,R30
000882 2fe4      	MOV  R30,R20
000883 d303      	RCALL SUBOPT_0x35
000884 0fe0      	ADD  R30,R16
000885 1ff1      	ADC  R31,R17
000886 c01a      	RJMP _0x2120007
                 _0x206000F:
000887 0198      	MOVW R18,R16
000888 2fe5      	MOV  R30,R21
000889 e0f0      	LDI  R31,0
                +
00088a 0f0e     +ADD R16 , R30
00088b 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
00088c 85a8      	LDD  R26,Y+8
00088d 5faf      	SUBI R26,-LOW(1)
00088e 87a8      	STD  Y+8,R26
00088f 50a1      	SUBI R26,LOW(1)
000890 85eb      	LDD  R30,Y+11
000891 17ae      	CP   R26,R30
000892 f450      	BRSH _0x2060012
000893 01f9      	MOVW R30,R18
                +
000894 5f2f     +SUBI R18 , LOW ( - 1 )
000895 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000896 91a4      	LPM  R26,Z
000897 e0b0      	LDI  R27,0
000898 2fe4      	MOV  R30,R20
000899 d2ed      	RCALL SUBOPT_0x35
                +
00089a 0f0e     +ADD R16 , R30
00089b 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00089c cfef      	RJMP _0x2060010
                 _0x2060012:
00089d 01f9      	MOVW R30,R18
00089e 91e4      	LPM  R30,Z
00089f d224      	RCALL SUBOPT_0x4
0008a0 01f8      	MOVW R30,R16
                 _0x2120007:
0008a1 d51c      	RCALL __LOADLOCR6
0008a2 962c      	ADIW R28,12
0008a3 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
0008a4 e0e0      	LDI  R30,LOW(0)
                +
0008a5 93e0 0193+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0008a7 91a0 0194+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0008a9 27bb      	CLR  R27
0008aa d334      	RCALL SUBOPT_0x44
0008ab d2d7      	RCALL SUBOPT_0x34
                +
0008ac 91e0 0198+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0008ae d2d4      	RCALL SUBOPT_0x34
0008af df8d      	RCALL _glcd_clipy
                +
0008b0 93e0 0194+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0008b2 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0008b3 93aa      	ST   -Y,R26
0008b4 9721      	SBIW R28,1
0008b5 d31e      	RCALL SUBOPT_0x42
0008b6 9730      	SBIW R30,0
0008b7 f409      	BRNE PC+2
0008b8 c04c      	RJMP _0x206001F
0008b9 81af      	LDD  R26,Y+7
0008ba 30aa      	CPI  R26,LOW(0xA)
0008bb f409      	BRNE _0x2060020
0008bc c046      	RJMP _0x2060021
                 _0x2060020:
0008bd 81ef      	LDD  R30,Y+7
0008be 93ea      	ST   -Y,R30
0008bf 01de      	MOVW R26,R28
0008c0 9617      	ADIW R26,7
0008c1 df88      	RCALL _glcd_getcharw_G103
0008c2 01af      	MOVW R20,R30
0008c3 9730      	SBIW R30,0
0008c4 f409      	BRNE _0x2060022
0008c5 c041      	RJMP _0x2120006
                 _0x2060022:
                +
0008c6 91e0 0197+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0008c8 81ae      	LDD  R26,Y+6
0008c9 0fea      	ADD  R30,R26
0008ca 2f3e      	MOV  R19,R30
                +
0008cb 91a0 0193+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0008cd 27bb      	CLR  R27
0008ce d29b      	RCALL SUBOPT_0x2C
0008cf 018f      	MOVW R16,R30
                +
0008d0 3505     +CPI R16 , LOW ( 85 )
0008d1 e0e0     +LDI R30 , HIGH ( 85 )
0008d2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
0008d3 f018      	BRLO _0x2060023
0008d4 2f03      	MOV  R16,R19
0008d5 2711      	CLR  R17
0008d6 dfcd      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
0008d7 91e0 0193+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008d9 d30c      	RCALL SUBOPT_0x45
0008da 85e8      	LDD  R30,Y+8
0008db 93ea      	ST   -Y,R30
0008dc d302      	RCALL SUBOPT_0x44
0008dd 93ea      	ST   -Y,R30
0008de e0e1      	LDI  R30,LOW(1)
0008df 93ea      	ST   -Y,R30
0008e0 935a      	ST   -Y,R21
0008e1 934a      	ST   -Y,R20
0008e2 e0a7      	LDI  R26,LOW(7)
0008e3 ddb0      	RCALL _glcd_block
                +
0008e4 91e0 0193+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008e6 81ae      	LDD  R26,Y+6
0008e7 0fea      	ADD  R30,R26
0008e8 d2fd      	RCALL SUBOPT_0x45
                +
0008e9 91e0 0197+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0008eb 93ea      	ST   -Y,R30
0008ec d2f2      	RCALL SUBOPT_0x44
0008ed 93ea      	ST   -Y,R30
0008ee d1e1      	RCALL SUBOPT_0x7
0008ef d2fb      	RCALL SUBOPT_0x46
                +
0008f0 91e0 0193+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0008f2 93ea      	ST   -Y,R30
                +
0008f3 91a0 0194+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0008f5 d2e9      	RCALL SUBOPT_0x44
0008f6 0fea      	ADD  R30,R26
0008f7 93ea      	ST   -Y,R30
0008f8 933a      	ST   -Y,R19
                +
0008f9 91e0 0198+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0008fb 93ea      	ST   -Y,R30
0008fc d1d3      	RCALL SUBOPT_0x7
0008fd d2ed      	RCALL SUBOPT_0x46
0008fe e5e4      	LDI  R30,LOW(84)
0008ff e0f0      	LDI  R31,HIGH(84)
000900 17e0      	CP   R30,R16
000901 07f1      	CPC  R31,R17
000902 f411      	BRNE _0x2060024
                 _0x2060021:
000903 dfa0      	RCALL _glcd_new_line_G103
000904 c002      	RJMP _0x2120006
                 _0x2060024:
                 _0x206001F:
                +
000905 9300 0193+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120006:
000907 d4b6      	RCALL __LOADLOCR6
000908 9628      	ADIW R28,8
000909 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
00090a d1ad      	RCALL SUBOPT_0x0
00090b 931a      	ST   -Y,R17
                 _0x206002E:
00090c 81a9      	LDD  R26,Y+1
00090d 81ba      	LDD  R27,Y+1+1
00090e 91ed      	LD   R30,X+
00090f 83a9      	STD  Y+1,R26
000910 83ba      	STD  Y+1+1,R27
000911 2f1e      	MOV  R17,R30
000912 30e0      	CPI  R30,0
000913 f019      	BREQ _0x2060030
000914 2fa1      	MOV  R26,R17
000915 df9d      	RCALL _glcd_putchar
000916 cff5      	RJMP _0x206002E
                 _0x2060030:
000917 8118      	LDD  R17,Y+0
000918 c180      	RJMP _0x2120002
                 ; .FEND
                 _glcd_putpixelm_G103:
                 ; .FSTART _glcd_putpixelm_G103
000919 93aa      	ST   -Y,R26
00091a 81ea      	LDD  R30,Y+2
00091b 93ea      	ST   -Y,R30
00091c 81ea      	LDD  R30,Y+2
00091d 93ea      	ST   -Y,R30
                +
00091e 91e0 019a+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000920 81aa      	LDD  R26,Y+2
000921 23ea      	AND  R30,R26
000922 f019      	BREQ _0x206003E
000923 91e0 0191 	LDS  R30,_glcd_state
000925 c002      	RJMP _0x206003F
                 _0x206003E:
                +
000926 91e0 0192+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x206003F:
000928 2fae      	MOV  R26,R30
000929 dd13      	RCALL _glcd_putpixel
00092a 81e8      	LD   R30,Y
00092b 0fee      	LSL  R30
00092c 83e8      	ST   Y,R30
00092d 30e0      	CPI  R30,0
00092e f411      	BRNE _0x2060041
00092f e0e1      	LDI  R30,LOW(1)
000930 83e8      	ST   Y,R30
                 _0x2060041:
000931 81e8      	LD   R30,Y
000932 c166      	RJMP _0x2120002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000933 93aa      	ST   -Y,R26
000934 81a9      	LDD  R26,Y+1
000935 27bb      	CLR  R27
000936 def7      	RCALL _glcd_clipx
                +
000937 93e0 0193+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000939 81a8      	LD   R26,Y
00093a 27bb      	CLR  R27
00093b df01      	RCALL _glcd_clipy
                +
00093c 93e0 0194+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00093e c119      	RJMP _0x2120003
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
00093f 93aa      	ST   -Y,R26
000940 972b      	SBIW R28,11
000941 d475      	RCALL __SAVELOCR6
000942 89ac      	LDD  R26,Y+20
000943 27bb      	CLR  R27
000944 dee9      	RCALL _glcd_clipx
000945 8bec      	STD  Y+20,R30
000946 89aa      	LDD  R26,Y+18
000947 27bb      	CLR  R27
000948 dee5      	RCALL _glcd_clipx
000949 8bea      	STD  Y+18,R30
00094a 89ab      	LDD  R26,Y+19
00094b 27bb      	CLR  R27
00094c def0      	RCALL _glcd_clipy
00094d 8beb      	STD  Y+19,R30
00094e 89a9      	LDD  R26,Y+17
00094f 27bb      	CLR  R27
000950 deec      	RCALL _glcd_clipy
000951 8be9      	STD  Y+17,R30
000952 89ea      	LDD  R30,Y+18
                +
000953 93e0 0193+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000955 89e9      	LDD  R30,Y+17
                +
000956 93e0 0194+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000958 e0e1      	LDI  R30,LOW(1)
000959 87e8      	STD  Y+8,R30
00095a 89e9      	LDD  R30,Y+17
00095b 89ab      	LDD  R26,Y+19
00095c 17ea      	CP   R30,R26
00095d f561      	BRNE _0x2060042
00095e 891c      	LDD  R17,Y+20
00095f 89aa      	LDD  R26,Y+18
000960 171a      	CP   R17,R26
000961 f431      	BRNE _0x2060043
000962 931a      	ST   -Y,R17
000963 89ec      	LDD  R30,Y+20
000964 93ea      	ST   -Y,R30
000965 e0a1      	LDI  R26,LOW(1)
000966 dfb2      	RCALL _glcd_putpixelm_G103
000967 c0bf      	RJMP _0x2120005
                 _0x2060043:
000968 89aa      	LDD  R26,Y+18
000969 171a      	CP   R17,R26
00096a f430      	BRSH _0x2060044
00096b 89ea      	LDD  R30,Y+18
00096c 1be1      	SUB  R30,R17
00096d 2f0e      	MOV  R16,R30
                +
00096e e041     +LDI R20 , LOW ( 1 )
00096f e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000970 c006      	RJMP _0x2060045
                 _0x2060044:
000971 89aa      	LDD  R26,Y+18
000972 2fe1      	MOV  R30,R17
000973 1bea      	SUB  R30,R26
000974 2f0e      	MOV  R16,R30
                +
000975 ef4f     +LDI R20 , LOW ( - 1 )
000976 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2060045:
                 _0x2060047:
000977 893b      	LDD  R19,Y+19
000978 e0e0      	LDI  R30,LOW(0)
000979 83ee      	STD  Y+6,R30
                 _0x2060049:
00097a d274      	RCALL SUBOPT_0x47
00097b f430      	BRSH _0x206004B
00097c d27a      	RCALL SUBOPT_0x48
00097d 9533      	INC  R19
00097e 85aa      	LDD  R26,Y+10
00097f df99      	RCALL _glcd_putpixelm_G103
000980 83ef      	STD  Y+7,R30
000981 cff8      	RJMP _0x2060049
                 _0x206004B:
000982 81ef      	LDD  R30,Y+7
000983 87e8      	STD  Y+8,R30
000984 0f14      	ADD  R17,R20
000985 2fe0      	MOV  R30,R16
000986 5001      	SUBI R16,1
000987 30e0      	CPI  R30,0
000988 f771      	BRNE _0x2060047
000989 c09d      	RJMP _0x206004C
                 _0x2060042:
00098a 89ea      	LDD  R30,Y+18
00098b 89ac      	LDD  R26,Y+20
00098c 17ea      	CP   R30,R26
00098d f531      	BRNE _0x206004D
00098e 893b      	LDD  R19,Y+19
00098f 89a9      	LDD  R26,Y+17
000990 173a      	CP   R19,R26
000991 f428      	BRSH _0x206004E
000992 89e9      	LDD  R30,Y+17
000993 1be3      	SUB  R30,R19
000994 2f2e      	MOV  R18,R30
000995 d15b      	RCALL SUBOPT_0xF
000996 c006      	RJMP _0x206011B
                 _0x206004E:
000997 89a9      	LDD  R26,Y+17
000998 2fe3      	MOV  R30,R19
000999 1bea      	SUB  R30,R26
00099a 2f2e      	MOV  R18,R30
00099b efef      	LDI  R30,LOW(65535)
00099c efff      	LDI  R31,HIGH(65535)
                 _0x206011B:
00099d 87ed      	STD  Y+13,R30
00099e 87fe      	STD  Y+13+1,R31
                 _0x2060051:
00099f 891c      	LDD  R17,Y+20
0009a0 e0e0      	LDI  R30,LOW(0)
0009a1 83ee      	STD  Y+6,R30
                 _0x2060053:
0009a2 d24c      	RCALL SUBOPT_0x47
0009a3 f438      	BRSH _0x2060055
0009a4 931a      	ST   -Y,R17
0009a5 9513      	INC  R17
0009a6 933a      	ST   -Y,R19
0009a7 85aa      	LDD  R26,Y+10
0009a8 df70      	RCALL _glcd_putpixelm_G103
0009a9 83ef      	STD  Y+7,R30
0009aa cff7      	RJMP _0x2060053
                 _0x2060055:
0009ab 81ef      	LDD  R30,Y+7
0009ac 87e8      	STD  Y+8,R30
0009ad 85ed      	LDD  R30,Y+13
0009ae 0f3e      	ADD  R19,R30
0009af 2fe2      	MOV  R30,R18
0009b0 5021      	SUBI R18,1
0009b1 30e0      	CPI  R30,0
0009b2 f761      	BRNE _0x2060051
0009b3 c073      	RJMP _0x2060056
                 _0x206004D:
0009b4 e0e0      	LDI  R30,LOW(0)
0009b5 83ee      	STD  Y+6,R30
                 _0x2060057:
0009b6 d238      	RCALL SUBOPT_0x47
0009b7 f008      	BRLO PC+2
0009b8 c06e      	RJMP _0x2060059
0009b9 891c      	LDD  R17,Y+20
0009ba 893b      	LDD  R19,Y+19
0009bb e0e1      	LDI  R30,LOW(1)
0009bc 2f2e      	MOV  R18,R30
0009bd 2f0e      	MOV  R16,R30
0009be 89aa      	LDD  R26,Y+18
0009bf 27bb      	CLR  R27
0009c0 89ec      	LDD  R30,Y+20
0009c1 e0f0      	LDI  R31,0
0009c2 1bae      	SUB  R26,R30
0009c3 0bbf      	SBC  R27,R31
0009c4 01ad      	MOVW R20,R26
0009c5 2355      	TST  R21
0009c6 f422      	BRPL _0x206005A
0009c7 ef0f      	LDI  R16,LOW(255)
0009c8 01fa      	MOVW R30,R20
0009c9 d32b      	RCALL __ANEGW1
0009ca 01af      	MOVW R20,R30
                 _0x206005A:
0009cb 01fa      	MOVW R30,R20
0009cc 0fee      	LSL  R30
0009cd 1fff      	ROL  R31
0009ce 87ef      	STD  Y+15,R30
0009cf 8bf8      	STD  Y+15+1,R31
0009d0 89a9      	LDD  R26,Y+17
0009d1 27bb      	CLR  R27
0009d2 89eb      	LDD  R30,Y+19
0009d3 e0f0      	LDI  R31,0
0009d4 1bae      	SUB  R26,R30
0009d5 0bbf      	SBC  R27,R31
0009d6 87ad      	STD  Y+13,R26
0009d7 87be      	STD  Y+13+1,R27
0009d8 85ae      	LDD  R26,Y+14
0009d9 23aa      	TST  R26
0009da f432      	BRPL _0x206005B
0009db ef2f      	LDI  R18,LOW(255)
0009dc 85ed      	LDD  R30,Y+13
0009dd 85fe      	LDD  R31,Y+13+1
0009de d316      	RCALL __ANEGW1
0009df 87ed      	STD  Y+13,R30
0009e0 87fe      	STD  Y+13+1,R31
                 _0x206005B:
0009e1 85ed      	LDD  R30,Y+13
0009e2 85fe      	LDD  R31,Y+13+1
0009e3 0fee      	LSL  R30
0009e4 1fff      	ROL  R31
0009e5 87eb      	STD  Y+11,R30
0009e6 87fc      	STD  Y+11+1,R31
0009e7 d20f      	RCALL SUBOPT_0x48
0009e8 e0a1      	LDI  R26,LOW(1)
0009e9 df2f      	RCALL _glcd_putpixelm_G103
0009ea 87e8      	STD  Y+8,R30
0009eb e0e0      	LDI  R30,LOW(0)
0009ec 87e9      	STD  Y+9,R30
0009ed 87ea      	STD  Y+9+1,R30
0009ee 85ad      	LDD  R26,Y+13
0009ef 85be      	LDD  R27,Y+13+1
0009f0 174a      	CP   R20,R26
0009f1 075b      	CPC  R21,R27
0009f2 f0b4      	BRLT _0x206005C
                 _0x206005E:
0009f3 0f10      	ADD  R17,R16
0009f4 85eb      	LDD  R30,Y+11
0009f5 85fc      	LDD  R31,Y+11+1
0009f6 d203      	RCALL SUBOPT_0x49
0009f7 d0c9      	RCALL SUBOPT_0x3
0009f8 d204      	RCALL SUBOPT_0x4A
0009f9 d200      	RCALL SUBOPT_0x49
0009fa 174a      	CP   R20,R26
0009fb 075b      	CPC  R21,R27
0009fc f424      	BRGE _0x2060060
0009fd 0f32      	ADD  R19,R18
0009fe 85af      	LDD  R26,Y+15
0009ff 89b8      	LDD  R27,Y+15+1
000a00 d1ff      	RCALL SUBOPT_0x4B
                 _0x2060060:
000a01 d1f5      	RCALL SUBOPT_0x48
000a02 85aa      	LDD  R26,Y+10
000a03 df15      	RCALL _glcd_putpixelm_G103
000a04 87e8      	STD  Y+8,R30
000a05 89ea      	LDD  R30,Y+18
000a06 17e1      	CP   R30,R17
000a07 f759      	BRNE _0x206005E
000a08 c017      	RJMP _0x2060061
                 _0x206005C:
                 _0x2060063:
000a09 0f32      	ADD  R19,R18
000a0a 85ef      	LDD  R30,Y+15
000a0b 89f8      	LDD  R31,Y+15+1
000a0c d1ed      	RCALL SUBOPT_0x49
000a0d d0b3      	RCALL SUBOPT_0x3
000a0e d1ee      	RCALL SUBOPT_0x4A
000a0f 85ed      	LDD  R30,Y+13
000a10 85fe      	LDD  R31,Y+13+1
000a11 d1e8      	RCALL SUBOPT_0x49
000a12 17ea      	CP   R30,R26
000a13 07fb      	CPC  R31,R27
000a14 f424      	BRGE _0x2060065
000a15 0f10      	ADD  R17,R16
000a16 85ab      	LDD  R26,Y+11
000a17 85bc      	LDD  R27,Y+11+1
000a18 d1e7      	RCALL SUBOPT_0x4B
                 _0x2060065:
000a19 d1dd      	RCALL SUBOPT_0x48
000a1a 85aa      	LDD  R26,Y+10
000a1b defd      	RCALL _glcd_putpixelm_G103
000a1c 87e8      	STD  Y+8,R30
000a1d 89e9      	LDD  R30,Y+17
000a1e 17e3      	CP   R30,R19
000a1f f749      	BRNE _0x2060063
                 _0x2060061:
000a20 89eb      	LDD  R30,Y+19
000a21 5fef      	SUBI R30,-LOW(1)
000a22 8beb      	STD  Y+19,R30
000a23 89e9      	LDD  R30,Y+17
000a24 5fef      	SUBI R30,-LOW(1)
000a25 8be9      	STD  Y+17,R30
000a26 cf8f      	RJMP _0x2060057
                 _0x2060059:
                 _0x2060056:
                 _0x206004C:
                 _0x2120005:
000a27 d396      	RCALL __LOADLOCR6
000a28 9665      	ADIW R28,21
000a29 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000a2a d08d      	RCALL SUBOPT_0x0
000a2b 81b9          ldd  r27,y+1
000a2c 81a8          ld   r26,y
000a2d 9610          adiw r26,0
000a2e f031          breq memset1
000a2f 81fc          ldd  r31,y+4
000a30 81eb          ldd  r30,y+3
000a31 816a          ldd  r22,y+2
                 memset0:
000a32 9361          st   z+,r22
000a33 9711          sbiw r26,1
000a34 f7e9          brne memset0
                 memset1:
000a35 81eb          ldd  r30,y+3
000a36 81fc          ldd  r31,y+4
                 _0x2120004:
000a37 9625      	ADIW R28,5
000a38 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000a39 d07e      	RCALL SUBOPT_0x0
000a3a 91a9          ld   r26,y+
000a3b 91b9          ld   r27,y+
000a3c 27ee          clr  r30
000a3d 27ff          clr  r31
                 strlen0:
000a3e 916d          ld   r22,x+
000a3f 2366          tst  r22
000a40 f011          breq strlen1
000a41 9631          adiw r30,1
000a42 cffb          rjmp strlen0
                 strlen1:
000a43 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000a44 d073      	RCALL SUBOPT_0x0
000a45 27aa          clr  r26
000a46 27bb          clr  r27
000a47 91e9          ld   r30,y+
000a48 91f9          ld   r31,y+
                 strlenf0:
000a49 9005      	lpm  r0,z+
000a4a 2000          tst  r0
000a4b f011          breq strlenf1
000a4c 9611          adiw r26,1
000a4d cffb          rjmp strlenf0
                 strlenf1:
000a4e 01fd          movw r30,r26
000a4f 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000a50 93aa      	ST   -Y,R26
000a51 81e8      	LD   R30,Y
000a52 e0f0      	LDI  R31,0
000a53 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
000a54 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000a55 91a4      	LPM  R26,Z
000a56 81e9      	LDD  R30,Y+1
000a57 d2a9      	RCALL __LSLB12
                 _0x2120003:
000a58 9622      	ADIW R28,2
000a59 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000a5a d093      	RCALL SUBOPT_0xE
000a5b 81e9      	LDD  R30,Y+1
000a5c 30e7      	CPI  R30,LOW(0x7)
000a5d f011      	BREQ _0x2100007
000a5e 30ea      	CPI  R30,LOW(0xA)
000a5f f419      	BRNE _0x2100008
                 _0x2100007:
000a60 9110 0191 	LDS  R17,_glcd_state
000a62 c009      	RJMP _0x2100009
                 _0x2100008:
000a63 30e9      	CPI  R30,LOW(0x9)
000a64 f419      	BRNE _0x210000B
                +
000a65 9110 0192+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000a67 c004      	RJMP _0x2100009
                 _0x210000B:
000a68 30e8      	CPI  R30,LOW(0x8)
000a69 f4a1      	BRNE _0x2100005
                +
000a6a 9110 01a1+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000a6c 91e0 0192+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000a6e 30e0      	CPI  R30,0
000a6f f049      	BREQ _0x210000E
000a70 3010      	CPI  R17,0
000a71 f019      	BREQ _0x210000F
000a72 efef      	LDI  R30,LOW(255)
000a73 8118      	LDD  R17,Y+0
000a74 c024      	RJMP _0x2120002
                 _0x210000F:
000a75 81ea      	LDD  R30,Y+2
000a76 95e0      	COM  R30
000a77 8118      	LDD  R17,Y+0
000a78 c020      	RJMP _0x2120002
                 _0x210000E:
000a79 3010      	CPI  R17,0
000a7a f419      	BRNE _0x2100011
000a7b e0e0      	LDI  R30,LOW(0)
000a7c 8118      	LDD  R17,Y+0
000a7d c01b      	RJMP _0x2120002
                 _0x2100011:
                 _0x2100005:
000a7e 81ea      	LDD  R30,Y+2
000a7f 8118      	LDD  R17,Y+0
000a80 c018      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000a81 d036      	RCALL SUBOPT_0x0
000a82 81ea      	LDD  R30,Y+2
000a83 30e1      	CPI  R30,LOW(0x1)
000a84 f421      	BRNE _0x2100015
000a85 81e8      	LD   R30,Y
000a86 81f9      	LDD  R31,Y+1
000a87 91e4      	LPM  R30,Z
000a88 c010      	RJMP _0x2120002
                 _0x2100015:
000a89 30e2      	CPI  R30,LOW(0x2)
000a8a f419      	BRNE _0x2100016
000a8b d145      	RCALL SUBOPT_0x41
000a8c d309      	RCALL __EEPROMRDB
000a8d c00b      	RJMP _0x2120002
                 _0x2100016:
000a8e 30e3      	CPI  R30,LOW(0x3)
000a8f f439      	BRNE _0x2100018
000a90 d140      	RCALL SUBOPT_0x41
                +
000a91 91e0 01aa+LDS R30 , _glcd_state + ( 25 )
000a93 91f0 01ab+LDS R31 , _glcd_state + ( 25 ) + 1
000a95 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000a96 c002      	RJMP _0x2120002
                 _0x2100018:
000a97 d139      	RCALL SUBOPT_0x41
000a98 91ec      	LD   R30,X
                 _0x2120002:
000a99 9623      	ADIW R28,3
000a9a 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000a9b 93aa      	ST   -Y,R26
000a9c 81eb      	LDD  R30,Y+3
000a9d 30e0      	CPI  R30,0
000a9e f429      	BRNE _0x210001C
000a9f 81e8      	LD   R30,Y
000aa0 81a9      	LDD  R26,Y+1
000aa1 81ba      	LDD  R27,Y+1+1
000aa2 93ec      	ST   X,R30
000aa3 c012      	RJMP _0x210001B
                 _0x210001C:
000aa4 30e2      	CPI  R30,LOW(0x2)
000aa5 f429      	BRNE _0x210001D
000aa6 81e8      	LD   R30,Y
000aa7 81a9      	LDD  R26,Y+1
000aa8 81ba      	LDD  R27,Y+1+1
000aa9 d2f8      	RCALL __EEPROMWRB
000aaa c00b      	RJMP _0x210001B
                 _0x210001D:
000aab 30e3      	CPI  R30,LOW(0x3)
000aac f449      	BRNE _0x210001B
000aad 81e9      	LDD  R30,Y+1
000aae 81fa      	LDD  R31,Y+1+1
000aaf d056      	RCALL SUBOPT_0x15
000ab0 81aa      	LDD  R26,Y+2
                +
000ab1 91e0 01ac+LDS R30 , _glcd_state + ( 27 )
000ab3 91f0 01ad+LDS R31 , _glcd_state + ( 27 ) + 1
000ab5 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
                 _0x2120001:
000ab6 9624      	ADIW R28,4
000ab7 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
000191           	.BYTE 0x1D
                 _buff:
0001ae           	.BYTE 0x14
                 _station_receive:
0001c2           	.BYTE 0xA
                 _tay_cam_receive:
0001cc           	.BYTE 0x8
                 _data_receive:
0001d4           	.BYTE 0x12
                 _data_send:
0001e6           	.BYTE 0xA
                 _change:
0001f0           	.BYTE 0x2
                 _dem:
0001f2           	.BYTE 0x2
                 _distance:
0001f4           	.BYTE 0x4
                 __seed_G100:
0001f8           	.BYTE 0x4
                 _gfx_addr_G102:
0001fc           	.BYTE 0x2
                 _gfx_buffer_G102:
0001fe           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
000ab8 93ba      	ST   -Y,R27
000ab9 93aa      	ST   -Y,R26
000aba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
                +
000abb ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
000abc 958a     +DEC R24
000abd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
000abe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000abf e0b0      	LDI  R27,0
000ac0 c144      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000ac1 0fea      	ADD  R30,R26
000ac2 1ffb      	ADC  R31,R27
000ac3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000ac4 85a9      	LDD  R26,Y+9
000ac5 85ba      	LDD  R27,Y+9+1
000ac6 93ec      	ST   X,R30
000ac7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:20 WORDS
                 SUBOPT_0x5:
                +
000ac8 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000ac9 958a     +DEC R24
000aca f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000acb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000acc e0e7      	LDI  R30,LOW(7)
000acd 93ea      	ST   -Y,R30
000ace e7ae      	LDI  R26,LOW(126)
000acf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x7:
000ad0 e0e0      	LDI  R30,LOW(0)
000ad1 93ea      	ST   -Y,R30
000ad2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
                +
000ad3 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000ad4 958a     +DEC R24
000ad5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000ad6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
000ad7 81e9      	LDD  R30,Y+1
000ad8 0fee      	LSL  R30
000ad9 83e9      	STD  Y+1,R30
000ada 9a92      	SBI  0x12,2
000adb dff7      	RCALL SUBOPT_0x8
000adc e0e0      	LDI  R30,0
000add 9981      	SBIC 0x10,1
000ade e0e1      	LDI  R30,1
000adf 81a9      	LDD  R26,Y+1
000ae0 2bea      	OR   R30,R26
000ae1 83e9      	STD  Y+1,R30
000ae2 9892      	CBI  0x12,2
000ae3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
000ae4 93aa      	ST   -Y,R26
000ae5 9894      	CBI  0x12,4
000ae6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xB:
000ae7 81a8      	LD   R26,Y
000ae8 c715      	RJMP _SPI_RW_TX
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xC:
000ae9 9a94      	SBI  0x12,4
000aea cfdd      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000aeb 93ea      	ST   -Y,R30
000aec e0a3      	LDI  R26,LOW(3)
000aed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
000aee 93aa      	ST   -Y,R26
000aef 931a      	ST   -Y,R17
000af0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
000af1 e0e1      	LDI  R30,LOW(1)
000af2 e0f0      	LDI  R31,HIGH(1)
000af3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x10:
000af4 91ed      	LD   R30,X+
000af5 91fd      	LD   R31,X+
000af6 9631      	ADIW R30,1
000af7 93fe      	ST   -X,R31
000af8 93ee      	ST   -X,R30
000af9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000afa e3e0      	LDI  R30,LOW(48)
000afb 93ea      	ST   -Y,R30
000afc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000afd de41      	RCALL _glcd_line
000afe cfd1      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000aff e5e4      	LDI  R30,LOW(84)
000b00 93ea      	ST   -Y,R30
000b01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
000b02 de07      	RCALL _glcd_outtext
000b03 e0e4      	LDI  R30,LOW(4)
000b04 93ea      	ST   -Y,R30
000b05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x15:
000b06 93fa      	ST   -Y,R31
000b07 93ea      	ST   -Y,R30
000b08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x16:
000b09 eaee      	LDI  R30,LOW(_buff)
000b0a e0f1      	LDI  R31,HIGH(_buff)
000b0b cffa      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
000b0c e0f0      	LDI  R31,0
000b0d 2766      	CLR  R22
000b0e 2777      	CLR  R23
000b0f d279      	RCALL __PUTPARD1
000b10 e084      	LDI  R24,4
000b11 da29      	RCALL _sprintf
000b12 9628      	ADIW R28,8
000b13 e3e2      	LDI  R30,LOW(50)
000b14 93ea      	ST   -Y,R30
000b15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000b16 de1c      	RCALL _glcd_moveto
000b17 eaae      	LDI  R26,LOW(_buff)
000b18 e0b1      	LDI  R27,HIGH(_buff)
000b19 cdf0      	RJMP _glcd_outtext
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x19:
000b1a 91e0 01f4 	LDS  R30,_distance
000b1c 91f0 01f5 	LDS  R31,_distance+1
000b1e 9160 01f6 	LDS  R22,_distance+2
000b20 9170 01f7 	LDS  R23,_distance+3
000b22 d11b      	RCALL __CFD1
000b23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
                +
000b24 93e0 01e8+STS _data_send + ( 2 ) , R30
000b26 93f0 01e9+STS _data_send + ( 2 ) + 1 , R31
                 	__PUTW1MN _data_send,2
000b28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
000b29 e0e0      	LDI  R30,LOW(0)
000b2a e0f0      	LDI  R31,HIGH(0)
000b2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
000b2c 2766      	CLR  R22
000b2d 2777      	CLR  R23
000b2e 01df      	MOVW R26,R30
000b2f 01cb      	MOVW R24,R22
000b30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
000b31 81aa      	LDD  R26,Y+2
000b32 81bb      	LDD  R27,Y+2+1
000b33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
000b34 9614      	ADIW R26,4
000b35 d24b      	RCALL __GETW1P
000b36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1F:
000b37 932a      	ST   -Y,R18
000b38 85ad      	LDD  R26,Y+13
000b39 85be      	LDD  R27,Y+13+1
000b3a 85ef      	LDD  R30,Y+15
000b3b 89f8      	LDD  R31,Y+15+1
000b3c 9509      	ICALL
000b3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
000b3e 89e8      	LDD  R30,Y+16
000b3f 89f9      	LDD  R31,Y+16+1
000b40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x21:
000b41 9734      	SBIW R30,4
000b42 8be8      	STD  Y+16,R30
000b43 8bf9      	STD  Y+16+1,R31
000b44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x22:
000b45 85ad      	LDD  R26,Y+13
000b46 85be      	LDD  R27,Y+13+1
000b47 85ef      	LDD  R30,Y+15
000b48 89f8      	LDD  R31,Y+15+1
000b49 9509      	ICALL
000b4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
000b4b dff2      	RCALL SUBOPT_0x20
000b4c cff4      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x24:
000b4d 89a8      	LDD  R26,Y+16
000b4e 89b9      	LDD  R27,Y+16+1
000b4f cfe4      	RJMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000b50 83ee      	STD  Y+6,R30
000b51 83ff      	STD  Y+6+1,R31
000b52 81ae      	LDD  R26,Y+6
000b53 81bf      	LDD  R27,Y+6+1
000b54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26:
000b55 83ee      	STD  Y+6,R30
000b56 83ff      	STD  Y+6+1,R31
000b57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x27:
000b58 87ea      	STD  Y+10,R30
000b59 87fb      	STD  Y+10+1,R31
000b5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000b5b 85ea      	LDD  R30,Y+10
000b5c 85fb      	LDD  R31,Y+10+1
000b5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000b5e 85aa      	LDD  R26,Y+10
000b5f 85bb      	LDD  R27,Y+10+1
000b60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000b61 01de      	MOVW R26,R28
000b62 961c      	ADIW R26,12
000b63 d18d      	RCALL __ADDW2R15
000b64 d21c      	RCALL __GETW1P
000b65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
000b66 95e6      	LSR  R30
000b67 95e6      	LSR  R30
000b68 95e6      	LSR  R30
000b69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2C:
000b6a e0f0      	LDI  R31,0
000b6b cf55      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
000b6c 2fae      	MOV  R26,R30
000b6d ca0e      	RJMP _pcd8544_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2E:
000b6e 50e2      	SUBI R30,LOW(-_gfx_buffer_G102)
000b6f 4ffe      	SBCI R31,HIGH(-_gfx_buffer_G102)
000b70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2F:
000b71 efac      	LDI  R26,LOW(_gfx_addr_G102)
000b72 e0b1      	LDI  R27,HIGH(_gfx_addr_G102)
000b73 cf80      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
000b74 9731      	SBIW R30,1
000b75 cff8      	RJMP SUBOPT_0x2E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
000b76 81ec      	LDD  R30,Y+4
000b77 81fd      	LDD  R31,Y+4+1
000b78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
                +
000b79 93e0 0195+STS _glcd_state + ( 4 ) , R30
000b7b 93f0 0196+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000b7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
                +
000b7e 93e0 01aa+STS _glcd_state + ( 25 ) , R30
000b80 93f0 01ab+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000b82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x34:
000b83 e0f0      	LDI  R31,0
000b84 0fae      	ADD  R26,R30
000b85 1fbf      	ADC  R27,R31
000b86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
000b87 e0f0      	LDI  R31,0
000b88 d18d      	RCALL __MULW12U
000b89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x36:
000b8a 85ec      	LDD  R30,Y+12
000b8b 93ea      	ST   -Y,R30
000b8c 81ef      	LDD  R30,Y+7
000b8d 85f8      	LDD  R31,Y+7+1
000b8e 9631      	ADIW R30,1
000b8f 83ef      	STD  Y+7,R30
000b90 87f8      	STD  Y+7+1,R31
000b91 9731      	SBIW R30,1
000b92 df73      	RCALL SUBOPT_0x15
000b93 e0a0      	LDI  R26,LOW(0)
000b94 cf06      	RJMP _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
000b95 930a      	ST   -Y,R16
000b96 89a8      	LDD  R26,Y+16
000b97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
000b98 5f1f      	SUBI R17,-1
000b99 85ee      	LDD  R30,Y+14
000b9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x39:
000b9b 85ec      	LDD  R30,Y+12
000b9c 93ea      	ST   -Y,R30
000b9d 81ef      	LDD  R30,Y+7
000b9e 85f8      	LDD  R31,Y+7+1
000b9f 9631      	ADIW R30,1
000ba0 83ef      	STD  Y+7,R30
000ba1 87f8      	STD  Y+7+1,R31
000ba2 9731      	SBIW R30,1
000ba3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A:
000ba4 935a      	ST   -Y,R21
000ba5 85aa      	LDD  R26,Y+10
000ba6 ceb3      	RJMP _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3B:
000ba7 930a      	ST   -Y,R16
000ba8 9503      	INC  R16
000ba9 89e8      	LDD  R30,Y+16
000baa 93ea      	ST   -Y,R30
000bab 935a      	ST   -Y,R21
000bac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3C:
000bad 2f5e      	MOV  R21,R30
000bae 85ec      	LDD  R30,Y+12
000baf 93ea      	ST   -Y,R30
000bb0 81af      	LDD  R26,Y+7
000bb1 85b8      	LDD  R27,Y+7+1
000bb2 2788      	CLR  R24
000bb3 2799      	CLR  R25
000bb4 decc      	RCALL _glcd_readmem
000bb5 2e1e      	MOV  R1,R30
000bb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
000bb7 95e0      	COM  R30
000bb8 21e1      	AND  R30,R1
000bb9 2b5e      	OR   R21,R30
000bba cfe0      	RJMP SUBOPT_0x39
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3E:
000bbb 930a      	ST   -Y,R16
000bbc 9503      	INC  R16
000bbd 89e8      	LDD  R30,Y+16
000bbe 93ea      	ST   -Y,R30
000bbf 85ee      	LDD  R30,Y+14
000bc0 93ea      	ST   -Y,R30
000bc1 85e9      	LDD  R30,Y+9
000bc2 85fa      	LDD  R31,Y+9+1
000bc3 9631      	ADIW R30,1
000bc4 87e9      	STD  Y+9,R30
000bc5 87fa      	STD  Y+9+1,R31
000bc6 9731      	SBIW R30,1
000bc7 cf64      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F:
000bc8 93ea      	ST   -Y,R30
000bc9 934a      	ST   -Y,R20
000bca 85ad      	LDD  R26,Y+13
000bcb ca91      	RJMP _pcd8544_wrmasked_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
000bcc deeb      	RCALL SUBOPT_0x0
000bcd 81a8      	LD   R26,Y
000bce 81b9      	LDD  R27,Y+1
000bcf d1e3      	RCALL __CPW02
000bd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x41:
000bd1 81a8      	LD   R26,Y
000bd2 81b9      	LDD  R27,Y+1
000bd3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x42:
000bd4 d1e2      	RCALL __SAVELOCR6
                +
000bd5 91e0 0195+LDS R30 , _glcd_state + ( 4 )
000bd7 91f0 0196+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000bd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x43:
000bda 01f8      	MOVW R30,R16
                +
000bdb 5f0f     +SUBI R16 , LOW ( - 1 )
000bdc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000bdd 9004      	LPM  R0,Z
000bde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x44:
                +
000bdf 91e0 0195+LDS R30 , _glcd_state + ( 4 )
000be1 91f0 0196+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000be3 9631      	ADIW R30,1
000be4 91e4      	LPM  R30,Z
000be5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
000be6 93ea      	ST   -Y,R30
                +
000be7 91e0 0194+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000be9 93ea      	ST   -Y,R30
000bea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000beb df3d      	RCALL SUBOPT_0x1B
000bec df19      	RCALL SUBOPT_0x15
000bed e0a9      	LDI  R26,LOW(9)
000bee caa5      	RJMP _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x47:
000bef 81ae      	LDD  R26,Y+6
000bf0 5faf      	SUBI R26,-LOW(1)
000bf1 83ae      	STD  Y+6,R26
000bf2 50a1      	SUBI R26,LOW(1)
                +
000bf3 91e0 0199+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000bf5 17ae      	CP   R26,R30
000bf6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x48:
000bf7 931a      	ST   -Y,R17
000bf8 933a      	ST   -Y,R19
000bf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x49:
000bfa 85a9      	LDD  R26,Y+9
000bfb 85ba      	LDD  R27,Y+9+1
000bfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
000bfd 87e9      	STD  Y+9,R30
000bfe 87fa      	STD  Y+9+1,R31
000bff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4B:
000c00 85e9      	LDD  R30,Y+9
000c01 85fa      	LDD  R31,Y+9+1
000c02 1bea      	SUB  R30,R26
000c03 0bfb      	SBC  R31,R27
000c04 cff8      	RJMP SUBOPT_0x4A
                 
                 
                 	.CSEG
                 _delay_ms:
000c05 9610      	adiw r26,0
000c06 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000c07 ed80     +LDI R24 , LOW ( 0x7D0 )
000c08 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000c09 9701     +SBIW R24 , 1
000c0a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000c0b 95a8      	wdr
000c0c 9711      	sbiw r26,1
000c0d f7c9      	brne __delay_ms0
                 __delay_ms1:
000c0e 9508      	ret
                 
                 __ROUND_REPACK:
000c0f 2355      	TST  R21
000c10 f442      	BRPL __REPACK
000c11 3850      	CPI  R21,0x80
000c12 f411      	BRNE __ROUND_REPACK0
000c13 ffe0      	SBRS R30,0
000c14 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000c15 9631      	ADIW R30,1
000c16 1f69      	ADC  R22,R25
000c17 1f79      	ADC  R23,R25
000c18 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000c19 e850      	LDI  R21,0x80
000c1a 2757      	EOR  R21,R23
000c1b f411      	BRNE __REPACK0
000c1c 935f      	PUSH R21
000c1d c073      	RJMP __ZERORES
                 __REPACK0:
000c1e 3f5f      	CPI  R21,0xFF
000c1f f031      	BREQ __REPACK1
000c20 0f66      	LSL  R22
000c21 0c00      	LSL  R0
000c22 9557      	ROR  R21
000c23 9567      	ROR  R22
000c24 2f75      	MOV  R23,R21
000c25 9508      	RET
                 __REPACK1:
000c26 935f      	PUSH R21
000c27 2000      	TST  R0
000c28 f00a      	BRMI __REPACK2
000c29 c073      	RJMP __MAXRES
                 __REPACK2:
000c2a c06c      	RJMP __MINRES
                 
                 __UNPACK:
000c2b e850      	LDI  R21,0x80
000c2c 2e19      	MOV  R1,R25
000c2d 2215      	AND  R1,R21
000c2e 0f88      	LSL  R24
000c2f 1f99      	ROL  R25
000c30 2795      	EOR  R25,R21
000c31 0f55      	LSL  R21
000c32 9587      	ROR  R24
                 
                 __UNPACK1:
000c33 e850      	LDI  R21,0x80
000c34 2e07      	MOV  R0,R23
000c35 2205      	AND  R0,R21
000c36 0f66      	LSL  R22
000c37 1f77      	ROL  R23
000c38 2775      	EOR  R23,R21
000c39 0f55      	LSL  R21
000c3a 9567      	ROR  R22
000c3b 9508      	RET
                 
                 __CFD1U:
000c3c 9468      	SET
000c3d c001      	RJMP __CFD1U0
                 __CFD1:
000c3e 94e8      	CLT
                 __CFD1U0:
000c3f 935f      	PUSH R21
000c40 dff2      	RCALL __UNPACK1
000c41 3870      	CPI  R23,0x80
000c42 f018      	BRLO __CFD10
000c43 3f7f      	CPI  R23,0xFF
000c44 f408      	BRCC __CFD10
000c45 c04b      	RJMP __ZERORES
                 __CFD10:
000c46 e156      	LDI  R21,22
000c47 1b57      	SUB  R21,R23
000c48 f4aa      	BRPL __CFD11
000c49 9551      	NEG  R21
000c4a 3058      	CPI  R21,8
000c4b f40e      	BRTC __CFD19
000c4c 3059      	CPI  R21,9
                 __CFD19:
000c4d f030      	BRLO __CFD17
000c4e efef      	SER  R30
000c4f efff      	SER  R31
000c50 ef6f      	SER  R22
000c51 e77f      	LDI  R23,0x7F
000c52 f977      	BLD  R23,7
000c53 c01a      	RJMP __CFD15
                 __CFD17:
000c54 2777      	CLR  R23
000c55 2355      	TST  R21
000c56 f0b9      	BREQ __CFD15
                 __CFD18:
000c57 0fee      	LSL  R30
000c58 1fff      	ROL  R31
000c59 1f66      	ROL  R22
000c5a 1f77      	ROL  R23
000c5b 955a      	DEC  R21
000c5c f7d1      	BRNE __CFD18
000c5d c010      	RJMP __CFD15
                 __CFD11:
000c5e 2777      	CLR  R23
                 __CFD12:
000c5f 3058      	CPI  R21,8
000c60 f028      	BRLO __CFD13
000c61 2fef      	MOV  R30,R31
000c62 2ff6      	MOV  R31,R22
000c63 2f67      	MOV  R22,R23
000c64 5058      	SUBI R21,8
000c65 cff9      	RJMP __CFD12
                 __CFD13:
000c66 2355      	TST  R21
000c67 f031      	BREQ __CFD15
                 __CFD14:
000c68 9576      	LSR  R23
000c69 9567      	ROR  R22
000c6a 95f7      	ROR  R31
000c6b 95e7      	ROR  R30
000c6c 955a      	DEC  R21
000c6d f7d1      	BRNE __CFD14
                 __CFD15:
000c6e 2000      	TST  R0
000c6f f40a      	BRPL __CFD16
000c70 d088      	RCALL __ANEGD1
                 __CFD16:
000c71 915f      	POP  R21
000c72 9508      	RET
                 
                 __CDF1U:
000c73 9468      	SET
000c74 c001      	RJMP __CDF1U0
                 __CDF1:
000c75 94e8      	CLT
                 __CDF1U0:
000c76 9730      	SBIW R30,0
000c77 4060      	SBCI R22,0
000c78 4070      	SBCI R23,0
000c79 f0b1      	BREQ __CDF10
000c7a 2400      	CLR  R0
000c7b f026      	BRTS __CDF11
000c7c 2377      	TST  R23
000c7d f412      	BRPL __CDF11
000c7e 9400      	COM  R0
000c7f d079      	RCALL __ANEGD1
                 __CDF11:
000c80 2e17      	MOV  R1,R23
000c81 e17e      	LDI  R23,30
000c82 2011      	TST  R1
                 __CDF12:
000c83 f032      	BRMI __CDF13
000c84 957a      	DEC  R23
000c85 0fee      	LSL  R30
000c86 1fff      	ROL  R31
000c87 1f66      	ROL  R22
000c88 1c11      	ROL  R1
000c89 cff9      	RJMP __CDF12
                 __CDF13:
000c8a 2fef      	MOV  R30,R31
000c8b 2ff6      	MOV  R31,R22
000c8c 2d61      	MOV  R22,R1
000c8d 935f      	PUSH R21
000c8e df8a      	RCALL __REPACK
000c8f 915f      	POP  R21
                 __CDF10:
000c90 9508      	RET
                 
                 __ZERORES:
000c91 27ee      	CLR  R30
000c92 27ff      	CLR  R31
000c93 2766      	CLR  R22
000c94 2777      	CLR  R23
000c95 915f      	POP  R21
000c96 9508      	RET
                 
                 __MINRES:
000c97 efef      	SER  R30
000c98 efff      	SER  R31
000c99 e76f      	LDI  R22,0x7F
000c9a ef7f      	SER  R23
000c9b 915f      	POP  R21
000c9c 9508      	RET
                 
                 __MAXRES:
000c9d efef      	SER  R30
000c9e efff      	SER  R31
000c9f e76f      	LDI  R22,0x7F
000ca0 e77f      	LDI  R23,0x7F
000ca1 915f      	POP  R21
000ca2 9508      	RET
                 
                 __MULF12:
000ca3 935f      	PUSH R21
000ca4 df86      	RCALL __UNPACK
000ca5 3870      	CPI  R23,0x80
000ca6 f351      	BREQ __ZERORES
000ca7 3890      	CPI  R25,0x80
000ca8 f341      	BREQ __ZERORES
000ca9 2401      	EOR  R0,R1
000caa 9408      	SEC
000cab 1f79      	ADC  R23,R25
000cac f423      	BRVC __MULF124
000cad f31c      	BRLT __ZERORES
                 __MULF125:
000cae 2000      	TST  R0
000caf f33a      	BRMI __MINRES
000cb0 cfec      	RJMP __MAXRES
                 __MULF124:
000cb1 920f      	PUSH R0
000cb2 931f      	PUSH R17
000cb3 932f      	PUSH R18
000cb4 933f      	PUSH R19
000cb5 934f      	PUSH R20
000cb6 2711      	CLR  R17
000cb7 2722      	CLR  R18
000cb8 2799      	CLR  R25
000cb9 9f68      	MUL  R22,R24
000cba 01a0      	MOVW R20,R0
000cbb 9f8f      	MUL  R24,R31
000cbc 2d30      	MOV  R19,R0
000cbd 0d41      	ADD  R20,R1
000cbe 1f59      	ADC  R21,R25
000cbf 9f6b      	MUL  R22,R27
000cc0 0d30      	ADD  R19,R0
000cc1 1d41      	ADC  R20,R1
000cc2 1f59      	ADC  R21,R25
000cc3 9f8e      	MUL  R24,R30
000cc4 d027      	RCALL __MULF126
000cc5 9fbf      	MUL  R27,R31
000cc6 d025      	RCALL __MULF126
000cc7 9f6a      	MUL  R22,R26
000cc8 d023      	RCALL __MULF126
000cc9 9fbe      	MUL  R27,R30
000cca d01d      	RCALL __MULF127
000ccb 9faf      	MUL  R26,R31
000ccc d01b      	RCALL __MULF127
000ccd 9fae      	MUL  R26,R30
000cce 0d11      	ADD  R17,R1
000ccf 1f29      	ADC  R18,R25
000cd0 1f39      	ADC  R19,R25
000cd1 1f49      	ADC  R20,R25
000cd2 1f59      	ADC  R21,R25
000cd3 2fe3      	MOV  R30,R19
000cd4 2ff4      	MOV  R31,R20
000cd5 2f65      	MOV  R22,R21
000cd6 2f52      	MOV  R21,R18
000cd7 914f      	POP  R20
000cd8 913f      	POP  R19
000cd9 912f      	POP  R18
000cda 911f      	POP  R17
000cdb 900f      	POP  R0
000cdc 2366      	TST  R22
000cdd f02a      	BRMI __MULF122
000cde 0f55      	LSL  R21
000cdf 1fee      	ROL  R30
000ce0 1fff      	ROL  R31
000ce1 1f66      	ROL  R22
000ce2 c002      	RJMP __MULF123
                 __MULF122:
000ce3 9573      	INC  R23
000ce4 f24b      	BRVS __MULF125
                 __MULF123:
000ce5 df29      	RCALL __ROUND_REPACK
000ce6 915f      	POP  R21
000ce7 9508      	RET
                 
                 __MULF127:
000ce8 0d10      	ADD  R17,R0
000ce9 1d21      	ADC  R18,R1
000cea 1f39      	ADC  R19,R25
000ceb c002      	RJMP __MULF128
                 __MULF126:
000cec 0d20      	ADD  R18,R0
000ced 1d31      	ADC  R19,R1
                 __MULF128:
000cee 1f49      	ADC  R20,R25
000cef 1f59      	ADC  R21,R25
000cf0 9508      	RET
                 
                 __ADDW2R15:
000cf1 2400      	CLR  R0
000cf2 0daf      	ADD  R26,R15
000cf3 1db0      	ADC  R27,R0
000cf4 9508      	RET
                 
                 __ANEGW1:
000cf5 95f1      	NEG  R31
000cf6 95e1      	NEG  R30
000cf7 40f0      	SBCI R31,0
000cf8 9508      	RET
                 
                 __ANEGD1:
000cf9 95f0      	COM  R31
000cfa 9560      	COM  R22
000cfb 9570      	COM  R23
000cfc 95e1      	NEG  R30
000cfd 4fff      	SBCI R31,-1
000cfe 4f6f      	SBCI R22,-1
000cff 4f7f      	SBCI R23,-1
000d00 9508      	RET
                 
                 __LSLB12:
000d01 23ee      	TST  R30
000d02 2e0e      	MOV  R0,R30
000d03 2fea      	MOV  R30,R26
000d04 f019      	BREQ __LSLB12R
                 __LSLB12L:
000d05 0fee      	LSL  R30
000d06 940a      	DEC  R0
000d07 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000d08 9508      	RET
                 
                 __LSRB12:
000d09 23ee      	TST  R30
000d0a 2e0e      	MOV  R0,R30
000d0b 2fea      	MOV  R30,R26
000d0c f019      	BREQ __LSRB12R
                 __LSRB12L:
000d0d 95e6      	LSR  R30
000d0e 940a      	DEC  R0
000d0f f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000d10 9508      	RET
                 
                 __CWD1:
000d11 2f6f      	MOV  R22,R31
000d12 0f66      	ADD  R22,R22
000d13 0b66      	SBC  R22,R22
000d14 2f76      	MOV  R23,R22
000d15 9508      	RET
                 
                 __MULW12U:
000d16 9ffa      	MUL  R31,R26
000d17 2df0      	MOV  R31,R0
000d18 9feb      	MUL  R30,R27
000d19 0df0      	ADD  R31,R0
000d1a 9fea      	MUL  R30,R26
000d1b 2de0      	MOV  R30,R0
000d1c 0df1      	ADD  R31,R1
000d1d 9508      	RET
                 
                 __DIVW21U:
000d1e 2400      	CLR  R0
000d1f 2411      	CLR  R1
000d20 e190      	LDI  R25,16
                 __DIVW21U1:
000d21 0faa      	LSL  R26
000d22 1fbb      	ROL  R27
000d23 1c00      	ROL  R0
000d24 1c11      	ROL  R1
000d25 1a0e      	SUB  R0,R30
000d26 0a1f      	SBC  R1,R31
000d27 f418      	BRCC __DIVW21U2
000d28 0e0e      	ADD  R0,R30
000d29 1e1f      	ADC  R1,R31
000d2a c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000d2b 60a1      	SBR  R26,1
                 __DIVW21U3:
000d2c 959a      	DEC  R25
000d2d f799      	BRNE __DIVW21U1
000d2e 01fd      	MOVW R30,R26
000d2f 01d0      	MOVW R26,R0
000d30 9508      	RET
                 
                 __DIVW21:
000d31 d02e      	RCALL __CHKSIGNW
000d32 dfeb      	RCALL __DIVW21U
000d33 f40e      	BRTC __DIVW211
000d34 dfc0      	RCALL __ANEGW1
                 __DIVW211:
000d35 9508      	RET
                 
                 __DIVD21U:
000d36 933f      	PUSH R19
000d37 934f      	PUSH R20
000d38 935f      	PUSH R21
000d39 2400      	CLR  R0
000d3a 2411      	CLR  R1
000d3b 2744      	CLR  R20
000d3c 2755      	CLR  R21
000d3d e230      	LDI  R19,32
                 __DIVD21U1:
000d3e 0faa      	LSL  R26
000d3f 1fbb      	ROL  R27
000d40 1f88      	ROL  R24
000d41 1f99      	ROL  R25
000d42 1c00      	ROL  R0
000d43 1c11      	ROL  R1
000d44 1f44      	ROL  R20
000d45 1f55      	ROL  R21
000d46 1a0e      	SUB  R0,R30
000d47 0a1f      	SBC  R1,R31
000d48 0b46      	SBC  R20,R22
000d49 0b57      	SBC  R21,R23
000d4a f428      	BRCC __DIVD21U2
000d4b 0e0e      	ADD  R0,R30
000d4c 1e1f      	ADC  R1,R31
000d4d 1f46      	ADC  R20,R22
000d4e 1f57      	ADC  R21,R23
000d4f c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000d50 60a1      	SBR  R26,1
                 __DIVD21U3:
000d51 953a      	DEC  R19
000d52 f759      	BRNE __DIVD21U1
000d53 01fd      	MOVW R30,R26
000d54 01bc      	MOVW R22,R24
000d55 01d0      	MOVW R26,R0
000d56 01ca      	MOVW R24,R20
000d57 915f      	POP  R21
000d58 914f      	POP  R20
000d59 913f      	POP  R19
000d5a 9508      	RET
                 
                 __DIVD21:
000d5b d012      	RCALL __CHKSIGND
000d5c dfd9      	RCALL __DIVD21U
000d5d f40e      	BRTC __DIVD211
000d5e df9a      	RCALL __ANEGD1
                 __DIVD211:
000d5f 9508      	RET
                 
                 __CHKSIGNW:
000d60 94e8      	CLT
000d61 fff7      	SBRS R31,7
000d62 c002      	RJMP __CHKSW1
000d63 df91      	RCALL __ANEGW1
000d64 9468      	SET
                 __CHKSW1:
000d65 ffb7      	SBRS R27,7
000d66 c006      	RJMP __CHKSW2
000d67 95a0      	COM  R26
000d68 95b0      	COM  R27
000d69 9611      	ADIW R26,1
000d6a f800      	BLD  R0,0
000d6b 9403      	INC  R0
000d6c fa00      	BST  R0,0
                 __CHKSW2:
000d6d 9508      	RET
                 
                 __CHKSIGND:
000d6e 94e8      	CLT
000d6f ff77      	SBRS R23,7
000d70 c002      	RJMP __CHKSD1
000d71 df87      	RCALL __ANEGD1
000d72 9468      	SET
                 __CHKSD1:
000d73 ff97      	SBRS R25,7
000d74 c00b      	RJMP __CHKSD2
000d75 2400      	CLR  R0
000d76 95a0      	COM  R26
000d77 95b0      	COM  R27
000d78 9580      	COM  R24
000d79 9590      	COM  R25
000d7a 9611      	ADIW R26,1
000d7b 1d80      	ADC  R24,R0
000d7c 1d90      	ADC  R25,R0
000d7d f800      	BLD  R0,0
000d7e 9403      	INC  R0
000d7f fa00      	BST  R0,0
                 __CHKSD2:
000d80 9508      	RET
                 
                 __GETW1P:
000d81 91ed      	LD   R30,X+
000d82 91fc      	LD   R31,X
000d83 9711      	SBIW R26,1
000d84 9508      	RET
                 
                 __GETW1PF:
000d85 9005      	LPM  R0,Z+
000d86 91f4      	LPM  R31,Z
000d87 2de0      	MOV  R30,R0
000d88 9508      	RET
                 
                 __PUTPARD1:
000d89 937a      	ST   -Y,R23
000d8a 936a      	ST   -Y,R22
000d8b 93fa      	ST   -Y,R31
000d8c 93ea      	ST   -Y,R30
000d8d 9508      	RET
                 
                 __PUTPARL:
000d8e 27bb      	CLR  R27
                 __PUTPAR:
000d8f 0fea      	ADD  R30,R26
000d90 1ffb      	ADC  R31,R27
                 __PUTPAR0:
000d91 9002      	LD   R0,-Z
000d92 920a      	ST   -Y,R0
000d93 9711      	SBIW R26,1
000d94 f7e1      	BRNE __PUTPAR0
000d95 9508      	RET
                 
                 __EEPROMRDB:
000d96 99e1      	SBIC EECR,EEWE
000d97 cffe      	RJMP __EEPROMRDB
000d98 93ff      	PUSH R31
000d99 b7ff      	IN   R31,SREG
000d9a 94f8      	CLI
000d9b bbae      	OUT  EEARL,R26
000d9c bbbf      	OUT  EEARH,R27
000d9d 9ae0      	SBI  EECR,EERE
000d9e b3ed      	IN   R30,EEDR
000d9f bfff      	OUT  SREG,R31
000da0 91ff      	POP  R31
000da1 9508      	RET
                 
                 __EEPROMWRB:
000da2 9be1      	SBIS EECR,EEWE
000da3 c002      	RJMP __EEPROMWRB1
000da4 95a8      	WDR
000da5 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000da6 b79f      	IN   R25,SREG
000da7 94f8      	CLI
000da8 bbae      	OUT  EEARL,R26
000da9 bbbf      	OUT  EEARH,R27
000daa 9ae0      	SBI  EECR,EERE
000dab b38d      	IN   R24,EEDR
000dac 17e8      	CP   R30,R24
000dad f019      	BREQ __EEPROMWRB0
000dae bbed      	OUT  EEDR,R30
000daf 9ae2      	SBI  EECR,EEMWE
000db0 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000db1 bf9f      	OUT  SREG,R25
000db2 9508      	RET
                 
                 __CPW02:
000db3 2400      	CLR  R0
000db4 160a      	CP   R0,R26
000db5 060b      	CPC  R0,R27
000db6 9508      	RET
                 
                 __SAVELOCR6:
000db7 935a      	ST   -Y,R21
                 __SAVELOCR5:
000db8 934a      	ST   -Y,R20
                 __SAVELOCR4:
000db9 933a      	ST   -Y,R19
                 __SAVELOCR3:
000dba 932a      	ST   -Y,R18
                 __SAVELOCR2:
000dbb 931a      	ST   -Y,R17
000dbc 930a      	ST   -Y,R16
000dbd 9508      	RET
                 
                 __LOADLOCR6:
000dbe 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000dbf 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000dc0 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000dc1 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000dc2 8119      	LDD  R17,Y+1
000dc3 8108      	LD   R16,Y
000dc4 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  67 r1 :  28 r2 :   0 r3 :   0 r4 :   2 r5 :   2 r6 :   0 r7 :   3 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   2 r14:   0 r15:   4 
r16:  81 r17: 113 r18:  68 r19:  61 r20:  48 r21: 101 r22:  51 r23:  41 
r24:  46 r25:  36 r26: 388 r27: 105 r28:  33 r29:   1 r30: 829 r31: 168 
x  :  24 y  : 538 z  :  33 
Registers used: 26 out of 35 (74.3%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  29 add   :  32 
adiw  :  42 and   :  11 andi  :  17 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   3 brcs  :   0 break :   0 breq  :  51 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  17 
brlt  :   7 brmi  :   5 brne  :  97 brpl  :   7 brsh  :  27 brtc  :   3 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   2 cbi   :  22 
cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 clr   :  48 
cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :  17 cp    :  33 
cpc   :  12 cpi   : 113 cpse  :   0 dec   :  13 des   :   0 eor   :   5 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 in    :   7 
inc   :   7 ld    :  50 ldd   : 301 ldi   : 324 lds   :  40 lpm   :  30 
lsl   :  17 lsr   :  10 mov   : 127 movw  :  47 mul   :  14 muls  :   0 
mulsu :   0 neg   :   4 nop   :   0 or    :   7 ori   :  16 out   :  47 
pop   :  26 push  :  25 rcall : 507 ret   : 111 reti  :   1 rjmp  : 252 
rol   :  23 ror   :   7 sbc   :   9 sbci  :  13 sbi   :  29 sbic  :   6 
sbis  :   7 sbiw  :  41 sbr   :   2 sbrc  :   2 sbrs  :  15 sec   :   1 
seh   :   0 sei   :   1 sen   :   0 ser   :   8 ses   :   0 set   :   4 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    : 136 std   :  88 
sts   :  44 sub   :  18 subi  :  45 swap  :   0 tst   :  17 wdr   :   2 

Instructions used: 75 out of 114 (65.8%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001b8a   6392    658   7050    8192  86.1%
[.dseg] 0x000060 0x0003f6      0    662    662    1024  64.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 13 warnings
